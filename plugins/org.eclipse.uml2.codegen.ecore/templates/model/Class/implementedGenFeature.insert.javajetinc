<%if (!genClass.getExtendedGenFeatures().contains(genFeature) && UML2GenModelUtil.isFactoryMethods(genModel) && genFeature.isChangeable() && genFeature.isContains()) {%>
  <%if (genClass.getChildrenClasses(genFeature).size() > 0) {%>
   <%if (genClass.getChildrenClasses(genFeature).size() > 1 || genFeature.getTypeGenClass().isAbstract()) {%>
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public <%=UML2GenModelUtil.getRedefinedListItemType(genFeature)%> create<%=genFeature.getCapName()%>(<%=genModel.getImportedName("org.eclipse.emf.ecore.EClass")%> eClass) {
		<%=genModel.getImportedName(genFeature.getQualifiedListItemType())%> new<%=genFeature.getCapName()%> = (<%=genModel.getImportedName(genFeature.getQualifiedListItemType())%>) eClass.getEPackage().getEFactoryInstance().create(eClass);
      <%if (genFeature.isListType()) {%>
		<%=genFeature.getGetAccessor()%>().add(new<%=genFeature.getCapName()%>);
      <%} else {%>
		set<%=genFeature.getAccessorName()%>(new<%=genFeature.getCapName()%>);
      <%}%>
		return new<%=genFeature.getCapName()%>;
	}

    <%}%>
    <%if (genClass.getChildrenClasses(genFeature).size() == 1 || !genFeature.getTypeGenClass().isAbstract()) { GenClass childGenClass = (GenClass) genClass.getChildrenClasses(genFeature).get(0);%>
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public <%=UML2GenModelUtil.getRedefinedListItemType(genFeature)%> create<%=genFeature.getCapName()%>() {
		<%=childGenClass.getImportedInterfaceName()%> new<%=genFeature.getCapName()%> = <%=childGenClass.getGenPackage().getImportedFactoryInterfaceName()%>.eINSTANCE.create<%=childGenClass.getName()%>();
      <%if (genFeature.isListType()) {%>
		<%=genFeature.getGetAccessor()%>().add(new<%=genFeature.getCapName()%>);
      <%} else {%>
		set<%=genFeature.getAccessorName()%>(new<%=genFeature.getCapName()%>);
      <%}%>
		return new<%=genFeature.getCapName()%>;
	}

    <%}%>
  <%}%>
<%}%>
<%if (!genClass.getExtendedGenFeatures().contains(genFeature) && genFeature.isListType() && genFeature.isReferenceType()) {%>
  <%for (Iterator j = UML2GenModelUtil.getKeyGenFeatures(genFeature.getTypeGenClass()).iterator(); j.hasNext();) {GenFeature keyGenFeature = (GenFeature)j.next();%>
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public <%=UML2GenModelUtil.getRedefinedListItemType(genFeature)%> get<%=genFeature.getCapName()%>(<%=keyGenFeature.getImportedType()%> <%=keyGenFeature.getUncapName()%>) {
		for (<%=genModel.getImportedName("java.util.Iterator")%> i = <%=genFeature.getGetAccessor()%>().iterator(); i.hasNext(); ) {
			<%=genModel.getImportedName(genFeature.getQualifiedListItemType())%> <%=genFeature.getUncapName()%> = (<%=genModel.getImportedName(genFeature.getQualifiedListItemType())%>) i.next();
			if (<%=keyGenFeature.getUncapName()%>.equals(<%=genFeature.getUncapName()%>.<%=keyGenFeature.getGetAccessor()%>())) {
				return <%=genFeature.getUncapName()%>;
			}
		}
		return null;
	}

  <%}%>
<%}%>
<%if ((UML2GenModelUtil.isRedefinition(genFeature) && !genFeature.isIsSet()) || UML2GenModelUtil.isRedefined(genClass, genFeature)) {%>
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isSet<%=genFeature.getAccessorName()%>()
	{
  <%if (!genFeature.isUnsettable()) {%>
  <%if (UML2GenModelUtil.isRedefined(genClass, genFeature)) {%>
  		return false;
  <%} else if (genFeature.isListType()) {%>
    <%if (genFeature.isWrappedFeatureMapType()) {%>
      <%if (genFeature.isVolatile()) {%>
		return !((<%=genFeature.getImportedEffectiveFeatureMapWrapperInternalInterface()%>)<%=genFeature.getGetAccessor()%>()).featureMap().isEmpty();
      <%} else {%>
		return <%=genFeature.getSafeName()%> != null && !<%=genFeature.getSafeName()%>.featureMap().isEmpty();
      <%}%>
    <%} else {%>
      <%if (genClass.isField(genFeature)) {%>
		return <%=genFeature.getSafeName()%> != null && !<%=genFeature.getSafeName()%>.isEmpty();
      <%} else {%>
        <%if (genFeature.isField() && (genClass.getImplementedGenFeatures().contains(genFeature) ? genModel.isVirtualDelegation() : genFeature.getGenModel().isVirtualDelegation())) {%>
		<%=genFeature.getImportedType()%> <%=genFeature.getSafeName()%> = (<%=genFeature.getImportedType()%>)eVirtualGet(<%=genClass.getQualifiedFeatureID(genFeature)%>);
		return <%=genFeature.getSafeName()%> != null && !<%=genFeature.getSafeName()%>.isEmpty();
        <%} else {%>
		return !<%=genFeature.getGetAccessor()%>().isEmpty();
        <%}%>
      <%}%>
    <%}%>
  <%} else if (genFeature.isResolveProxies()) {%>
    <%if (genClass.isField(genFeature)) {%>
		return <%=genFeature.getSafeName()%> != null;
    <%} else {%>
      <%if (genFeature.isField() && (genClass.getImplementedGenFeatures().contains(genFeature) ? genModel.isVirtualDelegation() : genFeature.getGenModel().isVirtualDelegation())) {%>
		return eVirtualGet(<%=genClass.getQualifiedFeatureID(genFeature)%>) != null;
      <%} else {%>
		return basicGet<%=genFeature.getAccessorName()%>() != null;
      <%}%>
    <%}%>
  <%} else if (genFeature.isReferenceType()) {%>
    <%if (genClass.isField(genFeature)) {%>
		return <%=genFeature.getSafeName()%> != null;
    <%} else {%>
      <%if (genFeature.isField() && (genClass.getImplementedGenFeatures().contains(genFeature) ? genModel.isVirtualDelegation() : genFeature.getGenModel().isVirtualDelegation())) {%>
		return eVirtualGet(<%=genClass.getQualifiedFeatureID(genFeature)%>) != null;
      <%} else {%>
		return <%=genFeature.getGetAccessor()%>() != null;
      <%}%>
    <%}%>
  <%} else if (genFeature.isPrimitiveType() || genFeature.isEnumType()) {%>
    <%if (genClass.isField(genFeature)) {%>
      <%if (genClass.isFlag(genFeature)) {%>
		return ((<%=genClass.getFlagsField(genFeature)%> & <%=genFeature.getUpperName()%>_EFLAG) != 0) != <%=genFeature.getUpperName()%>_EDEFAULT;
      <%} else {%>
		return <%=genFeature.getSafeName()%> != <%=genFeature.getUpperName()%>_EDEFAULT;
      <%}%>
    <%} else {%>
      <%if (genFeature.isEnumType() && genFeature.isField() && (genClass.getImplementedGenFeatures().contains(genFeature) ? genModel.isVirtualDelegation() : genFeature.getGenModel().isVirtualDelegation())) {%>
		return eVirtualGet(<%=genClass.getQualifiedFeatureID(genFeature)%>, <%=genFeature.getUpperName()%>_EDEFAULT) != <%=genFeature.getUpperName()%>_EDEFAULT;
      <%} else {%>
		return <%=genFeature.getGetAccessor()%>() != <%=genFeature.getUpperName()%>_EDEFAULT;
      <%}%>
    <%}%>
  <%} else {//datatype%>
    <%if (genClass.isField(genFeature)) {%>
		return <%=genFeature.getUpperName()%>_EDEFAULT == null ? <%=genFeature.getSafeName()%> != null : !<%=genFeature.getUpperName()%>_EDEFAULT.equals(<%=genFeature.getSafeName()%>);
    <%} else {%>
      <%if (genFeature.isField() && (genClass.getImplementedGenFeatures().contains(genFeature) ? genModel.isVirtualDelegation() : genFeature.getGenModel().isVirtualDelegation())) {%>
		<%=genFeature.getImportedType()%> <%=genFeature.getSafeName()%> = (<%=genFeature.getImportedType()%>)eVirtualGet(<%=genClass.getQualifiedFeatureID(genFeature)%>, <%=genFeature.getUpperName()%>_EDEFAULT);
		return <%=genFeature.getUpperName()%>_EDEFAULT == null ? <%=genFeature.getSafeName()%> != null : !<%=genFeature.getUpperName()%>_EDEFAULT.equals(<%=genFeature.getSafeName()%>);
      <%} else {%>
		return <%=genFeature.getUpperName()%>_EDEFAULT == null ? <%=genFeature.getGetAccessor()%>() != null : !<%=genFeature.getUpperName()%>_EDEFAULT.equals(<%=genFeature.getGetAccessor()%>());
      <%}%>
    <%}%>
  <%}%>
  <%} else {%>
    <%if (genModel.isReflectiveDelegation()) {%>
		return eIsSet(<%=genFeature.getGenPackage().getImportedPackageInterfaceName()%>.eINSTANCE.get<%=genFeature.getFeatureAccessorName()%>());
    <%} else if (!genFeature.isVolatile()) {%>
      <%if (genFeature.isListType()) {%>
        <%if (genModel.isVirtualDelegation()) {%>
		<%=genFeature.getImportedType()%> <%=genFeature.getSafeName()%> = (<%=genFeature.getImportedType()%>)eVirtualGet(<%=genClass.getQualifiedFeatureID(genFeature)%>);
        <%}%>
		return <%=genFeature.getSafeName()%> != null && ((<%=genModel.getImportedName("org.eclipse.emf.ecore.util.InternalEList")%>.Unsettable)<%=genFeature.getSafeName()%>).isSet();
      <%} else {%>
        <%if (genModel.isVirtualDelegation() && !genFeature.isPrimitiveType()) {%>
		return eVirtualIsSet(<%=genClass.getQualifiedFeatureID(genFeature)%>);
        <%} else if (genClass.isESetFlag(genFeature)) {%>
		return (<%=genClass.getESetFlagsField(genFeature)%> & <%=genFeature.getUpperName()%>_ESETFLAG) != 0;
        <%} else {%>
		return <%=genFeature.getUncapName()%>ESet;
        <%}%>
      <%}%>
    <%} else if (genFeature.hasDelegateFeature()) { GenFeature delegateFeature = genFeature.getDelegateFeature();%>
      <%if (delegateFeature.isWrappedFeatureMapType()) {%>
		return !((<%=genModel.getImportedName("org.eclipse.emf.ecore.util.FeatureMap")%>.Internal)((<%=delegateFeature.getImportedEffectiveFeatureMapWrapperInternalInterface()%>)get<%=delegateFeature.getAccessorName()%>()).featureMap()).isEmpty(<%=genFeature.getQualifiedFeatureAccessorName()%>());
      <%} else {%>
		return !((<%=genModel.getImportedName("org.eclipse.emf.ecore.util.FeatureMap")%>.Internal)get<%=delegateFeature.getAccessorName()%>()).isEmpty(<%=genFeature.getQualifiedFeatureAccessorName()%>());
      <%}%>
    <%} else {%>
<%@ include file="isSetGenFeature.TODO.override.javajetinc" fail="alternative" %>
<%@ start %>
		// TODO: implement this method to return whether the '<%=genFeature.getFormattedName()%>' <%=genFeature.getFeatureKind()%> is set
		// Ensure that you remove @generated or mark it @generated NOT
		throw new UnsupportedOperationException();
<%@ end %><%//isSetGenFeature.todo.override.javajetinc%>
    <%}%>
  <%}%>
	}

<%}%>