<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Ecore_2="http:///Ecore_2_1RgZIMezEdmTJL3rR1ioJg.profile.uml2" xmlns:uml="http://www.eclipse.org/uml2/1.0.0/UML" xsi:schemaLocation="http:///Ecore_2_1RgZIMezEdmTJL3rR1ioJg.profile.uml2 pathmap://UML2_PROFILES/Ecore.profile.uml2#_1RgZIcezEdmTJL3rR1ioJg" xmi:id="_o8I_sGvaEdq4DLWZOhbdEA" name="UML" appliedProfile="_0TBYYGvaEdq4DLWZOhbdEA">
  <eAnnotations xmi:id="_1gWuMGvaEdq4DLWZOhbdEA" source="appliedStereotypes">
    <contents xmi:type="Ecore_2:Ecore__EPackage" xmi:id="_nCA-sHCjEdqyRcpUZ6PRWg" packageName="uml" nsPrefix="uml" nsURI="http://www.eclipse.org/uml2/2.0.0/UML" basePackage="org.eclipse.uml2" prefix="UML"/>
  </eAnnotations>
  <eAnnotations xmi:id="_SdWOgHCoEdq2Lvk-NX0TGA" source="capabilities">
    <eAnnotations xmi:id="_SdWOgXCoEdq2Lvk-NX0TGA" source="InfrastructureLibrary::Core::Constructs" references="_R2TcqXCoEdq2Lvk-NX0TGA _R2m-rHCoEdq2Lvk-NX0TGA _R0XjGHCoEdq2Lvk-NX0TGA _R2wIl3CoEdq2Lvk-NX0TGA _R1ar5XCoEdq2Lvk-NX0TGA _R00O6XCoEdq2Lvk-NX0TGA _kl90MGvbEdq4DLWZOhbdEA _R2wInXCoEdq2Lvk-NX0TGA _RzLQI3CoEdq2Lvk-NX0TGA _RzVBLXCoEdq2Lvk-NX0TGA _R0OZDXCoEdq2Lvk-NX0TGA _RzCGWnCoEdq2Lvk-NX0TGA _RzCGUXCoEdq2Lvk-NX0TGA _RyIuU3CoEdq2Lvk-NX0TGA _R2m-q3CoEdq2Lvk-NX0TGA _RzLQMHCoEdq2Lvk-NX0TGA _R1Q66HCoEdq2Lvk-NX0TGA _R2dNqHCoEdq2Lvk-NX0TGA _RzLQT3CoEdq2Lvk-NX0TGA _RzxtFHCoEdq2Lvk-NX0TGA _Rx-9UHCoEdq2Lvk-NX0TGA _R0rFBnCoEdq2Lvk-NX0TGA _R09_8XCoEdq2Lvk-NX0TGA _Rzn8PXCoEdq2Lvk-NX0TGA _R1ar2HCoEdq2Lvk-NX0TGA _R2KStnCoEdq2Lvk-NX0TGA _R2TcuHCoEdq2Lvk-NX0TGA _R255pnCoEdq2Lvk-NX0TGA _jKxnwGwLEdq7X4sGURiZYA _R255o3CoEdq2Lvk-NX0TGA _R255nHCoEdq2Lvk-NX0TGA _R2dNpHCoEdq2Lvk-NX0TGA _R2TcuXCoEdq2Lvk-NX0TGA _R2Ahw3CoEdq2Lvk-NX0TGA _Rzn8FHCoEdq2Lvk-NX0TGA _R2m-sXCoEdq2Lvk-NX0TGA _R2dNq3CoEdq2Lvk-NX0TGA _RzLQP3CoEdq2Lvk-NX0TGA _R1Q61nCoEdq2Lvk-NX0TGA _RzVBM3CoEdq2Lvk-NX0TGA _RyIuUHCoEdq2Lvk-NX0TGA _R255m3CoEdq2Lvk-NX0TGA _R2TconCoEdq2Lvk-NX0TGA _RxiRaXCoEdq2Lvk-NX0TGA _R0hUCXCoEdq2Lvk-NX0TGA _Rx-9bHCoEdq2Lvk-NX0TGA _R2KSvXCoEdq2Lvk-NX0TGA _RzCGRXCoEdq2Lvk-NX0TGA _Rz63G3CoEdq2Lvk-NX0TGA _R2m-snCoEdq2Lvk-NX0TGA _R2TcoHCoEdq2Lvk-NX0TGA _Rzn8M3CoEdq2Lvk-NX0TGA _R0hT9HCoEdq2Lvk-NX0TGA _RxiRYHCoEdq2Lvk-NX0TGA _RzVBOXCoEdq2Lvk-NX0TGA _6UV2QGwJEdq7X4sGURiZYA _RzLQOnCoEdq2Lvk-NX0TGA _R1tmwHCoEdq2Lvk-NX0TGA _csVgUGvtEdqG6fBIPwe-mw _R00PAHCoEdq2Lvk-NX0TGA _R2Tco3CoEdq2Lvk-NX0TGA _ynRtoGvtEdqG6fBIPwe-mw _KyaPMGveEdq4DLWZOhbdEA _R09_63CoEdq2Lvk-NX0TGA _R2TcsnCoEdq2Lvk-NX0TGA _R2m-oHCoEdq2Lvk-NX0TGA _Rzn8IHCoEdq2Lvk-NX0TGA _R13X5XCoEdq2Lvk-NX0TGA _R2TcrXCoEdq2Lvk-NX0TGA _RzLQNXCoEdq2Lvk-NX0TGA _R13X0nCoEdq2Lvk-NX0TGA _R09_9XCoEdq2Lvk-NX0TGA _I6N3UGwGEdq7X4sGURiZYA _Rz63AHCoEdq2Lvk-NX0TGA _RzCGMHCoEdq2Lvk-NX0TGA _R2Tcp3CoEdq2Lvk-NX0TGA _R2AhuXCoEdq2Lvk-NX0TGA _RyukTHCoEdq2Lvk-NX0TGA _Rx-9WXCoEdq2Lvk-NX0TGA _R0hT-HCoEdq2Lvk-NX0TGA _-cvRAGvzEdq7X4sGURiZYA _R2dNoXCoEdq2Lvk-NX0TGA _RzxtEHCoEdq2Lvk-NX0TGA _RzLQRHCoEdq2Lvk-NX0TGA _Rzn8KXCoEdq2Lvk-NX0TGA _RxsCYHCoEdq2Lvk-NX0TGA _RzxtI3CoEdq2Lvk-NX0TGA _RzCGOXCoEdq2Lvk-NX0TGA _RxZHdnCoEdq2Lvk-NX0TGA _Rzn8N3CoEdq2Lvk-NX0TGA _RyukMHCoEdq2Lvk-NX0TGA _RPl78GwIEdq7X4sGURiZYA _R2KStXCoEdq2Lvk-NX0TGA _Gjgl0GveEdq4DLWZOhbdEA _R2dNrnCoEdq2Lvk-NX0TGA _R2m-p3CoEdq2Lvk-NX0TGA _Rzn8GnCoEdq2Lvk-NX0TGA _R255nnCoEdq2Lvk-NX0TGA _Rzn8L3CoEdq2Lvk-NX0TGA _R2TcqnCoEdq2Lvk-NX0TGA _RylaRnCoEdq2Lvk-NX0TGA _R1ar4nCoEdq2Lvk-NX0TGA _R255qHCoEdq2Lvk-NX0TGA _AyM_oGwMEdq7X4sGURiZYA _RylaQHCoEdq2Lvk-NX0TGA _R2TcvnCoEdq2Lvk-NX0TGA _R255lXCoEdq2Lvk-NX0TGA _R255kHCoEdq2Lvk-NX0TGA _R13X4HCoEdq2Lvk-NX0TGA _RzLQJ3CoEdq2Lvk-NX0TGA _R2dNuHCoEdq2Lvk-NX0TGA _R1tmxnCoEdq2Lvk-NX0TGA _RzLQIHCoEdq2Lvk-NX0TGA _R2m-tHCoEdq2Lvk-NX0TGA _R2Tcr3CoEdq2Lvk-NX0TGA _R2TcpnCoEdq2Lvk-NX0TGA _R0hUGHCoEdq2Lvk-NX0TGA _ZiwkoGwLEdq7X4sGURiZYA _RxPWcHCoEdq2Lvk-NX0TGA _SnNPIGwIEdq7X4sGURiZYA _RzVBIHCoEdq2Lvk-NX0TGA _R1Q69HCoEdq2Lvk-NX0TGA _R255oXCoEdq2Lvk-NX0TGA _R1Q67XCoEdq2Lvk-NX0TGA _Rz63CXCoEdq2Lvk-NX0TGA _R2wIonCoEdq2Lvk-NX0TGA _R0hUDnCoEdq2Lvk-NX0TGA _R00O8nCoEdq2Lvk-NX0TGA _RzVBJHCoEdq2Lvk-NX0TGA _R2Tcu3CoEdq2Lvk-NX0TGA _R2TcpHCoEdq2Lvk-NX0TGA _RySfUXCoEdq2Lvk-NX0TGA _RzLQK3CoEdq2Lvk-NX0TGA _Rzn8EXCoEdq2Lvk-NX0TGA _R2dNpXCoEdq2Lvk-NX0TGA _R2KSxHCoEdq2Lvk-NX0TGA _RyukOHCoEdq2Lvk-NX0TGA _R0Xi_3CoEdq2Lvk-NX0TGA _R2wIn3CoEdq2Lvk-NX0TGA _R2m-qnCoEdq2Lvk-NX0TGA _RySfYXCoEdq2Lvk-NX0TGA _R2dNonCoEdq2Lvk-NX0TGA _R2AhxnCoEdq2Lvk-NX0TGA _R2wIo3CoEdq2Lvk-NX0TGA _R13XwHCoEdq2Lvk-NX0TGA _RzLQWHCoEdq2Lvk-NX0TGA _R09_6HCoEdq2Lvk-NX0TGA _R13XzHCoEdq2Lvk-NX0TGA _R2wIknCoEdq2Lvk-NX0TGA _R0Xi-nCoEdq2Lvk-NX0TGA _Rz63A3CoEdq2Lvk-NX0TGA _R2wIk3CoEdq2Lvk-NX0TGA _R1HJ23CoEdq2Lvk-NX0TGA _R13XxnCoEdq2Lvk-NX0TGA _RxPWfHCoEdq2Lvk-NX0TGA _RybpQHCoEdq2Lvk-NX0TGA _R0hT8HCoEdq2Lvk-NX0TGA _00owUGvdEdq4DLWZOhbdEA _RzxtG3CoEdq2Lvk-NX0TGA _R2m-pHCoEdq2Lvk-NX0TGA _R0hUHXCoEdq2Lvk-NX0TGA _R2wIpnCoEdq2Lvk-NX0TGA _V6vuYGwGEdq7X4sGURiZYA _RzxtL3CoEdq2Lvk-NX0TGA _R0XjEnCoEdq2Lvk-NX0TGA _M4X2IGveEdq4DLWZOhbdEA _R2TcpXCoEdq2Lvk-NX0TGA _RySfVHCoEdq2Lvk-NX0TGA _R1Q63HCoEdq2Lvk-NX0TGA _R13X2XCoEdq2Lvk-NX0TGA _R2wIkXCoEdq2Lvk-NX0TGA _R255mHCoEdq2Lvk-NX0TGA _R2wInnCoEdq2Lvk-NX0TGA _R0Xi93CoEdq2Lvk-NX0TGA _R255l3CoEdq2Lvk-NX0TGA _ChRfcGveEdq4DLWZOhbdEA _RzCGVHCoEdq2Lvk-NX0TGA _R00O_HCoEdq2Lvk-NX0TGA _R2m-rXCoEdq2Lvk-NX0TGA _R2wIrHCoEdq2Lvk-NX0TGA _R2m-qXCoEdq2Lvk-NX0TGA _R0XjBHCoEdq2Lvk-NX0TGA _R2wIkHCoEdq2Lvk-NX0TGA _R2m-r3CoEdq2Lvk-NX0TGA _R2KSuXCoEdq2Lvk-NX0TGA _RySfeHCoEdq2Lvk-NX0TGA _R2TctnCoEdq2Lvk-NX0TGA _R2wImHCoEdq2Lvk-NX0TGA _R2wIlHCoEdq2Lvk-NX0TGA _R00O7HCoEdq2Lvk-NX0TGA _R2dNp3CoEdq2Lvk-NX0TGA _Rx-9f3CoEdq2Lvk-NX0TGA _OQcbgGwOEdq7X4sGURiZYA _R0OZAHCoEdq2Lvk-NX0TGA _Rz63D3CoEdq2Lvk-NX0TGA _R255lnCoEdq2Lvk-NX0TGA _R2wIpHCoEdq2Lvk-NX0TGA _R2dNtnCoEdq2Lvk-NX0TGA _RxZHcHCoEdq2Lvk-NX0TGA _Rx-9U3CoEdq2Lvk-NX0TGA _RxsCcnCoEdq2Lvk-NX0TGA _R0EoAnCoEdq2Lvk-NX0TGA _Rzn8I3CoEdq2Lvk-NX0TGA _R2AhzHCoEdq2Lvk-NX0TGA _RzVBPXCoEdq2Lvk-NX0TGA _R0rE_nCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA _R255mXCoEdq2Lvk-NX0TGA _R1HJ0HCoEdq2Lvk-NX0TGA _R2wIlnCoEdq2Lvk-NX0TGA _RzCGS3CoEdq2Lvk-NX0TGA _RylaXXCoEdq2Lvk-NX0TGA _RybpSnCoEdq2Lvk-NX0TGA _R2m-rnCoEdq2Lvk-NX0TGA _R2m-onCoEdq2Lvk-NX0TGA _R0OZCXCoEdq2Lvk-NX0TGA _RySfV3CoEdq2Lvk-NX0TGA _R1Q60HCoEdq2Lvk-NX0TGA _R2wIqXCoEdq2Lvk-NX0TGA _RySfaHCoEdq2Lvk-NX0TGA _RxPWdnCoEdq2Lvk-NX0TGA _RylaUnCoEdq2Lvk-NX0TGA _RzxtKnCoEdq2Lvk-NX0TGA _R1Q64nCoEdq2Lvk-NX0TGA _RxiRcHCoEdq2Lvk-NX0TGA _R00O9nCoEdq2Lvk-NX0TGA _Rx-9cnCoEdq2Lvk-NX0TGA _R2wIq3CoEdq2Lvk-NX0TGA _R0XjC3CoEdq2Lvk-NX0TGA _R0OZIHCoEdq2Lvk-NX0TGA _Rzn8HXCoEdq2Lvk-NX0TGA _R2dNs3CoEdq2Lvk-NX0TGA _R0rE8HCoEdq2Lvk-NX0TGA _R0OZJnCoEdq2Lvk-NX0TGA _R2TcrHCoEdq2Lvk-NX0TGA _RySfcHCoEdq2Lvk-NX0TGA _RySfXHCoEdq2Lvk-NX0TGA _Rx-9eHCoEdq2Lvk-NX0TGA _Jp_1oGveEdq4DLWZOhbdEA _R1ar3HCoEdq2Lvk-NX0TGA _RzCGP3CoEdq2Lvk-NX0TGA _R2AhsHCoEdq2Lvk-NX0TGA _RxiReXCoEdq2Lvk-NX0TGA _RzLQUnCoEdq2Lvk-NX0TGA _RzVBKnCoEdq2Lvk-NX0TGA _R2dNqnCoEdq2Lvk-NX0TGA _R2m-o3CoEdq2Lvk-NX0TGA _RyukQnCoEdq2Lvk-NX0TGA _R0hUE3CoEdq2Lvk-NX0TGA _Rx-9ZnCoEdq2Lvk-NX0TGA _R2KStHCoEdq2Lvk-NX0TGA _RxsCfHCoEdq2Lvk-NX0TGA _R255q3CoEdq2Lvk-NX0TGA _R0rE93CoEdq2Lvk-NX0TGA _R2Ah0XCoEdq2Lvk-NX0TGA _R2dNoHCoEdq2Lvk-NX0TGA _R0OZE3CoEdq2Lvk-NX0TGA _R2Ahs3CoEdq2Lvk-NX0TGA _RxsCanCoEdq2Lvk-NX0TGA _R0hUBHCoEdq2Lvk-NX0TGA _AwvxoGwNEdq7X4sGURiZYA _R00O43CoEdq2Lvk-NX0TGA _R1ar63CoEdq2Lvk-NX0TGA _R0hT_nCoEdq2Lvk-NX0TGA _R2TcvHCoEdq2Lvk-NX0TGA _R1ar1XCoEdq2Lvk-NX0TGA _R2dNsXCoEdq2Lvk-NX0TGA _R2KSwXCoEdq2Lvk-NX0TGA _R255knCoEdq2Lvk-NX0TGA _R2wImnCoEdq2Lvk-NX0TGA _RxPWgHCoEdq2Lvk-NX0TGA _RylaWHCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOgnCoEdq2Lvk-NX0TGA" source="UML::Classes::Kernel" references="_R2TcqXCoEdq2Lvk-NX0TGA _R2m-rHCoEdq2Lvk-NX0TGA _R0XjGHCoEdq2Lvk-NX0TGA _R2wIl3CoEdq2Lvk-NX0TGA _R1ar5XCoEdq2Lvk-NX0TGA _R00O6XCoEdq2Lvk-NX0TGA _kl90MGvbEdq4DLWZOhbdEA _R2wInXCoEdq2Lvk-NX0TGA _PyCx8GveEdq4DLWZOhbdEA _RzLQI3CoEdq2Lvk-NX0TGA _SBCF8HCoEdq2Lvk-NX0TGA _RzVBLXCoEdq2Lvk-NX0TGA _R0OZDXCoEdq2Lvk-NX0TGA _RzCGWnCoEdq2Lvk-NX0TGA _RzCGUXCoEdq2Lvk-NX0TGA _RyIuU3CoEdq2Lvk-NX0TGA _R2m-q3CoEdq2Lvk-NX0TGA _FFMNsGveEdq4DLWZOhbdEA _RzLQMHCoEdq2Lvk-NX0TGA _R1Q66HCoEdq2Lvk-NX0TGA _R2dNqHCoEdq2Lvk-NX0TGA _RzLQT3CoEdq2Lvk-NX0TGA _RzxtFHCoEdq2Lvk-NX0TGA _Rx-9UHCoEdq2Lvk-NX0TGA _R0rFBnCoEdq2Lvk-NX0TGA _R09_8XCoEdq2Lvk-NX0TGA _SA48AnCoEdq2Lvk-NX0TGA _Rzn8PXCoEdq2Lvk-NX0TGA _R1ar2HCoEdq2Lvk-NX0TGA _R_spMnCoEdq2Lvk-NX0TGA _R2KStnCoEdq2Lvk-NX0TGA _R2TcuHCoEdq2Lvk-NX0TGA _R255pnCoEdq2Lvk-NX0TGA _jKxnwGwLEdq7X4sGURiZYA _R255o3CoEdq2Lvk-NX0TGA _R255nHCoEdq2Lvk-NX0TGA _R2dNpHCoEdq2Lvk-NX0TGA _SAJVI3CoEdq2Lvk-NX0TGA _R_1zKXCoEdq2Lvk-NX0TGA _SBCF8nCoEdq2Lvk-NX0TGA _R2TcuXCoEdq2Lvk-NX0TGA _R2Ahw3CoEdq2Lvk-NX0TGA _Rzn8FHCoEdq2Lvk-NX0TGA _R6xtBHCoEdq2Lvk-NX0TGA _R41zZXCoEdq2Lvk-NX0TGA _R2m-sXCoEdq2Lvk-NX0TGA _R2dNq3CoEdq2Lvk-NX0TGA _RzLQP3CoEdq2Lvk-NX0TGA _R8tmoHCoEdq2Lvk-NX0TGA _R1Q61nCoEdq2Lvk-NX0TGA _RzVBM3CoEdq2Lvk-NX0TGA _RyIuUHCoEdq2Lvk-NX0TGA _R255m3CoEdq2Lvk-NX0TGA _R2TconCoEdq2Lvk-NX0TGA _RxiRaXCoEdq2Lvk-NX0TGA _R0hUCXCoEdq2Lvk-NX0TGA _Q-yR4GveEdq4DLWZOhbdEA _Rx-9bHCoEdq2Lvk-NX0TGA _R2KSvXCoEdq2Lvk-NX0TGA _RzCGRXCoEdq2Lvk-NX0TGA _Rz63G3CoEdq2Lvk-NX0TGA _R2m-snCoEdq2Lvk-NX0TGA _R6CGE3CoEdq2Lvk-NX0TGA _R2TcoHCoEdq2Lvk-NX0TGA _Rzn8M3CoEdq2Lvk-NX0TGA _R0hT9HCoEdq2Lvk-NX0TGA _R3zRdHCoEdq2Lvk-NX0TGA _R_1zIXCoEdq2Lvk-NX0TGA _RxiRYHCoEdq2Lvk-NX0TGA _RzVBOXCoEdq2Lvk-NX0TGA _6UV2QGwJEdq7X4sGURiZYA _R6ojAHCoEdq2Lvk-NX0TGA _RzLQOnCoEdq2Lvk-NX0TGA _R5laJnCoEdq2Lvk-NX0TGA _R1tmwHCoEdq2Lvk-NX0TGA _csVgUGvtEdqG6fBIPwe-mw _R5laM3CoEdq2Lvk-NX0TGA _R00PAHCoEdq2Lvk-NX0TGA _R2Tco3CoEdq2Lvk-NX0TGA _R4sCTXCoEdq2Lvk-NX0TGA _R41zYnCoEdq2Lvk-NX0TGA _ynRtoGvtEdqG6fBIPwe-mw _SASfEHCoEdq2Lvk-NX0TGA _R4i4anCoEdq2Lvk-NX0TGA _R7OZAnCoEdq2Lvk-NX0TGA _B3q9cGwNEdq7X4sGURiZYA _KyaPMGveEdq4DLWZOhbdEA _R09_63CoEdq2Lvk-NX0TGA _R2TcsnCoEdq2Lvk-NX0TGA _R2m-oHCoEdq2Lvk-NX0TGA _Rzn8IHCoEdq2Lvk-NX0TGA _SAvLB3CoEdq2Lvk-NX0TGA _SASfF3CoEdq2Lvk-NX0TGA _R9dNgXCoEdq2Lvk-NX0TGA _R2TcrXCoEdq2Lvk-NX0TGA _RzLQNXCoEdq2Lvk-NX0TGA _R13X0nCoEdq2Lvk-NX0TGA _R09_9XCoEdq2Lvk-NX0TGA _SAJVIHCoEdq2Lvk-NX0TGA _I6N3UGwGEdq7X4sGURiZYA _Rz63AHCoEdq2Lvk-NX0TGA _SAJVKHCoEdq2Lvk-NX0TGA _RzCGMHCoEdq2Lvk-NX0TGA _R2Tcp3CoEdq2Lvk-NX0TGA _R2AhuXCoEdq2Lvk-NX0TGA _RyukTHCoEdq2Lvk-NX0TGA _Rx-9WXCoEdq2Lvk-NX0TGA _R0hT-HCoEdq2Lvk-NX0TGA _SAJVKXCoEdq2Lvk-NX0TGA _-cvRAGvzEdq7X4sGURiZYA _R2dNoXCoEdq2Lvk-NX0TGA _RzxtEHCoEdq2Lvk-NX0TGA _RzLQRHCoEdq2Lvk-NX0TGA _Rzn8KXCoEdq2Lvk-NX0TGA _SBCF93CoEdq2Lvk-NX0TGA _R7OY_3CoEdq2Lvk-NX0TGA _RxsCYHCoEdq2Lvk-NX0TGA _RzxtI3CoEdq2Lvk-NX0TGA _RzCGOXCoEdq2Lvk-NX0TGA _RxZHdnCoEdq2Lvk-NX0TGA _Rzn8N3CoEdq2Lvk-NX0TGA _R4GMYHCoEdq2Lvk-NX0TGA _RyukMHCoEdq2Lvk-NX0TGA _RPl78GwIEdq7X4sGURiZYA _R2KStXCoEdq2Lvk-NX0TGA _SAJVKnCoEdq2Lvk-NX0TGA _Gjgl0GveEdq4DLWZOhbdEA _R2dNrnCoEdq2Lvk-NX0TGA _R2m-p3CoEdq2Lvk-NX0TGA _Rzn8GnCoEdq2Lvk-NX0TGA _R255nnCoEdq2Lvk-NX0TGA _Rzn8L3CoEdq2Lvk-NX0TGA _R7En43CoEdq2Lvk-NX0TGA _R6CGEHCoEdq2Lvk-NX0TGA _R2TcqnCoEdq2Lvk-NX0TGA _RylaRnCoEdq2Lvk-NX0TGA _R41zQHCoEdq2Lvk-NX0TGA _R1ar4nCoEdq2Lvk-NX0TGA _R255qHCoEdq2Lvk-NX0TGA _AyM_oGwMEdq7X4sGURiZYA _RylaQHCoEdq2Lvk-NX0TGA _R2TcvnCoEdq2Lvk-NX0TGA _R255lXCoEdq2Lvk-NX0TGA _R255kHCoEdq2Lvk-NX0TGA _R13X4HCoEdq2Lvk-NX0TGA _RzLQJ3CoEdq2Lvk-NX0TGA _R2dNuHCoEdq2Lvk-NX0TGA _R1tmxnCoEdq2Lvk-NX0TGA _RzLQIHCoEdq2Lvk-NX0TGA _R2m-tHCoEdq2Lvk-NX0TGA _R2Tcr3CoEdq2Lvk-NX0TGA _R2TcpnCoEdq2Lvk-NX0TGA _R0hUGHCoEdq2Lvk-NX0TGA _ZiwkoGwLEdq7X4sGURiZYA _RxPWcHCoEdq2Lvk-NX0TGA _SnNPIGwIEdq7X4sGURiZYA _R4sCRXCoEdq2Lvk-NX0TGA _SAvLCnCoEdq2Lvk-NX0TGA _RzVBIHCoEdq2Lvk-NX0TGA _R41zSXCoEdq2Lvk-NX0TGA _R1Q69HCoEdq2Lvk-NX0TGA _R255oXCoEdq2Lvk-NX0TGA _R1Q67XCoEdq2Lvk-NX0TGA _Rz63CXCoEdq2Lvk-NX0TGA _R2wIonCoEdq2Lvk-NX0TGA _R0hUDnCoEdq2Lvk-NX0TGA _SASfFHCoEdq2Lvk-NX0TGA _R6L3EnCoEdq2Lvk-NX0TGA _R00O8nCoEdq2Lvk-NX0TGA _RzVBJHCoEdq2Lvk-NX0TGA _R2Tcu3CoEdq2Lvk-NX0TGA _R9UDk3CoEdq2Lvk-NX0TGA _R41zVXCoEdq2Lvk-NX0TGA _R6ojCXCoEdq2Lvk-NX0TGA _R2TcpHCoEdq2Lvk-NX0TGA _RySfUXCoEdq2Lvk-NX0TGA _RzLQK3CoEdq2Lvk-NX0TGA _Rzn8EXCoEdq2Lvk-NX0TGA _R2dNpXCoEdq2Lvk-NX0TGA _R2KSxHCoEdq2Lvk-NX0TGA _RyukOHCoEdq2Lvk-NX0TGA _R0Xi_3CoEdq2Lvk-NX0TGA _R2wIn3CoEdq2Lvk-NX0TGA _R2m-qnCoEdq2Lvk-NX0TGA _Dy77oGveEdq4DLWZOhbdEA _RySfYXCoEdq2Lvk-NX0TGA _R2dNonCoEdq2Lvk-NX0TGA _R2AhxnCoEdq2Lvk-NX0TGA _R__kInCoEdq2Lvk-NX0TGA _R2wIo3CoEdq2Lvk-NX0TGA _R13XwHCoEdq2Lvk-NX0TGA _SAvLAHCoEdq2Lvk-NX0TGA _RzLQWHCoEdq2Lvk-NX0TGA _R09_6HCoEdq2Lvk-NX0TGA _R4sCSHCoEdq2Lvk-NX0TGA _R13XzHCoEdq2Lvk-NX0TGA _SBCF9HCoEdq2Lvk-NX0TGA _R2wIknCoEdq2Lvk-NX0TGA _R0Xi-nCoEdq2Lvk-NX0TGA _Rz63A3CoEdq2Lvk-NX0TGA _R2wIk3CoEdq2Lvk-NX0TGA _R7OY73CoEdq2Lvk-NX0TGA _R1HJ23CoEdq2Lvk-NX0TGA _SBCF8XCoEdq2Lvk-NX0TGA _R13XxnCoEdq2Lvk-NX0TGA _RxPWfHCoEdq2Lvk-NX0TGA _RybpQHCoEdq2Lvk-NX0TGA _R0hT8HCoEdq2Lvk-NX0TGA _00owUGvdEdq4DLWZOhbdEA _RzxtG3CoEdq2Lvk-NX0TGA _R2m-pHCoEdq2Lvk-NX0TGA _R0hUHXCoEdq2Lvk-NX0TGA _R2wIpnCoEdq2Lvk-NX0TGA _SA48B3CoEdq2Lvk-NX0TGA _V6vuYGwGEdq7X4sGURiZYA _RzxtL3CoEdq2Lvk-NX0TGA _R0XjEnCoEdq2Lvk-NX0TGA _M4X2IGveEdq4DLWZOhbdEA _R5laIHCoEdq2Lvk-NX0TGA _R2TcpXCoEdq2Lvk-NX0TGA _SA48AHCoEdq2Lvk-NX0TGA _RySfVHCoEdq2Lvk-NX0TGA _R1Q63HCoEdq2Lvk-NX0TGA _R13X2XCoEdq2Lvk-NX0TGA _R2wIkXCoEdq2Lvk-NX0TGA _R255mHCoEdq2Lvk-NX0TGA _R4sCQHCoEdq2Lvk-NX0TGA _R2wInnCoEdq2Lvk-NX0TGA _R0Xi93CoEdq2Lvk-NX0TGA _R255l3CoEdq2Lvk-NX0TGA _ChRfcGveEdq4DLWZOhbdEA _RzCGVHCoEdq2Lvk-NX0TGA _R00O_HCoEdq2Lvk-NX0TGA _R2m-rXCoEdq2Lvk-NX0TGA _R2wIrHCoEdq2Lvk-NX0TGA _R2m-qXCoEdq2Lvk-NX0TGA _R0XjBHCoEdq2Lvk-NX0TGA _R_1zJHCoEdq2Lvk-NX0TGA _R41zXXCoEdq2Lvk-NX0TGA _R41zWHCoEdq2Lvk-NX0TGA _R2wIkHCoEdq2Lvk-NX0TGA _R2m-r3CoEdq2Lvk-NX0TGA _R7OZDHCoEdq2Lvk-NX0TGA _R2KSuXCoEdq2Lvk-NX0TGA _RySfeHCoEdq2Lvk-NX0TGA _R41zanCoEdq2Lvk-NX0TGA _R2TctnCoEdq2Lvk-NX0TGA _R2wImHCoEdq2Lvk-NX0TGA _R2wIlHCoEdq2Lvk-NX0TGA _R5laLHCoEdq2Lvk-NX0TGA _R00O7HCoEdq2Lvk-NX0TGA _R2dNp3CoEdq2Lvk-NX0TGA _Rx-9f3CoEdq2Lvk-NX0TGA _OQcbgGwOEdq7X4sGURiZYA _R0OZAHCoEdq2Lvk-NX0TGA _R6xs-HCoEdq2Lvk-NX0TGA _R255lnCoEdq2Lvk-NX0TGA _C7AF4GwREdq14q0ETb1t3g _R41zTnCoEdq2Lvk-NX0TGA _R2wIpHCoEdq2Lvk-NX0TGA _R2dNtnCoEdq2Lvk-NX0TGA _RxZHcHCoEdq2Lvk-NX0TGA _Rx-9U3CoEdq2Lvk-NX0TGA _RxsCcnCoEdq2Lvk-NX0TGA _R0EoAnCoEdq2Lvk-NX0TGA _Rzn8I3CoEdq2Lvk-NX0TGA _R2AhzHCoEdq2Lvk-NX0TGA _RzVBPXCoEdq2Lvk-NX0TGA _R0rE_nCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA _R255mXCoEdq2Lvk-NX0TGA _SAJVJXCoEdq2Lvk-NX0TGA _R41zQ3CoEdq2Lvk-NX0TGA _SBCF-XCoEdq2Lvk-NX0TGA _R1HJ0HCoEdq2Lvk-NX0TGA _R2wIlnCoEdq2Lvk-NX0TGA _SA48BXCoEdq2Lvk-NX0TGA _RzCGS3CoEdq2Lvk-NX0TGA _RylaXXCoEdq2Lvk-NX0TGA _SAvLBXCoEdq2Lvk-NX0TGA _RybpSnCoEdq2Lvk-NX0TGA _R2m-rnCoEdq2Lvk-NX0TGA _R2m-onCoEdq2Lvk-NX0TGA _R0OZCXCoEdq2Lvk-NX0TGA _RySfV3CoEdq2Lvk-NX0TGA _R4i4YnCoEdq2Lvk-NX0TGA _R1Q60HCoEdq2Lvk-NX0TGA _R2wIqXCoEdq2Lvk-NX0TGA _RySfaHCoEdq2Lvk-NX0TGA _RxPWdnCoEdq2Lvk-NX0TGA _RylaUnCoEdq2Lvk-NX0TGA _RzxtKnCoEdq2Lvk-NX0TGA _R1Q64nCoEdq2Lvk-NX0TGA _RxiRcHCoEdq2Lvk-NX0TGA _R00O9nCoEdq2Lvk-NX0TGA _Rx-9cnCoEdq2Lvk-NX0TGA _R2wIq3CoEdq2Lvk-NX0TGA _R0XjC3CoEdq2Lvk-NX0TGA _R0OZIHCoEdq2Lvk-NX0TGA _Rzn8HXCoEdq2Lvk-NX0TGA _SAvLDHCoEdq2Lvk-NX0TGA _R2dNs3CoEdq2Lvk-NX0TGA _R0rE8HCoEdq2Lvk-NX0TGA _R0OZJnCoEdq2Lvk-NX0TGA _R7OY83CoEdq2Lvk-NX0TGA _R2TcrHCoEdq2Lvk-NX0TGA _RySfcHCoEdq2Lvk-NX0TGA _RySfXHCoEdq2Lvk-NX0TGA _Rx-9eHCoEdq2Lvk-NX0TGA _Jp_1oGveEdq4DLWZOhbdEA _R1ar3HCoEdq2Lvk-NX0TGA _RzCGP3CoEdq2Lvk-NX0TGA _SAvLAnCoEdq2Lvk-NX0TGA _R2AhsHCoEdq2Lvk-NX0TGA _R7OY5nCoEdq2Lvk-NX0TGA _RxiReXCoEdq2Lvk-NX0TGA _RzLQUnCoEdq2Lvk-NX0TGA _RzVBKnCoEdq2Lvk-NX0TGA _R2dNqnCoEdq2Lvk-NX0TGA _R2m-o3CoEdq2Lvk-NX0TGA _RyukQnCoEdq2Lvk-NX0TGA _R0hUE3CoEdq2Lvk-NX0TGA _SASfEXCoEdq2Lvk-NX0TGA _Rx-9ZnCoEdq2Lvk-NX0TGA _R4i4VXCoEdq2Lvk-NX0TGA _R2KStHCoEdq2Lvk-NX0TGA _R7OY43CoEdq2Lvk-NX0TGA _RxsCfHCoEdq2Lvk-NX0TGA _R255q3CoEdq2Lvk-NX0TGA _R0rE93CoEdq2Lvk-NX0TGA _R4i4XXCoEdq2Lvk-NX0TGA _R6xs_nCoEdq2Lvk-NX0TGA _R2Ah0XCoEdq2Lvk-NX0TGA _R2dNoHCoEdq2Lvk-NX0TGA _R0OZE3CoEdq2Lvk-NX0TGA _R2Ahs3CoEdq2Lvk-NX0TGA _RxsCanCoEdq2Lvk-NX0TGA _R0hUBHCoEdq2Lvk-NX0TGA _AwvxoGwNEdq7X4sGURiZYA _R7OY-XCoEdq2Lvk-NX0TGA _R00O43CoEdq2Lvk-NX0TGA _R1ar63CoEdq2Lvk-NX0TGA _R9KSk3CoEdq2Lvk-NX0TGA _R0hT_nCoEdq2Lvk-NX0TGA _R2TcvHCoEdq2Lvk-NX0TGA _R7OZCHCoEdq2Lvk-NX0TGA _R1ar1XCoEdq2Lvk-NX0TGA _R2dNsXCoEdq2Lvk-NX0TGA _R2KSwXCoEdq2Lvk-NX0TGA _R255knCoEdq2Lvk-NX0TGA _R2wImnCoEdq2Lvk-NX0TGA _RxPWgHCoEdq2Lvk-NX0TGA _R-9CW3CoEdq2Lvk-NX0TGA _RylaWHCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOg3CoEdq2Lvk-NX0TGA" source="UML::Actions::IntermediateActions" references="_SIL25nCoEdq2Lvk-NX0TGA _SHvyJnCoEdq2Lvk-NX0TGA _SIL23nCoEdq2Lvk-NX0TGA _SICtC3CoEdq2Lvk-NX0TGA _SIVn7HCoEdq2Lvk-NX0TGA _SH48M3CoEdq2Lvk-NX0TGA _SICs_3CoEdq2Lvk-NX0TGA _SHcQF3CoEdq2Lvk-NX0TGA _SHmBcnCoEdq2Lvk-NX0TGA _SIL273CoEdq2Lvk-NX0TGA _SICs5nCoEdq2Lvk-NX0TGA _SHvyO3CoEdq2Lvk-NX0TGA _SIVn83CoEdq2Lvk-NX0TGA _SIVn03CoEdq2Lvk-NX0TGA _SH479XCoEdq2Lvk-NX0TGA _SIL213CoEdq2Lvk-NX0TGA _SIL2-XCoEdq2Lvk-NX0TGA _SICs83CoEdq2Lvk-NX0TGA _SHcQCHCoEdq2Lvk-NX0TGA _SICtDXCoEdq2Lvk-NX0TGA _SHmBY3CoEdq2Lvk-NX0TGA _SH48DnCoEdq2Lvk-NX0TGA _SHvx_3CoEdq2Lvk-NX0TGA _SIVn1nCoEdq2Lvk-NX0TGA _SHmBMnCoEdq2Lvk-NX0TGA _SIVn13CoEdq2Lvk-NX0TGA _SIVn8XCoEdq2Lvk-NX0TGA _SH474HCoEdq2Lvk-NX0TGA _SICtCHCoEdq2Lvk-NX0TGA _SHvyDnCoEdq2Lvk-NX0TGA _SIL24nCoEdq2Lvk-NX0TGA _SIVn2nCoEdq2Lvk-NX0TGA _SH48KnCoEdq2Lvk-NX0TGA _SH48F3CoEdq2Lvk-NX0TGA _SHmBI3CoEdq2Lvk-NX0TGA _SIL223CoEdq2Lvk-NX0TGA _SICs5HCoEdq2Lvk-NX0TGA _SHmBbHCoEdq2Lvk-NX0TGA _SHmBOHCoEdq2Lvk-NX0TGA _SHmBVHCoEdq2Lvk-NX0TGA _SICs8HCoEdq2Lvk-NX0TGA _SHvyUXCoEdq2Lvk-NX0TGA _SIL21XCoEdq2Lvk-NX0TGA _SIVn0nCoEdq2Lvk-NX0TGA _SHmBEXCoEdq2Lvk-NX0TGA _SHmBSnCoEdq2Lvk-NX0TGA _SHmBTnCoEdq2Lvk-NX0TGA _SIVn1XCoEdq2Lvk-NX0TGA _SIVn5XCoEdq2Lvk-NX0TGA _SHvyYHCoEdq2Lvk-NX0TGA _SH477HCoEdq2Lvk-NX0TGA _SIL22nCoEdq2Lvk-NX0TGA _SHmBF3CoEdq2Lvk-NX0TGA _SIL26HCoEdq2Lvk-NX0TGA _SHvyIHCoEdq2Lvk-NX0TGA _SH48SXCoEdq2Lvk-NX0TGA _SHmBHXCoEdq2Lvk-NX0TGA _SHmA-XCoEdq2Lvk-NX0TGA _SIVn4HCoEdq2Lvk-NX0TGA _SHvx8HCoEdq2Lvk-NX0TGA _SH47-3CoEdq2Lvk-NX0TGA _SH48JHCoEdq2Lvk-NX0TGA _SHmBXXCoEdq2Lvk-NX0TGA _SH48CnCoEdq2Lvk-NX0TGA _SHmBBXCoEdq2Lvk-NX0TGA _SIL263CoEdq2Lvk-NX0TGA _SICs7nCoEdq2Lvk-NX0TGA _SHmA_3CoEdq2Lvk-NX0TGA _SIVn43CoEdq2Lvk-NX0TGA _SHvyGnCoEdq2Lvk-NX0TGA _SHvyY3CoEdq2Lvk-NX0TGA _SIVn0HCoEdq2Lvk-NX0TGA _SH48OnCoEdq2Lvk-NX0TGA _SIL20nCoEdq2Lvk-NX0TGA _SICs-HCoEdq2Lvk-NX0TGA _SICtBnCoEdq2Lvk-NX0TGA _SIL29nCoEdq2Lvk-NX0TGA _SIVn33CoEdq2Lvk-NX0TGA _SIL29HCoEdq2Lvk-NX0TGA _SIL243CoEdq2Lvk-NX0TGA _SIL2-nCoEdq2Lvk-NX0TGA _SHvyN3CoEdq2Lvk-NX0TGA _SHvx9nCoEdq2Lvk-NX0TGA _SICtAnCoEdq2Lvk-NX0TGA _SH48Q3CoEdq2Lvk-NX0TGA _SH475nCoEdq2Lvk-NX0TGA _SIL28XCoEdq2Lvk-NX0TGA _SHvx-XCoEdq2Lvk-NX0TGA _SIL20HCoEdq2Lvk-NX0TGA _SICs4HCoEdq2Lvk-NX0TGA _SHmA8HCoEdq2Lvk-NX0TGA _SICtA3CoEdq2Lvk-NX0TGA _SH48G3CoEdq2Lvk-NX0TGA _SIL233CoEdq2Lvk-NX0TGA _SIVn7nCoEdq2Lvk-NX0TGA _SHvyK3CoEdq2Lvk-NX0TGA _SH4773CoEdq2Lvk-NX0TGA _SICs4XCoEdq2Lvk-NX0TGA _SH48BHCoEdq2Lvk-NX0TGA _SICs9XCoEdq2Lvk-NX0TGA _SH48NnCoEdq2Lvk-NX0TGA _SH48HnCoEdq2Lvk-NX0TGA _SHvyP3CoEdq2Lvk-NX0TGA _SIVn6HCoEdq2Lvk-NX0TGA _SICs63CoEdq2Lvk-NX0TGA _SHcQG3CoEdq2Lvk-NX0TGA _SHvyV3CoEdq2Lvk-NX0TGA _SHmA_HCoEdq2Lvk-NX0TGA _SICs6XCoEdq2Lvk-NX0TGA _SIVn3HCoEdq2Lvk-NX0TGA _SICs_XCoEdq2Lvk-NX0TGA _SHvyCHCoEdq2Lvk-NX0TGA _SIVn6XCoEdq2Lvk-NX0TGA _SHvyBXCoEdq2Lvk-NX0TGA _SIL27HCoEdq2Lvk-NX0TGA _SICs-nCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOhHCoEdq2Lvk-NX0TGA" source="UML::AuxiliaryConstructs::Templates" references="_SSUqVXCoEdq2Lvk-NX0TGA _STERNXCoEdq2Lvk-NX0TGA _SSK5TnCoEdq2Lvk-NX0TGA _SSK5XnCoEdq2Lvk-NX0TGA _STERIHCoEdq2Lvk-NX0TGA _STXMGXCoEdq2Lvk-NX0TGA _STXMG3CoEdq2Lvk-NX0TGA _STg9GXCoEdq2Lvk-NX0TGA _STg9HHCoEdq2Lvk-NX0TGA _STquLnCoEdq2Lvk-NX0TGA _SSebjnCoEdq2Lvk-NX0TGA _jKxnwGwLEdq7X4sGURiZYA _SSebpHCoEdq2Lvk-NX0TGA _STERQHCoEdq2Lvk-NX0TGA _SSebbnCoEdq2Lvk-NX0TGA _STg9HXCoEdq2Lvk-NX0TGA _SSebenCoEdq2Lvk-NX0TGA _SSnlPXCoEdq2Lvk-NX0TGA _STg9E3CoEdq2Lvk-NX0TGA _STquEHCoEdq2Lvk-NX0TGA _STquHHCoEdq2Lvk-NX0TGA _STg9F3CoEdq2Lvk-NX0TGA _SSnlTnCoEdq2Lvk-NX0TGA _6UV2QGwJEdq7X4sGURiZYA _csVgUGvtEdqG6fBIPwe-mw _SSnlQ3CoEdq2Lvk-NX0TGA _SSxWO3CoEdq2Lvk-NX0TGA _STg9EHCoEdq2Lvk-NX0TGA _STquGXCoEdq2Lvk-NX0TGA _KxRzgGvuEdqG6fBIPwe-mw _SSebW3CoEdq2Lvk-NX0TGA _SSnlM3CoEdq2Lvk-NX0TGA _SSebQHCoEdq2Lvk-NX0TGA _STOCO3CoEdq2Lvk-NX0TGA _-cvRAGvzEdq7X4sGURiZYA _STz4AHCoEdq2Lvk-NX0TGA _STXMEnCoEdq2Lvk-NX0TGA _STg9FHCoEdq2Lvk-NX0TGA _SSK5VHCoEdq2Lvk-NX0TGA _STquH3CoEdq2Lvk-NX0TGA _STquJ3CoEdq2Lvk-NX0TGA _STquE3CoEdq2Lvk-NX0TGA _SSebZHCoEdq2Lvk-NX0TGA _STz4BHCoEdq2Lvk-NX0TGA _STOCK3CoEdq2Lvk-NX0TGA _SSebfnCoEdq2Lvk-NX0TGA _STXME3CoEdq2Lvk-NX0TGA _STXMFnCoEdq2Lvk-NX0TGA _RzLQJ3CoEdq2Lvk-NX0TGA _STXMEXCoEdq2Lvk-NX0TGA _SSebanCoEdq2Lvk-NX0TGA _SSebSnCoEdq2Lvk-NX0TGA _STXMGnCoEdq2Lvk-NX0TGA _SSebiHCoEdq2Lvk-NX0TGA _SSebhHCoEdq2Lvk-NX0TGA _SSebnXCoEdq2Lvk-NX0TGA _SSUqQHCoEdq2Lvk-NX0TGA _STOCIXCoEdq2Lvk-NX0TGA _SSnlN3CoEdq2Lvk-NX0TGA _STOCP3CoEdq2Lvk-NX0TGA _STERPHCoEdq2Lvk-NX0TGA _SD3XnHCoEdq2Lvk-NX0TGA _STERJnCoEdq2Lvk-NX0TGA _SS6gI3CoEdq2Lvk-NX0TGA _STquJHCoEdq2Lvk-NX0TGA _SSebUHCoEdq2Lvk-NX0TGA _SSK5WHCoEdq2Lvk-NX0TGA _STz4A3CoEdq2Lvk-NX0TGA _SSxWMnCoEdq2Lvk-NX0TGA _M4X2IGveEdq4DLWZOhbdEA _STOCQnCoEdq2Lvk-NX0TGA _STXMHXCoEdq2Lvk-NX0TGA _STquIXCoEdq2Lvk-NX0TGA _SSebl3CoEdq2Lvk-NX0TGA _STquKXCoEdq2Lvk-NX0TGA _STg9FXCoEdq2Lvk-NX0TGA _STz4BXCoEdq2Lvk-NX0TGA _STERL3CoEdq2Lvk-NX0TGA _SSUqS3CoEdq2Lvk-NX0TGA _SSebdHCoEdq2Lvk-NX0TGA _STquK3CoEdq2Lvk-NX0TGA _STOCMXCoEdq2Lvk-NX0TGA _SSUqUXCoEdq2Lvk-NX0TGA _STg9EnCoEdq2Lvk-NX0TGA _STz4AnCoEdq2Lvk-NX0TGA _STOCJ3CoEdq2Lvk-NX0TGA _Jp_1oGveEdq4DLWZOhbdEA _STquJnCoEdq2Lvk-NX0TGA _9keOQGvdEdq4DLWZOhbdEA _SSebkXCoEdq2Lvk-NX0TGA _SSUqW3CoEdq2Lvk-NX0TGA _SSnlMHCoEdq2Lvk-NX0TGA _STEROHCoEdq2Lvk-NX0TGA _SS6gIHCoEdq2Lvk-NX0TGA _SSUqX3CoEdq2Lvk-NX0TGA _STERKnCoEdq2Lvk-NX0TGA _STquFnCoEdq2Lvk-NX0TGA _SSebVnCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOhXCoEdq2Lvk-NX0TGA" source="InfrastructureLibrary::Profiles" references="_SUtP6nCoEdq2Lvk-NX0TGA _2QuT0GvdEdq4DLWZOhbdEA _kl90MGvbEdq4DLWZOhbdEA _0VlHsGvbEdq4DLWZOhbdEA _uY5yQGv5Edq7X4sGURiZYA _ST9pB3CoEdq2Lvk-NX0TGA _SU3A4HCoEdq2Lvk-NX0TGA _SUGy93CoEdq2Lvk-NX0TGA _SUQkAHCoEdq2Lvk-NX0TGA _SUaVCXCoEdq2Lvk-NX0TGA _skHGwGvsEdqG6fBIPwe-mw _SUQj9XCoEdq2Lvk-NX0TGA _A7vDAGv0Edq7X4sGURiZYA _SUtP5XCoEdq2Lvk-NX0TGA _SUaU_HCoEdq2Lvk-NX0TGA _SUtP4nCoEdq2Lvk-NX0TGA _-cvRAGvzEdq7X4sGURiZYA _SUtP-nCoEdq2Lvk-NX0TGA _SUtP_HCoEdq2Lvk-NX0TGA _SUtP73CoEdq2Lvk-NX0TGA _SUaU8HCoEdq2Lvk-NX0TGA _SUtP_3CoEdq2Lvk-NX0TGA __pew8GvzEdq7X4sGURiZYA _00owUGvdEdq4DLWZOhbdEA _SUtP53CoEdq2Lvk-NX0TGA _SUQkBXCoEdq2Lvk-NX0TGA _SUtP4HCoEdq2Lvk-NX0TGA _SU3A4XCoEdq2Lvk-NX0TGA _SUaVDXCoEdq2Lvk-NX0TGA _SUtP8nCoEdq2Lvk-NX0TGA _ST9pE3CoEdq2Lvk-NX0TGA _SUGy8HCoEdq2Lvk-NX0TGA _SUQkC3CoEdq2Lvk-NX0TGA _SUtQAXCoEdq2Lvk-NX0TGA _SUtP9XCoEdq2Lvk-NX0TGA _ST9pGXCoEdq2Lvk-NX0TGA _SUaU9XCoEdq2Lvk-NX0TGA _SUQj8XCoEdq2Lvk-NX0TGA _ST9pDXCoEdq2Lvk-NX0TGA _SUtP7HCoEdq2Lvk-NX0TGA _SUtP93CoEdq2Lvk-NX0TGA _SUtP8HCoEdq2Lvk-NX0TGA _STz4DnCoEdq2Lvk-NX0TGA _SUaVEnCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOhnCoEdq2Lvk-NX0TGA" source="UML::Interactions::BasicInteractions" references="_SEwvkHCoEdq2Lvk-NX0TGA _SFDqUnCoEdq2Lvk-NX0TGA _SFDqZHCoEdq2Lvk-NX0TGA _SE6ghXCoEdq2Lvk-NX0TGA _SEm-ZnCoEdq2Lvk-NX0TGA _SE6ga3CoEdq2Lvk-NX0TGA _SE6geXCoEdq2Lvk-NX0TGA _SEd0lXCoEdq2Lvk-NX0TGA _SFDqUHCoEdq2Lvk-NX0TGA _SFDqb3CoEdq2Lvk-NX0TGA _SE6gfHCoEdq2Lvk-NX0TGA _SEm-c3CoEdq2Lvk-NX0TGA _SEK5t3CoEdq2Lvk-NX0TGA _SEK5vXCoEdq2Lvk-NX0TGA _SFDqbnCoEdq2Lvk-NX0TGA _SEwvaXCoEdq2Lvk-NX0TGA _SFDqcnCoEdq2Lvk-NX0TGA _SEd0f3CoEdq2Lvk-NX0TGA _SEK5r3CoEdq2Lvk-NX0TGA _SEd0dnCoEdq2Lvk-NX0TGA _SEUDkHCoEdq2Lvk-NX0TGA _SFDqYHCoEdq2Lvk-NX0TGA _SFDqZXCoEdq2Lvk-NX0TGA _SE6gZHCoEdq2Lvk-NX0TGA _SFDqdHCoEdq2Lvk-NX0TGA _SE6gcHCoEdq2Lvk-NX0TGA _SEwvl3CoEdq2Lvk-NX0TGA _SEd0g3CoEdq2Lvk-NX0TGA _SEUDjHCoEdq2Lvk-NX0TGA _SEwvmXCoEdq2Lvk-NX0TGA _SEwveXCoEdq2Lvk-NX0TGA _SEK5w3CoEdq2Lvk-NX0TGA _SEd0pHCoEdq2Lvk-NX0TGA _SEd0h3CoEdq2Lvk-NX0TGA _SEUDmHCoEdq2Lvk-NX0TGA _SEwvgXCoEdq2Lvk-NX0TGA _SE6gdXCoEdq2Lvk-NX0TGA _SEm-i3CoEdq2Lvk-NX0TGA _SFDqV3CoEdq2Lvk-NX0TGA _SEm-aXCoEdq2Lvk-NX0TGA _SEd0kXCoEdq2Lvk-NX0TGA _SE6ggHCoEdq2Lvk-NX0TGA _SEK5i3CoEdq2Lvk-NX0TGA _SE6gYXCoEdq2Lvk-NX0TGA _SFNbUHCoEdq2Lvk-NX0TGA _SFDqVXCoEdq2Lvk-NX0TGA _SEwvlHCoEdq2Lvk-NX0TGA _SE6gbnCoEdq2Lvk-NX0TGA _SEK5ynCoEdq2Lvk-NX0TGA _SEm-gXCoEdq2Lvk-NX0TGA _SEm-b3CoEdq2Lvk-NX0TGA _SE6ggnCoEdq2Lvk-NX0TGA _SEK5o3CoEdq2Lvk-NX0TGA _Y_jskGvtEdqG6fBIPwe-mw _SE6gf3CoEdq2Lvk-NX0TGA _SFDqanCoEdq2Lvk-NX0TGA _SEd0jXCoEdq2Lvk-NX0TGA _SEd0oHCoEdq2Lvk-NX0TGA _SEwvnHCoEdq2Lvk-NX0TGA _SFDqXnCoEdq2Lvk-NX0TGA _SEK5s3CoEdq2Lvk-NX0TGA _SEwvhXCoEdq2Lvk-NX0TGA _SE6gh3CoEdq2Lvk-NX0TGA _SEK50HCoEdq2Lvk-NX0TGA _SEUDlHCoEdq2Lvk-NX0TGA _SEwvYHCoEdq2Lvk-NX0TGA _SEm-jnCoEdq2Lvk-NX0TGA _SEwvfXCoEdq2Lvk-NX0TGA _SFNbYnCoEdq2Lvk-NX0TGA _SEK5h3CoEdq2Lvk-NX0TGA _SE6gZnCoEdq2Lvk-NX0TGA _SEUDhnCoEdq2Lvk-NX0TGA _SE6gc3CoEdq2Lvk-NX0TGA _SFDqX3CoEdq2Lvk-NX0TGA _gfgNwGveEdq4DLWZOhbdEA _SE6geHCoEdq2Lvk-NX0TGA _SEK5l3CoEdq2Lvk-NX0TGA _SFDqZnCoEdq2Lvk-NX0TGA _SEK5xnCoEdq2Lvk-NX0TGA _SEwvY3CoEdq2Lvk-NX0TGA _SEwvknCoEdq2Lvk-NX0TGA _SFNbX3CoEdq2Lvk-NX0TGA _SEd0qHCoEdq2Lvk-NX0TGA _SEwvdnCoEdq2Lvk-NX0TGA _SEwviHCoEdq2Lvk-NX0TGA _SFNbVnCoEdq2Lvk-NX0TGA _SEK5kXCoEdq2Lvk-NX0TGA _SFNbZXCoEdq2Lvk-NX0TGA _SE6ganCoEdq2Lvk-NX0TGA _SFDqYXCoEdq2Lvk-NX0TGA _SEwvcnCoEdq2Lvk-NX0TGA _SE6gfnCoEdq2Lvk-NX0TGA _SEwvb3CoEdq2Lvk-NX0TGA _SEUDiXCoEdq2Lvk-NX0TGA _SFNbWXCoEdq2Lvk-NX0TGA _SFNbaXCoEdq2Lvk-NX0TGA _SEm-h3CoEdq2Lvk-NX0TGA _SEK5nXCoEdq2Lvk-NX0TGA _SEwvjHCoEdq2Lvk-NX0TGA _SFDqWnCoEdq2Lvk-NX0TGA _SEd0cHCoEdq2Lvk-NX0TGA _SEd0fHCoEdq2Lvk-NX0TGA _SFNbbHCoEdq2Lvk-NX0TGA _SFDqZ3CoEdq2Lvk-NX0TGA _SFNbXXCoEdq2Lvk-NX0TGA _SFNbWnCoEdq2Lvk-NX0TGA _SFNbVHCoEdq2Lvk-NX0TGA _SEd0q3CoEdq2Lvk-NX0TGA _SEd0nHCoEdq2Lvk-NX0TGA _SEd0mHCoEdq2Lvk-NX0TGA _SFNbUXCoEdq2Lvk-NX0TGA _SE6gZ3CoEdq2Lvk-NX0TGA _SFDqa3CoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOh3CoEdq2Lvk-NX0TGA" source="UML::CommonBehaviors::SimpleTime" references="_SI8EyXCoEdq2Lvk-NX0TGA _SIoi2HCoEdq2Lvk-NX0TGA _SJO_snCoEdq2Lvk-NX0TGA _QqkiIGvuEdqG6fBIPwe-mw _SJFOxnCoEdq2Lvk-NX0TGA _SJO_s3CoEdq2Lvk-NX0TGA _VMC8gGveEdq4DLWZOhbdEA _SJFOvnCoEdq2Lvk-NX0TGA _SJFOynCoEdq2Lvk-NX0TGA _SIyT4HCoEdq2Lvk-NX0TGA _SJFOw3CoEdq2Lvk-NX0TGA _SIyTw3CoEdq2Lvk-NX0TGA _SIyT1XCoEdq2Lvk-NX0TGA _SGP9PnCoEdq2Lvk-NX0TGA _1qTPMGvsEdqG6fBIPwe-mw _SIyTxXCoEdq2Lvk-NX0TGA _SJFOyHCoEdq2Lvk-NX0TGA _SI8E23CoEdq2Lvk-NX0TGA _SIfY0HCoEdq2Lvk-NX0TGA _SIfY1XCoEdq2Lvk-NX0TGA _SGP9OHCoEdq2Lvk-NX0TGA _SIyT03CoEdq2Lvk-NX0TGA _SJFOunCoEdq2Lvk-NX0TGA _SI8EwHCoEdq2Lvk-NX0TGA _SJFOxHCoEdq2Lvk-NX0TGA _SJFOsHCoEdq2Lvk-NX0TGA _SI8E33CoEdq2Lvk-NX0TGA _SI8E6HCoEdq2Lvk-NX0TGA _SIyTynCoEdq2Lvk-NX0TGA _SIoiwnCoEdq2Lvk-NX0TGA _SJFOsnCoEdq2Lvk-NX0TGA _SJFOt3CoEdq2Lvk-NX0TGA _SIfY0nCoEdq2Lvk-NX0TGA _SIfY13CoEdq2Lvk-NX0TGA _SJFOtXCoEdq2Lvk-NX0TGA _SIyT3HCoEdq2Lvk-NX0TGA _SJFOwHCoEdq2Lvk-NX0TGA _SIyTwHCoEdq2Lvk-NX0TGA _SJO_sHCoEdq2Lvk-NX0TGA _SJFOuHCoEdq2Lvk-NX0TGA _SJFOwXCoEdq2Lvk-NX0TGA _SJFOu3CoEdq2Lvk-NX0TGA _SIfY33CoEdq2Lvk-NX0TGA _Wrt_gGveEdq4DLWZOhbdEA _SJFOsXCoEdq2Lvk-NX0TGA _SI8E6XCoEdq2Lvk-NX0TGA _SIoiznCoEdq2Lvk-NX0TGA _SIyTx3CoEdq2Lvk-NX0TGA _SJO_tXCoEdq2Lvk-NX0TGA _SIoixXCoEdq2Lvk-NX0TGA _SI8ExnCoEdq2Lvk-NX0TGA _SI8E0nCoEdq2Lvk-NX0TGA _SIyT0HCoEdq2Lvk-NX0TGA _SI8Ez3CoEdq2Lvk-NX0TGA _SJFOtHCoEdq2Lvk-NX0TGA _SJFOxXCoEdq2Lvk-NX0TGA _SI8E2HCoEdq2Lvk-NX0TGA _SJFOx3CoEdq2Lvk-NX0TGA _SIoi0nCoEdq2Lvk-NX0TGA _SIfY3HCoEdq2Lvk-NX0TGA _SJFOvXCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOiHCoEdq2Lvk-NX0TGA" source="UML::Interactions::Fragments" references="_SFXMvHCoEdq2Lvk-NX0TGA _SFqHRXCoEdq2Lvk-NX0TGA _SFXMqnCoEdq2Lvk-NX0TGA _SFgWa3CoEdq2Lvk-NX0TGA _SFXMwnCoEdq2Lvk-NX0TGA _SFqHSnCoEdq2Lvk-NX0TGA _SFXMWnCoEdq2Lvk-NX0TGA _SFqHXnCoEdq2Lvk-NX0TGA _SFNbiXCoEdq2Lvk-NX0TGA _SFXMe3CoEdq2Lvk-NX0TGA _SFXMUHCoEdq2Lvk-NX0TGA _SFNbj3CoEdq2Lvk-NX0TGA _SEK5w3CoEdq2Lvk-NX0TGA _SFXMZnCoEdq2Lvk-NX0TGA _SFXMgXCoEdq2Lvk-NX0TGA _SFgWTHCoEdq2Lvk-NX0TGA _SFgWVXCoEdq2Lvk-NX0TGA _SFXMoXCoEdq2Lvk-NX0TGA _SFqHQHCoEdq2Lvk-NX0TGA _SFqHUXCoEdq2Lvk-NX0TGA _SFgWYnCoEdq2Lvk-NX0TGA _SEK5o3CoEdq2Lvk-NX0TGA _SFXMuXCoEdq2Lvk-NX0TGA _SFXMyHCoEdq2Lvk-NX0TGA _SFXMz3CoEdq2Lvk-NX0TGA _SFgWbnCoEdq2Lvk-NX0TGA _SFgWQHCoEdq2Lvk-NX0TGA _SFXMh3CoEdq2Lvk-NX0TGA _SFNbf3CoEdq2Lvk-NX0TGA _SFgWZnCoEdq2Lvk-NX0TGA _SEK5h3CoEdq2Lvk-NX0TGA _SFqHWXCoEdq2Lvk-NX0TGA _SFqHT3CoEdq2Lvk-NX0TGA _SFqHUnCoEdq2Lvk-NX0TGA _SFNbg3CoEdq2Lvk-NX0TGA _SFgWb3CoEdq2Lvk-NX0TGA _SFgWXnCoEdq2Lvk-NX0TGA _SFqHVHCoEdq2Lvk-NX0TGA _SFqHVXCoEdq2Lvk-NX0TGA _SFgWZHCoEdq2Lvk-NX0TGA _SFgWaXCoEdq2Lvk-NX0TGA _SFqHR3CoEdq2Lvk-NX0TGA _SFqHXXCoEdq2Lvk-NX0TGA _SFqHQnCoEdq2Lvk-NX0TGA _SFgWY3CoEdq2Lvk-NX0TGA _SFqHTHCoEdq2Lvk-NX0TGA _SFXMYHCoEdq2Lvk-NX0TGA _SFNbcHCoEdq2Lvk-NX0TGA _SFgWT3CoEdq2Lvk-NX0TGA _SFqHVnCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOiXCoEdq2Lvk-NX0TGA" source="UML::AuxiliaryConstructs::InformationFlows" references="_SKIXvnCoEdq2Lvk-NX0TGA _SKIX03CoEdq2Lvk-NX0TGA _SKIXunCoEdq2Lvk-NX0TGA _SKIX2HCoEdq2Lvk-NX0TGA _SKIXrXCoEdq2Lvk-NX0TGA _SKIXvXCoEdq2Lvk-NX0TGA _SKIXxXCoEdq2Lvk-NX0TGA _SKIXnXCoEdq2Lvk-NX0TGA _SKIXsXCoEdq2Lvk-NX0TGA _SKIX0HCoEdq2Lvk-NX0TGA _SKIXzHCoEdq2Lvk-NX0TGA _SJ-mmnCoEdq2Lvk-NX0TGA _SKIX1HCoEdq2Lvk-NX0TGA _SKIXynCoEdq2Lvk-NX0TGA _SKIXoXCoEdq2Lvk-NX0TGA _SKIX13CoEdq2Lvk-NX0TGA _SKIXwnCoEdq2Lvk-NX0TGA _SKIXtXCoEdq2Lvk-NX0TGA _SKIXuXCoEdq2Lvk-NX0TGA _SKIXwXCoEdq2Lvk-NX0TGA _SKIXz3CoEdq2Lvk-NX0TGA _SKIXpXCoEdq2Lvk-NX0TGA _SKIXqXCoEdq2Lvk-NX0TGA _SKIXkHCoEdq2Lvk-NX0TGA _SKIXx3CoEdq2Lvk-NX0TGA _SJ-mpnCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOinCoEdq2Lvk-NX0TGA" source="UML::StateMachines::ProtocolStateMachines" references="_SSBvVHCoEdq2Lvk-NX0TGA _SSBvVnCoEdq2Lvk-NX0TGA _ZAuvEGveEdq4DLWZOhbdEA _SR3-X3CoEdq2Lvk-NX0TGA _8Ugn8GvtEdqG6fBIPwe-mw _SSBvWXCoEdq2Lvk-NX0TGA _SR3-UXCoEdq2Lvk-NX0TGA _SRuNhXCoEdq2Lvk-NX0TGA _SQh63HCoEdq2Lvk-NX0TGA _SRuNbXCoEdq2Lvk-NX0TGA _SRuNYXCoEdq2Lvk-NX0TGA _SR3-VXCoEdq2Lvk-NX0TGA _SR3-WHCoEdq2Lvk-NX0TGA _SRlDb3CoEdq2Lvk-NX0TGA _SRlDfXCoEdq2Lvk-NX0TGA _SRuNVXCoEdq2Lvk-NX0TGA _SR3-WnCoEdq2Lvk-NX0TGA _SR3-ZXCoEdq2Lvk-NX0TGA _SR3-Y3CoEdq2Lvk-NX0TGA _SRlDeHCoEdq2Lvk-NX0TGA _SR3-XXCoEdq2Lvk-NX0TGA _SRlDcnCoEdq2Lvk-NX0TGA _SQ-mhnCoEdq2Lvk-NX0TGA _SRuNZ3CoEdq2Lvk-NX0TGA _SR3-VHCoEdq2Lvk-NX0TGA _SRuNUXCoEdq2Lvk-NX0TGA _SRuNc3CoEdq2Lvk-NX0TGA _SSBvUHCoEdq2Lvk-NX0TGA _SSBvUXCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOi3CoEdq2Lvk-NX0TGA" source="UML::Activities::BasicActivities" references="_SL6gdnCoEdq2Lvk-NX0TGA _SMz4KnCoEdq2Lvk-NX0TGA _SMz4JHCoEdq2Lvk-NX0TGA _SLwvT3CoEdq2Lvk-NX0TGA _SLwveXCoEdq2Lvk-NX0TGA _SL6gQHCoEdq2Lvk-NX0TGA _SLnlf3CoEdq2Lvk-NX0TGA _SL6genCoEdq2Lvk-NX0TGA _SL6gSXCoEdq2Lvk-NX0TGA _SMz4I3CoEdq2Lvk-NX0TGA _SMz4IXCoEdq2Lvk-NX0TGA _SL6gbXCoEdq2Lvk-NX0TGA _SLwvZXCoEdq2Lvk-NX0TGA _SL6gW3CoEdq2Lvk-NX0TGA _SLwvc3CoEdq2Lvk-NX0TGA _SMERSHCoEdq2Lvk-NX0TGA _SL6gVXCoEdq2Lvk-NX0TGA _SMERS3CoEdq2Lvk-NX0TGA _SLwvRXCoEdq2Lvk-NX0TGA _SMz4LHCoEdq2Lvk-NX0TGA _SLwvaXCoEdq2Lvk-NX0TGA _SMz4IHCoEdq2Lvk-NX0TGA _SLnlUHCoEdq2Lvk-NX0TGA _SLwvUnCoEdq2Lvk-NX0TGA _SL6gfnCoEdq2Lvk-NX0TGA _SJO_zXCoEdq2Lvk-NX0TGA _SLwvYXCoEdq2Lvk-NX0TGA _SLnlYnCoEdq2Lvk-NX0TGA _SMERUXCoEdq2Lvk-NX0TGA _SMz4InCoEdq2Lvk-NX0TGA _SLwvW3CoEdq2Lvk-NX0TGA _SMz4J3CoEdq2Lvk-NX0TGA _SMz4JXCoEdq2Lvk-NX0TGA _SLwvb3CoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOjHCoEdq2Lvk-NX0TGA" source="UML::AuxiliaryConstructs::Profiles" references="_2QuT0GvdEdq4DLWZOhbdEA _SUaVDXCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOjXCoEdq2Lvk-NX0TGA" source="UML::CompositeStructures::InternalStructures" references="_SDuNpHCoEdq2Lvk-NX0TGA _SDuNoHCoEdq2Lvk-NX0TGA _SDkcpnCoEdq2Lvk-NX0TGA _SD3XlnCoEdq2Lvk-NX0TGA _SEBIjXCoEdq2Lvk-NX0TGA _SD3XhHCoEdq2Lvk-NX0TGA _SDuNkHCoEdq2Lvk-NX0TGA _FQiVsGwYEdqHKKVoxc0dlA _6UV2QGwJEdq7X4sGURiZYA _SEBIpHCoEdq2Lvk-NX0TGA _SEBIonCoEdq2Lvk-NX0TGA _SEBIkXCoEdq2Lvk-NX0TGA _SEK5gHCoEdq2Lvk-NX0TGA _SEBIjnCoEdq2Lvk-NX0TGA _RxPWcHCoEdq2Lvk-NX0TGA _SD3Xn3CoEdq2Lvk-NX0TGA _R2KSxHCoEdq2Lvk-NX0TGA _aOgw0GveEdq4DLWZOhbdEA _SEBIgnCoEdq2Lvk-NX0TGA _SD3XnHCoEdq2Lvk-NX0TGA _SEBIk3CoEdq2Lvk-NX0TGA _SEBImnCoEdq2Lvk-NX0TGA _SEBIg3CoEdq2Lvk-NX0TGA _SD3XinCoEdq2Lvk-NX0TGA _SEK5gXCoEdq2Lvk-NX0TGA _SEBIn3CoEdq2Lvk-NX0TGA _SEBIhnCoEdq2Lvk-NX0TGA _SDuNnHCoEdq2Lvk-NX0TGA _SEBIlnCoEdq2Lvk-NX0TGA _SEBIinCoEdq2Lvk-NX0TGA _SEK5hHCoEdq2Lvk-NX0TGA _SDkcoHCoEdq2Lvk-NX0TGA _SD3XkHCoEdq2Lvk-NX0TGA _Jp_1oGveEdq4DLWZOhbdEA _SEBInXCoEdq2Lvk-NX0TGA _R2KSwXCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOjnCoEdq2Lvk-NX0TGA" source="UML::Actions::CompleteActions" references="_SKkcvnCoEdq2Lvk-NX0TGA _SK3-qnCoEdq2Lvk-NX0TGA _SLK5cXCoEdq2Lvk-NX0TGA _SKkcnnCoEdq2Lvk-NX0TGA _SLd0UnCoEdq2Lvk-NX0TGA _SLBIYXCoEdq2Lvk-NX0TGA _SKuNoHCoEdq2Lvk-NX0TGA _SLK5ZXCoEdq2Lvk-NX0TGA _SLBIdXCoEdq2Lvk-NX0TGA _SLUqbHCoEdq2Lvk-NX0TGA _SLd0XXCoEdq2Lvk-NX0TGA _SLd0fnCoEdq2Lvk-NX0TGA _SLd0VHCoEdq2Lvk-NX0TGA _SKuNvnCoEdq2Lvk-NX0TGA _SKkcy3CoEdq2Lvk-NX0TGA _SLK5YHCoEdq2Lvk-NX0TGA _SLd0WHCoEdq2Lvk-NX0TGA _SLK5bXCoEdq2Lvk-NX0TGA _SLBIaXCoEdq2Lvk-NX0TGA _SK3-t3CoEdq2Lvk-NX0TGA _SKuNwnCoEdq2Lvk-NX0TGA _SLK5ZHCoEdq2Lvk-NX0TGA _SKuNyHCoEdq2Lvk-NX0TGA _SK3-rnCoEdq2Lvk-NX0TGA _SKuN6XCoEdq2Lvk-NX0TGA _SK3-x3CoEdq2Lvk-NX0TGA _SK3-33CoEdq2Lvk-NX0TGA _SK3-fHCoEdq2Lvk-NX0TGA _SLBIenCoEdq2Lvk-NX0TGA _SLUqYHCoEdq2Lvk-NX0TGA _SKkcpXCoEdq2Lvk-NX0TGA _SKuNj3CoEdq2Lvk-NX0TGA _SKkcoXCoEdq2Lvk-NX0TGA _SLd0anCoEdq2Lvk-NX0TGA _SLK5fXCoEdq2Lvk-NX0TGA _SKkcknCoEdq2Lvk-NX0TGA _SLd0YHCoEdq2Lvk-NX0TGA _SK3-kXCoEdq2Lvk-NX0TGA _SLK5anCoEdq2Lvk-NX0TGA _SLK5aHCoEdq2Lvk-NX0TGA _SKuNuHCoEdq2Lvk-NX0TGA _SLK5YXCoEdq2Lvk-NX0TGA _SKkciHCoEdq2Lvk-NX0TGA _SLUqZnCoEdq2Lvk-NX0TGA _SKuNmnCoEdq2Lvk-NX0TGA _SLBIZHCoEdq2Lvk-NX0TGA _SLK5bnCoEdq2Lvk-NX0TGA _SKkcqXCoEdq2Lvk-NX0TGA _SLd0enCoEdq2Lvk-NX0TGA _SLd0Z3CoEdq2Lvk-NX0TGA _SLBIfXCoEdq2Lvk-NX0TGA _SKkcjnCoEdq2Lvk-NX0TGA _SKuN43CoEdq2Lvk-NX0TGA _SK3-43CoEdq2Lvk-NX0TGA _SK3-cHCoEdq2Lvk-NX0TGA _SLBIcHCoEdq2Lvk-NX0TGA _SK3-u3CoEdq2Lvk-NX0TGA _SK3-nnCoEdq2Lvk-NX0TGA _SKuNi3CoEdq2Lvk-NX0TGA _SLd0a3CoEdq2Lvk-NX0TGA _SKuN73CoEdq2Lvk-NX0TGA _SK3-wXCoEdq2Lvk-NX0TGA _SLd0gnCoEdq2Lvk-NX0TGA _SK3-7XCoEdq2Lvk-NX0TGA _SK3-53CoEdq2Lvk-NX0TGA _SLBIc3CoEdq2Lvk-NX0TGA _SKuNcHCoEdq2Lvk-NX0TGA _SKuNeXCoEdq2Lvk-NX0TGA _SLUqaXCoEdq2Lvk-NX0TGA _SLK5c3CoEdq2Lvk-NX0TGA _SLBIbHCoEdq2Lvk-NX0TGA _SLd0W3CoEdq2Lvk-NX0TGA _SLd0ZXCoEdq2Lvk-NX0TGA _SLUqb3CoEdq2Lvk-NX0TGA _SLd0V3CoEdq2Lvk-NX0TGA _SLUqbnCoEdq2Lvk-NX0TGA _SLd0bnCoEdq2Lvk-NX0TGA _SLBIbnCoEdq2Lvk-NX0TGA _SKkcxXCoEdq2Lvk-NX0TGA _SLUqYXCoEdq2Lvk-NX0TGA _SK3-mHCoEdq2Lvk-NX0TGA _SLd0YnCoEdq2Lvk-NX0TGA _SKkcf3CoEdq2Lvk-NX0TGA _SHvyK3CoEdq2Lvk-NX0TGA _SKkcr3CoEdq2Lvk-NX0TGA _SK3-gnCoEdq2Lvk-NX0TGA _SLUqcXCoEdq2Lvk-NX0TGA _SKuNf3CoEdq2Lvk-NX0TGA _SLBIaHCoEdq2Lvk-NX0TGA _SLUqa3CoEdq2Lvk-NX0TGA _SLd0hnCoEdq2Lvk-NX0TGA _SLd0UXCoEdq2Lvk-NX0TGA _SLd0UHCoEdq2Lvk-NX0TGA _SLBIfnCoEdq2Lvk-NX0TGA _SLK5eHCoEdq2Lvk-NX0TGA _SLK5e3CoEdq2Lvk-NX0TGA _SK3-lHCoEdq2Lvk-NX0TGA _SLUqZHCoEdq2Lvk-NX0TGA _SLBIeHCoEdq2Lvk-NX0TGA _SLBIYHCoEdq2Lvk-NX0TGA _SLK5dnCoEdq2Lvk-NX0TGA _SK3-73CoEdq2Lvk-NX0TGA _SLBIbXCoEdq2Lvk-NX0TGA _SLBIZXCoEdq2Lvk-NX0TGA _SKkcwXCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOj3CoEdq2Lvk-NX0TGA" source="UML::CommonBehaviors::Communications" references="_SGP9KnCoEdq2Lvk-NX0TGA _SFzRUnCoEdq2Lvk-NX0TGA _SGjfNnCoEdq2Lvk-NX0TGA _SF9CN3CoEdq2Lvk-NX0TGA _8Ugn8GvtEdqG6fBIPwe-mw _SGP9IHCoEdq2Lvk-NX0TGA _SGjfN3CoEdq2Lvk-NX0TGA _SGspEnCoEdq2Lvk-NX0TGA _SGP9PnCoEdq2Lvk-NX0TGA _SGjfOXCoEdq2Lvk-NX0TGA _SGP9OHCoEdq2Lvk-NX0TGA _SF9CUXCoEdq2Lvk-NX0TGA _SGP9RHCoEdq2Lvk-NX0TGA _R2dNoXCoEdq2Lvk-NX0TGA _SGjfIXCoEdq2Lvk-NX0TGA _SGZuIHCoEdq2Lvk-NX0TGA _SGjfLnCoEdq2Lvk-NX0TGA _SF9CRXCoEdq2Lvk-NX0TGA _SGP9T3CoEdq2Lvk-NX0TGA _SGP9M3CoEdq2Lvk-NX0TGA _SGP9NnCoEdq2Lvk-NX0TGA _SGP9O3CoEdq2Lvk-NX0TGA _R00O8nCoEdq2Lvk-NX0TGA _SF9CMHCoEdq2Lvk-NX0TGA _SGZuK3CoEdq2Lvk-NX0TGA _SF9CM3CoEdq2Lvk-NX0TGA _SGjfPHCoEdq2Lvk-NX0TGA _00owUGvdEdq4DLWZOhbdEA _M4X2IGveEdq4DLWZOhbdEA _R00O_HCoEdq2Lvk-NX0TGA _SF9CSHCoEdq2Lvk-NX0TGA _SGP9LXCoEdq2Lvk-NX0TGA _SGjfIHCoEdq2Lvk-NX0TGA _SGjfNHCoEdq2Lvk-NX0TGA _SGspFXCoEdq2Lvk-NX0TGA _SGspEHCoEdq2Lvk-NX0TGA _SGP9JnCoEdq2Lvk-NX0TGA _SGjfP3CoEdq2Lvk-NX0TGA _SGjfJHCoEdq2Lvk-NX0TGA _SGGzMXCoEdq2Lvk-NX0TGA _SGspFnCoEdq2Lvk-NX0TGA _SF9COnCoEdq2Lvk-NX0TGA _SGP9THCoEdq2Lvk-NX0TGA _SF9CTnCoEdq2Lvk-NX0TGA _SGZuJnCoEdq2Lvk-NX0TGA _SGjfMXCoEdq2Lvk-NX0TGA _SGjfJXCoEdq2Lvk-NX0TGA _iY7sMGvsEdqG6fBIPwe-mw _R2dNoHCoEdq2Lvk-NX0TGA _SGjfKHCoEdq2Lvk-NX0TGA _SGZuKnCoEdq2Lvk-NX0TGA _SGjfK3CoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOkHCoEdq2Lvk-NX0TGA" source="UML::Activities::IntermediateActivities" references="_SNQkFnCoEdq2Lvk-NX0TGA _SM9CUXCoEdq2Lvk-NX0TGA _SNQkGHCoEdq2Lvk-NX0TGA _SM9CJnCoEdq2Lvk-NX0TGA _SM9CIHCoEdq2Lvk-NX0TGA _SLnlf3CoEdq2Lvk-NX0TGA _SNQkF3CoEdq2Lvk-NX0TGA _SLnlZXCoEdq2Lvk-NX0TGA _SL6gSXCoEdq2Lvk-NX0TGA _SNZuAnCoEdq2Lvk-NX0TGA _SNGzIHCoEdq2Lvk-NX0TGA _SLnla3CoEdq2Lvk-NX0TGA _SLwvQHCoEdq2Lvk-NX0TGA _SM9CLnCoEdq2Lvk-NX0TGA _SNQkEXCoEdq2Lvk-NX0TGA _SM9CZnCoEdq2Lvk-NX0TGA _SNZuAHCoEdq2Lvk-NX0TGA _SL6gVXCoEdq2Lvk-NX0TGA _SNGzEHCoEdq2Lvk-NX0TGA _SMz4L3CoEdq2Lvk-NX0TGA _SM9CPnCoEdq2Lvk-NX0TGA _SM9CNHCoEdq2Lvk-NX0TGA _SLwvaXCoEdq2Lvk-NX0TGA _SM9CQnCoEdq2Lvk-NX0TGA _SLnlXHCoEdq2Lvk-NX0TGA _SNGzHnCoEdq2Lvk-NX0TGA _SLnlUHCoEdq2Lvk-NX0TGA _SNGzF3CoEdq2Lvk-NX0TGA _SM9CI3CoEdq2Lvk-NX0TGA _SM9CWnCoEdq2Lvk-NX0TGA _SLwvUnCoEdq2Lvk-NX0TGA _SM9CKnCoEdq2Lvk-NX0TGA _SMz4O3CoEdq2Lvk-NX0TGA _SNQkEHCoEdq2Lvk-NX0TGA _SLnlYnCoEdq2Lvk-NX0TGA _SMz4OHCoEdq2Lvk-NX0TGA _SNQkG3CoEdq2Lvk-NX0TGA _SLwvQXCoEdq2Lvk-NX0TGA _SNGzInCoEdq2Lvk-NX0TGA _SLnliHCoEdq2Lvk-NX0TGA _SM9CS3CoEdq2Lvk-NX0TGA _SMz4InCoEdq2Lvk-NX0TGA _SM9COnCoEdq2Lvk-NX0TGA _SNQkFHCoEdq2Lvk-NX0TGA _SM9CEHCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOkXCoEdq2Lvk-NX0TGA" source="UML::CommonBehaviors::BasicBehaviors" references="_SB7d0XCoEdq2Lvk-NX0TGA _SCFO13CoEdq2Lvk-NX0TGA _SB7eAHCoEdq2Lvk-NX0TGA _SB7d_HCoEdq2Lvk-NX0TGA _SB7eCXCoEdq2Lvk-NX0TGA _SByT63CoEdq2Lvk-NX0TGA _SBoi5HCoEdq2Lvk-NX0TGA _SB7d2HCoEdq2Lvk-NX0TGA _SByT4HCoEdq2Lvk-NX0TGA _SCFO1XCoEdq2Lvk-NX0TGA _SBoi6HCoEdq2Lvk-NX0TGA _SB7d93CoEdq2Lvk-NX0TGA _SB7d23CoEdq2Lvk-NX0TGA _SB7d8nCoEdq2Lvk-NX0TGA _TUPtYGveEdq4DLWZOhbdEA _SB7d4XCoEdq2Lvk-NX0TGA _SCFO0HCoEdq2Lvk-NX0TGA _SCFO1nCoEdq2Lvk-NX0TGA _R00O8nCoEdq2Lvk-NX0TGA _SCFO0nCoEdq2Lvk-NX0TGA _SByT8XCoEdq2Lvk-NX0TGA _SBoi4XCoEdq2Lvk-NX0TGA _SBoi8nCoEdq2Lvk-NX0TGA _ChRfcGveEdq4DLWZOhbdEA _SB7d-nCoEdq2Lvk-NX0TGA _SB7d9XCoEdq2Lvk-NX0TGA _SBoi_XCoEdq2Lvk-NX0TGA _SB7d8HCoEdq2Lvk-NX0TGA _SB7eBXCoEdq2Lvk-NX0TGA _SB7eBnCoEdq2Lvk-NX0TGA _SBoi7HCoEdq2Lvk-NX0TGA _SB7d53CoEdq2Lvk-NX0TGA _SCFO2HCoEdq2Lvk-NX0TGA _SB7d1HCoEdq2Lvk-NX0TGA _iY7sMGvsEdqG6fBIPwe-mw _SB7eCnCoEdq2Lvk-NX0TGA _SB7eAnCoEdq2Lvk-NX0TGA _SB7d_3CoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOknCoEdq2Lvk-NX0TGA" source="UML::Activities::StructuredActivities" references="_SO5i4nCoEdq2Lvk-NX0TGA _SOmA0HCoEdq2Lvk-NX0TGA _SLnlf3CoEdq2Lvk-NX0TGA _SOc3QnCoEdq2Lvk-NX0TGA _SOvx1HCoEdq2Lvk-NX0TGA _SLnlZXCoEdq2Lvk-NX0TGA _SOvx2HCoEdq2Lvk-NX0TGA _SOc26nCoEdq2Lvk-NX0TGA _SOmA8HCoEdq2Lvk-NX0TGA _SOvx3HCoEdq2Lvk-NX0TGA _SO5i5XCoEdq2Lvk-NX0TGA _SLnla3CoEdq2Lvk-NX0TGA _SOc3InCoEdq2Lvk-NX0TGA _SLwvQHCoEdq2Lvk-NX0TGA _SOc3TnCoEdq2Lvk-NX0TGA _SOc3DXCoEdq2Lvk-NX0TGA _SO5i2nCoEdq2Lvk-NX0TGA _SJYJ8XCoEdq2Lvk-NX0TGA _SOc3HHCoEdq2Lvk-NX0TGA _SO5i1HCoEdq2Lvk-NX0TGA _SO5i8HCoEdq2Lvk-NX0TGA _SOc3E3CoEdq2Lvk-NX0TGA _SOmA83CoEdq2Lvk-NX0TGA _SOc3LHCoEdq2Lvk-NX0TGA _SOc3GXCoEdq2Lvk-NX0TGA _SO5i0HCoEdq2Lvk-NX0TGA _SOc3AXCoEdq2Lvk-NX0TGA _SOvx2XCoEdq2Lvk-NX0TGA _SOvx4HCoEdq2Lvk-NX0TGA _SOc243CoEdq2Lvk-NX0TGA _SOc3SnCoEdq2Lvk-NX0TGA _SLnlXHCoEdq2Lvk-NX0TGA _SO5i3nCoEdq2Lvk-NX0TGA _SOc3B3CoEdq2Lvk-NX0TGA _SLnlgnCoEdq2Lvk-NX0TGA _SOc3RnCoEdq2Lvk-NX0TGA _SO5i3XCoEdq2Lvk-NX0TGA _SLnlVnCoEdq2Lvk-NX0TGA _SLnlUHCoEdq2Lvk-NX0TGA _SOmA43CoEdq2Lvk-NX0TGA _SOmA7XCoEdq2Lvk-NX0TGA _SOc3FnCoEdq2Lvk-NX0TGA _SO5i2HCoEdq2Lvk-NX0TGA _SOc29nCoEdq2Lvk-NX0TGA _SO5i4XCoEdq2Lvk-NX0TGA _SO5i6XCoEdq2Lvk-NX0TGA _SOvx1nCoEdq2Lvk-NX0TGA _SOc3JXCoEdq2Lvk-NX0TGA _SLnlYnCoEdq2Lvk-NX0TGA _SOc3MHCoEdq2Lvk-NX0TGA _SOc28HCoEdq2Lvk-NX0TGA _SLwvQXCoEdq2Lvk-NX0TGA _SO5i1XCoEdq2Lvk-NX0TGA _SO5i0XCoEdq2Lvk-NX0TGA _SO5i7nCoEdq2Lvk-NX0TGA _SLnliHCoEdq2Lvk-NX0TGA _SOmA1nCoEdq2Lvk-NX0TGA _SOc3PnCoEdq2Lvk-NX0TGA _SOc3KHCoEdq2Lvk-NX0TGA _SOvx3XCoEdq2Lvk-NX0TGA _SO5i7HCoEdq2Lvk-NX0TGA _SOc3NHCoEdq2Lvk-NX0TGA _SLnljnCoEdq2Lvk-NX0TGA _SO5i5nCoEdq2Lvk-NX0TGA _SOc2_HCoEdq2Lvk-NX0TGA _SOc3OHCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOk3CoEdq2Lvk-NX0TGA" source="UML::StateMachines::BehaviorStateMachines" references="_SQ-mw3CoEdq2Lvk-NX0TGA _SRSIhHCoEdq2Lvk-NX0TGA _SQrr_3CoEdq2Lvk-NX0TGA _SRlDaHCoEdq2Lvk-NX0TGA _SQrrqnCoEdq2Lvk-NX0TGA _SRbSZXCoEdq2Lvk-NX0TGA _SQh6vHCoEdq2Lvk-NX0TGA _SQrrlnCoEdq2Lvk-NX0TGA _SQ1cqHCoEdq2Lvk-NX0TGA _SQrsMnCoEdq2Lvk-NX0TGA _SQrrwnCoEdq2Lvk-NX0TGA _SRSIcHCoEdq2Lvk-NX0TGA _SQ-mlnCoEdq2Lvk-NX0TGA _SQ-mqHCoEdq2Lvk-NX0TGA _SQrsRHCoEdq2Lvk-NX0TGA _SRlDZXCoEdq2Lvk-NX0TGA _SQh6yHCoEdq2Lvk-NX0TGA _SRbSbHCoEdq2Lvk-NX0TGA _SRbSb3CoEdq2Lvk-NX0TGA _SRlDZ3CoEdq2Lvk-NX0TGA _SQrsPnCoEdq2Lvk-NX0TGA _SQrryHCoEdq2Lvk-NX0TGA _SRbScXCoEdq2Lvk-NX0TGA _SQrsOHCoEdq2Lvk-NX0TGA _SRSIdXCoEdq2Lvk-NX0TGA _SRIXdnCoEdq2Lvk-NX0TGA _SRSIhnCoEdq2Lvk-NX0TGA _SRbSanCoEdq2Lvk-NX0TGA _SRbSdnCoEdq2Lvk-NX0TGA _SRIXenCoEdq2Lvk-NX0TGA _SQh61XCoEdq2Lvk-NX0TGA _SQh6uHCoEdq2Lvk-NX0TGA _SGP9OHCoEdq2Lvk-NX0TGA _SQrr7nCoEdq2Lvk-NX0TGA _SRlDa3CoEdq2Lvk-NX0TGA _SQh63HCoEdq2Lvk-NX0TGA _SRSIdnCoEdq2Lvk-NX0TGA _SQrrtnCoEdq2Lvk-NX0TGA _SRSIcnCoEdq2Lvk-NX0TGA _SQrr83CoEdq2Lvk-NX0TGA _SQrsJnCoEdq2Lvk-NX0TGA _SRbSZ3CoEdq2Lvk-NX0TGA _SQrsaXCoEdq2Lvk-NX0TGA _SQ-muHCoEdq2Lvk-NX0TGA _SRlDYHCoEdq2Lvk-NX0TGA _SQh6wHCoEdq2Lvk-NX0TGA _SRbSe3CoEdq2Lvk-NX0TGA _SQrr1HCoEdq2Lvk-NX0TGA _SQrrznCoEdq2Lvk-NX0TGA _SRSIfXCoEdq2Lvk-NX0TGA _SQrsmXCoEdq2Lvk-NX0TGA _SRSIf3CoEdq2Lvk-NX0TGA _SQ-myXCoEdq2Lvk-NX0TGA _SRbSgHCoEdq2Lvk-NX0TGA _SQrsT3CoEdq2Lvk-NX0TGA _SRIXfXCoEdq2Lvk-NX0TGA _SQrsKnCoEdq2Lvk-NX0TGA _SQ-monCoEdq2Lvk-NX0TGA _SQrr6XCoEdq2Lvk-NX0TGA _SQrr33CoEdq2Lvk-NX0TGA _SQrrkHCoEdq2Lvk-NX0TGA _SQrsV3CoEdq2Lvk-NX0TGA _SQrsZXCoEdq2Lvk-NX0TGA _SRIXf3CoEdq2Lvk-NX0TGA _SQ-mnHCoEdq2Lvk-NX0TGA _SRbSYnCoEdq2Lvk-NX0TGA _SQrsIHCoEdq2Lvk-NX0TGA _SQrr-XCoEdq2Lvk-NX0TGA _SQrsSnCoEdq2Lvk-NX0TGA _SRIXdHCoEdq2Lvk-NX0TGA _SRSIgXCoEdq2Lvk-NX0TGA _SQ1cgHCoEdq2Lvk-NX0TGA _SRIXgXCoEdq2Lvk-NX0TGA _SQ-mrnCoEdq2Lvk-NX0TGA _SRbSdHCoEdq2Lvk-NX0TGA _SQrrk3CoEdq2Lvk-NX0TGA _SQrsBHCoEdq2Lvk-NX0TGA _SQrsXHCoEdq2Lvk-NX0TGA _SQrsHXCoEdq2Lvk-NX0TGA _SQ-mvXCoEdq2Lvk-NX0TGA _SQrsLnCoEdq2Lvk-NX0TGA _SQ-mhnCoEdq2Lvk-NX0TGA _SQh6snCoEdq2Lvk-NX0TGA _SQrrnHCoEdq2Lvk-NX0TGA _SRIXcHCoEdq2Lvk-NX0TGA _SQrskHCoEdq2Lvk-NX0TGA _SRbShXCoEdq2Lvk-NX0TGA _SQh6z3CoEdq2Lvk-NX0TGA _SRSIeXCoEdq2Lvk-NX0TGA _SQh6nXCoEdq2Lvk-NX0TGA _SRbSYHCoEdq2Lvk-NX0TGA _SRIXeXCoEdq2Lvk-NX0TGA _SQrsk3CoEdq2Lvk-NX0TGA _SQ-mznCoEdq2Lvk-NX0TGA _SRlDbHCoEdq2Lvk-NX0TGA _SQ1conCoEdq2Lvk-NX0TGA _SQrr2nCoEdq2Lvk-NX0TGA _SQrscnCoEdq2Lvk-NX0TGA _SRlDYnCoEdq2Lvk-NX0TGA _SQ1cnnCoEdq2Lvk-NX0TGA _SQrrvHCoEdq2Lvk-NX0TGA _SQrsX3CoEdq2Lvk-NX0TGA _SRIXdXCoEdq2Lvk-NX0TGA _SQrsbXCoEdq2Lvk-NX0TGA _SQ1clXCoEdq2Lvk-NX0TGA _SQ-msnCoEdq2Lvk-NX0TGA _SRbSeXCoEdq2Lvk-NX0TGA _SQrrpnCoEdq2Lvk-NX0TGA _SQrroHCoEdq2Lvk-NX0TGA _SQ-mcHCoEdq2Lvk-NX0TGA _SQrrmXCoEdq2Lvk-NX0TGA _SRSIe3CoEdq2Lvk-NX0TGA _SQrrsHCoEdq2Lvk-NX0TGA _SRbSfnCoEdq2Lvk-NX0TGA _SRIXcnCoEdq2Lvk-NX0TGA _SQh6rHCoEdq2Lvk-NX0TGA _SQrr5HCoEdq2Lvk-NX0TGA _SRbSg3CoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOlHCoEdq2Lvk-NX0TGA" source="UML::CompositeStructures::Ports" references="_ZAuvEGveEdq4DLWZOhbdEA _SG_kAHCoEdq2Lvk-NX0TGA _SG2aEHCoEdq2Lvk-NX0TGA _SG2aFnCoEdq2Lvk-NX0TGA _SGspK3CoEdq2Lvk-NX0TGA _SG_kE3CoEdq2Lvk-NX0TGA _SG_kCnCoEdq2Lvk-NX0TGA _SGspMXCoEdq2Lvk-NX0TGA _SG2aGXCoEdq2Lvk-NX0TGA _SG_kBnCoEdq2Lvk-NX0TGA _SG_kFHCoEdq2Lvk-NX0TGA _aOgw0GveEdq4DLWZOhbdEA _SG_kEHCoEdq2Lvk-NX0TGA _SGspKHCoEdq2Lvk-NX0TGA _SG_kB3CoEdq2Lvk-NX0TGA _SG_kA3CoEdq2Lvk-NX0TGA _SG2aKHCoEdq2Lvk-NX0TGA _SG_kD3CoEdq2Lvk-NX0TGA _SGspJXCoEdq2Lvk-NX0TGA _SG_kDHCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOlXCoEdq2Lvk-NX0TGA" source="UML::Classes::PowerTypes" references="_SJ-mmXCoEdq2Lvk-NX0TGA _SJ01p3CoEdq2Lvk-NX0TGA _SJ01snCoEdq2Lvk-NX0TGA _SJ01pHCoEdq2Lvk-NX0TGA _6UV2QGwJEdq7X4sGURiZYA _SJ01mHCoEdq2Lvk-NX0TGA _SJ01q3CoEdq2Lvk-NX0TGA _SJ01oXCoEdq2Lvk-NX0TGA _C7AF4GwREdq14q0ETb1t3g _SJ-mlHCoEdq2Lvk-NX0TGA _SJ-mmHCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdWOlnCoEdq2Lvk-NX0TGA" source="UML::Activities::CompleteActivities" references="_SNjfF3CoEdq2Lvk-NX0TGA _SLwveXCoEdq2Lvk-NX0TGA _SOTF7XCoEdq2Lvk-NX0TGA _SN2aF3CoEdq2Lvk-NX0TGA _SLnlf3CoEdq2Lvk-NX0TGA _SOJU-HCoEdq2Lvk-NX0TGA _SOJU83CoEdq2Lvk-NX0TGA _SNZuCnCoEdq2Lvk-NX0TGA _SOTF7nCoEdq2Lvk-NX0TGA _SLnlZXCoEdq2Lvk-NX0TGA _SNjfJ3CoEdq2Lvk-NX0TGA _SNjfGnCoEdq2Lvk-NX0TGA _SOTF83CoEdq2Lvk-NX0TGA _SOTF43CoEdq2Lvk-NX0TGA _SN2aEHCoEdq2Lvk-NX0TGA _SNZuJXCoEdq2Lvk-NX0TGA _SOJU5XCoEdq2Lvk-NX0TGA _SN2aC3CoEdq2Lvk-NX0TGA _SNjfPXCoEdq2Lvk-NX0TGA _SNjfAHCoEdq2Lvk-NX0TGA _SLwvQHCoEdq2Lvk-NX0TGA _SOTF5HCoEdq2Lvk-NX0TGA _SJYJ8XCoEdq2Lvk-NX0TGA _KyaPMGveEdq4DLWZOhbdEA _SOTF4XCoEdq2Lvk-NX0TGA _SNZuDXCoEdq2Lvk-NX0TGA _SOJU53CoEdq2Lvk-NX0TGA _TUPtYGveEdq4DLWZOhbdEA _SN2Z-3CoEdq2Lvk-NX0TGA _SNtQEHCoEdq2Lvk-NX0TGA _SN2Z9XCoEdq2Lvk-NX0TGA _SNZuK3CoEdq2Lvk-NX0TGA _SNjfDHCoEdq2Lvk-NX0TGA _SOTF63CoEdq2Lvk-NX0TGA _SLwvRXCoEdq2Lvk-NX0TGA _SOTF9XCoEdq2Lvk-NX0TGA _SOc24nCoEdq2Lvk-NX0TGA _SOJU9nCoEdq2Lvk-NX0TGA _SNjfBnCoEdq2Lvk-NX0TGA _SOJU6nCoEdq2Lvk-NX0TGA _SNjfQXCoEdq2Lvk-NX0TGA _SNjfK3CoEdq2Lvk-NX0TGA _SNtQAHCoEdq2Lvk-NX0TGA _R00O8nCoEdq2Lvk-NX0TGA _SOJU9XCoEdq2Lvk-NX0TGA _SOJU8HCoEdq2Lvk-NX0TGA _SNjfHXCoEdq2Lvk-NX0TGA _SOTF4HCoEdq2Lvk-NX0TGA _SLnlUHCoEdq2Lvk-NX0TGA _SNGzF3CoEdq2Lvk-NX0TGA _SLwvUnCoEdq2Lvk-NX0TGA _SOJU63CoEdq2Lvk-NX0TGA _SJO_zXCoEdq2Lvk-NX0TGA _SNjfMXCoEdq2Lvk-NX0TGA _SN2aAXCoEdq2Lvk-NX0TGA _SNjfI3CoEdq2Lvk-NX0TGA _SNZuL3CoEdq2Lvk-NX0TGA _SOAK8XCoEdq2Lvk-NX0TGA _SOJU7nCoEdq2Lvk-NX0TGA _SOJU4nCoEdq2Lvk-NX0TGA _SLnlYnCoEdq2Lvk-NX0TGA _SOJU5HCoEdq2Lvk-NX0TGA _SOTF8HCoEdq2Lvk-NX0TGA _SN2aB3CoEdq2Lvk-NX0TGA _SNtQFnCoEdq2Lvk-NX0TGA _SOTF53CoEdq2Lvk-NX0TGA _SOTF6HCoEdq2Lvk-NX0TGA _SNZuKHCoEdq2Lvk-NX0TGA _SLnliHCoEdq2Lvk-NX0TGA _SOJU73CoEdq2Lvk-NX0TGA _SOAK-nCoEdq2Lvk-NX0TGA _SOc24HCoEdq2Lvk-NX0TGA _SNZuE3CoEdq2Lvk-NX0TGA _SNtQE3CoEdq2Lvk-NX0TGA _SN2Z8HCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_gHCoEdq2Lvk-NX0TGA" source="UML::Classes::Interfaces" references="_SDRhp3CoEdq2Lvk-NX0TGA _SDaroXCoEdq2Lvk-NX0TGA _8Ugn8GvtEdqG6fBIPwe-mw _SDRhpHCoEdq2Lvk-NX0TGA _SDHwtXCoEdq2Lvk-NX0TGA _SDHwu3CoEdq2Lvk-NX0TGA _SDarl3CoEdq2Lvk-NX0TGA _SDkclnCoEdq2Lvk-NX0TGA _SDkck3CoEdq2Lvk-NX0TGA _SDaro3CoEdq2Lvk-NX0TGA _SDarmnCoEdq2Lvk-NX0TGA _SDRhs3CoEdq2Lvk-NX0TGA _SDRhq3CoEdq2Lvk-NX0TGA _SDarpnCoEdq2Lvk-NX0TGA _M4X2IGveEdq4DLWZOhbdEA _SDkcmHCoEdq2Lvk-NX0TGA _SDarkXCoEdq2Lvk-NX0TGA _SDarnXCoEdq2Lvk-NX0TGA _iY7sMGvsEdqG6fBIPwe-mw _SDkckHCoEdq2Lvk-NX0TGA _SDRhoHCoEdq2Lvk-NX0TGA _SDHwwXCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_gXCoEdq2Lvk-NX0TGA" source="UML::Actions::BasicActions" references="_SJh6tnCoEdq2Lvk-NX0TGA _SJh6sXCoEdq2Lvk-NX0TGA _SJh6p3CoEdq2Lvk-NX0TGA _SJh6tHCoEdq2Lvk-NX0TGA _SJh6onCoEdq2Lvk-NX0TGA _SJh6pXCoEdq2Lvk-NX0TGA _SJO_5XCoEdq2Lvk-NX0TGA _SJYJ23CoEdq2Lvk-NX0TGA _SJh6v3CoEdq2Lvk-NX0TGA _SJYJ7XCoEdq2Lvk-NX0TGA _SJYJxHCoEdq2Lvk-NX0TGA _SJh6s3CoEdq2Lvk-NX0TGA _SJO_3HCoEdq2Lvk-NX0TGA _SJO_v3CoEdq2Lvk-NX0TGA _SJh6uXCoEdq2Lvk-NX0TGA _SJO_yXCoEdq2Lvk-NX0TGA _SJYJ8XCoEdq2Lvk-NX0TGA _SJO_0HCoEdq2Lvk-NX0TGA _SJh6oHCoEdq2Lvk-NX0TGA _SJO_xXCoEdq2Lvk-NX0TGA _SJO_4nCoEdq2Lvk-NX0TGA _SJYJ4XCoEdq2Lvk-NX0TGA _SJrrpXCoEdq2Lvk-NX0TGA _SJYJ13CoEdq2Lvk-NX0TGA _SJO_tnCoEdq2Lvk-NX0TGA _SJO_1nCoEdq2Lvk-NX0TGA _SJh6qnCoEdq2Lvk-NX0TGA _SJh6vnCoEdq2Lvk-NX0TGA _SJYJr3CoEdq2Lvk-NX0TGA _SJYJoHCoEdq2Lvk-NX0TGA _SJrrpHCoEdq2Lvk-NX0TGA _SJYJrHCoEdq2Lvk-NX0TGA _SJYJtXCoEdq2Lvk-NX0TGA _SJYKC3CoEdq2Lvk-NX0TGA _SJO_zXCoEdq2Lvk-NX0TGA _SJh6rnCoEdq2Lvk-NX0TGA _SJrro3CoEdq2Lvk-NX0TGA _SJh6q3CoEdq2Lvk-NX0TGA _SJYKCnCoEdq2Lvk-NX0TGA _SJrrqXCoEdq2Lvk-NX0TGA _SJYKAHCoEdq2Lvk-NX0TGA _SJYKB3CoEdq2Lvk-NX0TGA _SJYJyHCoEdq2Lvk-NX0TGA _SJYJ9HCoEdq2Lvk-NX0TGA _SJrrpnCoEdq2Lvk-NX0TGA _SJrrqHCoEdq2Lvk-NX0TGA _SJrrq3CoEdq2Lvk-NX0TGA _SJYJvnCoEdq2Lvk-NX0TGA _SJh6sHCoEdq2Lvk-NX0TGA _SJYJ-nCoEdq2Lvk-NX0TGA _SJO_33CoEdq2Lvk-NX0TGA _SJrroHCoEdq2Lvk-NX0TGA _SJYKBnCoEdq2Lvk-NX0TGA _SJO_uXCoEdq2Lvk-NX0TGA _SJh6u3CoEdq2Lvk-NX0TGA _SJrronCoEdq2Lvk-NX0TGA _SJrroXCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_gnCoEdq2Lvk-NX0TGA" source="UML::CompositeStructures::InvocationActions" references="_SJ01lHCoEdq2Lvk-NX0TGA _SJ01kHCoEdq2Lvk-NX0TGA _SJ01kXCoEdq2Lvk-NX0TGA _SJO_4nCoEdq2Lvk-NX0TGA _SJrrtXCoEdq2Lvk-NX0TGA _SJrrsHCoEdq2Lvk-NX0TGA _SF9CTnCoEdq2Lvk-NX0TGA _SJ01lXCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_g3CoEdq2Lvk-NX0TGA" source="UML::Deployments::Artifacts" references="_SFzRPnCoEdq2Lvk-NX0TGA _SFqHZXCoEdq2Lvk-NX0TGA _SFzROXCoEdq2Lvk-NX0TGA _SFzRQnCoEdq2Lvk-NX0TGA _SFzRT3CoEdq2Lvk-NX0TGA _SFzRMHCoEdq2Lvk-NX0TGA _SFqHYXCoEdq2Lvk-NX0TGA _SFzRSXCoEdq2Lvk-NX0TGA _SFqHd3CoEdq2Lvk-NX0TGA _SFzRPHCoEdq2Lvk-NX0TGA _SFzRTHCoEdq2Lvk-NX0TGA _SFzRRXCoEdq2Lvk-NX0TGA _SFzRN3CoEdq2Lvk-NX0TGA _SFqHcXCoEdq2Lvk-NX0TGA _SFzRM3CoEdq2Lvk-NX0TGA _SFqHa3CoEdq2Lvk-NX0TGA _SFqHfXCoEdq2Lvk-NX0TGA _SFzRP3CoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_hHCoEdq2Lvk-NX0TGA" source="UML::Activities::ExtraStructuredActivities" references="_SPpJyXCoEdq2Lvk-NX0TGA _SPyToHCoEdq2Lvk-NX0TGA _SPpJz3CoEdq2Lvk-NX0TGA _SPyTpXCoEdq2Lvk-NX0TGA _SPpJ8HCoEdq2Lvk-NX0TGA _SPfYvnCoEdq2Lvk-NX0TGA _SPpJtnCoEdq2Lvk-NX0TGA _SPpJwXCoEdq2Lvk-NX0TGA _SPfYunCoEdq2Lvk-NX0TGA _SOmA7XCoEdq2Lvk-NX0TGA _SPyTonCoEdq2Lvk-NX0TGA _SPpJuXCoEdq2Lvk-NX0TGA _SPpJ5HCoEdq2Lvk-NX0TGA _SPyToXCoEdq2Lvk-NX0TGA _SPpJ8nCoEdq2Lvk-NX0TGA _SPpJ7HCoEdq2Lvk-NX0TGA _SPyTo3CoEdq2Lvk-NX0TGA _SPpJvXCoEdq2Lvk-NX0TGA _SPfYt3CoEdq2Lvk-NX0TGA _SPpJ6HCoEdq2Lvk-NX0TGA _SPpJ8XCoEdq2Lvk-NX0TGA _SPpJsHCoEdq2Lvk-NX0TGA _SPyTpHCoEdq2Lvk-NX0TGA _SPpJ3nCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_hXCoEdq2Lvk-NX0TGA" source="UML::UseCases" references="_SCFO_XCoEdq2Lvk-NX0TGA _SCFPAXCoEdq2Lvk-NX0TGA _SCOY03CoEdq2Lvk-NX0TGA _SCOYzXCoEdq2Lvk-NX0TGA _SCFPC3CoEdq2Lvk-NX0TGA _SCYJ2HCoEdq2Lvk-NX0TGA _SCFPB3CoEdq2Lvk-NX0TGA _SCOYxnCoEdq2Lvk-NX0TGA _SCYJw3CoEdq2Lvk-NX0TGA _6UV2QGwJEdq7X4sGURiZYA _SCFO7XCoEdq2Lvk-NX0TGA _SCFO4nCoEdq2Lvk-NX0TGA _SCFPJnCoEdq2Lvk-NX0TGA _SCYJ13CoEdq2Lvk-NX0TGA _SCYJ3XCoEdq2Lvk-NX0TGA _SCFPMHCoEdq2Lvk-NX0TGA _SCYJwHCoEdq2Lvk-NX0TGA _SCFO83CoEdq2Lvk-NX0TGA _SCYJyHCoEdq2Lvk-NX0TGA _SCYJxXCoEdq2Lvk-NX0TGA _SCFPLHCoEdq2Lvk-NX0TGA _SCYJ1HCoEdq2Lvk-NX0TGA _SCYJynCoEdq2Lvk-NX0TGA _SCFO6XCoEdq2Lvk-NX0TGA _SCYJ23CoEdq2Lvk-NX0TGA _SCFPIHCoEdq2Lvk-NX0TGA _SCFO-XCoEdq2Lvk-NX0TGA _SCOYwHCoEdq2Lvk-NX0TGA _SCYJ4HCoEdq2Lvk-NX0TGA _SCYJzXCoEdq2Lvk-NX0TGA _SCYJ0nCoEdq2Lvk-NX0TGA _SCFO2XCoEdq2Lvk-NX0TGA _SCYJ0HCoEdq2Lvk-NX0TGA _SCFPGnCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_hnCoEdq2Lvk-NX0TGA" source="UML::Components::BasicComponents" references="_SPyTrXCoEdq2Lvk-NX0TGA _SP8EpnCoEdq2Lvk-NX0TGA _SP8EqHCoEdq2Lvk-NX0TGA _SPyTpnCoEdq2Lvk-NX0TGA _SP8Ep3CoEdq2Lvk-NX0TGA _SDuNkHCoEdq2Lvk-NX0TGA _SP8Er3CoEdq2Lvk-NX0TGA _SPyTuXCoEdq2Lvk-NX0TGA _SP8EsXCoEdq2Lvk-NX0TGA _SPyT_HCoEdq2Lvk-NX0TGA _SP8EoHCoEdq2Lvk-NX0TGA _SPyTv3CoEdq2Lvk-NX0TGA _SPyTz3CoEdq2Lvk-NX0TGA _SP8EsHCoEdq2Lvk-NX0TGA _SP8EqXCoEdq2Lvk-NX0TGA _SPyT33CoEdq2Lvk-NX0TGA _SPyTqnCoEdq2Lvk-NX0TGA _SPyT6HCoEdq2Lvk-NX0TGA _SPyUAnCoEdq2Lvk-NX0TGA _SPyTx3CoEdq2Lvk-NX0TGA _SPyT4nCoEdq2Lvk-NX0TGA _SPyT13CoEdq2Lvk-NX0TGA _SPyTs3CoEdq2Lvk-NX0TGA _SP8ErXCoEdq2Lvk-NX0TGA _SP8EqnCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_h3CoEdq2Lvk-NX0TGA" source="UML::AuxiliaryConstructs::Models" references="_SKRhgnCoEdq2Lvk-NX0TGA _NVhqMGv0Edq7X4sGURiZYA"/>
    <eAnnotations xmi:id="_Sdf_iHCoEdq2Lvk-NX0TGA" source="UML::Actions::StructuredActions" references="_SKbSgHCoEdq2Lvk-NX0TGA _SKRhjnCoEdq2Lvk-NX0TGA _SKbSiXCoEdq2Lvk-NX0TGA _SKkccHCoEdq2Lvk-NX0TGA _SKbSxHCoEdq2Lvk-NX0TGA _SKkcd3CoEdq2Lvk-NX0TGA _SKRhoXCoEdq2Lvk-NX0TGA _SKbSuXCoEdq2Lvk-NX0TGA _SKRhknCoEdq2Lvk-NX0TGA _SKbSlXCoEdq2Lvk-NX0TGA _SKbSx3CoEdq2Lvk-NX0TGA _SKRhsHCoEdq2Lvk-NX0TGA _SKbSvXCoEdq2Lvk-NX0TGA _SKRhm3CoEdq2Lvk-NX0TGA _SKbSoXCoEdq2Lvk-NX0TGA _SKbSv3CoEdq2Lvk-NX0TGA _SKRhqnCoEdq2Lvk-NX0TGA _SKbSp3CoEdq2Lvk-NX0TGA _SKkccnCoEdq2Lvk-NX0TGA _SKbSunCoEdq2Lvk-NX0TGA _SKbSyXCoEdq2Lvk-NX0TGA _SKbSmHCoEdq2Lvk-NX0TGA _SKRhiHCoEdq2Lvk-NX0TGA _SKbShnCoEdq2Lvk-NX0TGA _SKbSnnCoEdq2Lvk-NX0TGA _SKkcdXCoEdq2Lvk-NX0TGA _SKbSs3CoEdq2Lvk-NX0TGA _SKkcenCoEdq2Lvk-NX0TGA _SKbSj3CoEdq2Lvk-NX0TGA _SKkcfHCoEdq2Lvk-NX0TGA _SKbSwnCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_iXCoEdq2Lvk-NX0TGA" source="UML::Activities::CompleteStructuredActivities" references="_SPMdxXCoEdq2Lvk-NX0TGA _SPVnxXCoEdq2Lvk-NX0TGA _SPMdyHCoEdq2Lvk-NX0TGA _SPMd9XCoEdq2Lvk-NX0TGA _SOc3InCoEdq2Lvk-NX0TGA _SPfYsHCoEdq2Lvk-NX0TGA _SPVnwHCoEdq2Lvk-NX0TGA _SL6gVXCoEdq2Lvk-NX0TGA _SOc3E3CoEdq2Lvk-NX0TGA _SPMd13CoEdq2Lvk-NX0TGA _SPVntHCoEdq2Lvk-NX0TGA _SLwvaXCoEdq2Lvk-NX0TGA _SPMd5XCoEdq2Lvk-NX0TGA _SPMd7nCoEdq2Lvk-NX0TGA _SPVnsnCoEdq2Lvk-NX0TGA _SPVnwXCoEdq2Lvk-NX0TGA _SPfYsnCoEdq2Lvk-NX0TGA _SLwvUnCoEdq2Lvk-NX0TGA _SPMd4XCoEdq2Lvk-NX0TGA _SPVnvXCoEdq2Lvk-NX0TGA _SPVnxHCoEdq2Lvk-NX0TGA _SPMd3XCoEdq2Lvk-NX0TGA _SLnlYnCoEdq2Lvk-NX0TGA _SPVnvHCoEdq2Lvk-NX0TGA _SPfYtXCoEdq2Lvk-NX0TGA _SPVnuXCoEdq2Lvk-NX0TGA _SMz4InCoEdq2Lvk-NX0TGA _SPCsw3CoEdq2Lvk-NX0TGA _SPVnt3CoEdq2Lvk-NX0TGA _SOc2_HCoEdq2Lvk-NX0TGA _SOc3OHCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_inCoEdq2Lvk-NX0TGA" source="UML::Classes::Dependencies" references="_SCh62nCoEdq2Lvk-NX0TGA _SCYJ4XCoEdq2Lvk-NX0TGA _jKxnwGwLEdq7X4sGURiZYA _SCh63nCoEdq2Lvk-NX0TGA _6UV2QGwJEdq7X4sGURiZYA _csVgUGvtEdqG6fBIPwe-mw _SDHwpXCoEdq2Lvk-NX0TGA _SCh61HCoEdq2Lvk-NX0TGA _SDHwoHCoEdq2Lvk-NX0TGA _rEDGkGwKEdq7X4sGURiZYA _SCh6zHCoEdq2Lvk-NX0TGA _ZiwkoGwLEdq7X4sGURiZYA _SDHwonCoEdq2Lvk-NX0TGA _SDHwrnCoEdq2Lvk-NX0TGA _SDHwqHCoEdq2Lvk-NX0TGA _SCh60HCoEdq2Lvk-NX0TGA _SCh6wHCoEdq2Lvk-NX0TGA _R2wIn3CoEdq2Lvk-NX0TGA _R13XzHCoEdq2Lvk-NX0TGA _SCh6w3CoEdq2Lvk-NX0TGA _SC-ms3CoEdq2Lvk-NX0TGA _SC-mtXCoEdq2Lvk-NX0TGA _SCrEsXCoEdq2Lvk-NX0TGA _SDHwqnCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA _SC01sHCoEdq2Lvk-NX0TGA _SCh613CoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_i3CoEdq2Lvk-NX0TGA" source="UML::Deployments::Nodes" references="_SQF1yHCoEdq2Lvk-NX0TGA _SQF1rHCoEdq2Lvk-NX0TGA _SQF1pXCoEdq2Lvk-NX0TGA _SQF11HCoEdq2Lvk-NX0TGA _SQYwknCoEdq2Lvk-NX0TGA _SQF1qHCoEdq2Lvk-NX0TGA _SQO_k3CoEdq2Lvk-NX0TGA _SQYwnHCoEdq2Lvk-NX0TGA _SFqHYXCoEdq2Lvk-NX0TGA _SQF1znCoEdq2Lvk-NX0TGA _SQF1xXCoEdq2Lvk-NX0TGA _SQYwlHCoEdq2Lvk-NX0TGA _SQF1uXCoEdq2Lvk-NX0TGA _SQYwl3CoEdq2Lvk-NX0TGA _SQF1v3CoEdq2Lvk-NX0TGA _SQF1snCoEdq2Lvk-NX0TGA _SQYwnXCoEdq2Lvk-NX0TGA _SQO_kHCoEdq2Lvk-NX0TGA _SQF1wnCoEdq2Lvk-NX0TGA _SQYwmnCoEdq2Lvk-NX0TGA _Jp_1oGveEdq4DLWZOhbdEA _SQYwnnCoEdq2Lvk-NX0TGA _R7OY5nCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdf_jHCoEdq2Lvk-NX0TGA" source="UML::Activities::FundamentalActivities" references="_SLnlf3CoEdq2Lvk-NX0TGA _SLnlZXCoEdq2Lvk-NX0TGA _SLnla3CoEdq2Lvk-NX0TGA _SLwvQHCoEdq2Lvk-NX0TGA _SLwvQ3CoEdq2Lvk-NX0TGA _SJYJ8XCoEdq2Lvk-NX0TGA _SLnlXHCoEdq2Lvk-NX0TGA _SLnlgnCoEdq2Lvk-NX0TGA _SLnlVnCoEdq2Lvk-NX0TGA _SLnlUHCoEdq2Lvk-NX0TGA _SLnlcXCoEdq2Lvk-NX0TGA _SLnld3CoEdq2Lvk-NX0TGA _SLnlYnCoEdq2Lvk-NX0TGA _SLwvQXCoEdq2Lvk-NX0TGA _SLnliHCoEdq2Lvk-NX0TGA _SLnljnCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdpJcHCoEdq2Lvk-NX0TGA" source="UML::Components::PackagingComponents" references="_SPyTpnCoEdq2Lvk-NX0TGA _SP8EtXCoEdq2Lvk-NX0TGA _SQF1oHCoEdq2Lvk-NX0TGA _SQF1onCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_SdpJcXCoEdq2Lvk-NX0TGA" source="UML::CompositeStructures::Collaborations" references="_SHcP9nCoEdq2Lvk-NX0TGA _SHcP-3CoEdq2Lvk-NX0TGA _6UV2QGwJEdq7X4sGURiZYA _SHJVEHCoEdq2Lvk-NX0TGA _KyaPMGveEdq4DLWZOhbdEA _SHJVAHCoEdq2Lvk-NX0TGA _SHJVDHCoEdq2Lvk-NX0TGA _SHcP8XCoEdq2Lvk-NX0TGA _SHJVG3CoEdq2Lvk-NX0TGA _SHcQBXCoEdq2Lvk-NX0TGA _SHcP_nCoEdq2Lvk-NX0TGA _SHcQAHCoEdq2Lvk-NX0TGA _SHTGBHCoEdq2Lvk-NX0TGA _SHcP9HCoEdq2Lvk-NX0TGA _SHcP8HCoEdq2Lvk-NX0TGA _SHJVFnCoEdq2Lvk-NX0TGA _SHcQA3CoEdq2Lvk-NX0TGA _SHcP-XCoEdq2Lvk-NX0TGA _SHTGAHCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sdy6cHCoEdq2Lvk-NX0TGA" source="UML::Deployments::ComponentDeployments" references="_SQF1pXCoEdq2Lvk-NX0TGA _SQh6m3CoEdq2Lvk-NX0TGA _SQYwonCoEdq2Lvk-NX0TGA _SQh6j3CoEdq2Lvk-NX0TGA _SQh6iXCoEdq2Lvk-NX0TGA _SQh6gHCoEdq2Lvk-NX0TGA _SQh6lXCoEdq2Lvk-NX0TGA"/>
    <eAnnotations xmi:id="_Sd8rcHCoEdq2Lvk-NX0TGA" source="UML::Classes::AssociationClasses" references="_SSK5RnCoEdq2Lvk-NX0TGA _SSK5THCoEdq2Lvk-NX0TGA _SSBvZXCoEdq2Lvk-NX0TGA _SSK5QHCoEdq2Lvk-NX0TGA _SSBvXnCoEdq2Lvk-NX0TGA _Jp_1oGveEdq4DLWZOhbdEA"/>
    <eAnnotations xmi:id="_Sd8rcXCoEdq2Lvk-NX0TGA" source="InfrastructureLibrary::Core::PrimitiveTypes" references="_aAyVgGvsEdqG6fBIPwe-mw _dRZxsGvsEdqG6fBIPwe-mw _UdivYGvsEdqG6fBIPwe-mw _XqvEIGvsEdqG6fBIPwe-mw"/>
    <eAnnotations xmi:id="_SeihUHCoEdq2Lvk-NX0TGA" source="UML::CompositeStructures::StructuredClasses" references="_00owUGvdEdq4DLWZOhbdEA"/>
  </eAnnotations>
  <packageImport xmi:id="__as3cGvaEdq4DLWZOhbdEA">
    <importedPackage xmi:type="uml:Model" href="Ecore.uml2#439EC3AE03B5"/>
  </packageImport>
  <packageImport xmi:type="uml:ProfileApplication" xmi:id="_0TBYYGvaEdq4DLWZOhbdEA">
    <eAnnotations xmi:id="_0TBYYWvaEdq4DLWZOhbdEA" source="attributes">
      <details xmi:id="_0TBYYmvaEdq4DLWZOhbdEA" key="version" value="2"/>
    </eAnnotations>
    <importedPackage xmi:type="uml:Profile" href="pathmap://UML2_PROFILES/Ecore.profile.uml2#_siPt4K87Edi5QpYeY_yIpg"/>
    <importedProfile href="pathmap://UML2_PROFILES/Ecore.profile.uml2#_siPt4K87Edi5QpYeY_yIpg"/>
  </packageImport>
  <ownedMember xmi:type="uml:PrimitiveType" xmi:id="_XqvEIGvsEdqG6fBIPwe-mw" name="Integer">
    <eAnnotations xmi:id="_KWFGYmzMEdq4d7jt9iWoqg" source="appliedStereotypes">
      <contents xmi:type="Ecore_2:Ecore__EDataType" xmi:id="_nCA-snCjEdqyRcpUZ6PRWg" instanceClassName="int"/>
    </eAnnotations>
    <ownedComment xmi:id="_R3DqkHCoEdq2Lvk-NX0TGA" annotatedElement="_XqvEIGvsEdqG6fBIPwe-mw">
      <body>An instance of Integer is an element in the (infinite) set of integers (...-2, -1, 0, 1, 2...). It is used for integer attributes and integer expressions in the metamodel.</body>
    </ownedComment>
  </ownedMember>
  <ownedMember xmi:type="uml:PrimitiveType" xmi:id="_UdivYGvsEdqG6fBIPwe-mw" name="Boolean">
    <eAnnotations xmi:id="_KWFGYGzMEdq4d7jt9iWoqg" source="appliedStereotypes">
      <contents xmi:type="Ecore_2:Ecore__EDataType" xmi:id="_nCA-sXCjEdqyRcpUZ6PRWg" instanceClassName="boolean"/>
    </eAnnotations>
    <ownedComment xmi:id="_R3DqkXCoEdq2Lvk-NX0TGA" annotatedElement="_UdivYGvsEdqG6fBIPwe-mw">
      <body>Boolean is an instance of PrimitiveType. In the metamodel, Boolean defines an enumeration that denotes a logical condition. Its enumeration literals are:

  - true: The Boolean condition is satisfied.

  - false: The Boolean condition is not satisfied.



It is used for Boolean attribute and Boolean expressions in the metamodel, such as OCL expression.</body>
    </ownedComment>
  </ownedMember>
  <ownedMember xmi:type="uml:PrimitiveType" xmi:id="_aAyVgGvsEdqG6fBIPwe-mw" name="String">
    <eAnnotations xmi:id="_KWO3YGzMEdq4d7jt9iWoqg" source="appliedStereotypes">
      <contents xmi:type="Ecore_2:Ecore__EDataType" xmi:id="_nCA-s3CjEdqyRcpUZ6PRWg" instanceClassName="java.lang.String"/>
    </eAnnotations>
    <ownedComment xmi:id="_R3DqknCoEdq2Lvk-NX0TGA" annotatedElement="_aAyVgGvsEdqG6fBIPwe-mw">
      <body>An instance of String defines a piece of text. The semantics of the string itself depends on its purpose, it can be a comment, computational language expression, OCL expression, etc. It is used for String attributes and String expressions in the metamodel.</body>
    </ownedComment>
  </ownedMember>
  <ownedMember xmi:type="uml:PrimitiveType" xmi:id="_dRZxsGvsEdqG6fBIPwe-mw" name="UnlimitedNatural">
    <eAnnotations xmi:id="_KWO3YmzMEdq4d7jt9iWoqg" source="appliedStereotypes">
      <contents xmi:type="Ecore_2:Ecore__EDataType" xmi:id="_nCA-tHCjEdqyRcpUZ6PRWg" instanceClassName="int"/>
    </eAnnotations>
    <ownedComment xmi:id="_R3M0gHCoEdq2Lvk-NX0TGA" annotatedElement="_dRZxsGvsEdqG6fBIPwe-mw">
      <body>An instance of UnlimitedNatural is an element in the (infinite) set of naturals (0, 1, 2...). The value of infinity is shown using an asterisk ('*').</body>
    </ownedComment>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_R2Ahw3CoEdq2Lvk-NX0TGA" name="Comment">
    <ownedComment xmi:id="_R2AhxHCoEdq2Lvk-NX0TGA" annotatedElement="_R2Ahw3CoEdq2Lvk-NX0TGA">
      <body>A comment is a textual annotation that can be attached to a set of elements.</body>
    </ownedComment>
    <ownedComment xmi:id="_R3fvcXCoEdq2Lvk-NX0TGA" annotatedElement="_R2Ahw3CoEdq2Lvk-NX0TGA">
      <body>A comment gives the ability to attach various remarks to elements. A comment carries no semantic force, but may contain information that is useful to a modeler. A comment can be owned by any element.</body>
    </ownedComment>
    <generalization xmi:id="_R2AhxXCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_R2AhxnCoEdq2Lvk-NX0TGA" name="body" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <eAnnotations xmi:id="_R2Ahx3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R2AhyHCoEdq2Lvk-NX0TGA" isUnsettable="true" xmlFeatureKind="Element"/>
      </eAnnotations>
      <ownedComment xmi:id="_R2AhyXCoEdq2Lvk-NX0TGA" annotatedElement="_R2AhxnCoEdq2Lvk-NX0TGA">
        <body>Specifies a string that is the comment.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3fvcnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R3fvc3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R2AhzHCoEdq2Lvk-NX0TGA" name="annotatedElement" type="_kl90MGvbEdq4DLWZOhbdEA" association="_R2m-q3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R2AhzXCoEdq2Lvk-NX0TGA" annotatedElement="_R2AhzHCoEdq2Lvk-NX0TGA">
        <body>References the Element(s) being commented.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3fvdHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R3fvdXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_Rx-9UHCoEdq2Lvk-NX0TGA" name="DirectedRelationship" isAbstract="true">
    <ownedComment xmi:id="_Rx-9UXCoEdq2Lvk-NX0TGA" annotatedElement="_Rx-9UHCoEdq2Lvk-NX0TGA">
      <body>A directed relationship references one or more source elements and one or more target elements. DirectedRelationship is an abstract metaclass.</body>
    </ownedComment>
    <generalization xmi:id="_Rx-9UnCoEdq2Lvk-NX0TGA" general="_RzCGUXCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_Rx-9U3CoEdq2Lvk-NX0TGA" name="source" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_RzCGVHCoEdq2Lvk-NX0TGA" association="_R2m-r3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_Rx-9VHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rx-9VXCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rx-9VnCoEdq2Lvk-NX0TGA" annotatedElement="_Rx-9U3CoEdq2Lvk-NX0TGA">
        <body>Specifies the sources of the DirectedRelationship.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3fvdnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R3fvd3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rx-9WXCoEdq2Lvk-NX0TGA" name="target" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_RzCGVHCoEdq2Lvk-NX0TGA" association="_R2m-snCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_Rx-9WnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rx-9W3CoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rx-9XHCoEdq2Lvk-NX0TGA" annotatedElement="_Rx-9WXCoEdq2Lvk-NX0TGA">
        <body>Specifies the targets of the DirectedRelationship.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3fveHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R3fveXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_AyM_oGwMEdq7X4sGURiZYA" name="VisibilityKind">
    <ownedComment xmi:id="_R2Ah0HCoEdq2Lvk-NX0TGA" annotatedElement="_AyM_oGwMEdq7X4sGURiZYA">
      <body>VisibilityKind is an enumeration of the following literal values:

  - public

  - private

  - protected

  - package</body>
    </ownedComment>
    <ownedOperation xmi:id="_R2Ah0XCoEdq2Lvk-NX0TGA" name="bestVisibility" isQuery="true" precondition="_R4P9YXCoEdq2Lvk-NX0TGA" bodyCondition="_R2Ah03CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R2Ah0nCoEdq2Lvk-NX0TGA" annotatedElement="_R2Ah0XCoEdq2Lvk-NX0TGA">
        <body>The query bestVisibility() examines a set of VisibilityKinds, and returns public as the preferred visibility.</body>
      </ownedComment>
      <ownedComment xmi:id="_R4P9YHCoEdq2Lvk-NX0TGA" annotatedElement="_R2Ah0XCoEdq2Lvk-NX0TGA">
        <body>The query bestVisibility() examines a set of VisibilityKinds that includes only public and private, and returns public as the preferred visibility.</body>
      </ownedComment>
      <ownedRule xmi:id="_R4P9YXCoEdq2Lvk-NX0TGA" constrainedElement="_R2Ah0XCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4P9YnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>pre: not vis->includes(#protected) and not vis->includes(#package)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_R2Ah03CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R2Ah0XCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4P9Y3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if vis->includes(#public) then #public else #private endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R2Ah1XCoEdq2Lvk-NX0TGA" direction="return">
        <type xmi:type="uml:Enumeration" href="Infrastructure.uml2#_3ADC7B74022D3CAD9E0F01D0"/>
      </returnResult>
      <type xmi:type="uml:Enumeration" href="Infrastructure.uml2#_3ADC7B74022D3CAD9E0F01D0"/>
      <ownedParameter xmi:id="_R2Ah1nCoEdq2Lvk-NX0TGA" name="vis" type="_AyM_oGwMEdq7X4sGURiZYA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R2Ah13CoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R2Ah2HCoEdq2Lvk-NX0TGA"/>
      </ownedParameter>
    </ownedOperation>
    <ownedLiteral xmi:id="_R2Ah2XCoEdq2Lvk-NX0TGA" name="public">
      <ownedComment xmi:id="_R2Ah2nCoEdq2Lvk-NX0TGA" annotatedElement="_R2Ah2XCoEdq2Lvk-NX0TGA">
        <body>A public element is visible to all elements that can access the contents of the namespace that owns it.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_R2Ah23CoEdq2Lvk-NX0TGA" name="private">
      <ownedComment xmi:id="_R2Ah3HCoEdq2Lvk-NX0TGA" annotatedElement="_R2Ah23CoEdq2Lvk-NX0TGA">
        <body>A private element is only visible inside the namespace that owns it.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_R2KSsHCoEdq2Lvk-NX0TGA" name="protected">
      <ownedComment xmi:id="_R2KSsXCoEdq2Lvk-NX0TGA" annotatedElement="_R2KSsHCoEdq2Lvk-NX0TGA">
        <body>A protected element is visible to elements that have a generalization relationship to the namespace that owns it.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_R2KSsnCoEdq2Lvk-NX0TGA" name="package">
      <ownedComment xmi:id="_R2KSs3CoEdq2Lvk-NX0TGA" annotatedElement="_R2KSsnCoEdq2Lvk-NX0TGA">
        <body>A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility.  Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility).  Outside the nearest enclosing package, an element marked as having package visibility is not visible.</body>
      </ownedComment>
    </ownedLiteral>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_R4sCQHCoEdq2Lvk-NX0TGA" name="LiteralSpecification" isAbstract="true">
    <ownedComment xmi:id="_R4sCQXCoEdq2Lvk-NX0TGA" annotatedElement="_R4sCQHCoEdq2Lvk-NX0TGA">
      <body>A literal specification is an abstract specialization of ValueSpecification that identifies a literal constant being modeled.</body>
    </ownedComment>
    <generalization xmi:id="_R4sCQnCoEdq2Lvk-NX0TGA" general="_RzLQJ3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_Dy77oGveEdq4DLWZOhbdEA" name="LiteralInteger">
    <ownedComment xmi:id="_R4sCQ3CoEdq2Lvk-NX0TGA" annotatedElement="_Dy77oGveEdq4DLWZOhbdEA">
      <body>A literal integer contains an Integer-valued attribute.</body>
    </ownedComment>
    <generalization xmi:id="_R4sCRHCoEdq2Lvk-NX0TGA" general="_R4sCQHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R4sCRXCoEdq2Lvk-NX0TGA" name="value" type="_XqvEIGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_R4sCRnCoEdq2Lvk-NX0TGA" annotatedElement="_R4sCRXCoEdq2Lvk-NX0TGA">
        <body>The specified Integer value.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_R4sCR3CoEdq2Lvk-NX0TGA" type="_XqvEIGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_e2SLUGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_hAkRkGWKEdq-f4093SZhVA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R4sCSHCoEdq2Lvk-NX0TGA" name="isComputable" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzLQK3CoEdq2Lvk-NX0TGA" bodyCondition="_R4sCSnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R4sCSXCoEdq2Lvk-NX0TGA" annotatedElement="_R4sCSHCoEdq2Lvk-NX0TGA">
        <body>The query isComputable() is redefined to be true.</body>
      </ownedComment>
      <ownedRule xmi:id="_R4sCSnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R4sCSHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4sCS3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R4sCTHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R4sCTXCoEdq2Lvk-NX0TGA" name="integerValue" type="_XqvEIGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzLQMHCoEdq2Lvk-NX0TGA" bodyCondition="_R4sCT3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R4sCTnCoEdq2Lvk-NX0TGA" annotatedElement="_R4sCTXCoEdq2Lvk-NX0TGA">
        <body>The query integerValue() gives the value.</body>
      </ownedComment>
      <ownedRule xmi:id="_R4sCT3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R4sCTXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4sCUHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = value</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R4sCUXCoEdq2Lvk-NX0TGA" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_R41zQHCoEdq2Lvk-NX0TGA" name="LiteralString">
    <ownedComment xmi:id="_R41zQXCoEdq2Lvk-NX0TGA" annotatedElement="_R41zQHCoEdq2Lvk-NX0TGA">
      <body>A literal string contains a String-valued attribute.</body>
    </ownedComment>
    <generalization xmi:id="_R41zQnCoEdq2Lvk-NX0TGA" general="_R4sCQHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R41zQ3CoEdq2Lvk-NX0TGA" name="value" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <eAnnotations xmi:id="_R41zRHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R41zRXCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R41zRnCoEdq2Lvk-NX0TGA" annotatedElement="_R41zQ3CoEdq2Lvk-NX0TGA">
        <body>The specified String value.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R41zR3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R41zSHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_R41zSXCoEdq2Lvk-NX0TGA" name="isComputable" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzLQK3CoEdq2Lvk-NX0TGA" bodyCondition="_R41zS3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R41zSnCoEdq2Lvk-NX0TGA" annotatedElement="_R41zSXCoEdq2Lvk-NX0TGA">
        <body>The query isComputable() is redefined to be true.</body>
      </ownedComment>
      <ownedRule xmi:id="_R41zS3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R41zSXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R41zTHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R41zTXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R41zTnCoEdq2Lvk-NX0TGA" name="stringValue" type="_aAyVgGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzLQOnCoEdq2Lvk-NX0TGA" bodyCondition="_R41zUHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R41zT3CoEdq2Lvk-NX0TGA" annotatedElement="_R41zTnCoEdq2Lvk-NX0TGA">
        <body>The query stringValue() gives the value.</body>
      </ownedComment>
      <ownedRule xmi:id="_R41zUHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R41zTnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R41zUXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = value</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R41zUnCoEdq2Lvk-NX0TGA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_FFMNsGveEdq4DLWZOhbdEA" name="LiteralBoolean">
    <ownedComment xmi:id="_R41zU3CoEdq2Lvk-NX0TGA" annotatedElement="_FFMNsGveEdq4DLWZOhbdEA">
      <body>A literal boolean contains a Boolean-valued attribute.</body>
    </ownedComment>
    <generalization xmi:id="_R41zVHCoEdq2Lvk-NX0TGA" general="_R4sCQHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R41zVXCoEdq2Lvk-NX0TGA" name="value" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_R41zVnCoEdq2Lvk-NX0TGA" annotatedElement="_R41zVXCoEdq2Lvk-NX0TGA">
        <body>The specified Boolean value.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R41zV3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_aXS3gGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_cFthIGWKEdq-f4093SZhVA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R41zWHCoEdq2Lvk-NX0TGA" name="isComputable" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzLQK3CoEdq2Lvk-NX0TGA" bodyCondition="_R41zWnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R41zWXCoEdq2Lvk-NX0TGA" annotatedElement="_R41zWHCoEdq2Lvk-NX0TGA">
        <body>The query isComputable() is redefined to be true.</body>
      </ownedComment>
      <ownedRule xmi:id="_R41zWnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R41zWHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R41zW3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R41zXHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R41zXXCoEdq2Lvk-NX0TGA" name="booleanValue" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzLQNXCoEdq2Lvk-NX0TGA" bodyCondition="_R41zX3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R41zXnCoEdq2Lvk-NX0TGA" annotatedElement="_R41zXXCoEdq2Lvk-NX0TGA">
        <body>The query booleanValue() gives the value.</body>
      </ownedComment>
      <ownedRule xmi:id="_R41zX3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R41zXXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R41zYHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = value</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R41zYXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_R41zYnCoEdq2Lvk-NX0TGA" name="LiteralNull">
    <ownedComment xmi:id="_R41zY3CoEdq2Lvk-NX0TGA" annotatedElement="_R41zYnCoEdq2Lvk-NX0TGA">
      <body>A literal null is used to represent null, i.e., the absence of a value.</body>
    </ownedComment>
    <generalization xmi:id="_R41zZHCoEdq2Lvk-NX0TGA" general="_R4sCQHCoEdq2Lvk-NX0TGA"/>
    <ownedOperation xmi:id="_R41zZXCoEdq2Lvk-NX0TGA" name="isComputable" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzLQK3CoEdq2Lvk-NX0TGA" bodyCondition="_R41zZ3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R41zZnCoEdq2Lvk-NX0TGA" annotatedElement="_R41zZXCoEdq2Lvk-NX0TGA">
        <body>The query isComputable() is redefined to be true.</body>
      </ownedComment>
      <ownedRule xmi:id="_R41zZ3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R41zZXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R41zaHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R41zaXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R41zanCoEdq2Lvk-NX0TGA" name="isNull" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzLQRHCoEdq2Lvk-NX0TGA" bodyCondition="_R41zbHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R41za3CoEdq2Lvk-NX0TGA" annotatedElement="_R41zanCoEdq2Lvk-NX0TGA">
        <body>The query isNull() returns true.</body>
      </ownedComment>
      <ownedRule xmi:id="_R41zbHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R41zanCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R41zbXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R41zbnCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_R0OZAHCoEdq2Lvk-NX0TGA" name="Constraint">
    <ownedComment xmi:id="_R0OZAXCoEdq2Lvk-NX0TGA" annotatedElement="_R0OZAHCoEdq2Lvk-NX0TGA">
      <body>Constraint contains a ValueSpecification that specifies additional semantics for one or more elements. Certain kinds of constraints (such as an association &quot;xor&quot; constraint) are predefined in UML, others may be user-defined. A user-defined Constraint is described using a specified language, whose syntax and interpretation is a tool responsibility. One predefined language for writing constraints is OCL. In some situations, a programming language such as Java may be appropriate for expressing a constraint. In other situations natural language may be used.

Constraint is a condition (a Boolean expression) that restricts the extension of the associated element beyond what is imposed by the other language constructs applied to the element. Constraint contains an optional name, although they are commonly unnamed.</body>
    </ownedComment>
    <ownedComment xmi:id="_R4_kQHCoEdq2Lvk-NX0TGA" annotatedElement="_R0OZAHCoEdq2Lvk-NX0TGA">
      <body>Constraint contains a ValueSpecification that specifies additional semantics for one or more elements. Certain kinds of constraints (such as an association &quot;xor&quot; constraint) are predefined in UML, others may be user-defined. A user-defined Constraint is described using a specified language, whose syntax and interpretation is a tool responsibility. One predefined language for writing constraints is OCL. In some situations, a programming language such as Java may be appropriate for expressing a constraint. In other situations natural language may be used.

Constraint is a condition (a Boolean expression) that restricts the extension of the associated element beyond what is imposed by the other language constructs applied to that element. Constraint contains an optional name, although they are commonly unnamed.</body>
    </ownedComment>
    <ownedRule xmi:id="_R0OZAnCoEdq2Lvk-NX0TGA" name="not_apply_to_self" constrainedElement="_R0OZAHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R0OZA3CoEdq2Lvk-NX0TGA" annotatedElement="_R0OZAnCoEdq2Lvk-NX0TGA">
        <body>A constraint cannot be applied to itself.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R0OZBHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>not constrainedElement->includes(self)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R0OZBXCoEdq2Lvk-NX0TGA" name="value_specification_boolean" constrainedElement="_R0OZAHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R0OZBnCoEdq2Lvk-NX0TGA" annotatedElement="_R0OZBXCoEdq2Lvk-NX0TGA">
        <body>The value specification for a constraint must evaluate to a Boolean value.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R0OZB3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.specification().booleanValue().isOclKindOf(Boolean)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R4_kQXCoEdq2Lvk-NX0TGA" name="boolean_value" constrainedElement="_R0OZAHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R4_kQnCoEdq2Lvk-NX0TGA" annotatedElement="_R4_kQXCoEdq2Lvk-NX0TGA">
        <body>The value specification for a constraint must evaluate to a Boolean value.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4_kQ3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R4_kRHCoEdq2Lvk-NX0TGA" name="no_side_effects" constrainedElement="_R0OZAHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R4_kRXCoEdq2Lvk-NX0TGA" annotatedElement="_R4_kRHCoEdq2Lvk-NX0TGA">
        <body>Evaluating the value specification for a constraint must not have side effects.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4_kRnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R4_kR3CoEdq2Lvk-NX0TGA" name="not_applied_to_self" constrainedElement="_R0OZAHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R4_kSHCoEdq2Lvk-NX0TGA" annotatedElement="_R4_kR3CoEdq2Lvk-NX0TGA">
        <body>A constraint cannot be applied to itself.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4_kSXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>not constrainedElement->includes(self)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_R0OZCHCoEdq2Lvk-NX0TGA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_R0OZCXCoEdq2Lvk-NX0TGA" name="constrainedElement" type="_kl90MGvbEdq4DLWZOhbdEA" isOrdered="true" association="_R2wIlnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R0OZCnCoEdq2Lvk-NX0TGA" annotatedElement="_R0OZCXCoEdq2Lvk-NX0TGA">
        <body>The ordered set of Elements referenced by this Constraint.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4_kSnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4_kS3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0OZDXCoEdq2Lvk-NX0TGA" name="specification" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_R2wImHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R0OZDnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R0OZD3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0OZEHCoEdq2Lvk-NX0TGA" annotatedElement="_R0OZDXCoEdq2Lvk-NX0TGA">
        <body>A condition that must be true when evaluated in order for the constraint to be satisfied.

</body>
      </ownedComment>
      <ownedComment xmi:id="_R4_kTHCoEdq2Lvk-NX0TGA" annotatedElement="_R0OZDXCoEdq2Lvk-NX0TGA">
        <body>A condition that must be true when evaluated in order for the constraint to be satisfied.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4_kTXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4_kTnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0OZE3CoEdq2Lvk-NX0TGA" name="context" type="_ZiwkoGwLEdq7X4sGURiZYA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_R255q3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R0OZFHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R0OZFXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R4_kT3CoEdq2Lvk-NX0TGA" annotatedElement="_R0OZE3CoEdq2Lvk-NX0TGA">
        <body>Specifies the namespace that owns the NamedElement.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4_kUHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4_kUXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_RPl78GwIEdq7X4sGURiZYA" name="ElementImport">
    <ownedComment xmi:id="_R09_4HCoEdq2Lvk-NX0TGA" annotatedElement="_RPl78GwIEdq7X4sGURiZYA">
      <body>An element import is defined as a directed relationship between an importing namespace and a packageable element. The name of the packageable element or its alias is to be added to the namespace of the importing namespace. It is also possible to control whether the imported element can be further imported.</body>
    </ownedComment>
    <ownedRule xmi:id="_R09_4XCoEdq2Lvk-NX0TGA" name="visibility_public_or_private" constrainedElement="_RPl78GwIEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R09_4nCoEdq2Lvk-NX0TGA" annotatedElement="_R09_4XCoEdq2Lvk-NX0TGA">
        <body>The visibility of an ElementImport is either public or private.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R09_43CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.visibility = #public or self.visibility = #private</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R4_kUnCoEdq2Lvk-NX0TGA" name="visibility_or_private" constrainedElement="_RPl78GwIEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R4_kU3CoEdq2Lvk-NX0TGA" annotatedElement="_R4_kUnCoEdq2Lvk-NX0TGA">
        <body>The visibility of an ElementImport is either public or private.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4_kVHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.visibility = #public or self.visibility = #private</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R09_5HCoEdq2Lvk-NX0TGA" name="imported_element_is_public" constrainedElement="_RPl78GwIEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R09_5XCoEdq2Lvk-NX0TGA" annotatedElement="_R09_5HCoEdq2Lvk-NX0TGA">
        <body>An importedElement has either public visibility or no visibility at all.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4_kVXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.importedElement.visibility.notEmpty() implies self.importedElement.visibility = #public</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_R09_53CoEdq2Lvk-NX0TGA" general="_Rx-9UHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R09_6HCoEdq2Lvk-NX0TGA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R09_6XCoEdq2Lvk-NX0TGA" annotatedElement="_R09_6HCoEdq2Lvk-NX0TGA">
        <body>Specifies the visibility of the imported PackageableElement within the importing Package. The default visibility is the same as that of the imported element. If the imported element does not have a visibility, it is possible to add visibility to the element import.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_R5IuMHCoEdq2Lvk-NX0TGA" type="_AyM_oGwMEdq7X4sGURiZYA" instance="_R2Ah2XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R09_63CoEdq2Lvk-NX0TGA" name="alias" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <eAnnotations xmi:id="_R09_7HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R09_7XCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R09_7nCoEdq2Lvk-NX0TGA" annotatedElement="_R09_63CoEdq2Lvk-NX0TGA">
        <body>Specifies the name that should be added to the namespace of the importing Package in lieu of the name of the imported PackagableElement. The aliased name must not clash with any other member name in the importing Package. By default, no alias is used.</body>
      </ownedComment>
      <ownedComment xmi:id="_R5IuMXCoEdq2Lvk-NX0TGA" annotatedElement="_R09_63CoEdq2Lvk-NX0TGA">
        <body>Specifies the name that should be added to the namespace of the importing Pack-age in lieu of the name of the imported PackagableElement. The aliased name must not clash with any other member name in the importing Package. By default, no alias is used.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5IuMnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5IuM3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R09_8XCoEdq2Lvk-NX0TGA" name="importedElement" type="_jKxnwGwLEdq7X4sGURiZYA" subsettedProperty="_Rx-9WXCoEdq2Lvk-NX0TGA" association="_R2dNqHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R09_8nCoEdq2Lvk-NX0TGA" annotatedElement="_R09_8XCoEdq2Lvk-NX0TGA">
        <body>Specifies the PackageableElement whose name is to be added to a Namespace.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5IuNHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5IuNXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R09_9XCoEdq2Lvk-NX0TGA" name="importingNamespace" type="_ZiwkoGwLEdq7X4sGURiZYA" subsettedProperty="_Rx-9U3CoEdq2Lvk-NX0TGA _Rx-9bHCoEdq2Lvk-NX0TGA" association="_R2dNq3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R09_9nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R09_93CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R09_-HCoEdq2Lvk-NX0TGA" annotatedElement="_R09_9XCoEdq2Lvk-NX0TGA">
        <body>Specifies the Namespace that imports a PackageableElement from another Package.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5IuNnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5IuN3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_R1HJ0HCoEdq2Lvk-NX0TGA" name="getName" type="_aAyVgGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R1HJ0nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R1HJ0XCoEdq2Lvk-NX0TGA" annotatedElement="_R1HJ0HCoEdq2Lvk-NX0TGA">
        <body>The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.</body>
      </ownedComment>
      <ownedRule xmi:id="_R1HJ0nCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R1HJ0HCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5IuOHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if self.alias->notEmpty() then
  self.alias
else
  self.importedElement.name
endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R1HJ1HCoEdq2Lvk-NX0TGA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_Gjgl0GveEdq4DLWZOhbdEA" name="MultiplicityElement" isAbstract="true">
    <ownedComment xmi:id="_RyIuWXCoEdq2Lvk-NX0TGA" annotatedElement="_Gjgl0GveEdq4DLWZOhbdEA">
      <body>A MultiplicityElement is an abstract metaclass which includes optional attributes for defining the bounds of a multiplicity. A MultiplicityElement also includes specifications of whether the values in an instantiation of this element must be unique or ordered.</body>
    </ownedComment>
    <ownedRule xmi:id="_RyIuWnCoEdq2Lvk-NX0TGA" name="upper_gt_0" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_RyIuW3CoEdq2Lvk-NX0TGA" annotatedElement="_RyIuWnCoEdq2Lvk-NX0TGA">
        <body>A multiplicity must define at least one valid cardinality that is greater than zero.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5SfMHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>upperBound()->notEmpty() implies upperBound() > 0</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_RyIuYHCoEdq2Lvk-NX0TGA" name="lower_ge_0" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_RyIuYXCoEdq2Lvk-NX0TGA" annotatedElement="_RyIuYHCoEdq2Lvk-NX0TGA">
        <body>The lower bound must be a non-negative integer literal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5SfMXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>lowerBound()->notEmpty() implies lowerBound() >= 0</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_RyIuXXCoEdq2Lvk-NX0TGA" name="upper_ge_lower" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_RyIuXnCoEdq2Lvk-NX0TGA" annotatedElement="_RyIuXXCoEdq2Lvk-NX0TGA">
        <body>The upper bound must be greater than or equal to the lower bound.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5SfMnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R5SfM3CoEdq2Lvk-NX0TGA" name="value_specification_no_side_effects" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_R5SfNHCoEdq2Lvk-NX0TGA" annotatedElement="_R5SfM3CoEdq2Lvk-NX0TGA">
        <body>If a non-literal ValueSpecification is used for the lower or upper bound, then evaluating that specification must not have side effects.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5SfNXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R5SfNnCoEdq2Lvk-NX0TGA" name="value_specification_constant" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_R5SfN3CoEdq2Lvk-NX0TGA" annotatedElement="_R5SfNnCoEdq2Lvk-NX0TGA">
        <body>If a non-literal ValueSpecification is used for the lower or upper bound, then that specification must be a constant expression.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5SfOHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_RySfUHCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_RySfUXCoEdq2Lvk-NX0TGA" name="isOrdered" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_RySfUnCoEdq2Lvk-NX0TGA" annotatedElement="_RySfUXCoEdq2Lvk-NX0TGA">
        <body>For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered..</body>
      </ownedComment>
      <ownedComment xmi:id="_R5cQMHCoEdq2Lvk-NX0TGA" annotatedElement="_RySfUXCoEdq2Lvk-NX0TGA">
        <body>For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R5cQMXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RySfVHCoEdq2Lvk-NX0TGA" name="isUnique" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_RySfVXCoEdq2Lvk-NX0TGA" annotatedElement="_RySfVHCoEdq2Lvk-NX0TGA">
        <body>For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R5cQMnCoEdq2Lvk-NX0TGA" value="true"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RySfXHCoEdq2Lvk-NX0TGA" name="upper" type="_dRZxsGvsEdqG6fBIPwe-mw" isDerived="true">
      <eAnnotations xmi:id="_R5cQM3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R5cQNHCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RySfXXCoEdq2Lvk-NX0TGA" annotatedElement="_RySfXHCoEdq2Lvk-NX0TGA">
        <body>Specifies the upper bound of the multiplicity interval.</body>
      </ownedComment>
      <ownedComment xmi:id="_R5cQNXCoEdq2Lvk-NX0TGA" annotatedElement="_RySfXHCoEdq2Lvk-NX0TGA">
        <body>Specifies the upper bound of the multiplicity interval, if it is expressed as an unlimited natural.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5cQNnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5cQN3CoEdq2Lvk-NX0TGA"/>
      <defaultValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5cQOHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RySfV3CoEdq2Lvk-NX0TGA" name="lower" type="_XqvEIGvsEdqG6fBIPwe-mw" isDerived="true">
      <eAnnotations xmi:id="_R5cQOXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R5cQOnCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RySfWHCoEdq2Lvk-NX0TGA" annotatedElement="_RySfV3CoEdq2Lvk-NX0TGA">
        <body>Specifies the lower bound of the multiplicity interval.</body>
      </ownedComment>
      <ownedComment xmi:id="_R5cQO3CoEdq2Lvk-NX0TGA" annotatedElement="_RySfV3CoEdq2Lvk-NX0TGA">
        <body>Specifies the lower bound of the multiplicity interval, if it is expressed as an integer.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5cQPHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5cQPXCoEdq2Lvk-NX0TGA"/>
      <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_R5cQPnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R5laIHCoEdq2Lvk-NX0TGA" name="upperValue" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SA48AHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R5laIXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R5laInCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R5laI3CoEdq2Lvk-NX0TGA" annotatedElement="_R5laIHCoEdq2Lvk-NX0TGA">
        <body>The specification of the upper bound for this multiplicity.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5laJHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5laJXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R5laJnCoEdq2Lvk-NX0TGA" name="lowerValue" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SA48BXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R5laJ3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R5laKHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R5laKXCoEdq2Lvk-NX0TGA" annotatedElement="_R5laJnCoEdq2Lvk-NX0TGA">
        <body>The specification of the lower bound for this multiplicity.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5laKnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5laK3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_VclAUGJxEdqjztwYO37Abg" name="isSetLower" visibility="protected" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_XvW7QGJxEdqjztwYO37Abg" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_ksT54GJxEdqjztwYO37Abg" name="isSetUpper" visibility="protected" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_m1P8UGJxEdqjztwYO37Abg" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_qtCaIFYkEdqB6vblk3tuMA" name="setLower" visibility="protected">
      <ownedParameter xmi:id="_scWboFYkEdqB6vblk3tuMA" name="newLower" visibility="protected" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_vlEgEFYkEdqB6vblk3tuMA" name="setUpper" visibility="protected">
      <ownedParameter xmi:id="_xJp4QFYkEdqB6vblk3tuMA" name="newUpper" visibility="protected" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_Z-24sGJxEdqjztwYO37Abg" name="unsetLower" visibility="protected"/>
    <ownedOperation xmi:id="_oykkoGJxEdqjztwYO37Abg" name="unsetUpper" visibility="protected"/>
    <ownedOperation xmi:id="_R5laLHCoEdq2Lvk-NX0TGA" name="lower" type="_XqvEIGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R5laMHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R5laLXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_R5laLnCoEdq2Lvk-NX0TGA" operationName="getLower"/>
      </eAnnotations>
      <ownedComment xmi:id="_R5laL3CoEdq2Lvk-NX0TGA" annotatedElement="_R5laLHCoEdq2Lvk-NX0TGA">
        <body>The derived lower attribute must equal the lowerBound.</body>
      </ownedComment>
      <ownedRule xmi:id="_R5laMHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R5laLHCoEdq2Lvk-NX0TGA _RySfV3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5laMXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = lowerBound()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R5laMnCoEdq2Lvk-NX0TGA" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R5laM3CoEdq2Lvk-NX0TGA" name="upper" type="_dRZxsGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R5laN3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R5laNHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_R5laNXCoEdq2Lvk-NX0TGA" operationName="getUpper"/>
      </eAnnotations>
      <ownedComment xmi:id="_R5laNnCoEdq2Lvk-NX0TGA" annotatedElement="_R5laM3CoEdq2Lvk-NX0TGA">
        <body>The derived upper attribute must equal the upperBound.</body>
      </ownedComment>
      <ownedRule xmi:id="_R5laN3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R5laM3CoEdq2Lvk-NX0TGA _RySfXHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5laOHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = upperBound()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R5laOXCoEdq2Lvk-NX0TGA" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RySfYXCoEdq2Lvk-NX0TGA" name="isMultivalued" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_RySfY3CoEdq2Lvk-NX0TGA" bodyCondition="_RySfZXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RySfYnCoEdq2Lvk-NX0TGA" annotatedElement="_RySfYXCoEdq2Lvk-NX0TGA">
        <body>The query isMultivalued() checks whether this multiplicity has an upper bound greater than one.</body>
      </ownedComment>
      <ownedRule xmi:id="_RySfY3CoEdq2Lvk-NX0TGA" constrainedElement="_RySfYXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5laOnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>upperBound()->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_RySfZXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RySfYXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5laO3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = upperBound() > 1</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RySfZ3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RySfcHCoEdq2Lvk-NX0TGA" name="includesCardinality" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_RySfcnCoEdq2Lvk-NX0TGA" bodyCondition="_RySfdHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RySfcXCoEdq2Lvk-NX0TGA" annotatedElement="_RySfcHCoEdq2Lvk-NX0TGA">
        <body>The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity.</body>
      </ownedComment>
      <ownedRule xmi:id="_RySfcnCoEdq2Lvk-NX0TGA" constrainedElement="_RySfcHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5laPHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>upperBound()->notEmpty() and lowerBound()->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_RySfdHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RySfcHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5laPXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = (lowerBound() &lt;= C) and (upperBound() >= C)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RySfdnCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_RySfd3CoEdq2Lvk-NX0TGA" name="C" type="_XqvEIGvsEdqG6fBIPwe-mw"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RySfaHCoEdq2Lvk-NX0TGA" name="includesMultiplicity" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_RySfanCoEdq2Lvk-NX0TGA" bodyCondition="_RySfbHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RySfaXCoEdq2Lvk-NX0TGA" annotatedElement="_RySfaHCoEdq2Lvk-NX0TGA">
        <body>The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity.</body>
      </ownedComment>
      <ownedRule xmi:id="_RySfanCoEdq2Lvk-NX0TGA" constrainedElement="_RySfaHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5laPnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>self.upperBound()->notEmpty() and self.lowerBound()->notEmpty()
and M.upperBound()->notEmpty() and M.lowerBound()->notEmpty()
</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_RySfbHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RySfaHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5laP3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound())</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RySfbnCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_RySfb3CoEdq2Lvk-NX0TGA" name="M" type="_Gjgl0GveEdq4DLWZOhbdEA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RySfeHCoEdq2Lvk-NX0TGA" name="lowerBound" type="_XqvEIGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RySfenCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RySfeXCoEdq2Lvk-NX0TGA" annotatedElement="_RySfeHCoEdq2Lvk-NX0TGA">
        <body>The query lowerBound() returns the lower bound of the multiplicity as an integer.</body>
      </ownedComment>
      <ownedRule xmi:id="_RySfenCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RySfeHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5vLIHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if lowerValue->isEmpty() then 1 else lowerValue.integerValue() endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RySffHCoEdq2Lvk-NX0TGA" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RybpQHCoEdq2Lvk-NX0TGA" name="upperBound" type="_dRZxsGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RybpQnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RybpQXCoEdq2Lvk-NX0TGA" annotatedElement="_RybpQHCoEdq2Lvk-NX0TGA">
        <body>The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural.</body>
      </ownedComment>
      <ownedRule xmi:id="_RybpQnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RybpQHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5vLIXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if upperValue->isEmpty() then 1 else upperValue.unlimitedValue() endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RybpRHCoEdq2Lvk-NX0TGA" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_RzLQIHCoEdq2Lvk-NX0TGA" name="TypedElement" isAbstract="true">
    <ownedComment xmi:id="_RzLQIXCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQIHCoEdq2Lvk-NX0TGA">
      <body>A typed element is an element that has a type that serves as a constraint on the range of values the element can represent. Typed element is an abstract metaclass.</body>
    </ownedComment>
    <ownedComment xmi:id="_R5vLInCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQIHCoEdq2Lvk-NX0TGA">
      <body>A typed element is an element that has a type that serves as a constraint on the range of values the element can represent.

Typed element is an abstract metaclass.

</body>
    </ownedComment>
    <generalization xmi:id="_RzLQInCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_RzLQI3CoEdq2Lvk-NX0TGA" name="type" type="_ynRtoGvtEdqG6fBIPwe-mw" association="_R2KStHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzLQJHCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQI3CoEdq2Lvk-NX0TGA">
        <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
      </ownedComment>
      <ownedComment xmi:id="_R5vLI3CoEdq2Lvk-NX0TGA" annotatedElement="_RzLQI3CoEdq2Lvk-NX0TGA">
        <body>The type of the TypedElement.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5vLJHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5vLJXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_RyIuUHCoEdq2Lvk-NX0TGA" name="Feature" isAbstract="true">
    <ownedComment xmi:id="_RyIuUXCoEdq2Lvk-NX0TGA" annotatedElement="_RyIuUHCoEdq2Lvk-NX0TGA">
      <body>A feature declares a behavioral or structural characteristic of instances of classifiers. Feature is an abstract metaclass.</body>
    </ownedComment>
    <generalization xmi:id="_RyIuUnCoEdq2Lvk-NX0TGA" general="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R6ojAHCoEdq2Lvk-NX0TGA" name="isStatic" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_R6ojAXCoEdq2Lvk-NX0TGA" annotatedElement="_R6ojAHCoEdq2Lvk-NX0TGA">
        <body>Specifies whether this feature characterizes individual instances classified by the classifier (false) or the classifier itself (true).</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R6ojAnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RyIuU3CoEdq2Lvk-NX0TGA" name="featuringClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_R2wIlHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RyIuVHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RyIuVXCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RyIuVnCoEdq2Lvk-NX0TGA" annotatedElement="_RyIuU3CoEdq2Lvk-NX0TGA">
        <body>Redefines the corresponding association in Abstractions.</body>
      </ownedComment>
      <ownedComment xmi:id="_R6ojA3CoEdq2Lvk-NX0TGA" annotatedElement="_RyIuU3CoEdq2Lvk-NX0TGA">
        <body>The Classifiers that have this Feature as a feature.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6ojBHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6ojBXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_RzCGMHCoEdq2Lvk-NX0TGA" name="RedefinableElement" isAbstract="true">
    <ownedComment xmi:id="_RzCGMXCoEdq2Lvk-NX0TGA" annotatedElement="_RzCGMHCoEdq2Lvk-NX0TGA">
      <body>A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier. </body>
    </ownedComment>
    <ownedComment xmi:id="_R6ojBnCoEdq2Lvk-NX0TGA" annotatedElement="_RzCGMHCoEdq2Lvk-NX0TGA">
      <body>A redefinable element is a named element that can be redefined in the context of a generalization. RedefinableElement is an abstract metaclass.</body>
    </ownedComment>
    <ownedRule xmi:id="_RzCGMnCoEdq2Lvk-NX0TGA" name="redefinition_context_valid" constrainedElement="_RzCGMHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzCGM3CoEdq2Lvk-NX0TGA" annotatedElement="_RzCGMnCoEdq2Lvk-NX0TGA">
        <body>At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6ojB3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.redefinedElement->forAll(e | self.isRedefinitionContextValid(e))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_RzCGNXCoEdq2Lvk-NX0TGA" name="redefinition_consistent" constrainedElement="_RzCGMHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzCGNnCoEdq2Lvk-NX0TGA" annotatedElement="_RzCGNXCoEdq2Lvk-NX0TGA">
        <body>A redefining element must be consistent with each redefined element.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6ojCHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.redefinedElement->forAll(re | re.isConsistentWith(self))</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_RzCGOHCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_R6ojCXCoEdq2Lvk-NX0TGA" name="isLeaf" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_R6ojCnCoEdq2Lvk-NX0TGA" annotatedElement="_R6ojCXCoEdq2Lvk-NX0TGA">
        <body>Indicates whether it is possible to further specialize a RedefinableElement. If the value is true, then it is not possible to further specialize the RedefinableElement.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R6ojC3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RzCGP3CoEdq2Lvk-NX0TGA" name="redefinedElement" type="_RzCGMHCoEdq2Lvk-NX0TGA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_R2wIknCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RzCGQHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RzCGQXCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RzCGQnCoEdq2Lvk-NX0TGA" annotatedElement="_RzCGP3CoEdq2Lvk-NX0TGA">
        <body>The redefinable element that is being redefined by this element.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6ojDHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6ojDXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RzCGOXCoEdq2Lvk-NX0TGA" name="redefinitionContext" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_R2wIkHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RzCGOnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RzCGO3CoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RzCGPHCoEdq2Lvk-NX0TGA" annotatedElement="_RzCGOXCoEdq2Lvk-NX0TGA">
        <body>References the contexts that this element may be redefined from.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6xs8HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6xs8XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_RzCGRXCoEdq2Lvk-NX0TGA" name="isConsistentWith" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_R6xs8nCoEdq2Lvk-NX0TGA" bodyCondition="_RzCGR3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzCGRnCoEdq2Lvk-NX0TGA" annotatedElement="_RzCGRXCoEdq2Lvk-NX0TGA">
        <body>The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions.</body>
      </ownedComment>
      <ownedRule xmi:id="_R6xs8nCoEdq2Lvk-NX0TGA" constrainedElement="_RzCGRXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6xs83CoEdq2Lvk-NX0TGA" language="OCL">
          <body>redefinee.isRedefinitionContextValid(self)

</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_RzCGR3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzCGRXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6xs9HCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = false</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzCGSXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_RzCGSnCoEdq2Lvk-NX0TGA" name="redefinee" type="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RzCGS3CoEdq2Lvk-NX0TGA" name="isRedefinitionContextValid" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RzCGTXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzCGTHCoEdq2Lvk-NX0TGA" annotatedElement="_RzCGS3CoEdq2Lvk-NX0TGA">
        <body>The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzCGTXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzCGS3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6xs9XCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = redefinitionContext->exists(c | c.allParents()->includes(redefined.redefinitionContext)))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzCGT3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_RzCGUHCoEdq2Lvk-NX0TGA" name="redefined" type="_RzCGMHCoEdq2Lvk-NX0TGA" effect="read"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_RzCGWnCoEdq2Lvk-NX0TGA" name="StructuralFeature" isAbstract="true">
    <ownedComment xmi:id="_RzCGW3CoEdq2Lvk-NX0TGA" annotatedElement="_RzCGWnCoEdq2Lvk-NX0TGA">
      <body>A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier. Structural feature is an abstract metaclass.</body>
    </ownedComment>
    <ownedComment xmi:id="_R7OY4nCoEdq2Lvk-NX0TGA" annotatedElement="_RzCGWnCoEdq2Lvk-NX0TGA">
      <body>A structural feature is a typed feature of a classifier that specify the structure of instances of the classifier. Structural feature is an abstract metaclass.
By specializing multiplicity element, it supports a multiplicity that specifies valid cardinalities for the collection of values associated with an instantiation of the structural feature.
</body>
    </ownedComment>
    <generalization xmi:id="_RzCGXHCoEdq2Lvk-NX0TGA" general="_RyIuUHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_RzCGXXCoEdq2Lvk-NX0TGA" general="_RzLQIHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_RzCGXnCoEdq2Lvk-NX0TGA" general="_Gjgl0GveEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_R7OY43CoEdq2Lvk-NX0TGA" name="isReadOnly" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_R7OY5HCoEdq2Lvk-NX0TGA" annotatedElement="_R7OY43CoEdq2Lvk-NX0TGA">
        <body>States whether the feature's value may be modified by a client.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R7OY5XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_R7OY_3CoEdq2Lvk-NX0TGA" name="Slot">
    <ownedComment xmi:id="_R7OZAHCoEdq2Lvk-NX0TGA" annotatedElement="_R7OY_3CoEdq2Lvk-NX0TGA">
      <body>A slot is owned by an instance specification. It specifies the value or values for its defining feature, which must be a structural feature of a classifier of the instance specification owning the slot.</body>
    </ownedComment>
    <generalization xmi:id="_R7OZAXCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_R7OZAnCoEdq2Lvk-NX0TGA" name="owningInstance" type="_R7OY5nCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SAJVKnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R7OZA3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R7OZBHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R7OZBXCoEdq2Lvk-NX0TGA" annotatedElement="_R7OZAnCoEdq2Lvk-NX0TGA">
        <body>The instance specification that owns this slot.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7OZBnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7OZB3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R7OZCHCoEdq2Lvk-NX0TGA" name="definingFeature" type="_RzCGWnCoEdq2Lvk-NX0TGA" association="_SASfEHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R7OZCXCoEdq2Lvk-NX0TGA" annotatedElement="_R7OZCHCoEdq2Lvk-NX0TGA">
        <body>The structural feature that specifies the values that may be held by the slot.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7OZCnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7OZC3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R7OZDHCoEdq2Lvk-NX0TGA" name="value" type="_RzLQJ3CoEdq2Lvk-NX0TGA" isOrdered="true" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SBCF8nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R7OZDXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R7OZDnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R7OZD3CoEdq2Lvk-NX0TGA" annotatedElement="_R7OZDHCoEdq2Lvk-NX0TGA">
        <body>The value or values corresponding to the defining feature for the owning instance specification.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7OZEHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7OZEXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SnNPIGwIEdq7X4sGURiZYA" name="PackageImport">
    <ownedComment xmi:id="_R1ar0HCoEdq2Lvk-NX0TGA" annotatedElement="_SnNPIGwIEdq7X4sGURiZYA">
      <body>A package import is defined as a directed relationship that identifies a package whose members are to be imported by a namespace.</body>
    </ownedComment>
    <ownedRule xmi:id="_R1ar0XCoEdq2Lvk-NX0TGA" name="public_or_private" constrainedElement="_SnNPIGwIEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R1ar0nCoEdq2Lvk-NX0TGA" annotatedElement="_R1ar0XCoEdq2Lvk-NX0TGA">
        <body>The visibility of a PackageImport is either public or private.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R7rE0nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.visibility = #public or self.visibility = #private</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_R1ar1HCoEdq2Lvk-NX0TGA" general="_Rx-9UHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R1ar1XCoEdq2Lvk-NX0TGA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R1ar1nCoEdq2Lvk-NX0TGA" annotatedElement="_R1ar1XCoEdq2Lvk-NX0TGA">
        <body>Specifies the visibility of the imported PackageableElements within the importing Namespace, i.e., whether imported elements will in turn be visible to other packages that use that importingPackage as an importedPackage. If the PackageImport is public, the imported elements will be visible outside the package, while if it is private they will not.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_R7010HCoEdq2Lvk-NX0TGA" type="_AyM_oGwMEdq7X4sGURiZYA" instance="_R2Ah2XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R1ar3HCoEdq2Lvk-NX0TGA" name="importingNamespace" type="_ZiwkoGwLEdq7X4sGURiZYA" subsettedProperty="_Rx-9U3CoEdq2Lvk-NX0TGA _Rx-9bHCoEdq2Lvk-NX0TGA" association="_R2dNrnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R1ar3XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R1ar3nCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R1ar33CoEdq2Lvk-NX0TGA" annotatedElement="_R1ar3HCoEdq2Lvk-NX0TGA">
        <body>Specifies the Namespace that imports the members from a Package.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7010XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7010nCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R1ar2HCoEdq2Lvk-NX0TGA" name="importedPackage" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_Rx-9WXCoEdq2Lvk-NX0TGA" association="_R2dNpXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R1ar2XCoEdq2Lvk-NX0TGA" annotatedElement="_R1ar2HCoEdq2Lvk-NX0TGA">
        <body>Specifies the Package whose members are imported into a Namespace.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R70103CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7011HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_Rz63AHCoEdq2Lvk-NX0TGA" name="DataType">
    <ownedComment xmi:id="_Rz63AXCoEdq2Lvk-NX0TGA" annotatedElement="_Rz63AHCoEdq2Lvk-NX0TGA">
      <body>A data type is a type whose instances are identified only by their value. A DataType may contain attributes to support the modeling of structured data types.



A typical use of data types would be to represent programming language primitive types or CORBA basic types. For example, integer and string types are often treated as data types.</body>
    </ownedComment>
    <ownedComment xmi:id="_R-WlYnCoEdq2Lvk-NX0TGA" annotatedElement="_Rz63AHCoEdq2Lvk-NX0TGA">
      <body>A data type is a type whose instances are identified only by their value. A DataType may contain attributes to support the modeling of structured data types.

A typical use of data types would be to represent programming language primitive types or CORBA basic types. For example, integer and string types are often treated as data types.

</body>
    </ownedComment>
    <generalization xmi:id="_Rz63AnCoEdq2Lvk-NX0TGA" general="_6UV2QGwJEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_Rz63A3CoEdq2Lvk-NX0TGA" name="ownedAttribute" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RxPWcHCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_R2Tcr3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_Rz63BHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rz63BXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rz63BnCoEdq2Lvk-NX0TGA" annotatedElement="_Rz63A3CoEdq2Lvk-NX0TGA">
        <body>The Attributes owned by the DataType.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-WlY3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-WlZHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rz63CXCoEdq2Lvk-NX0TGA" name="ownedOperation" type="_M4X2IGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RxPWdnCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_R2TcsnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_Rz63CnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rz63C3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rz63DHCoEdq2Lvk-NX0TGA" annotatedElement="_Rz63CXCoEdq2Lvk-NX0TGA">
        <body>The Operations owned by the DataType.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-WlZXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-WlZnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_Rz63D3CoEdq2Lvk-NX0TGA" name="inherit" type="_csVgUGvtEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RxsCcnCoEdq2Lvk-NX0TGA" bodyCondition="_Rz63EXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_Rz63EHCoEdq2Lvk-NX0TGA" annotatedElement="_Rz63D3CoEdq2Lvk-NX0TGA">
        <body>The inherit operation is overridden to exclude redefined properties.</body>
      </ownedComment>
      <ownedRule xmi:id="_Rz63EXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_Rz63D3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Rz63EnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_Rz63E3CoEdq2Lvk-NX0TGA" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rz63FHCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rz63FXCoEdq2Lvk-NX0TGA"/>
      </returnResult>
      <ownedParameter xmi:id="_Rz63FnCoEdq2Lvk-NX0TGA" name="inhs" type="_csVgUGvtEdqG6fBIPwe-mw">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rz63F3CoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Rz63GHCoEdq2Lvk-NX0TGA"/>
      </ownedParameter>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_I6N3UGwGEdq7X4sGURiZYA" name="Enumeration">
    <ownedComment xmi:id="_Rz63GXCoEdq2Lvk-NX0TGA" annotatedElement="_I6N3UGwGEdq7X4sGURiZYA">
      <body>Enumeration is a kind of data type, whose instances may be any of a number of predefined enumeration literals.

It is possible to extend the set of applicable enumeration literals in other packages or profiles.

</body>
    </ownedComment>
    <ownedComment xmi:id="_R-WlZ3CoEdq2Lvk-NX0TGA" annotatedElement="_I6N3UGwGEdq7X4sGURiZYA">
      <body>Enumeration is a kind of data type, whose instances may be any of a number of user-defined enumeration literals.

It is possible to extend the set of applicable enumeration literals in other packages or profiles.

</body>
    </ownedComment>
    <generalization xmi:id="_Rz63GnCoEdq2Lvk-NX0TGA" general="_Rz63AHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_Rz63G3CoEdq2Lvk-NX0TGA" name="ownedLiteral" type="_OQcbgGwOEdq7X4sGURiZYA" isOrdered="true" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_R2TcrXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_Rz63HHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rz63HXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rz63HnCoEdq2Lvk-NX0TGA" annotatedElement="_Rz63G3CoEdq2Lvk-NX0TGA">
        <body>The ordered collection of literals for the enumeration.</body>
      </ownedComment>
      <ownedComment xmi:id="_R-gWYHCoEdq2Lvk-NX0TGA" annotatedElement="_Rz63G3CoEdq2Lvk-NX0TGA">
        <body>The ordered set of literals for this Enumeration.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-gWYXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-gWYnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_Iw7e0GwOEdq7X4sGURiZYA" name="createOwnedLiteral" type="_OQcbgGwOEdq7X4sGURiZYA">
      <returnResult xmi:id="_QktkMGwOEdq7X4sGURiZYA" type="_OQcbgGwOEdq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_SybY8GwOEdq7X4sGURiZYA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_OQcbgGwOEdq7X4sGURiZYA" name="EnumerationLiteral">
    <ownedComment xmi:id="_R0EoAHCoEdq2Lvk-NX0TGA" annotatedElement="_OQcbgGwOEdq7X4sGURiZYA">
      <body>An enumeration literal is a value of an enumeration.</body>
    </ownedComment>
    <ownedComment xmi:id="_R-gWY3CoEdq2Lvk-NX0TGA" annotatedElement="_OQcbgGwOEdq7X4sGURiZYA">
      <body>An enumeration literal is a user-defined data value for an enumeration.</body>
    </ownedComment>
    <generalization xmi:id="_R-gWZHCoEdq2Lvk-NX0TGA" general="_R7OY5nCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R0EoAnCoEdq2Lvk-NX0TGA" name="enumeration" type="_I6N3UGwGEdq7X4sGURiZYA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_R2TcrXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R0EoA3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R0EoBHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0EoBXCoEdq2Lvk-NX0TGA" annotatedElement="_R0EoAnCoEdq2Lvk-NX0TGA">
        <body>The enumeration that this literal belongs to.</body>
      </ownedComment>
      <ownedComment xmi:id="_R-gWZXCoEdq2Lvk-NX0TGA" annotatedElement="_R0EoAnCoEdq2Lvk-NX0TGA">
        <body>The Enumeration that this EnumerationLiteral is a member of.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-gWZnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-gWZ3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_V6vuYGwGEdq7X4sGURiZYA" name="PrimitiveType">
    <ownedComment xmi:id="_R0EoCHCoEdq2Lvk-NX0TGA" annotatedElement="_V6vuYGwGEdq7X4sGURiZYA">
      <body>A primitive type defines a predefined data type, without any relevant substructure (i.e. it has no parts in the context of the UML). A primitive datatype may have an algebra and operations defined out of UML, for example, mathematically.</body>
    </ownedComment>
    <generalization xmi:id="_R0EoCXCoEdq2Lvk-NX0TGA" general="_Rz63AHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_AwvxoGwNEdq7X4sGURiZYA" name="Association">
    <ownedComment xmi:id="_RzLQSXCoEdq2Lvk-NX0TGA" annotatedElement="_AwvxoGwNEdq7X4sGURiZYA">
      <body>An association specifies a semantic relationship that can occur between typed instances. It has at least two ends represented by properties, each of which is connected to the type of the end. More than one end of an association may have the same type.



An end property of an association that is owned by an end class or that is a navigable owned end of the association indicates that the association is navigable from the opposite ends, otherwise the association is not navigable from the opposite ends.</body>
    </ownedComment>
    <ownedRule xmi:id="_R-zRUHCoEdq2Lvk-NX0TGA" name="specialized_end_number" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R-zRUXCoEdq2Lvk-NX0TGA" annotatedElement="_R-zRUHCoEdq2Lvk-NX0TGA">
        <body>An association specializing another association has the same number of ends as the other association.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-zRUnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.parents()->forAll(p | p.memberEnd.size() = self.memberEnd.size())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R-zRU3CoEdq2Lvk-NX0TGA" name="specialized_end_types" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R-zRVHCoEdq2Lvk-NX0TGA" annotatedElement="_R-zRU3CoEdq2Lvk-NX0TGA">
        <body>When an association specializes another association, every end of the specific association corresponds to an end of the general association, and the specific end reaches the same type or a subtype of the more general end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-zRVXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R-zRVnCoEdq2Lvk-NX0TGA" name="binary_associations" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R-zRV3CoEdq2Lvk-NX0TGA" annotatedElement="_R-zRVnCoEdq2Lvk-NX0TGA">
        <body>Only binary associations can be aggregations.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-zRWHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.memberEnd->exists(aggregation &lt;> Aggregation::none) implies self.memberEnd->size() = 2</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_RzLQSnCoEdq2Lvk-NX0TGA" name="association_ends" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
      <ownedComment xmi:id="_RzLQS3CoEdq2Lvk-NX0TGA" annotatedElement="_RzLQSnCoEdq2Lvk-NX0TGA">
        <body>Association ends of associations with more than two ends must be owned by the association.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-zRWXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_RzLQTnCoEdq2Lvk-NX0TGA" general="_RzCGUXCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_RzLQTXCoEdq2Lvk-NX0TGA" general="_6UV2QGwJEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_RzLQT3CoEdq2Lvk-NX0TGA" name="isDerived" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_RzLQUHCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQT3CoEdq2Lvk-NX0TGA">
        <body>Specifies whether the association is derived from other model elements such as other associations or constraints.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R-9CUHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RzLQUnCoEdq2Lvk-NX0TGA" name="ownedEnd" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RzVBIHCoEdq2Lvk-NX0TGA _RxPWdnCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_R2KSvXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_RzLQU3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RzLQVHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_RzLQVXCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQUnCoEdq2Lvk-NX0TGA">
        <body>The ends that are owned by the association itself. This is an ordered association.</body>
      </ownedComment>
      <ownedComment xmi:id="_R-9CUXCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQUnCoEdq2Lvk-NX0TGA">
        <body>The ends that are owned by the association itself.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-9CUnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-9CU3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RzLQWHCoEdq2Lvk-NX0TGA" name="endType" type="_ynRtoGvtEdqG6fBIPwe-mw" isOrdered="true" isReadOnly="true" isDerived="true" subsettedProperty="_RzCGVHCoEdq2Lvk-NX0TGA" association="_R2TcqnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RzLQWXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RzLQWnCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RzLQW3CoEdq2Lvk-NX0TGA" annotatedElement="_RzLQWHCoEdq2Lvk-NX0TGA">
        <body>References the classifiers that are used as types of the ends of the association.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-9CVHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-9CVXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RzVBIHCoEdq2Lvk-NX0TGA" name="memberEnd" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RylaUnCoEdq2Lvk-NX0TGA" association="_R2dNuHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzVBIXCoEdq2Lvk-NX0TGA" annotatedElement="_RzVBIHCoEdq2Lvk-NX0TGA">
        <body>Each end represents participation of instances of the classifier connected to the end in links of the association. This is an ordered association.</body>
      </ownedComment>
      <ownedComment xmi:id="_R-9CVnCoEdq2Lvk-NX0TGA" annotatedElement="_RzVBIHCoEdq2Lvk-NX0TGA">
        <body>Each end represents participation of instances of the classifier connected to the end in links of the association.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-9CV3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-9CWHCoEdq2Lvk-NX0TGA" value="2"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RzVBJHCoEdq2Lvk-NX0TGA" name="navigableOwnedEnd" type="_Jp_1oGveEdq4DLWZOhbdEA" subsettedProperty="_RzLQUnCoEdq2Lvk-NX0TGA" association="_R2wIqXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzVBJXCoEdq2Lvk-NX0TGA" annotatedElement="_RzVBJHCoEdq2Lvk-NX0TGA">
        <body>The navigable ends that are owned by the association itself.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-9CWXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-9CWnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_R-9CW3CoEdq2Lvk-NX0TGA" name="endType" type="_ynRtoGvtEdqG6fBIPwe-mw" isOrdered="true" isQuery="true" bodyCondition="_R-9CX3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R-9CXHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_R-9CXXCoEdq2Lvk-NX0TGA" operationName="getEndTypes"/>
      </eAnnotations>
      <ownedComment xmi:id="_R-9CXnCoEdq2Lvk-NX0TGA" annotatedElement="_R-9CW3CoEdq2Lvk-NX0TGA">
        <body>endType is derived from the types of the member ends.</body>
      </ownedComment>
      <ownedRule xmi:id="_R-9CX3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R-9CW3CoEdq2Lvk-NX0TGA _RzLQWHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-9CYHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.memberEnd->collect(e | e.type)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R-9CYXCoEdq2Lvk-NX0TGA" type="_ynRtoGvtEdqG6fBIPwe-mw" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-9CYnCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-9CY3CoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_R2AhuXCoEdq2Lvk-NX0TGA" name="ParameterDirectionKind">
    <ownedComment xmi:id="_R2AhunCoEdq2Lvk-NX0TGA" annotatedElement="_R2AhuXCoEdq2Lvk-NX0TGA">
      <body>ParameterDirectionKind is an enumeration of the following literal values:

  - in Indicates that parameter values are passed into the behavioral element by the caller.

  - inout Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.

  - out Indicates that parameter values are passed from a behavioral element out to the caller.

  - return Indicates that parameter values are passed as return values from a behavioral element back to the caller.

</body>
    </ownedComment>
    <ownedComment xmi:id="_R_i4MHCoEdq2Lvk-NX0TGA" annotatedElement="_R2AhuXCoEdq2Lvk-NX0TGA">
      <body>ParameterDirectionKind is an enumeration of the following literal values:
 in Indicates that parameter values are passed into the behavioral element by the caller.
 inout Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.
 out Indicates that parameter values are passed from a behavioral element out to the caller.
 return Indicates that parameter values are passed as return values from a behavioral element back to the caller.
</body>
    </ownedComment>
    <ownedLiteral xmi:id="_R2Ahu3CoEdq2Lvk-NX0TGA" name="in">
      <ownedComment xmi:id="_R2AhvHCoEdq2Lvk-NX0TGA" annotatedElement="_R2Ahu3CoEdq2Lvk-NX0TGA">
        <body>Indicates that parameter values are passed into the behavioral element by the caller.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_R2AhvXCoEdq2Lvk-NX0TGA" name="inout">
      <ownedComment xmi:id="_R2AhvnCoEdq2Lvk-NX0TGA" annotatedElement="_R2AhvXCoEdq2Lvk-NX0TGA">
        <body>Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_R2Ahv3CoEdq2Lvk-NX0TGA" name="out">
      <ownedComment xmi:id="_R2AhwHCoEdq2Lvk-NX0TGA" annotatedElement="_R2Ahv3CoEdq2Lvk-NX0TGA">
        <body>Indicates that parameter values are passed from a behavioral element out to the caller.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_R2AhwXCoEdq2Lvk-NX0TGA" name="return">
      <ownedComment xmi:id="_R2AhwnCoEdq2Lvk-NX0TGA" annotatedElement="_R2AhwXCoEdq2Lvk-NX0TGA">
        <body>Indicates that parameter values are passed as return values from a behavioral element back to the caller.</body>
      </ownedComment>
    </ownedLiteral>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_RzCGUXCoEdq2Lvk-NX0TGA" name="Relationship" isAbstract="true">
    <ownedComment xmi:id="_RzCGUnCoEdq2Lvk-NX0TGA" annotatedElement="_RzCGUXCoEdq2Lvk-NX0TGA">
      <body>A relationship references one or more related elements. Relationship is an abstract metaclass.</body>
    </ownedComment>
    <generalization xmi:id="_RzCGU3CoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_RzCGVHCoEdq2Lvk-NX0TGA" name="relatedElement" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_R2m-rXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RzCGVXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RzCGVnCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RzCGV3CoEdq2Lvk-NX0TGA" annotatedElement="_RzCGVHCoEdq2Lvk-NX0TGA">
        <body>Specifies the elements related by the Relationship.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_i4OHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_i4OXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_R1ar4nCoEdq2Lvk-NX0TGA" name="PackageMerge">
    <ownedComment xmi:id="_R1ar43CoEdq2Lvk-NX0TGA" annotatedElement="_R1ar4nCoEdq2Lvk-NX0TGA">
      <body>A package merge is a directed relationship between two packages, that indicates that the contents of the two packages are to be combined. It is very similar to Generalization in the sense that the source element conceptually adds the characteristics of the target element to its own characteristics resulting in an element that combines the characteristics of both.



This mechanism should be used when elements defined in different packages have the same name and are intended to represent the same concept. Most often it is used to provide different definitions of a given concept for different purposes, starting from a common base definition. A given base concept is extended in increments, with each increment defined in a separate merged package. By selecting which increments to merge, it is possible to obtain a custom definition of a concept for a specific end. Package merge is particularly useful in meta-modeling and is extensively used in the definition of the UML metamodel.



Conceptually, a package merge can be viewed as an operation that takes the contents of two packages and produces a new package that combines the contents of the packages involved in the merge. In terms of model semantics, there is no difference between a model with explicit package merges, and a model in which all the merges have been performed.</body>
    </ownedComment>
    <ownedComment xmi:id="_R_i4OnCoEdq2Lvk-NX0TGA" annotatedElement="_R1ar4nCoEdq2Lvk-NX0TGA">
      <body>A package merge is a directed relationship between two packages, that indicates that the contents of the two packages are to be combined. It is very similar to Generalization in the sense that the source element conceptually adds the characteristics of the target element to its own characteristics resulting in an element that combines the characteristics of both. This mechanism should be used when elements defined in different packages have the same name and are intended to represent the same concept. Most often it is used to provide different definitions of a given concept for different purposes, starting from a common base definition. A given base concept is extended in increments, with each increment defined in a separate merged package. By selecting which increments to merge, it is possible to obtain a custom definition of a concept for a specific end. Package merge is particularly useful in meta-modeling and is extensively used in the definition of the UML metamodel.



Conceptually, a package merge can be viewed as an operation that takes the contents of two packages and produces a new package that combines the contents of the packages involved in the merge. In terms of model semantics, there is no difference between a model with explicit package merges, and a model in which all the merges have been performed.

</body>
    </ownedComment>
    <generalization xmi:id="_R1ar5HCoEdq2Lvk-NX0TGA" general="_Rx-9UHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R1ar5XCoEdq2Lvk-NX0TGA" name="receivingPackage" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_Rx-9U3CoEdq2Lvk-NX0TGA _Rx-9bHCoEdq2Lvk-NX0TGA" association="_R2m-pHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R1ar5nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R1ar53CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R1ar6HCoEdq2Lvk-NX0TGA" annotatedElement="_R1ar5XCoEdq2Lvk-NX0TGA">
        <body>References the Package that is being extended with the contents of the merged package of the PackageMerge.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_i4O3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_i4PHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R1ar63CoEdq2Lvk-NX0TGA" name="mergedPackage" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_Rx-9WXCoEdq2Lvk-NX0TGA" association="_R2m-p3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R1ar7HCoEdq2Lvk-NX0TGA" annotatedElement="_R1ar63CoEdq2Lvk-NX0TGA">
        <body>References the Package that is to be merged with the receiving package of the PackageMerge.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_i4PXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_i4PnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_PyCx8GveEdq4DLWZOhbdEA" name="InstanceValue">
    <ownedComment xmi:id="_R_spMHCoEdq2Lvk-NX0TGA" annotatedElement="_PyCx8GveEdq4DLWZOhbdEA">
      <body>An instance value specifies the value modeled by an instance specification.</body>
    </ownedComment>
    <generalization xmi:id="_R_spMXCoEdq2Lvk-NX0TGA" general="_RzLQJ3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R_spMnCoEdq2Lvk-NX0TGA" name="instance" type="_R7OY5nCoEdq2Lvk-NX0TGA" association="_SBCF8HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R_spM3CoEdq2Lvk-NX0TGA" annotatedElement="_R_spMnCoEdq2Lvk-NX0TGA">
        <body>The instance that is the specified value.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_spNHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_spNXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_QUJ-oWWKEdq-f4093SZhVA" name="stringValue" visibility="protected" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <eAnnotations xmi:id="_SQIjIGWKEdq-f4093SZhVA" source="keywords"/>
      <returnResult xmi:id="_T0RPYGWKEdq-f4093SZhVA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_B3q9cGwNEdq7X4sGURiZYA" name="AggregationKind">
    <ownedComment xmi:id="_R_spNnCoEdq2Lvk-NX0TGA" annotatedElement="_B3q9cGwNEdq7X4sGURiZYA">
      <body>AggregationKind is an enumeration of the following literal values:
 none Indicates that the property has no aggregation.
 shared Indicates that the property has a shared aggregation.
 composite Indicates that the property is aggregated compositely, i.e., the composite object has
responsibility for the existence and storage of the composed objects (parts).
</body>
    </ownedComment>
    <ownedLiteral xmi:id="_R_spN3CoEdq2Lvk-NX0TGA" name="none">
      <ownedComment xmi:id="_R_spOHCoEdq2Lvk-NX0TGA" annotatedElement="_R_spN3CoEdq2Lvk-NX0TGA">
        <body>Indicates that the property has no aggregation.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_R_spOXCoEdq2Lvk-NX0TGA" name="shared">
      <ownedComment xmi:id="_R_spOnCoEdq2Lvk-NX0TGA" annotatedElement="_R_spOXCoEdq2Lvk-NX0TGA">
        <body>Indicates that the property has a shared aggregation.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_R_spO3CoEdq2Lvk-NX0TGA" name="composite">
      <ownedComment xmi:id="_R_spPHCoEdq2Lvk-NX0TGA" annotatedElement="_R_spO3CoEdq2Lvk-NX0TGA">
        <body>Indicates that the property is aggregated compositely, i.e., the composite object has responsibility for the existence and storage of the composed objects (parts).</body>
      </ownedComment>
    </ownedLiteral>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_Q-yR4GveEdq4DLWZOhbdEA" name="LiteralUnlimitedNatural">
    <ownedComment xmi:id="_R_spPXCoEdq2Lvk-NX0TGA" annotatedElement="_Q-yR4GveEdq4DLWZOhbdEA">
      <body>A literal unlimited natural contains a UnlimitedNatural-valued attribute.</body>
    </ownedComment>
    <generalization xmi:id="_R_1zIHCoEdq2Lvk-NX0TGA" general="_R4sCQHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R_1zIXCoEdq2Lvk-NX0TGA" name="value" type="_dRZxsGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_R_1zInCoEdq2Lvk-NX0TGA" annotatedElement="_R_1zIXCoEdq2Lvk-NX0TGA">
        <body>The specified UnlimitedNatural value.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_1zI3CoEdq2Lvk-NX0TGA" type="_dRZxsGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_lSARkGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_nyfRUGWKEdq-f4093SZhVA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R_1zJHCoEdq2Lvk-NX0TGA" name="isComputable" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzLQK3CoEdq2Lvk-NX0TGA" bodyCondition="_R_1zJnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R_1zJXCoEdq2Lvk-NX0TGA" annotatedElement="_R_1zJHCoEdq2Lvk-NX0TGA">
        <body>The query isComputable() is redefined to be true.</body>
      </ownedComment>
      <ownedRule xmi:id="_R_1zJnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R_1zJHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_1zJ3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R_1zKHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R_1zKXCoEdq2Lvk-NX0TGA" name="unlimitedValue" type="_dRZxsGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzLQP3CoEdq2Lvk-NX0TGA" bodyCondition="_R_1zK3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R_1zKnCoEdq2Lvk-NX0TGA" annotatedElement="_R_1zKXCoEdq2Lvk-NX0TGA">
        <body>The query unlimitedValue() gives the value.</body>
      </ownedComment>
      <ownedRule xmi:id="_R_1zK3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R_1zKXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_1zLHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = value</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R_1zLXCoEdq2Lvk-NX0TGA" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_ynRtoGvtEdqG6fBIPwe-mw" name="Type" isAbstract="true">
    <ownedComment xmi:id="_R1ar73CoEdq2Lvk-NX0TGA" annotatedElement="_ynRtoGvtEdqG6fBIPwe-mw">
      <body>A type serves as a constraint on the range of values represented by a typed element. Type is an abstract metaclass.</body>
    </ownedComment>
    <generalization xmi:id="_R1j1wXCoEdq2Lvk-NX0TGA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_R1tmwHCoEdq2Lvk-NX0TGA" name="package" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_R2dNtnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R1tmwXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R1tmwnCoEdq2Lvk-NX0TGA"/>
      </eAnnotations>
      <ownedComment xmi:id="_R1tmw3CoEdq2Lvk-NX0TGA" annotatedElement="_R1tmwHCoEdq2Lvk-NX0TGA">
        <body>References the owning package of a package.</body>
      </ownedComment>
      <ownedComment xmi:id="_R_1zLnCoEdq2Lvk-NX0TGA" annotatedElement="_R1tmwHCoEdq2Lvk-NX0TGA">
        <body>Specifies the owning package of this classifier, if any.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_1zL3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_1zMHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_RNEaIGwNEdq7X4sGURiZYA" name="createAssociation" type="_AwvxoGwNEdq7X4sGURiZYA">
      <returnResult xmi:id="_URUOQGwNEdq7X4sGURiZYA" type="_AwvxoGwNEdq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_AEONYGwOEdq7X4sGURiZYA" name="end1IsNavigable" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_7HueMGwNEdq7X4sGURiZYA" name="end1Aggregation" type="_B3q9cGwNEdq7X4sGURiZYA" effect="read"/>
      <ownedParameter xmi:id="_2TaaoGwNEdq7X4sGURiZYA" name="end1Name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_x-QYQGwNEdq7X4sGURiZYA" name="end1Lower" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_uL9yYGwNEdq7X4sGURiZYA" name="end1Upper" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_qFQbsGwNEdq7X4sGURiZYA" name="end1Type" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_mB-McGwNEdq7X4sGURiZYA" name="end2IsNavigable" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_hm2sAGwNEdq7X4sGURiZYA" name="end2Aggregation" type="_B3q9cGwNEdq7X4sGURiZYA" effect="read"/>
      <ownedParameter xmi:id="_eK6JkGwNEdq7X4sGURiZYA" name="end2Name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_auE2UGwNEdq7X4sGURiZYA" name="end2Lower" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_VprIUGwNEdq7X4sGURiZYA" name="end2Upper" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R1tmxnCoEdq2Lvk-NX0TGA" name="conformsTo" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R1tmyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R1tmx3CoEdq2Lvk-NX0TGA" annotatedElement="_R1tmxnCoEdq2Lvk-NX0TGA">
        <body>The query conformsTo() gives true for a type that conforms to another. By default, two types do not conform to each other. This query is intended to be redefined for specific conformance situations.</body>
      </ownedComment>
      <ownedRule xmi:id="_R1tmyHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R1tmxnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R__kIHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = false</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R1tmynCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_R1tmy3CoEdq2Lvk-NX0TGA" name="other" type="_ynRtoGvtEdqG6fBIPwe-mw"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_R2AhsHCoEdq2Lvk-NX0TGA" name="Expression">
    <ownedComment xmi:id="_R2AhsXCoEdq2Lvk-NX0TGA" annotatedElement="_R2AhsHCoEdq2Lvk-NX0TGA">
      <body>An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context.</body>
    </ownedComment>
    <ownedComment xmi:id="_R__kIXCoEdq2Lvk-NX0TGA" annotatedElement="_R2AhsHCoEdq2Lvk-NX0TGA">
      <body>An expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands which are value specifications.</body>
    </ownedComment>
    <generalization xmi:id="_R2AhsnCoEdq2Lvk-NX0TGA" general="_RzLQJ3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R__kInCoEdq2Lvk-NX0TGA" name="symbol" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <eAnnotations xmi:id="_R__kI3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R__kJHCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R__kJXCoEdq2Lvk-NX0TGA" annotatedElement="_R__kInCoEdq2Lvk-NX0TGA">
        <body>The symbol associated with the node in the expression tree.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R__kJnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R__kJ3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R2Ahs3CoEdq2Lvk-NX0TGA" name="operand" type="_RzLQJ3CoEdq2Lvk-NX0TGA" isOrdered="true" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_R2wIpHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R2AhtHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R2AhtXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R2AhtnCoEdq2Lvk-NX0TGA" annotatedElement="_R2Ahs3CoEdq2Lvk-NX0TGA">
        <body>Specifies a sequence of operands.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R__kKHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R__kKXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2m-qnCoEdq2Lvk-NX0TGA" name="A_ownedElement_owner" memberEnd="_Rx-9bHCoEdq2Lvk-NX0TGA _Rx-9ZnCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2m-r3CoEdq2Lvk-NX0TGA" name="A_source_directedRelationship" memberEnd="_R2m-sXCoEdq2Lvk-NX0TGA _Rx-9U3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2m-sHCoEdq2Lvk-NX0TGA" general="_R2m-rXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2m-sXCoEdq2Lvk-NX0TGA" type="_Rx-9UHCoEdq2Lvk-NX0TGA" redefinedProperty="_R2m-rnCoEdq2Lvk-NX0TGA" association="_R2m-r3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2m-snCoEdq2Lvk-NX0TGA" name="A_target_directedRelationship" memberEnd="_Rx-9WXCoEdq2Lvk-NX0TGA _R2m-tHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2m-s3CoEdq2Lvk-NX0TGA" general="_R2m-rXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2m-tHCoEdq2Lvk-NX0TGA" type="_Rx-9UHCoEdq2Lvk-NX0TGA" redefinedProperty="_R2m-rnCoEdq2Lvk-NX0TGA" association="_R2m-snCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2wIlnCoEdq2Lvk-NX0TGA" name="A_constrainedElement_constraint" memberEnd="_R2wIl3CoEdq2Lvk-NX0TGA _R0OZCXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2wIl3CoEdq2Lvk-NX0TGA" type="_R0OZAHCoEdq2Lvk-NX0TGA" association="_R2wIlnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2KStHCoEdq2Lvk-NX0TGA" name="A_type_typedElement" memberEnd="_R2KStXCoEdq2Lvk-NX0TGA _RzLQI3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2KStXCoEdq2Lvk-NX0TGA" type="_RzLQIHCoEdq2Lvk-NX0TGA" association="_R2KStHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SAJVIHCoEdq2Lvk-NX0TGA" name="A_generalization_specific" memberEnd="_R6xs_nCoEdq2Lvk-NX0TGA _R6CGE3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SAJVIXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SAJVInCoEdq2Lvk-NX0TGA" general="_R2m-r3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SAJVI3CoEdq2Lvk-NX0TGA" name="A_general_generalization" memberEnd="_R6xtBHCoEdq2Lvk-NX0TGA _SAJVJXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SAJVJHCoEdq2Lvk-NX0TGA" general="_R2m-snCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SAJVJXCoEdq2Lvk-NX0TGA" type="_C7AF4GwREdq14q0ETb1t3g" redefinedProperty="_R2m-tHCoEdq2Lvk-NX0TGA" association="_SAJVI3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2wIlHCoEdq2Lvk-NX0TGA" name="A_feature_featuringClassifier" memberEnd="_RyIuU3CoEdq2Lvk-NX0TGA _RxPWdnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2wIlXCoEdq2Lvk-NX0TGA" general="_R2wIonCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2TcvHCoEdq2Lvk-NX0TGA" name="A_ownedParameter_ownerFormalParam" memberEnd="_R2TcvnCoEdq2Lvk-NX0TGA _R00O9nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2TcvXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2TcvnCoEdq2Lvk-NX0TGA" name="ownerFormalParam" type="_R00O8nCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_R2TcvHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SAJVJnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SAJVJ3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SAJVKHCoEdq2Lvk-NX0TGA" name="A_classifier_instanceSpecification" memberEnd="_SAJVKXCoEdq2Lvk-NX0TGA _R7OY73CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SAJVKXCoEdq2Lvk-NX0TGA" type="_R7OY5nCoEdq2Lvk-NX0TGA" association="_SAJVKHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SAJVKnCoEdq2Lvk-NX0TGA" name="A_slot_owningInstance" memberEnd="_R7OY83CoEdq2Lvk-NX0TGA _R7OZAnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SAJVK3CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SASfEHCoEdq2Lvk-NX0TGA" name="A_definingFeature_slot" memberEnd="_R7OZCHCoEdq2Lvk-NX0TGA _SASfEXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SASfEXCoEdq2Lvk-NX0TGA" type="_R7OY_3CoEdq2Lvk-NX0TGA" association="_SASfEHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2m-q3CoEdq2Lvk-NX0TGA" name="A_annotatedElement_comment" memberEnd="_R2m-rHCoEdq2Lvk-NX0TGA _R2AhzHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2m-rHCoEdq2Lvk-NX0TGA" type="_R2Ahw3CoEdq2Lvk-NX0TGA" association="_R2m-q3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R255kHCoEdq2Lvk-NX0TGA" name="A_ownedComment_owningElement" memberEnd="_R255knCoEdq2Lvk-NX0TGA _Rx-9cnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R255kXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R255knCoEdq2Lvk-NX0TGA" name="owningElement" type="_kl90MGvbEdq4DLWZOhbdEA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_R255kHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SASfEnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SASfE3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2dNqHCoEdq2Lvk-NX0TGA" name="A_importedElement_elementImport" memberEnd="_R2dNqnCoEdq2Lvk-NX0TGA _R09_8XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2dNqXCoEdq2Lvk-NX0TGA" general="_R2m-snCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2dNqnCoEdq2Lvk-NX0TGA" type="_RPl78GwIEdq7X4sGURiZYA" redefinedProperty="_R2m-tHCoEdq2Lvk-NX0TGA" association="_R2dNqHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R255mXCoEdq2Lvk-NX0TGA" name="A_inheritedMember_classifier" memberEnd="_R255m3CoEdq2Lvk-NX0TGA _RxPWgHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R255mnCoEdq2Lvk-NX0TGA" general="_R2wIonCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R255m3CoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" redefinedProperty="_R2wIo3CoEdq2Lvk-NX0TGA" association="_R255mXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SASfFHCoEdq2Lvk-NX0TGA" name="A_nestedClassifier_class" memberEnd="_SASfF3CoEdq2Lvk-NX0TGA _R8tmoHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SASfFXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SASfFnCoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SASfF3CoEdq2Lvk-NX0TGA" name="class" type="_00owUGvdEdq4DLWZOhbdEA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA _RzCGOXCoEdq2Lvk-NX0TGA" association="_SASfFHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SASfGHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SASfGXCoEdq2Lvk-NX0TGA" referenceName="class_"/>
      </eAnnotations>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SASfGnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SASfG3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2KStnCoEdq2Lvk-NX0TGA" name="A_ownedAttribute_class" memberEnd="_Rzn8I3CoEdq2Lvk-NX0TGA _RzVBLXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2KSuHCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_ScTssHCoEdq2Lvk-NX0TGA" general="_SEBIhnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2KSuXCoEdq2Lvk-NX0TGA" name="A_ownedOperation_class" memberEnd="_R0XjEnCoEdq2Lvk-NX0TGA _RzVBM3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2KSunCoEdq2Lvk-NX0TGA" general="_R2wIlHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2KSu3CoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2KSvHCoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R255nHCoEdq2Lvk-NX0TGA" name="A_precondition_preContext" memberEnd="_R255nnCoEdq2Lvk-NX0TGA _R0hUBHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R255nXCoEdq2Lvk-NX0TGA" general="_R255q3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R255nnCoEdq2Lvk-NX0TGA" name="preContext" type="_M4X2IGveEdq4DLWZOhbdEA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA _R0OZE3CoEdq2Lvk-NX0TGA" association="_R255nHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SAcQEHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SAcQEXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R255oXCoEdq2Lvk-NX0TGA" name="A_postcondition_postContext" memberEnd="_R255o3CoEdq2Lvk-NX0TGA _R0hUCXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R255onCoEdq2Lvk-NX0TGA" general="_R255q3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R255o3CoEdq2Lvk-NX0TGA" name="postContext" type="_M4X2IGveEdq4DLWZOhbdEA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA _R0OZE3CoEdq2Lvk-NX0TGA" association="_R255oXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SAcQEnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SAcQE3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2TcuXCoEdq2Lvk-NX0TGA" name="A_redefinedOperation_operation" memberEnd="_R2Tcu3CoEdq2Lvk-NX0TGA _R0hT9HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2TcunCoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2Tcu3CoEdq2Lvk-NX0TGA" type="_M4X2IGveEdq4DLWZOhbdEA" redefinedProperty="_R2wIk3CoEdq2Lvk-NX0TGA" association="_R2TcuXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2TcoHCoEdq2Lvk-NX0TGA" name="A_redefinedProperty_property" memberEnd="_Rzn8L3CoEdq2Lvk-NX0TGA _R2TconCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2TcoXCoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2TconCoEdq2Lvk-NX0TGA" type="_Jp_1oGveEdq4DLWZOhbdEA" redefinedProperty="_R2wIk3CoEdq2Lvk-NX0TGA" association="_R2TcoHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2KSvXCoEdq2Lvk-NX0TGA" name="A_ownedEnd_owningAssociation" memberEnd="_RzLQUnCoEdq2Lvk-NX0TGA _Rzn8KXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2KSvnCoEdq2Lvk-NX0TGA" general="_R2dNuHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2KSv3CoEdq2Lvk-NX0TGA" general="_R2wIlHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2KSwHCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2Tcr3CoEdq2Lvk-NX0TGA" name="A_ownedAttribute_datatype" memberEnd="_Rz63A3CoEdq2Lvk-NX0TGA _Rzn8PXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2TcsHCoEdq2Lvk-NX0TGA" general="_R2KSwXCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2TcsXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2TcsnCoEdq2Lvk-NX0TGA" name="A_ownedOperation_datatype" memberEnd="_Rz63CXCoEdq2Lvk-NX0TGA _R0XjGHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2Tcs3CoEdq2Lvk-NX0TGA" general="_R2wIlHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2TctHCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2TctXCoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2TcrXCoEdq2Lvk-NX0TGA" name="A_ownedLiteral_enumeration" memberEnd="_Rz63G3CoEdq2Lvk-NX0TGA _R0EoAnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2TcrnCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2dNq3CoEdq2Lvk-NX0TGA" name="A_elementImport_importingNamespace" memberEnd="_R09_9XCoEdq2Lvk-NX0TGA _RylaQHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2dNrHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2dNrXCoEdq2Lvk-NX0TGA" general="_R2m-r3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2dNrnCoEdq2Lvk-NX0TGA" name="A_packageImport_importingNamespace" memberEnd="_R1ar3HCoEdq2Lvk-NX0TGA _RylaRnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2dNr3CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2dNsHCoEdq2Lvk-NX0TGA" general="_R2m-r3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2dNpXCoEdq2Lvk-NX0TGA" name="A_importedPackage_packageImport" memberEnd="_R2dNp3CoEdq2Lvk-NX0TGA _R1ar2HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2dNpnCoEdq2Lvk-NX0TGA" general="_R2m-snCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2dNp3CoEdq2Lvk-NX0TGA" type="_SnNPIGwIEdq7X4sGURiZYA" redefinedProperty="_R2m-tHCoEdq2Lvk-NX0TGA" association="_R2dNpXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SAvLAHCoEdq2Lvk-NX0TGA" name="A_redefinedClassifier_classifier" memberEnd="_R6L3EnCoEdq2Lvk-NX0TGA _SAvLAnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SAvLAXCoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SAvLAnCoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" redefinedProperty="_R2wIk3CoEdq2Lvk-NX0TGA" association="_SAvLAHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2wImHCoEdq2Lvk-NX0TGA" name="A_specification_owningConstraint" memberEnd="_R2wImnCoEdq2Lvk-NX0TGA _R0OZDXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2wImXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2wImnCoEdq2Lvk-NX0TGA" name="owningConstraint" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_R2wImHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SAvLA3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SAvLBHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SAvLBXCoEdq2Lvk-NX0TGA" name="A_defaultValue_owningParameter" memberEnd="_SAvLB3CoEdq2Lvk-NX0TGA _R7En43CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SAvLBnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SAvLB3CoEdq2Lvk-NX0TGA" name="owningParameter" type="_KyaPMGveEdq4DLWZOhbdEA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SAvLBXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SAvLCHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SAvLCXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SAvLCnCoEdq2Lvk-NX0TGA" name="A_defaultValue_owningProperty" memberEnd="_R9UDk3CoEdq2Lvk-NX0TGA _SAvLDHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SAvLC3CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SAvLDHCoEdq2Lvk-NX0TGA" name="owningProperty" type="_Jp_1oGveEdq4DLWZOhbdEA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SAvLCnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SAvLDXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SAvLDnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R255q3CoEdq2Lvk-NX0TGA" name="A_ownedRule_context" memberEnd="_R0OZE3CoEdq2Lvk-NX0TGA _RylaWHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R255rHCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2wIonCoEdq2Lvk-NX0TGA" name="A_member_namespace" memberEnd="_R2wIo3CoEdq2Lvk-NX0TGA _RylaUnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2wIo3CoEdq2Lvk-NX0TGA" type="_ZiwkoGwLEdq7X4sGURiZYA" association="_R2wIonCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2m-rXCoEdq2Lvk-NX0TGA" name="A_relatedElement_relationship" memberEnd="_R2m-rnCoEdq2Lvk-NX0TGA _RzCGVHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2m-rnCoEdq2Lvk-NX0TGA" type="_RzCGUXCoEdq2Lvk-NX0TGA" association="_R2m-rXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2TcqnCoEdq2Lvk-NX0TGA" name="A_endType_association" memberEnd="_R2TcrHCoEdq2Lvk-NX0TGA _RzLQWHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2Tcq3CoEdq2Lvk-NX0TGA" general="_R2m-rXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2TcrHCoEdq2Lvk-NX0TGA" type="_AwvxoGwNEdq7X4sGURiZYA" redefinedProperty="_R2m-rnCoEdq2Lvk-NX0TGA" association="_R2TcqnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SA48AHCoEdq2Lvk-NX0TGA" name="A_upperValue_owningUpper" memberEnd="_SA48AnCoEdq2Lvk-NX0TGA _R5laIHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SA48AXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SA48AnCoEdq2Lvk-NX0TGA" name="owningUpper" type="_Gjgl0GveEdq4DLWZOhbdEA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SA48AHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SA48A3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SA48BHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SA48BXCoEdq2Lvk-NX0TGA" name="A_lowerValue_owningLower" memberEnd="_R5laJnCoEdq2Lvk-NX0TGA _SA48B3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SA48BnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SA48B3CoEdq2Lvk-NX0TGA" name="owningLower" type="_Gjgl0GveEdq4DLWZOhbdEA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SA48BXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SA48CHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SA48CXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2m-pHCoEdq2Lvk-NX0TGA" name="A_receivingPackage_packageMerge" memberEnd="_R1Q64nCoEdq2Lvk-NX0TGA _R1ar5XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2m-pnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2m-pXCoEdq2Lvk-NX0TGA" general="_R2m-r3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2m-p3CoEdq2Lvk-NX0TGA" name="A_mergedPackage_packageMerge" memberEnd="_R2m-qXCoEdq2Lvk-NX0TGA _R1ar63CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2m-qHCoEdq2Lvk-NX0TGA" general="_R2m-snCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2m-qXCoEdq2Lvk-NX0TGA" type="_R1ar4nCoEdq2Lvk-NX0TGA" redefinedProperty="_R2m-tHCoEdq2Lvk-NX0TGA" association="_R2m-p3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SBCF8HCoEdq2Lvk-NX0TGA" name="A_instance_instanceValue" memberEnd="_R_spMnCoEdq2Lvk-NX0TGA _SBCF8XCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SBCF8XCoEdq2Lvk-NX0TGA" type="_PyCx8GveEdq4DLWZOhbdEA" association="_SBCF8HCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SBCF8nCoEdq2Lvk-NX0TGA" name="A_value_owningSlot" memberEnd="_R7OZDHCoEdq2Lvk-NX0TGA _SBCF9HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SBCF83CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SBCF9HCoEdq2Lvk-NX0TGA" name="owningSlot" type="_R7OY_3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SBCF8nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBCF9XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBCF9nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SBCF93CoEdq2Lvk-NX0TGA" name="A_specification_owningInstanceSpec" memberEnd="_SBCF-XCoEdq2Lvk-NX0TGA _R7OY-XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SBCF-HCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SBCF-XCoEdq2Lvk-NX0TGA" name="owningInstanceSpec" type="_R7OY5nCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SBCF93CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBCF-nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBCF-3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2dNsXCoEdq2Lvk-NX0TGA" name="A_packagedElement_owningPackage" memberEnd="_R1HJ23CoEdq2Lvk-NX0TGA _R2dNs3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2dNsnCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2dNs3CoEdq2Lvk-NX0TGA" name="owningPackage" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_R2dNsXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBCF_HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBCF_XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2dNonCoEdq2Lvk-NX0TGA" name="A_importedMember_namespace" memberEnd="_R2dNpHCoEdq2Lvk-NX0TGA _RybpSnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2dNo3CoEdq2Lvk-NX0TGA" general="_R2wIonCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2dNpHCoEdq2Lvk-NX0TGA" type="_ZiwkoGwLEdq7X4sGURiZYA" redefinedProperty="_R2wIo3CoEdq2Lvk-NX0TGA" association="_R2dNonCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2TcpXCoEdq2Lvk-NX0TGA" name="A_opposite_property" memberEnd="_R2TcpnCoEdq2Lvk-NX0TGA _Rzn8N3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2TcpnCoEdq2Lvk-NX0TGA" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_R2TcpXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2Tco3CoEdq2Lvk-NX0TGA" name="A_subsettedProperty_property" memberEnd="_Rzn8M3CoEdq2Lvk-NX0TGA _R2TcpHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2TcpHCoEdq2Lvk-NX0TGA" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_R2Tco3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2dNuHCoEdq2Lvk-NX0TGA" name="A_memberEnd_association" memberEnd="_RzxtEHCoEdq2Lvk-NX0TGA _RzVBIHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2dNuXCoEdq2Lvk-NX0TGA" general="_R2wIonCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2dNtnCoEdq2Lvk-NX0TGA" name="A_ownedType_package" memberEnd="_R1Q60HCoEdq2Lvk-NX0TGA _R1tmwHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2dNt3CoEdq2Lvk-NX0TGA" general="_R2dNsXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2m-oHCoEdq2Lvk-NX0TGA" name="A_nestedPackage_nestingPackage" memberEnd="_R1Q61nCoEdq2Lvk-NX0TGA _R1Q63HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2m-oXCoEdq2Lvk-NX0TGA" general="_R2dNsXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2wIknCoEdq2Lvk-NX0TGA" name="A_redefinedElement_redefinableElement" memberEnd="_R2wIk3CoEdq2Lvk-NX0TGA _RzCGP3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2wIk3CoEdq2Lvk-NX0TGA" type="_RzCGMHCoEdq2Lvk-NX0TGA" association="_R2wIknCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBL28HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBL28XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2wIkHCoEdq2Lvk-NX0TGA" name="A_redefinitionContext_redefinableElement" memberEnd="_R2wIkXCoEdq2Lvk-NX0TGA _RzCGOXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2wIkXCoEdq2Lvk-NX0TGA" type="_RzCGMHCoEdq2Lvk-NX0TGA" association="_R2wIkHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2wInXCoEdq2Lvk-NX0TGA" name="A_general_classifier" memberEnd="_R2wInnCoEdq2Lvk-NX0TGA _RxPWfHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2wInnCoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" association="_R2wInXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2Tcp3CoEdq2Lvk-NX0TGA" name="A_superClass_class" memberEnd="_R2TcqXCoEdq2Lvk-NX0TGA _RzVBOXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2TcqHCoEdq2Lvk-NX0TGA" general="_R2wInXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2TcqXCoEdq2Lvk-NX0TGA" type="_00owUGvdEdq4DLWZOhbdEA" redefinedProperty="_R2wInnCoEdq2Lvk-NX0TGA" association="_R2Tcp3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R255pnCoEdq2Lvk-NX0TGA" name="A_bodyCondition_bodyContext" memberEnd="_R255qHCoEdq2Lvk-NX0TGA _R0hUDnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R255p3CoEdq2Lvk-NX0TGA" general="_R255q3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R255qHCoEdq2Lvk-NX0TGA" name="bodyContext" type="_M4X2IGveEdq4DLWZOhbdEA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA _R0OZE3CoEdq2Lvk-NX0TGA" association="_R255pnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBL28nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBL283CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2m-onCoEdq2Lvk-NX0TGA" name="A_type_operation" memberEnd="_R0hT-HCoEdq2Lvk-NX0TGA _R2m-o3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2m-o3CoEdq2Lvk-NX0TGA" type="_M4X2IGveEdq4DLWZOhbdEA" association="_R2m-onCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2wIrHCoEdq2Lvk-NX0TGA" name="A_ownedParameter_operation" memberEnd="_R00O7HCoEdq2Lvk-NX0TGA _R0hT_nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2wIrXCoEdq2Lvk-NX0TGA" general="_R2TcvHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2wIpHCoEdq2Lvk-NX0TGA" name="A_operand_expression" memberEnd="_R2wIpnCoEdq2Lvk-NX0TGA _R2Ahs3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2wIpXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2wIpnCoEdq2Lvk-NX0TGA" name="expression" type="_R2AhsHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_R2wIpHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBVn8HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBVn8XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2TctnCoEdq2Lvk-NX0TGA" name="A_raisedException_operation" memberEnd="_R0hT8HCoEdq2Lvk-NX0TGA _R2TcuHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2Tct3CoEdq2Lvk-NX0TGA" general="_R2dNoHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2TcuHCoEdq2Lvk-NX0TGA" type="_M4X2IGveEdq4DLWZOhbdEA" redefinedProperty="_R2dNoXCoEdq2Lvk-NX0TGA" association="_R2TctnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2wIqXCoEdq2Lvk-NX0TGA" name="A_navigableOwnedEnd_association" memberEnd="_RzVBJHCoEdq2Lvk-NX0TGA _R2wIq3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2wIqnCoEdq2Lvk-NX0TGA" general="_R2KSvXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2wIq3CoEdq2Lvk-NX0TGA" type="_AwvxoGwNEdq7X4sGURiZYA" redefinedProperty="_R2wIo3CoEdq2Lvk-NX0TGA" association="_R2wIqXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R255lXCoEdq2Lvk-NX0TGA" name="A_body_opaqueExpression" memberEnd="_R255lnCoEdq2Lvk-NX0TGA _R0OZIHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R255lnCoEdq2Lvk-NX0TGA" type="_ChRfcGveEdq4DLWZOhbdEA" association="_R255lXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBex4HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBex4XCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R255l3CoEdq2Lvk-NX0TGA" name="A_language_opaqueExpression" memberEnd="_R255mHCoEdq2Lvk-NX0TGA _R0OZJnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R255mHCoEdq2Lvk-NX0TGA" type="_ChRfcGveEdq4DLWZOhbdEA" association="_R255l3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBex4nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBex43CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_ChRfcGveEdq4DLWZOhbdEA" name="OpaqueExpression">
    <ownedComment xmi:id="_R0OZGHCoEdq2Lvk-NX0TGA" annotatedElement="_ChRfcGveEdq4DLWZOhbdEA">
      <body>An opaque expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages.</body>
    </ownedComment>
    <ownedComment xmi:id="_R4ZHUHCoEdq2Lvk-NX0TGA" annotatedElement="_ChRfcGveEdq4DLWZOhbdEA">
      <body>An expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages.

One predefined language for specifying expressions is OCL. Natural language or programming languages may also be used.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SByT5HCoEdq2Lvk-NX0TGA" annotatedElement="_ChRfcGveEdq4DLWZOhbdEA">
      <body>Provides a mechanism for precisely defining the behavior of an opaque expression. An opaque expression is defined by a behavior restricted to return one result.</body>
    </ownedComment>
    <ownedRule xmi:id="_R0OZGXCoEdq2Lvk-NX0TGA" name="language_body_size" constrainedElement="_ChRfcGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_R0OZGnCoEdq2Lvk-NX0TGA" annotatedElement="_R0OZGXCoEdq2Lvk-NX0TGA">
        <body>If the language attribute is not empty, then the size of the body and language arrays must be the same.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4ZHUXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>language->notEmpty() implies (body->size() = language->size())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R0OZHHCoEdq2Lvk-NX0TGA" name="one_body_default_language" constrainedElement="_ChRfcGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_R0OZHXCoEdq2Lvk-NX0TGA" annotatedElement="_R0OZHHCoEdq2Lvk-NX0TGA">
        <body>If there is only one body then the size of the language is exactly 0 (corresponding to the default language).</body>
      </ownedComment>
      <ownedComment xmi:id="_R4ZHUnCoEdq2Lvk-NX0TGA" annotatedElement="_R0OZHHCoEdq2Lvk-NX0TGA">
        <body>The there is only one body then the size of the language is exactly 0 (corresponding to the default language).</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4ZHU3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>language->isEmpty() implies (body->size() &lt;= 1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SByT5XCoEdq2Lvk-NX0TGA" name="only_return_result_parameters" constrainedElement="_ChRfcGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SByT5nCoEdq2Lvk-NX0TGA" annotatedElement="_SByT5XCoEdq2Lvk-NX0TGA">
        <body>The behavior may only have return result parameters.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SByT53CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.behavior.notEmpty() implies

  self.behavior.ownedParameters->select(p | p.direction&lt;>#return)->isEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SByT6HCoEdq2Lvk-NX0TGA" name="one_return_result_parameter" constrainedElement="_ChRfcGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SByT6XCoEdq2Lvk-NX0TGA" annotatedElement="_SByT6HCoEdq2Lvk-NX0TGA">
        <body>The behavior must have exactly one return result parameter.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SByT6nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.behavior.notEmpty() implies

  self.behavior.ownedParameter->select(p | p.direction=#return)->size() = 1</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_R0OZH3CoEdq2Lvk-NX0TGA" general="_RzLQJ3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R0OZIHCoEdq2Lvk-NX0TGA" name="body" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" association="_R255lXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R0OZIXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R0OZInCoEdq2Lvk-NX0TGA" isUnsettable="true" xmlFeatureKind="Element"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0OZI3CoEdq2Lvk-NX0TGA" annotatedElement="_R0OZIHCoEdq2Lvk-NX0TGA">
        <body>The text of the expression, possibly in multiple languages.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4i4UHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4i4UXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0OZJnCoEdq2Lvk-NX0TGA" name="language" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" association="_R255l3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R0OZJ3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R0OZKHCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0OZKXCoEdq2Lvk-NX0TGA" annotatedElement="_R0OZJnCoEdq2Lvk-NX0TGA">
        <body>Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the language. If languages are unspecified, it might be implicit from the expression body or the context. Languages are matched to body strings by order.</body>
      </ownedComment>
      <ownedComment xmi:id="_R4i4UnCoEdq2Lvk-NX0TGA" annotatedElement="_R0OZJnCoEdq2Lvk-NX0TGA">
        <body>Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4i4U3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R4i4VHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SByT63CoEdq2Lvk-NX0TGA" name="result" type="_KyaPMGveEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" association="_SB7eBXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SByT7HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SByT7XCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SByT7nCoEdq2Lvk-NX0TGA" annotatedElement="_SByT63CoEdq2Lvk-NX0TGA">
        <body>Restricts an opaque expression to return exactly one return result. When the invocation of the opaque expression completes, a single set of values is returned to its owner. This association is derived from the single return result parameter of the associated behavior.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SByT73CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SByT8HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SByT8XCoEdq2Lvk-NX0TGA" name="behavior" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SB7eCXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SByT8nCoEdq2Lvk-NX0TGA" annotatedElement="_SByT8XCoEdq2Lvk-NX0TGA">
        <body>Specifies the behavior of the opaque expression.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SByT83CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SByT9HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_mv9LcFYiEdqB6vblk3tuMA" name="getResult" visibility="protected" type="_KyaPMGveEdq4DLWZOhbdEA">
      <returnResult xmi:id="_vXTbwFYiEdqB6vblk3tuMA" type="_KyaPMGveEdq4DLWZOhbdEA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0JhNkVYiEdqB6vblk3tuMA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0JhNkFYiEdqB6vblk3tuMA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_qQchgGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_sRo9MGWKEdq-f4093SZhVA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R4i4VXCoEdq2Lvk-NX0TGA" name="value" type="_XqvEIGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_R4i4WHCoEdq2Lvk-NX0TGA" bodyCondition="_R4i4WnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R4i4VnCoEdq2Lvk-NX0TGA" source="keywords"/>
      <ownedComment xmi:id="_R4i4V3CoEdq2Lvk-NX0TGA" annotatedElement="_R4i4VXCoEdq2Lvk-NX0TGA">
        <body>The query value() gives an integer value for an expression intended to produce one.</body>
      </ownedComment>
      <ownedRule xmi:id="_R4i4WHCoEdq2Lvk-NX0TGA" constrainedElement="_R4i4VXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4i4WXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>self.isIntegral()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_R4i4WnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R4i4VXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4i4W3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R4i4XHCoEdq2Lvk-NX0TGA" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R4i4XXCoEdq2Lvk-NX0TGA" name="isIntegral" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R4i4X3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R4i4XnCoEdq2Lvk-NX0TGA" annotatedElement="_R4i4XXCoEdq2Lvk-NX0TGA">
        <body>The query isIntegral() tells whether an expression is intended to produce an integer.</body>
      </ownedComment>
      <ownedRule xmi:id="_R4i4X3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R4i4XXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4i4YHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = false</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R4i4YXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R4i4YnCoEdq2Lvk-NX0TGA" name="isPositive" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_R4i4ZXCoEdq2Lvk-NX0TGA" bodyCondition="_R4i4Z3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R4i4Y3CoEdq2Lvk-NX0TGA" source="keywords"/>
      <ownedComment xmi:id="_R4i4ZHCoEdq2Lvk-NX0TGA" annotatedElement="_R4i4YnCoEdq2Lvk-NX0TGA">
        <body>The query isPositive() tells whether an integer expression has a positive value.</body>
      </ownedComment>
      <ownedRule xmi:id="_R4i4ZXCoEdq2Lvk-NX0TGA" constrainedElement="_R4i4YnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4i4ZnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>self.isIntegral()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_R4i4Z3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R4i4YnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4i4aHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = false</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R4i4aXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R4i4anCoEdq2Lvk-NX0TGA" name="isNonNegative" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_R4i4bHCoEdq2Lvk-NX0TGA" bodyCondition="_R4i4bnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R4i4a3CoEdq2Lvk-NX0TGA" annotatedElement="_R4i4anCoEdq2Lvk-NX0TGA">
        <body>The query isNonNegative() tells whether an integer expression has a non-negative value.</body>
      </ownedComment>
      <ownedRule xmi:id="_R4i4bHCoEdq2Lvk-NX0TGA" constrainedElement="_R4i4anCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4i4bXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>self.isIntegral()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_R4i4bnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R4i4anCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R4i4b3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = false</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R4i4cHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SB7d2HCoEdq2Lvk-NX0TGA" name="OpaqueBehavior">
    <ownedComment xmi:id="_SB7d2XCoEdq2Lvk-NX0TGA" annotatedElement="_SB7d2HCoEdq2Lvk-NX0TGA">
      <body>An behavior with implementation-specific semantics.</body>
    </ownedComment>
    <generalization xmi:id="_SB7d2nCoEdq2Lvk-NX0TGA" general="_TUPtYGveEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SB7d23CoEdq2Lvk-NX0TGA" name="body" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" association="_SCFO1XCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SB7d3HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SB7d3XCoEdq2Lvk-NX0TGA" isUnsettable="true" xmlFeatureKind="Element"/>
      </eAnnotations>
      <ownedComment xmi:id="_SB7d3nCoEdq2Lvk-NX0TGA" annotatedElement="_SB7d23CoEdq2Lvk-NX0TGA">
        <body>Specifies the behavior in one or more languages.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SB7d33CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SB7d4HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SB7d4XCoEdq2Lvk-NX0TGA" name="language" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" association="_SCFO13CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SB7d4nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SB7d43CoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SB7d5HCoEdq2Lvk-NX0TGA" annotatedElement="_SB7d4XCoEdq2Lvk-NX0TGA">
        <body>Languages the body strings use in the same order as the body strings.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SB7d5XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SB7d5nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SB7d53CoEdq2Lvk-NX0TGA" name="FunctionBehavior">
    <ownedComment xmi:id="_SB7d6HCoEdq2Lvk-NX0TGA" annotatedElement="_SB7d53CoEdq2Lvk-NX0TGA">
      <body>A function behavior is an opaque behavior that does not access or modify any objects or other external data.</body>
    </ownedComment>
    <ownedRule xmi:id="_SB7d6XCoEdq2Lvk-NX0TGA" name="one_output_parameter" constrainedElement="_SB7d53CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SB7d6nCoEdq2Lvk-NX0TGA" annotatedElement="_SB7d6XCoEdq2Lvk-NX0TGA">
        <body>A function behavior has at least one output parameter.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SB7d63CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.ownedParameters->

  select(p | p.direction=#out or p.direction=#inout or p.direction=#return)->size() >= 1</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SB7d7HCoEdq2Lvk-NX0TGA" name="types_of_parameters" constrainedElement="_SB7d53CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SB7d7XCoEdq2Lvk-NX0TGA" annotatedElement="_SB7d7HCoEdq2Lvk-NX0TGA">
        <body>The types of parameters are all data types, which may not nest anything but other datatypes.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SB7d7nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>def: hasAllDataTypeAttributes(d : DataType) : Boolean =

  d.ownedAttribute->forAll(a |

    a.type.oclIsTypeOf(DataType) and

      hasAllDataTypeAttributes(a.type))

self.ownedParameters->forAll(p | p.type.notEmpty() and

  p.oclIsTypeOf(DataType) and hasAllDataTypeAttributes(p))</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SB7d73CoEdq2Lvk-NX0TGA" general="_SB7d2HCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SB7d8HCoEdq2Lvk-NX0TGA" name="A_behavioredClassifier_ownedBehavior" memberEnd="_SB7d8nCoEdq2Lvk-NX0TGA _SBoi_XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SB7d8XCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SB7d8nCoEdq2Lvk-NX0TGA" type="_iY7sMGvsEdqG6fBIPwe-mw" association="_SB7d8HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SB7d83CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SB7d9HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SB7d9XCoEdq2Lvk-NX0TGA" name="A_classifierBehavior_behavioredClassifier" memberEnd="_SByT4HCoEdq2Lvk-NX0TGA _SB7d93CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SB7d9nCoEdq2Lvk-NX0TGA" general="_SB7d8HCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SB7d93CoEdq2Lvk-NX0TGA" type="_iY7sMGvsEdqG6fBIPwe-mw" redefinedProperty="_SB7d8nCoEdq2Lvk-NX0TGA" association="_SB7d9XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SB7d-HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SB7d-XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SB7d-nCoEdq2Lvk-NX0TGA" name="A_redefinedBehavior_behavior" memberEnd="_SB7d_HCoEdq2Lvk-NX0TGA _SBoi5HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SB7d-3CoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SB7d_HCoEdq2Lvk-NX0TGA" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SB7d-nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SB7d_XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SB7d_nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SB7d_3CoEdq2Lvk-NX0TGA" name="A_method_specification" memberEnd="_SBoi6HCoEdq2Lvk-NX0TGA _SB7d1HCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SB7eAHCoEdq2Lvk-NX0TGA" name="A_behavior_ownedParameter" memberEnd="_SBoi7HCoEdq2Lvk-NX0TGA _SB7eAnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SB7eAXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SB7eAnCoEdq2Lvk-NX0TGA" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SB7eAHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SB7eA3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SB7eBHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SB7eBXCoEdq2Lvk-NX0TGA" name="A_result_opaqueExpression" memberEnd="_SByT63CoEdq2Lvk-NX0TGA _SB7eBnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SB7eBnCoEdq2Lvk-NX0TGA" type="_ChRfcGveEdq4DLWZOhbdEA" association="_SB7eBXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SB7eB3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SB7eCHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SB7eCXCoEdq2Lvk-NX0TGA" name="A_behavior_opaqueExpression" memberEnd="_SByT8XCoEdq2Lvk-NX0TGA _SB7eCnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SB7eCnCoEdq2Lvk-NX0TGA" type="_ChRfcGveEdq4DLWZOhbdEA" association="_SB7eCXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SB7eC3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SB7eDHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCFO0HCoEdq2Lvk-NX0TGA" name="A_context_behavior" memberEnd="_SBoi8nCoEdq2Lvk-NX0TGA _SCFO0nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SCFO0XCoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SCFO0nCoEdq2Lvk-NX0TGA" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SCFO0HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFO03CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFO1HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCFO1XCoEdq2Lvk-NX0TGA" name="A_body_opaqueBehavior" memberEnd="_SB7d23CoEdq2Lvk-NX0TGA _SCFO1nCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SCFO1nCoEdq2Lvk-NX0TGA" type="_SB7d2HCoEdq2Lvk-NX0TGA" association="_SCFO1XCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCFO13CoEdq2Lvk-NX0TGA" name="A_language_opaqueBehavior" memberEnd="_SB7d4XCoEdq2Lvk-NX0TGA _SCFO2HCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SCFO2HCoEdq2Lvk-NX0TGA" type="_SB7d2HCoEdq2Lvk-NX0TGA" association="_SCFO13CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SCFO2XCoEdq2Lvk-NX0TGA" name="Actor">
    <ownedComment xmi:id="_SCFO2nCoEdq2Lvk-NX0TGA" annotatedElement="_SCFO2XCoEdq2Lvk-NX0TGA">
      <body>An Actor models a type of role played by an entity that interacts with the subject (e.g., by exchanging signals and data), but which is external to the subject (i.e., in the sense that an instance of an actor is not a part of the instance of its corresponding subject). Actors may represent roles played by human users, external hardware, or other subjects. Note that an actor does not necessarily represent a specific physical entity but merely a particular facet (i.e., role) of some entity that is relevant to the specification of its associated use cases. Thus, a single physical instance may play the role of several different actors and, conversely, a given actor may be played by multiple different instances.



Since an actor is external to the subject, it is typically defined in the same classifier or package that incorporates the subject classifier.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SCFO23CoEdq2Lvk-NX0TGA" name="associations" constrainedElement="_SCFO2XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFO3HCoEdq2Lvk-NX0TGA" annotatedElement="_SCFO23CoEdq2Lvk-NX0TGA">
        <body>An actor can only have associations to use cases, components and classes. Furthermore these associations must be binary.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SCFO3XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.ownedAttribute->forAll ( a |
(a.association->notEmpty()) implies
((a.association.memberEnd.size() = 2) and
(a.opposite.class.oclIsKindOf(UseCase) or
(a.opposite.class.oclIsKindOf(Class) and not a.opposite.class.oclIsKindOf(Behavior))))
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SCFO3nCoEdq2Lvk-NX0TGA" name="must_have_name" constrainedElement="_SCFO2XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFO33CoEdq2Lvk-NX0TGA" annotatedElement="_SCFO3nCoEdq2Lvk-NX0TGA">
        <body>An actor must have a name.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SCFO4HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>name->notEmpty()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SCFO4XCoEdq2Lvk-NX0TGA" general="_iY7sMGvsEdqG6fBIPwe-mw"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SCFO4nCoEdq2Lvk-NX0TGA" name="Extend">
    <ownedComment xmi:id="_SCFO43CoEdq2Lvk-NX0TGA" annotatedElement="_SCFO4nCoEdq2Lvk-NX0TGA">
      <body>This relationship specifies that the behavior of a use case may be extended by the behavior of another (usually supplementary) use case. The extension takes place at one or more specific extension points defined in the extended use case. Note, however, that the extended use case is defined independently of the extending use case and is meaningful independently of the extending use case. On the other hand, the extending use case typically defines behavior that may not necessarily be meaningful by itself. Instead, the extending use case defines a set of modular behavior increments that augment an execution of the extended use case under specific conditions.



Note that the same extending use case can extend more than one use case. Furthermore, an extending use case may itself be extended.



It is a kind of DirectedRelationship, such that the source is the extending use case and the destination is the extended use case. It is also a kind of NamedElement so that it can have a name in the context of its owning use case. The extend relationship itself is owned by the extending use case.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SCFO5HCoEdq2Lvk-NX0TGA" name="extension_points" constrainedElement="_SCFO4nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFO5XCoEdq2Lvk-NX0TGA" annotatedElement="_SCFO5HCoEdq2Lvk-NX0TGA">
        <body>The extension points referenced by the extend relationship must belong to the use case that is being extended.



</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SCFO5nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>extensionLocation->forAll (xp | extendedCase.extensionPoint->includes(xp))</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SCFO53CoEdq2Lvk-NX0TGA" general="_Rx-9UHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SCFO6HCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SCFO6XCoEdq2Lvk-NX0TGA" name="extendedCase" type="_SCFPC3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9WXCoEdq2Lvk-NX0TGA" association="_SCYJyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFO6nCoEdq2Lvk-NX0TGA" annotatedElement="_SCFO6XCoEdq2Lvk-NX0TGA">
        <body>References the use case that is being extended.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFO63CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFO7HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCFO7XCoEdq2Lvk-NX0TGA" name="extension" type="_SCFPC3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9U3CoEdq2Lvk-NX0TGA" association="_SCYJzXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SCFO7nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SCFO73CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SCFO8HCoEdq2Lvk-NX0TGA" annotatedElement="_SCFO7XCoEdq2Lvk-NX0TGA">
        <body>References the use case that represents the extension and owns the extend relationship.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFO8XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFO8nCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCFO83CoEdq2Lvk-NX0TGA" name="condition" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SCYJ0nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SCFO9HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SCFO9XCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SCFO9nCoEdq2Lvk-NX0TGA" annotatedElement="_SCFO83CoEdq2Lvk-NX0TGA">
        <body>References the condition that must hold when the first extension point is reached for the extension to take place. If no constraint is associated with the extend relationship, the extension is unconditional.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFO93CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFO-HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCFO-XCoEdq2Lvk-NX0TGA" name="extensionLocation" type="_SCOYwHCoEdq2Lvk-NX0TGA" isOrdered="true" association="_SCYJ13CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFO-nCoEdq2Lvk-NX0TGA" annotatedElement="_SCFO-XCoEdq2Lvk-NX0TGA">
        <body>An ordered list of extension points belonging to the extended use case, specifying where the respective behavioral fragments of the extending use case are to be inserted. The first fragment in the extending use case is associated with the first extension point in the list, the second fragment with the second point, and so on. (Note that, in most practical cases, the extending use case has just a single behavior fragment, so that the list of extension points is trivial.)

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFO-3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFO_HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SCFO_XCoEdq2Lvk-NX0TGA" name="Include">
    <ownedComment xmi:id="_SCFO_nCoEdq2Lvk-NX0TGA" annotatedElement="_SCFO_XCoEdq2Lvk-NX0TGA">
      <body>Note that the included use case is not optional, and is always required for the  including use case to execute correctly.



</body>
    </ownedComment>
    <generalization xmi:id="_SCFO_3CoEdq2Lvk-NX0TGA" general="_Rx-9UHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SCFPAHCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SCFPAXCoEdq2Lvk-NX0TGA" name="includingCase" type="_SCFPC3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9U3CoEdq2Lvk-NX0TGA" association="_SCYJwHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SCFPAnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SCFPA3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SCFPBHCoEdq2Lvk-NX0TGA" annotatedElement="_SCFPAXCoEdq2Lvk-NX0TGA">
        <body>References the use case which will include the addition and owns the include relationship.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFPBXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFPBnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCFPB3CoEdq2Lvk-NX0TGA" name="addition" type="_SCFPC3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9WXCoEdq2Lvk-NX0TGA" association="_SCYJw3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFPCHCoEdq2Lvk-NX0TGA" annotatedElement="_SCFPB3CoEdq2Lvk-NX0TGA">
        <body>References the use case that is to be included.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFPCXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFPCnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SCFPC3CoEdq2Lvk-NX0TGA" name="UseCase">
    <ownedComment xmi:id="_SCFPDHCoEdq2Lvk-NX0TGA" annotatedElement="_SCFPC3CoEdq2Lvk-NX0TGA">
      <body>A UseCase is a kind of behaviored classifier that represents a declaration of an offered behavior. Each use case specifies some behavior, possibly including variants, that the subject can perform in collaboration with one or more actors. Use cases define the offered behavior of the subject without reference to its internal structure. These behaviors, involving

interactions between the actor and the subject, may result in changes to the state of the subject and communications with its environment. A use case can include possible variations of its basic behavior, including exceptional behavior and error handling.



The subject of a use case could be a physical system or any other element that may have behavior, such as a component, subsystem or class. Each use case specifies a unit of useful functionality that the subject provides to its users, i.e., a specific way of interacting with the subject. This functionality, which is initiated by an actor, must always be completed for the use case to complete. It is deemed complete if, after its execution, the subject will be in a state in which no further inputs or actions are expected and the use case can be initiated again or in an error state.



Use cases can be used both for specification of the (external) requirements on a subject and for the specification of the functionality offered by a subject. Moreover, the use cases also state the requirements the specified subject poses on its environment by defining how they should interact with the subject so that it will be able to perform its services.



The behavior of a use case can be described by a specification that is some kind of Behavior (through its ownedBehavior relationship), such as interactions, activities, and state machines, or by pre-conditions and post-conditions as well as by natural language text where appropriate. It may also be described indirectly through a Collaboration that uses the use case and its actors as the classifiers that type its parts. Which of these techniques to use depends on the nature of the use case behavior as well as on the intended reader. These descriptions can be combined.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SCFPDXCoEdq2Lvk-NX0TGA" name="must_have_name" constrainedElement="_SCFPC3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFPDnCoEdq2Lvk-NX0TGA" annotatedElement="_SCFPDXCoEdq2Lvk-NX0TGA">
        <body>A UseCase must have a name.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SCFPD3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.name -> notEmpty ()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SCFPEHCoEdq2Lvk-NX0TGA" name="binary_associations" constrainedElement="_SCFPC3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFPEXCoEdq2Lvk-NX0TGA" annotatedElement="_SCFPEHCoEdq2Lvk-NX0TGA">
        <body>UseCases can only be involved in binary Associations.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SCFPEnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SCFPE3CoEdq2Lvk-NX0TGA" name="no_association_to_use_case" constrainedElement="_SCFPC3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFPFHCoEdq2Lvk-NX0TGA" annotatedElement="_SCFPE3CoEdq2Lvk-NX0TGA">
        <body>UseCases can not have Associations to UseCases specifying the same subject.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SCFPFXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SCFPFnCoEdq2Lvk-NX0TGA" name="cannot_include_self" constrainedElement="_SCFPC3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFPF3CoEdq2Lvk-NX0TGA" annotatedElement="_SCFPFnCoEdq2Lvk-NX0TGA">
        <body>A use case cannot include use cases that directly or indirectly include it.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SCFPGHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>not self.allIncludedUseCases()->includes(self)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SCFPGXCoEdq2Lvk-NX0TGA" general="_iY7sMGvsEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SCFPGnCoEdq2Lvk-NX0TGA" name="include" type="_SCFO_XCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SCYJwHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SCFPG3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SCFPHHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SCFPHXCoEdq2Lvk-NX0TGA" annotatedElement="_SCFPGnCoEdq2Lvk-NX0TGA">
        <body>References the Include relationships owned by this use case.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFPHnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFPH3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCFPIHCoEdq2Lvk-NX0TGA" name="extend" type="_SCFO4nCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SCYJzXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SCFPIXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SCFPInCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SCFPI3CoEdq2Lvk-NX0TGA" annotatedElement="_SCFPIHCoEdq2Lvk-NX0TGA">
        <body>References the Extend relationships owned by this use case.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFPJHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFPJXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCFPJnCoEdq2Lvk-NX0TGA" name="extensionPoint" type="_SCOYwHCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SCYJ0HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SCFPJ3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SCFPKHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SCFPKXCoEdq2Lvk-NX0TGA" annotatedElement="_SCFPJnCoEdq2Lvk-NX0TGA">
        <body>References the ExtensionPoints owned by the use case.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFPKnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFPK3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCFPLHCoEdq2Lvk-NX0TGA" name="subject" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SCYJ4HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFPLXCoEdq2Lvk-NX0TGA" annotatedElement="_SCFPLHCoEdq2Lvk-NX0TGA">
        <body>References the subjects to which this use case applies. The subject or its parts realize all the use cases that apply to this subject. Use cases need not be attached to any specific subject, however. The subject may, but need not, own the use cases that apply to it.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFPLnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFPL3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SCFPMHCoEdq2Lvk-NX0TGA" name="allIncludedUseCases" type="_SCFPC3CoEdq2Lvk-NX0TGA" isQuery="true" bodyCondition="_SCFPMnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCFPMXCoEdq2Lvk-NX0TGA" annotatedElement="_SCFPMHCoEdq2Lvk-NX0TGA">
        <body>The query allIncludedUseCases() returns the transitive closure of all use cases (directly or indirectly) included by this use case.</body>
      </ownedComment>
      <ownedRule xmi:id="_SCFPMnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SCFPMHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SCFPM3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.include->union(self.include->collect(in | in.allIncludedUseCases()))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SCFPNHCoEdq2Lvk-NX0TGA" type="_SCFPC3CoEdq2Lvk-NX0TGA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCFPNXCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCFPNnCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SCOYwHCoEdq2Lvk-NX0TGA" name="ExtensionPoint">
    <ownedComment xmi:id="_SCOYwXCoEdq2Lvk-NX0TGA" annotatedElement="_SCOYwHCoEdq2Lvk-NX0TGA">
      <body>An ExtensionPoint is a feature of a use case that identifies a point where the behavior of a use case can be augmented with elements of another (extending) use case.</body>
    </ownedComment>
    <ownedRule xmi:id="_SCOYwnCoEdq2Lvk-NX0TGA" name="must_have_name" constrainedElement="_SCOYwHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCOYw3CoEdq2Lvk-NX0TGA" annotatedElement="_SCOYwnCoEdq2Lvk-NX0TGA">
        <body>An ExtensionPoint must have a name.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SCOYxHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.name->notEmpty ()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SCOYxXCoEdq2Lvk-NX0TGA" general="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SCOYxnCoEdq2Lvk-NX0TGA" name="useCase" type="_SCFPC3CoEdq2Lvk-NX0TGA" association="_SCYJ0HCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SCOYx3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SCOYyHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SCOYyXCoEdq2Lvk-NX0TGA" annotatedElement="_SCOYxnCoEdq2Lvk-NX0TGA">
        <body>References the use case that owns this extension point.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCOYynCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCOYy3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCYJwHCoEdq2Lvk-NX0TGA" name="A_includingCase_include" memberEnd="_SCFPAXCoEdq2Lvk-NX0TGA _SCFPGnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SCYJwXCoEdq2Lvk-NX0TGA" general="_R2m-r3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SCYJwnCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCYJw3CoEdq2Lvk-NX0TGA" name="A_addition_include" memberEnd="_SCYJxXCoEdq2Lvk-NX0TGA _SCFPB3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SCYJxHCoEdq2Lvk-NX0TGA" general="_R2m-snCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SCYJxXCoEdq2Lvk-NX0TGA" type="_SCFO_XCoEdq2Lvk-NX0TGA" association="_SCYJw3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCYJxnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCYJx3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCYJyHCoEdq2Lvk-NX0TGA" name="A_extendedCase_extend" memberEnd="_SCFO6XCoEdq2Lvk-NX0TGA _SCYJynCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SCYJyXCoEdq2Lvk-NX0TGA" general="_R2m-snCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SCYJynCoEdq2Lvk-NX0TGA" type="_SCFO4nCoEdq2Lvk-NX0TGA" association="_SCYJyHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCYJy3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCYJzHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCYJzXCoEdq2Lvk-NX0TGA" name="A_extension_extend" memberEnd="_SCFPIHCoEdq2Lvk-NX0TGA _SCFO7XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SCYJznCoEdq2Lvk-NX0TGA" general="_R2m-r3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SCYJz3CoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCYJ0HCoEdq2Lvk-NX0TGA" name="A_extensionPoint_useCase" memberEnd="_SCOYxnCoEdq2Lvk-NX0TGA _SCFPJnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SCYJ0XCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCYJ0nCoEdq2Lvk-NX0TGA" name="A_condition_extend" memberEnd="_SCFO83CoEdq2Lvk-NX0TGA _SCYJ1HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SCYJ03CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SCYJ1HCoEdq2Lvk-NX0TGA" type="_SCFO4nCoEdq2Lvk-NX0TGA" association="_SCYJ0nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCYJ1XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCYJ1nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCYJ13CoEdq2Lvk-NX0TGA" name="A_extensionLocation_extension" memberEnd="_SCFO-XCoEdq2Lvk-NX0TGA _SCYJ2HCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SCYJ2HCoEdq2Lvk-NX0TGA" name="extension" type="_SCFO4nCoEdq2Lvk-NX0TGA" association="_SCYJ13CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCYJ2XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCYJ2nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCYJ23CoEdq2Lvk-NX0TGA" name="A_ownedUseCase_classifier" memberEnd="_SCYJ3XCoEdq2Lvk-NX0TGA _SCOYzXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SCYJ3HCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SCYJ3XCoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SCYJ23CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCYJ3nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCYJ33CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SCYJ4HCoEdq2Lvk-NX0TGA" name="A_subject_useCase" memberEnd="_SCOY03CoEdq2Lvk-NX0TGA _SCFPLHCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Class" xmi:id="_SCYJ4XCoEdq2Lvk-NX0TGA" name="Usage">
    <ownedComment xmi:id="_SCYJ4nCoEdq2Lvk-NX0TGA" annotatedElement="_SCYJ4XCoEdq2Lvk-NX0TGA">
      <body>A usage is a relationship in which one element requires another element (or set of elements) for its full implementation or operation. In the metamodel, a Usage is a Dependency in which the client requires the presence of the supplier.

</body>
    </ownedComment>
    <generalization xmi:id="_SCYJ43CoEdq2Lvk-NX0TGA" general="_rEDGkGwKEdq7X4sGURiZYA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SCh6wHCoEdq2Lvk-NX0TGA" name="Abstraction">
    <ownedComment xmi:id="_SCh6wXCoEdq2Lvk-NX0TGA" annotatedElement="_SCh6wHCoEdq2Lvk-NX0TGA">
      <body>An abstraction is a relationship that relates two elements or sets of elements that represent the same concept at different levels of abstraction or from different viewpoints. In the metamodel, an Abstraction is a Dependency in which there is a mapping between the supplier and the client.</body>
    </ownedComment>
    <generalization xmi:id="_SCh6wnCoEdq2Lvk-NX0TGA" general="_rEDGkGwKEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SCh6w3CoEdq2Lvk-NX0TGA" name="mapping" type="_ChRfcGveEdq4DLWZOhbdEA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SC-ms3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SCh6xHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SCh6xXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SCh6xnCoEdq2Lvk-NX0TGA" annotatedElement="_SCh6w3CoEdq2Lvk-NX0TGA">
        <body>An composition of an Expression that states the abstraction relationship between the supplier and the client. In some cases, such as Derivation, it is usually formal and unidirectional; in other cases, such as Trace, it is usually informal and bidirectional. The mapping expression is optional and may be omitted if the precise relationship between the elements is not specified.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCh6x3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCh6yHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_rEDGkGwKEdq7X4sGURiZYA" name="Dependency">
    <ownedComment xmi:id="_SCh6yXCoEdq2Lvk-NX0TGA" annotatedElement="_rEDGkGwKEdq7X4sGURiZYA">
      <body>A dependency is a relationship that signifies that a single or a set of model elements requires other model elements for their specification or implementation. This means that the complete semantics of the depending elements is either semantically or structurally dependent on the definition of the supplier element(s).</body>
    </ownedComment>
    <generalization xmi:id="_SCh6ynCoEdq2Lvk-NX0TGA" general="_Rx-9UHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SCh6y3CoEdq2Lvk-NX0TGA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SCh6zHCoEdq2Lvk-NX0TGA" name="supplier" type="_csVgUGvtEdqG6fBIPwe-mw" subsettedProperty="_Rx-9WXCoEdq2Lvk-NX0TGA" association="_SDHwqHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCh6zXCoEdq2Lvk-NX0TGA" annotatedElement="_SCh6zHCoEdq2Lvk-NX0TGA">
        <body>The element(s) independent of the client element(s), in the same respect and the same dependency relationship. In some directed dependency relationships (such as Refinement Abstractions), a common convention in the domain of class-based OO software is to put the more abstract element in this role. Despite this convention, users of UML may stipulate a sense of dependency suitable for their domain, which makes a more abstract element dependent on that which is more specific.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCh6znCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCh6z3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCh60HCoEdq2Lvk-NX0TGA" name="client" type="_csVgUGvtEdqG6fBIPwe-mw" subsettedProperty="_Rx-9U3CoEdq2Lvk-NX0TGA" association="_SDHwrnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCh60XCoEdq2Lvk-NX0TGA" annotatedElement="_SCh60HCoEdq2Lvk-NX0TGA">
        <body>The element(s) dependent on the supplier element(s). In some cases (such as a Trace Abstraction) the assignment of direction (that is, the designation of the client element) is at the discretion of the modeler, and is a stipulation.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCh60nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCh603CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SCh61HCoEdq2Lvk-NX0TGA" name="Realization">
    <ownedComment xmi:id="_SCh61XCoEdq2Lvk-NX0TGA" annotatedElement="_SCh61HCoEdq2Lvk-NX0TGA">
      <body>Realization is a specialized abstraction relationship between two sets of model elements, one representing a specification (the supplier) and the other represents an implementation of the latter (the client). Realization can be used to model stepwise refinement, optimizations, transformations, templates, model synthesis, framework composition, etc.</body>
    </ownedComment>
    <generalization xmi:id="_SCh61nCoEdq2Lvk-NX0TGA" general="_SCh6wHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SCh613CoEdq2Lvk-NX0TGA" name="Substitution">
    <ownedComment xmi:id="_SCh62HCoEdq2Lvk-NX0TGA" annotatedElement="_SCh613CoEdq2Lvk-NX0TGA">
      <body>A substitution is a relationship between two classifiers signifies that the substitutingClassifier complies with the contract specified by the contract classifier. This implies that instances of the substitutingClassifier are runtime substitutable where instances of the contract classifier are expected.</body>
    </ownedComment>
    <generalization xmi:id="_SCh62XCoEdq2Lvk-NX0TGA" general="_SCh61HCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SCh62nCoEdq2Lvk-NX0TGA" name="contract" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_SCh6zHCoEdq2Lvk-NX0TGA" association="_SDHwoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCh623CoEdq2Lvk-NX0TGA" annotatedElement="_SCh62nCoEdq2Lvk-NX0TGA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCh63HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCh63XCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCh63nCoEdq2Lvk-NX0TGA" name="substitutingClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_SCh60HCoEdq2Lvk-NX0TGA" association="_SDHwpXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SCh633CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SCh64HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SCh64XCoEdq2Lvk-NX0TGA" annotatedElement="_SCh63nCoEdq2Lvk-NX0TGA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCh64nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCh643CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_ZiwkoGwLEdq7X4sGURiZYA" name="Namespace" isAbstract="true">
    <ownedComment xmi:id="_RybpRXCoEdq2Lvk-NX0TGA" annotatedElement="_ZiwkoGwLEdq7X4sGURiZYA">
      <body>A namespace has the ability to import either individial members or all members of a package, thereby making it possible to refer to those named elements without qualification in the importing namespace. In the case of conflicts, it is necessary to use qualified names or aliases to disambiguate the referenced elements.</body>
    </ownedComment>
    <ownedComment xmi:id="_R_GMQHCoEdq2Lvk-NX0TGA" annotatedElement="_ZiwkoGwLEdq7X4sGURiZYA">
      <body>A namespace is a named element that can own other named elements. Each named element may be owned by at most one namespace. A namespace provides a means for identifying named elements by name. Named elements can be identified by name in a namespace either by being directly owned by the namespace or by being introduced into the namespace by other means e.g. importing or inheriting. Namespace is an abstract metaclass.



A namespace can own constraints. The constraint does not necessarily apply to the namespace itself, but may also apply to elements in the namespace.



A namespace has the ability to import either individual members or all members of a package, thereby making it possible to refer to those named elements without qualification in the importing namespace. In the case of conflicts, it is necessary to use qualified names or aliases to disambiguate the referenced elements.



</body>
    </ownedComment>
    <ownedComment xmi:id="_SC-msHCoEdq2Lvk-NX0TGA" annotatedElement="_ZiwkoGwLEdq7X4sGURiZYA">
      <body>A namespace is a named element that can own other named elements. Each named element may be owned by at most one namespace. A namespace provides a means for identifying named elements by name. Named elements can be identified by name in a namespace either by being directly owned by the namespace or by being introduced into the namespace by other means e.g. importing or inheriting. Namespace is an abstract metaclass.</body>
    </ownedComment>
    <ownedRule xmi:id="_RybpRnCoEdq2Lvk-NX0TGA" name="members_distinguishable" constrainedElement="_ZiwkoGwLEdq7X4sGURiZYA">
      <ownedComment xmi:id="_RybpR3CoEdq2Lvk-NX0TGA" annotatedElement="_RybpRnCoEdq2Lvk-NX0TGA">
        <body>All the members of a Namespace are distinguishable within it.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_GMQXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>membersAreDistinguishable()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_RybpSXCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_RylaQHCoEdq2Lvk-NX0TGA" name="elementImport" type="_RPl78GwIEdq7X4sGURiZYA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_R2dNq3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_RylaQXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RylaQnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_RylaQ3CoEdq2Lvk-NX0TGA" annotatedElement="_RylaQHCoEdq2Lvk-NX0TGA">
        <body>References the ElementImports owned by the Namespace.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_GMQnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_GMQ3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RylaRnCoEdq2Lvk-NX0TGA" name="packageImport" type="_SnNPIGwIEdq7X4sGURiZYA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_R2dNrnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_RylaR3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RylaSHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_RylaSXCoEdq2Lvk-NX0TGA" annotatedElement="_RylaRnCoEdq2Lvk-NX0TGA">
        <body>References the PackageImports owned by the Namespace.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_GMRHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_GMRXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RylaWHCoEdq2Lvk-NX0TGA" name="ownedRule" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_R255q3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_RylaWXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RylaWnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R_P9QHCoEdq2Lvk-NX0TGA" annotatedElement="_RylaWHCoEdq2Lvk-NX0TGA">
        <body>Specifies a set of Constraints owned by this Namespace.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_P9QXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_P9QnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RylaUnCoEdq2Lvk-NX0TGA" name="member" type="_csVgUGvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_R2wIonCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RylaU3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RylaVHCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RylaVXCoEdq2Lvk-NX0TGA" annotatedElement="_RylaUnCoEdq2Lvk-NX0TGA">
        <body>Redefines the corresponding property of Abstractions::Namespaces::Namespace.</body>
      </ownedComment>
      <ownedComment xmi:id="_R_P9RnCoEdq2Lvk-NX0TGA" annotatedElement="_RylaUnCoEdq2Lvk-NX0TGA">
        <body>A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_P9R3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_P9SHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RybpSnCoEdq2Lvk-NX0TGA" name="importedMember" type="_jKxnwGwLEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" subsettedProperty="_RylaUnCoEdq2Lvk-NX0TGA" association="_R2dNonCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RybpS3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RybpTHCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RybpTXCoEdq2Lvk-NX0TGA" annotatedElement="_RybpSnCoEdq2Lvk-NX0TGA">
        <body>References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_P9SXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_P9SnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RylaTHCoEdq2Lvk-NX0TGA" name="ownedMember" type="_csVgUGvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_RylaUnCoEdq2Lvk-NX0TGA _Rx-9ZnCoEdq2Lvk-NX0TGA" association="_R2wIn3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_RylaTXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RylaTnCoEdq2Lvk-NX0TGA" isTransient="true" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_RylaT3CoEdq2Lvk-NX0TGA" annotatedElement="_RylaTHCoEdq2Lvk-NX0TGA">
        <body>Redefines the corresponding property of Abstractions::Namespaces::Namespace.</body>
      </ownedComment>
      <ownedComment xmi:id="_R_P9Q3CoEdq2Lvk-NX0TGA" annotatedElement="_RylaTHCoEdq2Lvk-NX0TGA">
        <body>A collection of NamedElements owned by the Namespace.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SC-msXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SC-msnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_vI18QGwLEdq7X4sGURiZYA" name="createElementImport" type="_RPl78GwIEdq7X4sGURiZYA">
      <returnResult xmi:id="_xwes4GwLEdq7X4sGURiZYA" type="_RPl78GwIEdq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_yOllMGwLEdq7X4sGURiZYA" name="element" type="_jKxnwGwLEdq7X4sGURiZYA" effect="read"/>
      <ownedParameter xmi:id="_9mppoGwLEdq7X4sGURiZYA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_FRpmcGwMEdq7X4sGURiZYA" name="createPackageImport" type="_SnNPIGwIEdq7X4sGURiZYA">
      <returnResult xmi:id="_IdWGYGwMEdq7X4sGURiZYA" type="_SnNPIGwIEdq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_RsevcGwMEdq7X4sGURiZYA" name="package_" type="_-cvRAGvzEdq7X4sGURiZYA" effect="read"/>
      <ownedParameter xmi:id="_OxwqwGwMEdq7X4sGURiZYA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_aoDYwGwLEdq7X4sGURiZYA" name="getImportedElements" type="_jKxnwGwLEdq7X4sGURiZYA">
      <returnResult xmi:id="_mL5PYGwLEdq7X4sGURiZYA" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-CicWwLEdq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_n-CicGwLEdq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_2OvA4GwLEdq7X4sGURiZYA" name="getImportedPackages" type="_-cvRAGvzEdq7X4sGURiZYA">
      <returnResult xmi:id="_40lo0GwLEdq7X4sGURiZYA" type="_-cvRAGvzEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6sF9AWwLEdq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6sF9AGwLEdq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_RylaXXCoEdq2Lvk-NX0TGA" name="importedMember" type="_jKxnwGwLEdq7X4sGURiZYA" isQuery="true" bodyCondition="_RylaYXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RylaXnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_RylaX3CoEdq2Lvk-NX0TGA" operationName="getImportedMembers"/>
      </eAnnotations>
      <ownedComment xmi:id="_RylaYHCoEdq2Lvk-NX0TGA" annotatedElement="_RylaXXCoEdq2Lvk-NX0TGA">
        <body>The importedMember property is derived from the ElementImports and the PackageImports. References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.</body>
      </ownedComment>
      <ownedComment xmi:id="_R_P9S3CoEdq2Lvk-NX0TGA" annotatedElement="_RylaXXCoEdq2Lvk-NX0TGA">
        <body>The importedMember property is derived from the ElementImports and the PackageImports.</body>
      </ownedComment>
      <ownedRule xmi:id="_RylaYXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RylaXXCoEdq2Lvk-NX0TGA _RybpSnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_P9THCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.importMembers(self.elementImport.importedElement.asSet()-
>union(self.packageImport.importedPackage->collect(p | p.visibleMembers())))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RylaY3CoEdq2Lvk-NX0TGA" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_P9TXCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_P9TnCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_RyukMHCoEdq2Lvk-NX0TGA" name="getNamesOfMember" type="_aAyVgGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RyukMnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RyukMXCoEdq2Lvk-NX0TGA" annotatedElement="_RyukMHCoEdq2Lvk-NX0TGA">
        <body>The query getNamesOfMember() is overridden to take account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.</body>
      </ownedComment>
      <ownedComment xmi:id="_R_P9T3CoEdq2Lvk-NX0TGA" annotatedElement="_RyukMHCoEdq2Lvk-NX0TGA">
        <body>The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases. The query takes account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.</body>
      </ownedComment>
      <ownedRule xmi:id="_RyukMnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RyukMHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_ZuQHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if self.ownedMember ->includes(element)
then Set{}->include(element.name)
else let elementImports: ElementImport = self.elementImport->select(ei | ei.importedElement = element) in
  if elementImports->notEmpty()
  then elementImports->collect(el | el.getName())
  else self.packageImport->select(pi | pi.importedPackage.visibleMembers()->includes(element))-> collect(pi | pi.importedPackage.getNamesOfMember(element))
  endif
endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RyukNHCoEdq2Lvk-NX0TGA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_ZuQXCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_ZuQnCoEdq2Lvk-NX0TGA"/>
      </returnResult>
      <ownedParameter xmi:id="_RyukN3CoEdq2Lvk-NX0TGA" name="element" type="_csVgUGvtEdqG6fBIPwe-mw"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RyukTHCoEdq2Lvk-NX0TGA" name="membersAreDistinguishable" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RyukTnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RyukTXCoEdq2Lvk-NX0TGA" annotatedElement="_RyukTHCoEdq2Lvk-NX0TGA">
        <body>The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.</body>
      </ownedComment>
      <ownedRule xmi:id="_RyukTnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RyukTHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_ZuQ3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.member->forAll( memb |
self.member->excluding(memb)->forAll(other |
memb.isDistinguishableFrom(other, self)))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RyukUHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RyukOHCoEdq2Lvk-NX0TGA" name="importMembers" type="_jKxnwGwLEdq7X4sGURiZYA" isQuery="true" bodyCondition="_RyukOnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RyukOXCoEdq2Lvk-NX0TGA" annotatedElement="_RyukOHCoEdq2Lvk-NX0TGA">
        <body>The query importMembers() defines which of a set of PackageableElements are actually imported into the namespace. This excludes hidden ones, i.e., those which have names that conflict with names of owned members, and also excludes elements which would have the same name when imported.</body>
      </ownedComment>
      <ownedRule xmi:id="_RyukOnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RyukOHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_ZuRHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.excludeCollisions(imps)->select(imp | self.ownedMember->forAll(mem |
mem.imp.isDistinguishableFrom(mem, self)))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RyukPHCoEdq2Lvk-NX0TGA" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_ZuRXCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_ZuRnCoEdq2Lvk-NX0TGA"/>
      </returnResult>
      <ownedParameter xmi:id="_RyukP3CoEdq2Lvk-NX0TGA" name="imps" type="_jKxnwGwLEdq7X4sGURiZYA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RyukQHCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RyukQXCoEdq2Lvk-NX0TGA"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_RyukQnCoEdq2Lvk-NX0TGA" name="excludeCollisions" type="_jKxnwGwLEdq7X4sGURiZYA" isQuery="true" bodyCondition="_RyukRHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RyukQ3CoEdq2Lvk-NX0TGA" annotatedElement="_RyukQnCoEdq2Lvk-NX0TGA">
        <body>The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this namespace.</body>
      </ownedComment>
      <ownedRule xmi:id="_RyukRHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RyukQnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_ZuR3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = imps->reject(imp1 | imps.exists(imp2 | not imp1.isDistinguishableFrom(imp2, self)))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RyukRnCoEdq2Lvk-NX0TGA" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R_ZuSHCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R_ZuSXCoEdq2Lvk-NX0TGA"/>
      </returnResult>
      <ownedParameter xmi:id="_RyukSXCoEdq2Lvk-NX0TGA" name="imps" type="_jKxnwGwLEdq7X4sGURiZYA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RyukSnCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RyukS3CoEdq2Lvk-NX0TGA"/>
      </ownedParameter>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SC-ms3CoEdq2Lvk-NX0TGA" name="A_mapping_abstraction" memberEnd="_SCh6w3CoEdq2Lvk-NX0TGA _SC-mtXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SC-mtHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SC-mtXCoEdq2Lvk-NX0TGA" type="_SCh6wHCoEdq2Lvk-NX0TGA" association="_SC-ms3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SC-mtnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SC-mt3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SDHwoHCoEdq2Lvk-NX0TGA" name="A_contract_substitution" memberEnd="_SCh62nCoEdq2Lvk-NX0TGA _SDHwonCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SDHwoXCoEdq2Lvk-NX0TGA" general="_SDHwqHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SDHwonCoEdq2Lvk-NX0TGA" type="_SCh613CoEdq2Lvk-NX0TGA" association="_SDHwoHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDHwo3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDHwpHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SDHwpXCoEdq2Lvk-NX0TGA" name="A_substitution_substitutingClassifier" memberEnd="_SCh63nCoEdq2Lvk-NX0TGA _SCrEsXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SDHwpnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SDHwp3CoEdq2Lvk-NX0TGA" general="_SDHwrnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SDHwqHCoEdq2Lvk-NX0TGA" name="A_supplierDependency_supplier" memberEnd="_SDHwqnCoEdq2Lvk-NX0TGA _SCh6zHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SDHwqXCoEdq2Lvk-NX0TGA" general="_R2m-snCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SDHwqnCoEdq2Lvk-NX0TGA" name="supplierDependency" type="_rEDGkGwKEdq7X4sGURiZYA" association="_SDHwqHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SDHwq3CoEdq2Lvk-NX0TGA" annotatedElement="_SDHwqnCoEdq2Lvk-NX0TGA">
        <body>Indicates the dependencies that reference the supplier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDHwrHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDHwrXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SDHwrnCoEdq2Lvk-NX0TGA" name="A_clientDependency_client" memberEnd="_SC01sHCoEdq2Lvk-NX0TGA _SCh60HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SDHwr3CoEdq2Lvk-NX0TGA" general="_R2m-r3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2wIn3CoEdq2Lvk-NX0TGA" name="A_ownedMember_namespace" memberEnd="_RylaTHCoEdq2Lvk-NX0TGA _R13XzHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2wIoHCoEdq2Lvk-NX0TGA" general="_R2wIonCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2wIoXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SDRhpHCoEdq2Lvk-NX0TGA" name="InterfaceRealization">
    <ownedComment xmi:id="_SDRhpXCoEdq2Lvk-NX0TGA" annotatedElement="_SDRhpHCoEdq2Lvk-NX0TGA">
      <body>An InterfaceRealization is a specialized Realization relationship between a Classifier and an Interface. This relationship signifies that the realizing classifier conforms to the contract specified by the Interface.</body>
    </ownedComment>
    <generalization xmi:id="_SDRhpnCoEdq2Lvk-NX0TGA" general="_SCh61HCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SDRhp3CoEdq2Lvk-NX0TGA" name="contract" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_SCh6zHCoEdq2Lvk-NX0TGA" association="_SDaroXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SDRhqHCoEdq2Lvk-NX0TGA" annotatedElement="_SDRhp3CoEdq2Lvk-NX0TGA">
        <body>References the Interface specifying the conformance contract.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDRhqXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDRhqnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SDRhq3CoEdq2Lvk-NX0TGA" name="implementingClassifier" type="_iY7sMGvsEdqG6fBIPwe-mw" subsettedProperty="_SCh60HCoEdq2Lvk-NX0TGA" association="_SDarpnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SDRhrHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SDRhrXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SDRhrnCoEdq2Lvk-NX0TGA" annotatedElement="_SDRhq3CoEdq2Lvk-NX0TGA">
        <body>References the BehavioredClassifier that owns this Interfacerealization (i.e., the classifier that realizes the Interface to which it points).</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDRhr3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDRhsHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SDarl3CoEdq2Lvk-NX0TGA" name="A_interface_ownedAttribute" memberEnd="_SDarmnCoEdq2Lvk-NX0TGA _SDHwtXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SDarmHCoEdq2Lvk-NX0TGA" general="_R2KSwXCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SDarmXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SDarmnCoEdq2Lvk-NX0TGA" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_R2KSxHCoEdq2Lvk-NX0TGA _R13XzHCoEdq2Lvk-NX0TGA _RyIuU3CoEdq2Lvk-NX0TGA" association="_SDarl3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDarm3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDarnHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SDarnXCoEdq2Lvk-NX0TGA" name="A_interface_ownedOperation" memberEnd="_SDarkXCoEdq2Lvk-NX0TGA _SDHwu3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SDarnnCoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SDarn3CoEdq2Lvk-NX0TGA" general="_R2wIlHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SDaroHCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SDaroXCoEdq2Lvk-NX0TGA" name="A_contract_interfaceRealization" memberEnd="_SDRhp3CoEdq2Lvk-NX0TGA _SDaro3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SDaronCoEdq2Lvk-NX0TGA" general="_SDHwqHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SDaro3CoEdq2Lvk-NX0TGA" type="_SDRhpHCoEdq2Lvk-NX0TGA" association="_SDaroXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDarpHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDarpXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SDarpnCoEdq2Lvk-NX0TGA" name="A_interfaceRealization_implementingClassifier" memberEnd="_SDRhs3CoEdq2Lvk-NX0TGA _SDRhq3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SDarp3CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SDarqHCoEdq2Lvk-NX0TGA" general="_SDHwrnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SDkckHCoEdq2Lvk-NX0TGA" name="A_nestedClassifier_interface" memberEnd="_SDkck3CoEdq2Lvk-NX0TGA _SDHwwXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SDkckXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SDkcknCoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SDkck3CoEdq2Lvk-NX0TGA" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA _RzCGOXCoEdq2Lvk-NX0TGA" association="_SDkckHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDkclHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDkclXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SDkclnCoEdq2Lvk-NX0TGA" name="A_interface_redefinedInterface" memberEnd="_SDkcmHCoEdq2Lvk-NX0TGA _SDRhoHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SDkcl3CoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SDkcmHCoEdq2Lvk-NX0TGA" type="_8Ugn8GvtEdqG6fBIPwe-mw" association="_SDkclnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDkcmXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDkcmnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_FQiVsGwYEdqHKKVoxc0dlA" name="StructuredClassifier" isAbstract="true">
    <ownedComment xmi:id="_SDuNrHCoEdq2Lvk-NX0TGA" annotatedElement="_FQiVsGwYEdqHKKVoxc0dlA">
      <body>A structured classifier is an abstract metaclass that represents any classifier whose behavior can be fully or partly described by the collaboration of owned or referenced instances.</body>
    </ownedComment>
    <ownedRule xmi:id="_SD3XgHCoEdq2Lvk-NX0TGA" name="multiplicities" constrainedElement="_FQiVsGwYEdqHKKVoxc0dlA">
      <ownedComment xmi:id="_SD3XgXCoEdq2Lvk-NX0TGA" annotatedElement="_SD3XgHCoEdq2Lvk-NX0TGA">
        <body>The multiplicities on connected elements must be consistent.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SD3XgnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SD3Xg3CoEdq2Lvk-NX0TGA" general="_6UV2QGwJEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SD3XhHCoEdq2Lvk-NX0TGA" name="ownedAttribute" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_SD3XkHCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA _RxPWcHCoEdq2Lvk-NX0TGA" association="_SEBIhnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SD3XhXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SD3XhnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SD3Xh3CoEdq2Lvk-NX0TGA" annotatedElement="_SD3XhHCoEdq2Lvk-NX0TGA">
        <body>References the properties owned by the classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SD3XiHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SD3XiXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SD3XinCoEdq2Lvk-NX0TGA" name="part" type="_Jp_1oGveEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" association="_SEBIjXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SD3Xi3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SD3XjHCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SD3XjXCoEdq2Lvk-NX0TGA" annotatedElement="_SD3XinCoEdq2Lvk-NX0TGA">
        <body>References the properties specifying instances that the classifier owns by composition. This association is derived, selecting those owned properties where isComposite is true.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SD3XjnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SD3Xj3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SD3XkHCoEdq2Lvk-NX0TGA" name="role" type="_SD3XnHCoEdq2Lvk-NX0TGA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_RylaUnCoEdq2Lvk-NX0TGA" association="_SEBIkXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SD3XkXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SD3XknCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SD3Xk3CoEdq2Lvk-NX0TGA" annotatedElement="_SD3XkHCoEdq2Lvk-NX0TGA">
        <body>References the roles that instances may play in this classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SD3XlHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SD3XlXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SD3XlnCoEdq2Lvk-NX0TGA" name="ownedConnector" type="_SDuNkHCoEdq2Lvk-NX0TGA" subsettedProperty="_RxPWdnCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_SEBIlnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SD3Xl3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SD3XmHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SD3XmXCoEdq2Lvk-NX0TGA" annotatedElement="_SD3XlnCoEdq2Lvk-NX0TGA">
        <body>References the connectors owned by the classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SD3XmnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SD3Xm3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEBIgnCoEdq2Lvk-NX0TGA" name="A_type_connector" memberEnd="_SDuNnHCoEdq2Lvk-NX0TGA _SEBIg3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SEBIg3CoEdq2Lvk-NX0TGA" type="_SDuNkHCoEdq2Lvk-NX0TGA" association="_SEBIgnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEBIhHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEBIhXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEBIhnCoEdq2Lvk-NX0TGA" name="A_ownedAttribute_structuredClassifier" memberEnd="_SEBIinCoEdq2Lvk-NX0TGA _SD3XhHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SEBIh3CoEdq2Lvk-NX0TGA" general="_SEBIkXCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SEBIiHCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SEBIiXCoEdq2Lvk-NX0TGA" general="_R2KSwXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SEBIinCoEdq2Lvk-NX0TGA" type="_FQiVsGwYEdqHKKVoxc0dlA" redefinedProperty="_SEBIk3CoEdq2Lvk-NX0TGA" association="_SEBIhnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEBIi3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEBIjHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEBIjXCoEdq2Lvk-NX0TGA" name="A_part_structuredClassifier" memberEnd="_SD3XinCoEdq2Lvk-NX0TGA _SEBIjnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SEBIjnCoEdq2Lvk-NX0TGA" type="_FQiVsGwYEdqHKKVoxc0dlA" association="_SEBIjXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEBIj3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEBIkHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEBIkXCoEdq2Lvk-NX0TGA" name="A_role_structuredClassifier" memberEnd="_SEBIk3CoEdq2Lvk-NX0TGA _SD3XkHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SEBIknCoEdq2Lvk-NX0TGA" general="_R2wIonCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SEBIk3CoEdq2Lvk-NX0TGA" type="_FQiVsGwYEdqHKKVoxc0dlA" association="_SEBIkXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEBIlHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEBIlXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEBIlnCoEdq2Lvk-NX0TGA" name="A_ownedConnector_structuredClassifier" memberEnd="_SEBImnCoEdq2Lvk-NX0TGA _SD3XlnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SEBIl3CoEdq2Lvk-NX0TGA" general="_R2wIlHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SEBImHCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SEBImXCoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SEBImnCoEdq2Lvk-NX0TGA" type="_FQiVsGwYEdqHKKVoxc0dlA" subsettedProperty="_RzCGOXCoEdq2Lvk-NX0TGA" association="_SEBIlnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEBIm3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEBInHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEBInXCoEdq2Lvk-NX0TGA" name="A_redefinedConnector_connector" memberEnd="_SDuNoHCoEdq2Lvk-NX0TGA _SEBIn3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SEBInnCoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SEBIn3CoEdq2Lvk-NX0TGA" type="_SDuNkHCoEdq2Lvk-NX0TGA" association="_SEBInXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEBIoHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEBIoXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEBIonCoEdq2Lvk-NX0TGA" name="A_end_connector" memberEnd="_SDuNpHCoEdq2Lvk-NX0TGA _SEBIpHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SEBIo3CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SEBIpHCoEdq2Lvk-NX0TGA" type="_SDuNkHCoEdq2Lvk-NX0TGA" association="_SEBIonCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEBIpXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEBIpnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEK5gHCoEdq2Lvk-NX0TGA" name="A_definingEnd_connectorEnd" memberEnd="_SEK5gXCoEdq2Lvk-NX0TGA _SDkcoHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SEK5gXCoEdq2Lvk-NX0TGA" type="_aOgw0GveEdq4DLWZOhbdEA" association="_SEK5gHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5gnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5g3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEK5hHCoEdq2Lvk-NX0TGA" name="A_end_role" memberEnd="_SD3Xn3CoEdq2Lvk-NX0TGA _SDkcpnCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2KSwXCoEdq2Lvk-NX0TGA" name="A_attribute_classifier" memberEnd="_R2KSxHCoEdq2Lvk-NX0TGA _RxPWcHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_R2KSwnCoEdq2Lvk-NX0TGA" general="_R2wIlHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R2KSw3CoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_R2KSxHCoEdq2Lvk-NX0TGA" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_RzCGOXCoEdq2Lvk-NX0TGA" association="_R2KSwXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5hXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5hnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_gfgNwGveEdq4DLWZOhbdEA" name="Message">
    <ownedComment xmi:id="_SEK51nCoEdq2Lvk-NX0TGA" annotatedElement="_gfgNwGveEdq4DLWZOhbdEA">
      <body>A Message is a NamedElement that defines a particular communication between Lifelines of an Interaction. A communication can be e.g. raising a signal, invoking an Operation, creating or destroying an Instance. The Message specifies not only the kind of communication given by the dispatching ExecutionSpecification, but also the sender and the receiver. A Message associates normally two OccurrenceSpecifications - one sending OccurrenceSpecification and one receiving OccurrenceSpecification.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SEUDcHCoEdq2Lvk-NX0TGA" name="sending_receiving_message_event" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SEUDcXCoEdq2Lvk-NX0TGA" annotatedElement="_SEUDcHCoEdq2Lvk-NX0TGA">
        <body>If the sending MessageEvent and the receiving MessageEvent of the same Message are on the same Lifeline, the sending MessageEvent must be ordered before the receiving MessageEvent.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEUDcnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SEUDc3CoEdq2Lvk-NX0TGA" name="signature_refer_to" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SEUDdHCoEdq2Lvk-NX0TGA" annotatedElement="_SEUDc3CoEdq2Lvk-NX0TGA">
        <body>The signature must either refer an Operation (in which case messageSort is either synchCall or asynchCall) or a Signal (in which case messageSort is asynchSignal). The name of the NamedElement referenced by signature must be the same as that of the Message.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEUDdXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SEUDdnCoEdq2Lvk-NX0TGA" name="signature_is_operation" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SEUDd3CoEdq2Lvk-NX0TGA" annotatedElement="_SEUDdnCoEdq2Lvk-NX0TGA">
        <body>In the case when the Message signature is an Operation, the arguments of the Message must correspond to the parameters of the Operation. A Parameter corresponds to an Argument if the Argument is of the same Class or a specialization of that of the Parameter.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEUDeHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SEUDeXCoEdq2Lvk-NX0TGA" name="signature_is_signal" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SEUDenCoEdq2Lvk-NX0TGA" annotatedElement="_SEUDeXCoEdq2Lvk-NX0TGA">
        <body>In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Arguement is of the same Class or a specialization of that of the Attribute.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEUDe3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SEUDfHCoEdq2Lvk-NX0TGA" name="arguments" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SEUDfXCoEdq2Lvk-NX0TGA" annotatedElement="_SEUDfHCoEdq2Lvk-NX0TGA">
        <body>Arguments of a Message must only be:
i) attributes of the sending lifeline
ii) constants
iii) symbolic values (which are wildcard values representing any legal value)
iv) explicit parameters of the enclosing Interaction
v) attributes of the class owning the Interaction
</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEUDfnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SEUDf3CoEdq2Lvk-NX0TGA" name="cannot_cross_boundaries" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SEUDgHCoEdq2Lvk-NX0TGA" annotatedElement="_SEUDf3CoEdq2Lvk-NX0TGA">
        <body>Messages cannot cross bounderies of CombinedFragments or their operands.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEUDgXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SEUDgnCoEdq2Lvk-NX0TGA" name="occurrence_specifications" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SEUDg3CoEdq2Lvk-NX0TGA" annotatedElement="_SEUDgnCoEdq2Lvk-NX0TGA">
        <body>If the MessageEnds are both OccurrenceSpecifications then the connector must go between the Parts represented by the Lifelines of the two MessageEnds.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEUDhHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SEUDhXCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SEUDhnCoEdq2Lvk-NX0TGA" name="messageKind" type="_Y_jskGvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
      <ownedComment xmi:id="_SEUDh3CoEdq2Lvk-NX0TGA" annotatedElement="_SEUDhnCoEdq2Lvk-NX0TGA">
        <body>The derived kind of the Message (complete, lost, found or unknown)</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_SEUDiHCoEdq2Lvk-NX0TGA" type="_Y_jskGvtEdqG6fBIPwe-mw" instance="_SEm-ZHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEUDiXCoEdq2Lvk-NX0TGA" name="messageSort" type="_SEm-c3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEUDinCoEdq2Lvk-NX0TGA" annotatedElement="_SEUDiXCoEdq2Lvk-NX0TGA">
        <body>The sort of communication reflected by the Message</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_SEUDi3CoEdq2Lvk-NX0TGA" type="_SEm-c3CoEdq2Lvk-NX0TGA" instance="_SEm-dXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEUDjHCoEdq2Lvk-NX0TGA" name="receiveEvent" type="_SEd0qHCoEdq2Lvk-NX0TGA" association="_SE6gZnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEUDjXCoEdq2Lvk-NX0TGA" annotatedElement="_SEUDjHCoEdq2Lvk-NX0TGA">
        <body>References the Receiving of the Message</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEUDjnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEUDj3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEUDkHCoEdq2Lvk-NX0TGA" name="sendEvent" type="_SEd0qHCoEdq2Lvk-NX0TGA" association="_SE6ganCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEUDkXCoEdq2Lvk-NX0TGA" annotatedElement="_SEUDkHCoEdq2Lvk-NX0TGA">
        <body>References the Sending of the Message.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEUDknCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEUDk3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEUDlHCoEdq2Lvk-NX0TGA" name="connector" type="_SDuNkHCoEdq2Lvk-NX0TGA" association="_SE6geHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEUDlXCoEdq2Lvk-NX0TGA" annotatedElement="_SEUDlHCoEdq2Lvk-NX0TGA">
        <body>The Connector on which this Message is sent.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEUDlnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEUDl3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEUDmHCoEdq2Lvk-NX0TGA" name="interaction" type="_SEK5h3CoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SE6gfHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SEUDmXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEUDmnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEUDm3CoEdq2Lvk-NX0TGA" annotatedElement="_SEUDmHCoEdq2Lvk-NX0TGA">
        <body>The enclosing Interaction owning the Message</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEUDnHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEUDnXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEd0cHCoEdq2Lvk-NX0TGA" name="argument" type="_RzLQJ3CoEdq2Lvk-NX0TGA" isOrdered="true" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SE6ggHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SEd0cXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEd0cnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEd0c3CoEdq2Lvk-NX0TGA" annotatedElement="_SEd0cHCoEdq2Lvk-NX0TGA">
        <body>The arguments of the Message</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEd0dHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEd0dXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEd0dnCoEdq2Lvk-NX0TGA" name="signature" type="_csVgUGvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_SFDqZHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SEd0d3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEd0eHCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEd0eXCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0dnCoEdq2Lvk-NX0TGA">
        <body>The definition of the type or signature of the Message (depending on its kind). The associated named element is derived from the message end that constitutes the sending or receiving message event. If both a sending event and a receiving message event are present, the signature is obtained from the sending event.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEd0enCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEd0e3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_8U6CAFYfEdqB6vblk3tuMA" name="getMessageKind" visibility="protected" type="_Y_jskGvtEdqG6fBIPwe-mw">
      <returnResult xmi:id="_-_OTMFYfEdqB6vblk3tuMA" type="_Y_jskGvtEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R__uEFYjEdqB6vblk3tuMA" name="getSignature" visibility="protected" type="_csVgUGvtEdqG6fBIPwe-mw">
      <returnResult xmi:id="_WEKuIFYjEdqB6vblk3tuMA" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YR4i4VYjEdqB6vblk3tuMA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_YR4i4FYjEdqB6vblk3tuMA"/>
      </returnResult>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEd0fHCoEdq2Lvk-NX0TGA" name="GeneralOrdering">
    <ownedComment xmi:id="_SEd0fXCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0fHCoEdq2Lvk-NX0TGA">
      <body>A GeneralOrdering represents a binary relation between two OccurrenceSpecifications, to describe that one OccurrenceSpecification must occur before the other in a valid trace. This mechanism provides the ability to define partial orders of OccurrenceSpecifications that may otherwise not have a specified order. A GeneralOrdering is a specialization of NamedElement.</body>
    </ownedComment>
    <generalization xmi:id="_SEd0fnCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SEd0f3CoEdq2Lvk-NX0TGA" name="before" type="_SEd0lXCoEdq2Lvk-NX0TGA" association="_SE6gfnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEd0gHCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0f3CoEdq2Lvk-NX0TGA">
        <body>The OccurrenceSpecification referenced comes before the OccurrenceSpecification referenced by after.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEd0gXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEd0gnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEd0g3CoEdq2Lvk-NX0TGA" name="after" type="_SEd0lXCoEdq2Lvk-NX0TGA" association="_SE6gf3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEd0hHCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0g3CoEdq2Lvk-NX0TGA">
        <body>The OccurrenceSpecification referenced comes after the OccurrenceSpecification referenced by before.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEd0hXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEd0hnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEd0h3CoEdq2Lvk-NX0TGA" name="ExecutionSpecification" isAbstract="true">
    <ownedComment xmi:id="_SEd0iHCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0h3CoEdq2Lvk-NX0TGA">
      <body>An ExecutionSpecification is a specification of the execution of a unit of behavior or action within the Lifeline. The duration of an ExecutionSpecification is represented by two ExecutionOccurrenceSpecifications, the start ExecutionOccurrenceSpecification and the finish ExecutionOccurrenceSpecification.</body>
    </ownedComment>
    <ownedRule xmi:id="_SEd0iXCoEdq2Lvk-NX0TGA" name="same_lifeline" constrainedElement="_SEd0h3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEd0inCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0iXCoEdq2Lvk-NX0TGA">
        <body>The startEvent and the finishEvent must be on the same Lifeline</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEd0i3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>start.lifeline = finish.lifeline</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SEd0jHCoEdq2Lvk-NX0TGA" general="_SEK5w3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SEd0jXCoEdq2Lvk-NX0TGA" name="start" type="_SEwvhXCoEdq2Lvk-NX0TGA" association="_SEwvknCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEd0jnCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0jXCoEdq2Lvk-NX0TGA">
        <body>References the OccurrenceSpecification that designates the start of the Action or Behavior</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEd0j3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEd0kHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEd0kXCoEdq2Lvk-NX0TGA" name="finish" type="_SEwvhXCoEdq2Lvk-NX0TGA" association="_SEwvl3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEd0knCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0kXCoEdq2Lvk-NX0TGA">
        <body>References the OccurrenceSpecification that designates the finish of the Action or Behavior.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEd0k3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEd0lHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEd0lXCoEdq2Lvk-NX0TGA" name="OccurrenceSpecification" isAbstract="true">
    <ownedComment xmi:id="_SEd0lnCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0lXCoEdq2Lvk-NX0TGA">
      <body>An OccurrenceSpecification is the basic semantic unit of Interactions. The sequences of occurrences specified by them are the meanings of Interactions.

OccurrenceSpecifications are ordered along a Lifeline.

The namespace of an OccurrenceSpecification is the Interaction in which it is contained.

</body>
    </ownedComment>
    <generalization xmi:id="_SEd0l3CoEdq2Lvk-NX0TGA" general="_SEK5w3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SEd0mHCoEdq2Lvk-NX0TGA" name="covered" type="_SEK5o3CoEdq2Lvk-NX0TGA" redefinedProperty="_SEK5xnCoEdq2Lvk-NX0TGA" association="_SE6gbnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEd0mXCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0mHCoEdq2Lvk-NX0TGA">
        <body>References the Lifeline on which the OccurrenceSpecification appears.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEd0mnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEd0m3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEd0nHCoEdq2Lvk-NX0TGA" name="toAfter" type="_SEd0fHCoEdq2Lvk-NX0TGA" association="_SE6gfnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEd0nXCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0nHCoEdq2Lvk-NX0TGA">
        <body>References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEd0nnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEd0n3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEd0oHCoEdq2Lvk-NX0TGA" name="toBefore" type="_SEd0fHCoEdq2Lvk-NX0TGA" association="_SE6gf3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEd0oXCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0oHCoEdq2Lvk-NX0TGA">
        <body>References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEd0onCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEd0o3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEd0pHCoEdq2Lvk-NX0TGA" name="event" type="_SGZuJnCoEdq2Lvk-NX0TGA" association="_SFNbUHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEd0pXCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0pHCoEdq2Lvk-NX0TGA">
        <body>References a specification of the occurring event.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEd0pnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEd0p3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEd0qHCoEdq2Lvk-NX0TGA" name="MessageEnd" isAbstract="true">
    <ownedComment xmi:id="_SEd0qXCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0qHCoEdq2Lvk-NX0TGA">
      <body>A MessageEnd is an abstract NamedElement that represents what can occur at the end of a Message.</body>
    </ownedComment>
    <generalization xmi:id="_SEd0qnCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SEd0q3CoEdq2Lvk-NX0TGA" name="message" type="_gfgNwGveEdq4DLWZOhbdEA" association="_SFDqbnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEd0rHCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0q3CoEdq2Lvk-NX0TGA">
        <body>References a Message.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEd0rXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEd0rnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_Y_jskGvtEdqG6fBIPwe-mw" name="MessageKind">
    <ownedComment xmi:id="_SEd0r3CoEdq2Lvk-NX0TGA" annotatedElement="_Y_jskGvtEdqG6fBIPwe-mw">
      <body>MessageKind is an enumeration of the following values:

- complete = sendEvent and receiveEvent are present

- lost = sendEvent present and receiveEvent absent

- found = sendEvent absent and receiveEvent present

- unknown = sendEvent and receiveEvent absent (should not appear)</body>
    </ownedComment>
    <ownedLiteral xmi:id="_SEd0sHCoEdq2Lvk-NX0TGA" name="complete">
      <ownedComment xmi:id="_SEd0sXCoEdq2Lvk-NX0TGA" annotatedElement="_SEd0sHCoEdq2Lvk-NX0TGA">
        <body>sendEvent and receiveEvent are present</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SEm-YHCoEdq2Lvk-NX0TGA" name="lost">
      <ownedComment xmi:id="_SEm-YXCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-YHCoEdq2Lvk-NX0TGA">
        <body>sendEvent present and receiveEvent absent</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SEm-YnCoEdq2Lvk-NX0TGA" name="found">
      <ownedComment xmi:id="_SEm-Y3CoEdq2Lvk-NX0TGA" annotatedElement="_SEm-YnCoEdq2Lvk-NX0TGA">
        <body>sendEvent absent and receiveEvent present</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SEm-ZHCoEdq2Lvk-NX0TGA" name="unknown">
      <ownedComment xmi:id="_SEm-ZXCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-ZHCoEdq2Lvk-NX0TGA">
        <body>sendEvent and receiveEvent absent (should not appear)</body>
      </ownedComment>
    </ownedLiteral>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEm-ZnCoEdq2Lvk-NX0TGA" name="StateInvariant">
    <ownedComment xmi:id="_SEm-Z3CoEdq2Lvk-NX0TGA" annotatedElement="_SEm-ZnCoEdq2Lvk-NX0TGA">
      <body>A StateInvariant is a runtime constraint on the participants of the interaction. It may be used to specify a variety of different kinds of constraints, such as values of attributes or variables, internal or external states, and so on. A StateInvariant is an InteractionFragment and it is placed on a Lifeline.</body>
    </ownedComment>
    <generalization xmi:id="_SEm-aHCoEdq2Lvk-NX0TGA" general="_SEK5w3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SEm-aXCoEdq2Lvk-NX0TGA" name="invariant" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SE6ghXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SEm-anCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEm-a3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEm-bHCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-aXCoEdq2Lvk-NX0TGA">
        <body>A Constraint that should hold at runtime for this StateInvariant</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEm-bXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEm-bnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEm-b3CoEdq2Lvk-NX0TGA" name="covered" type="_SEK5o3CoEdq2Lvk-NX0TGA" redefinedProperty="_SEK5xnCoEdq2Lvk-NX0TGA" association="_SFDqUHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEm-cHCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-b3CoEdq2Lvk-NX0TGA">
        <body>References the Lifeline on which the StateInvariant appears.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEm-cXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEm-cnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_SEm-c3CoEdq2Lvk-NX0TGA" name="MessageSort">
    <ownedComment xmi:id="_SEm-dHCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-c3CoEdq2Lvk-NX0TGA">
      <body>MessageSort is an enumeration of the following values:

- synchCall = the message was generated by a synchronous call to an operation

- asynchCall = the message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous= false

- asynchSignal = the message was generated by an asynchronous send action

- createMessage = the message designating the creation of another lifeline object

- deleteMessage = the message designating the termination of anther lifeline

- reply = the message is a reply message to an operation call</body>
    </ownedComment>
    <ownedLiteral xmi:id="_SEm-dXCoEdq2Lvk-NX0TGA" name="synchCall">
      <ownedComment xmi:id="_SEm-dnCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-dXCoEdq2Lvk-NX0TGA">
        <body>The message was generated by a synchronous call to an operation.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SEm-d3CoEdq2Lvk-NX0TGA" name="asynchCall">
      <ownedComment xmi:id="_SEm-eHCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-d3CoEdq2Lvk-NX0TGA">
        <body>The message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous

= false.

</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SEm-eXCoEdq2Lvk-NX0TGA" name="asynchSignal">
      <ownedComment xmi:id="_SEm-enCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-eXCoEdq2Lvk-NX0TGA">
        <body>The message was generated by an asynchronous send action.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SEm-e3CoEdq2Lvk-NX0TGA" name="createMessage">
      <ownedComment xmi:id="_SEm-fHCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-e3CoEdq2Lvk-NX0TGA">
        <body>The message designating the creation of another lifeline object.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SEm-fXCoEdq2Lvk-NX0TGA" name="deleteMessage">
      <ownedComment xmi:id="_SEm-fnCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-fXCoEdq2Lvk-NX0TGA">
        <body>The message designating the termination of another lifeline.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SEm-f3CoEdq2Lvk-NX0TGA" name="reply">
      <ownedComment xmi:id="_SEm-gHCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-f3CoEdq2Lvk-NX0TGA">
        <body>The message is a reply message to an operation call.</body>
      </ownedComment>
    </ownedLiteral>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEm-gXCoEdq2Lvk-NX0TGA" name="ActionExecutionSpecification">
    <ownedComment xmi:id="_SEm-gnCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-gXCoEdq2Lvk-NX0TGA">
      <body>ActionExecutionSpecification is a kind of ExecutionSpecification representing the execution of an action.</body>
    </ownedComment>
    <ownedRule xmi:id="_SEm-g3CoEdq2Lvk-NX0TGA" name="action_referenced" constrainedElement="_SEm-gXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEm-hHCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-g3CoEdq2Lvk-NX0TGA">
        <body>The Action referenced by the ActionExecutionSpecification, if any, must be owned by the Interaction owning the ActionExecutionOccurrence.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEm-hXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SEm-hnCoEdq2Lvk-NX0TGA" general="_SEd0h3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SEm-h3CoEdq2Lvk-NX0TGA" name="action" type="_SJYJ8XCoEdq2Lvk-NX0TGA" association="_SFDqYHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEm-iHCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-h3CoEdq2Lvk-NX0TGA">
        <body>Action whose execution is occurring.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEm-iXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEm-inCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEm-i3CoEdq2Lvk-NX0TGA" name="BehaviorExecutionSpecification">
    <ownedComment xmi:id="_SEm-jHCoEdq2Lvk-NX0TGA" annotatedElement="_SEm-i3CoEdq2Lvk-NX0TGA">
      <body>BehaviorExecutionSpecification is a kind of ExecutionSpecification representing the execution of a behavior.</body>
    </ownedComment>
    <generalization xmi:id="_SEm-jXCoEdq2Lvk-NX0TGA" general="_SEd0h3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SEm-jnCoEdq2Lvk-NX0TGA" name="behavior" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SFDqXnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEm-j3CoEdq2Lvk-NX0TGA" annotatedElement="_SEm-jnCoEdq2Lvk-NX0TGA">
        <body>Behavior whose execution is occurring.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEm-kHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEm-kXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEwvYHCoEdq2Lvk-NX0TGA" name="ExecutionEvent">
    <ownedComment xmi:id="_SEwvYXCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvYHCoEdq2Lvk-NX0TGA">
      <body>An ExecutionEvent models the start or finish of an execution occurrence.</body>
    </ownedComment>
    <generalization xmi:id="_SEwvYnCoEdq2Lvk-NX0TGA" general="_SGZuJnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEwvY3CoEdq2Lvk-NX0TGA" name="CreationEvent">
    <ownedComment xmi:id="_SEwvZHCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvY3CoEdq2Lvk-NX0TGA">
      <body>A CreationEvent models the creation of an object.</body>
    </ownedComment>
    <ownedRule xmi:id="_SEwvZXCoEdq2Lvk-NX0TGA" name="no_occurrence_above" constrainedElement="_SEwvY3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEwvZnCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvZXCoEdq2Lvk-NX0TGA">
        <body>No othet OccurrenceSpecification may appear above an OccurrenceSpecification which references a CreationEvent on a given Lifeline in an InteractionOperand.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEwvZ3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SEwvaHCoEdq2Lvk-NX0TGA" general="_SGZuJnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEwvaXCoEdq2Lvk-NX0TGA" name="DestructionEvent">
    <ownedComment xmi:id="_SEwvanCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvaXCoEdq2Lvk-NX0TGA">
      <body>A DestructionEvent models the destruction of an object.</body>
    </ownedComment>
    <ownedRule xmi:id="_SEwva3CoEdq2Lvk-NX0TGA" name="no_occurrence_specifications_below" constrainedElement="_SEwvaXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEwvbHCoEdq2Lvk-NX0TGA" annotatedElement="_SEwva3CoEdq2Lvk-NX0TGA">
        <body>No other OccurrenceSpecifications may appear below an OccurrenceSpecification which references a DestructionEvent on a given Lifeline in an InteractionOperand.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEwvbXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SEwvbnCoEdq2Lvk-NX0TGA" general="_SGZuJnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEwvb3CoEdq2Lvk-NX0TGA" name="SendOperationEvent">
    <ownedComment xmi:id="_SEwvcHCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvb3CoEdq2Lvk-NX0TGA">
      <body>A SendOperationEvent models the invocation of an operation call.</body>
    </ownedComment>
    <generalization xmi:id="_SEwvcXCoEdq2Lvk-NX0TGA" general="_SGP9THCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SEwvcnCoEdq2Lvk-NX0TGA" name="operation" type="_M4X2IGveEdq4DLWZOhbdEA" association="_SFDqZnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEwvc3CoEdq2Lvk-NX0TGA" annotatedElement="_SEwvcnCoEdq2Lvk-NX0TGA">
        <body>The operation associated with this event.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEwvdHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEwvdXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEwvdnCoEdq2Lvk-NX0TGA" name="SendSignalEvent">
    <ownedComment xmi:id="_SEwvd3CoEdq2Lvk-NX0TGA" annotatedElement="_SEwvdnCoEdq2Lvk-NX0TGA">
      <body>A SendSignalEvent models the sending of a signal.</body>
    </ownedComment>
    <generalization xmi:id="_SEwveHCoEdq2Lvk-NX0TGA" general="_SGP9THCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SEwveXCoEdq2Lvk-NX0TGA" name="signal" type="_SGP9KnCoEdq2Lvk-NX0TGA" association="_SFDqanCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEwvenCoEdq2Lvk-NX0TGA" annotatedElement="_SEwveXCoEdq2Lvk-NX0TGA">
        <body>The signal associated with this event.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEwve3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEwvfHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEwvfXCoEdq2Lvk-NX0TGA" name="MessageOccurrenceSpecification">
    <ownedComment xmi:id="_SEwvfnCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvfXCoEdq2Lvk-NX0TGA">
      <body>Specifies the occurrence of message events, such as sending and receiving of signals or invoking or receiving of operation calls. A message occurrence specification is a kind of message end. Messages are generated either by synchronous operation calls or asynchronous signal sends. They are received by the execution of corresponding accept event actions.</body>
    </ownedComment>
    <generalization xmi:id="_SEwvf3CoEdq2Lvk-NX0TGA" general="_SEd0qHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SEwvgHCoEdq2Lvk-NX0TGA" general="_SEd0lXCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SEwvgXCoEdq2Lvk-NX0TGA" name="event" type="_SGZuJnCoEdq2Lvk-NX0TGA" redefinedProperty="_SEd0pHCoEdq2Lvk-NX0TGA" association="_SFDqcnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEwvgnCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvgXCoEdq2Lvk-NX0TGA">
        <body>Redefines the event referenced to be restricted to a message event.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEwvg3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEwvhHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEwvhXCoEdq2Lvk-NX0TGA" name="ExecutionOccurrenceSpecification">
    <ownedComment xmi:id="_SEwvhnCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvhXCoEdq2Lvk-NX0TGA">
      <body>An ExecutionOccurrenceSpecification represents moments in time at which actions or behaviors start or finish.</body>
    </ownedComment>
    <generalization xmi:id="_SEwvh3CoEdq2Lvk-NX0TGA" general="_SEd0lXCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SEwviHCoEdq2Lvk-NX0TGA" name="execution" type="_SEd0h3CoEdq2Lvk-NX0TGA" association="_SFNbWXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEwviXCoEdq2Lvk-NX0TGA" annotatedElement="_SEwviHCoEdq2Lvk-NX0TGA">
        <body>References the execution specification describing the execution that is started or finished at this execution event.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEwvinCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEwvi3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEwvjHCoEdq2Lvk-NX0TGA" name="event" type="_SEwvYHCoEdq2Lvk-NX0TGA" redefinedProperty="_SEd0pHCoEdq2Lvk-NX0TGA" association="_SFNbXXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEwvjXCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvjHCoEdq2Lvk-NX0TGA">
        <body>Redefines the event referenced to be restricted to an execution event.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEwvjnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEwvj3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEwvkHCoEdq2Lvk-NX0TGA" name="A_covered_coveredBy" memberEnd="_SEK5xnCoEdq2Lvk-NX0TGA _SEK5r3CoEdq2Lvk-NX0TGA">
    <ownedComment xmi:id="_SEwvkXCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvkHCoEdq2Lvk-NX0TGA">
      <body>This association shows the lifelines that make up an interaction. A lifeline may be part of more than one interaction use.</body>
    </ownedComment>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEwvknCoEdq2Lvk-NX0TGA" name="A_executionSpecification_start" memberEnd="_SEwvlHCoEdq2Lvk-NX0TGA _SEd0jXCoEdq2Lvk-NX0TGA">
    <ownedComment xmi:id="_SEwvk3CoEdq2Lvk-NX0TGA" annotatedElement="_SEwvknCoEdq2Lvk-NX0TGA">
      <body>The event shows the time point at which the action begins execution.</body>
    </ownedComment>
    <ownedEnd xmi:id="_SEwvlHCoEdq2Lvk-NX0TGA" type="_SEd0h3CoEdq2Lvk-NX0TGA" association="_SEwvknCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEwvlXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEwvlnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEwvl3CoEdq2Lvk-NX0TGA" name="A_executionSpecification_finish" memberEnd="_SEwvmXCoEdq2Lvk-NX0TGA _SEd0kXCoEdq2Lvk-NX0TGA">
    <ownedComment xmi:id="_SEwvmHCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvl3CoEdq2Lvk-NX0TGA">
      <body>The event shows the time point at which the action completes execution.</body>
    </ownedComment>
    <ownedEnd xmi:id="_SEwvmXCoEdq2Lvk-NX0TGA" type="_SEd0h3CoEdq2Lvk-NX0TGA" association="_SEwvl3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEwvmnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEwvm3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SEwvnHCoEdq2Lvk-NX0TGA" name="A_lifeline_represents" memberEnd="_SE6gYXCoEdq2Lvk-NX0TGA _SEK5s3CoEdq2Lvk-NX0TGA">
    <ownedComment xmi:id="_SE6gYHCoEdq2Lvk-NX0TGA" annotatedElement="_SEwvnHCoEdq2Lvk-NX0TGA">
      <body>If a Part has multiplicity, multiple lifelines might be used to show it.</body>
    </ownedComment>
    <ownedEnd xmi:id="_SE6gYXCoEdq2Lvk-NX0TGA" type="_SEK5o3CoEdq2Lvk-NX0TGA" association="_SEwvnHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SE6gYnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SE6gY3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SE6gZHCoEdq2Lvk-NX0TGA" name="A_lifeline_interaction" memberEnd="_SEK5i3CoEdq2Lvk-NX0TGA _SEK5t3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SE6gZXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SE6gZnCoEdq2Lvk-NX0TGA" name="A_receiveEvent_message" memberEnd="_SE6gZ3CoEdq2Lvk-NX0TGA _SEUDjHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SE6gZ3CoEdq2Lvk-NX0TGA" type="_gfgNwGveEdq4DLWZOhbdEA" association="_SE6gZnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SE6gaHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SE6gaXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SE6ganCoEdq2Lvk-NX0TGA" name="A_sendEvent_message" memberEnd="_SE6ga3CoEdq2Lvk-NX0TGA _SEUDkHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SE6ga3CoEdq2Lvk-NX0TGA" type="_gfgNwGveEdq4DLWZOhbdEA" association="_SE6ganCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SE6gbHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SE6gbXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SE6gbnCoEdq2Lvk-NX0TGA" name="A_events_covered" memberEnd="_SE6gcHCoEdq2Lvk-NX0TGA _SEd0mHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SE6gb3CoEdq2Lvk-NX0TGA" general="_SEwvkHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SE6gcHCoEdq2Lvk-NX0TGA" name="events" type="_SEd0lXCoEdq2Lvk-NX0TGA" isOrdered="true" association="_SE6gbnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SE6gcXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SE6gcnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SE6gc3CoEdq2Lvk-NX0TGA" name="A_selector_lifeline" memberEnd="_SEK5vXCoEdq2Lvk-NX0TGA _SE6gdXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SE6gdHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SE6gdXCoEdq2Lvk-NX0TGA" type="_SEK5o3CoEdq2Lvk-NX0TGA" association="_SE6gc3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SE6gdnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SE6gd3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SE6geHCoEdq2Lvk-NX0TGA" name="A_connector_message" memberEnd="_SE6geXCoEdq2Lvk-NX0TGA _SEUDlHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SE6geXCoEdq2Lvk-NX0TGA" type="_gfgNwGveEdq4DLWZOhbdEA" association="_SE6geHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SE6genCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SE6ge3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SE6gfHCoEdq2Lvk-NX0TGA" name="A_message_interaction" memberEnd="_SEUDmHCoEdq2Lvk-NX0TGA _SEK5kXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SE6gfXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SE6gfnCoEdq2Lvk-NX0TGA" name="A_before_toAfter" memberEnd="_SEd0f3CoEdq2Lvk-NX0TGA _SEd0nHCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SE6gf3CoEdq2Lvk-NX0TGA" name="A_toBefore_after" memberEnd="_SEd0g3CoEdq2Lvk-NX0TGA _SEd0oHCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SE6ggHCoEdq2Lvk-NX0TGA" name="A_argument_message" memberEnd="_SE6ggnCoEdq2Lvk-NX0TGA _SEd0cHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SE6ggXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SE6ggnCoEdq2Lvk-NX0TGA" type="_gfgNwGveEdq4DLWZOhbdEA" association="_SE6ggHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SE6gg3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SE6ghHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SE6ghXCoEdq2Lvk-NX0TGA" name="A_invariant_stateInvariant" memberEnd="_SEm-aXCoEdq2Lvk-NX0TGA _SE6gh3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SE6ghnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SE6gh3CoEdq2Lvk-NX0TGA" type="_SEm-ZnCoEdq2Lvk-NX0TGA" association="_SE6ghXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFDqUHCoEdq2Lvk-NX0TGA" name="A_stateInvariant_covered" memberEnd="_SEm-b3CoEdq2Lvk-NX0TGA _SFDqUnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFDqUXCoEdq2Lvk-NX0TGA" general="_SEwvkHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFDqUnCoEdq2Lvk-NX0TGA" name="stateInvariant" type="_SEm-ZnCoEdq2Lvk-NX0TGA" association="_SFDqUHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFDqU3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFDqVHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFDqVXCoEdq2Lvk-NX0TGA" name="A_generalOrdering_interactionFragment" memberEnd="_SEK5ynCoEdq2Lvk-NX0TGA _SFDqV3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFDqVnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFDqV3CoEdq2Lvk-NX0TGA" type="_SEK5w3CoEdq2Lvk-NX0TGA" association="_SFDqVXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFDqWHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFDqWXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFDqWnCoEdq2Lvk-NX0TGA" name="A_enclosingInteraction_fragment" memberEnd="_SEK50HCoEdq2Lvk-NX0TGA _SEK5l3CoEdq2Lvk-NX0TGA">
    <ownedRule xmi:id="_SFDqW3CoEdq2Lvk-NX0TGA" constrainedElement="_SFDqWnCoEdq2Lvk-NX0TGA">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFDqXHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>ordered</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SFDqXXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFDqXnCoEdq2Lvk-NX0TGA" name="A_behavior_behaviorExecutionSpecification" memberEnd="_SFDqX3CoEdq2Lvk-NX0TGA _SEm-jnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFDqX3CoEdq2Lvk-NX0TGA" type="_SEm-i3CoEdq2Lvk-NX0TGA" association="_SFDqXnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFDqYHCoEdq2Lvk-NX0TGA" name="A_action_actionExecutionSpecification" memberEnd="_SEm-h3CoEdq2Lvk-NX0TGA _SFDqYXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFDqYXCoEdq2Lvk-NX0TGA" type="_SEm-gXCoEdq2Lvk-NX0TGA" association="_SFDqYHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFDqYnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFDqY3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFDqZHCoEdq2Lvk-NX0TGA" name="A_signature_message" memberEnd="_SFDqZXCoEdq2Lvk-NX0TGA _SEd0dnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFDqZXCoEdq2Lvk-NX0TGA" type="_gfgNwGveEdq4DLWZOhbdEA" association="_SFDqZHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFDqZnCoEdq2Lvk-NX0TGA" name="A_operation_sendOperationEvent" memberEnd="_SFDqZ3CoEdq2Lvk-NX0TGA _SEwvcnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFDqZ3CoEdq2Lvk-NX0TGA" type="_SEwvb3CoEdq2Lvk-NX0TGA" association="_SFDqZnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFDqaHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFDqaXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFDqanCoEdq2Lvk-NX0TGA" name="A_signal_sendSignalEvent" memberEnd="_SEwveXCoEdq2Lvk-NX0TGA _SFDqa3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFDqa3CoEdq2Lvk-NX0TGA" type="_SEwvdnCoEdq2Lvk-NX0TGA" association="_SFDqanCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFDqbHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFDqbXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFDqbnCoEdq2Lvk-NX0TGA" name="A_message_messageEnd" memberEnd="_SEd0q3CoEdq2Lvk-NX0TGA _SFDqb3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFDqb3CoEdq2Lvk-NX0TGA" type="_SEd0qHCoEdq2Lvk-NX0TGA" association="_SFDqbnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFDqcHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFDqcXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFDqcnCoEdq2Lvk-NX0TGA" name="A_event_messageOccurrenceSpecification" memberEnd="_SEwvgXCoEdq2Lvk-NX0TGA _SFDqdHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFDqc3CoEdq2Lvk-NX0TGA" general="_SFNbUHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFDqdHCoEdq2Lvk-NX0TGA" type="_SEwvfXCoEdq2Lvk-NX0TGA" redefinedProperty="_SFNbUXCoEdq2Lvk-NX0TGA" association="_SFDqcnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFDqdXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFDqdnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFNbUHCoEdq2Lvk-NX0TGA" name="A_event_occurrenceSpecification" memberEnd="_SEd0pHCoEdq2Lvk-NX0TGA _SFNbUXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFNbUXCoEdq2Lvk-NX0TGA" type="_SEd0lXCoEdq2Lvk-NX0TGA" association="_SFNbUHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFNbUnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFNbU3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFNbVHCoEdq2Lvk-NX0TGA" name="A_action_interaction" memberEnd="_SEK5nXCoEdq2Lvk-NX0TGA _SFNbVnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFNbVXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFNbVnCoEdq2Lvk-NX0TGA" type="_SEK5h3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SFNbVHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFNbV3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFNbWHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFNbWXCoEdq2Lvk-NX0TGA" name="A_execution_executionOccurrenceSpecification" memberEnd="_SEwviHCoEdq2Lvk-NX0TGA _SFNbWnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFNbWnCoEdq2Lvk-NX0TGA" type="_SEwvhXCoEdq2Lvk-NX0TGA" association="_SFNbWXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFNbW3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFNbXHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFNbXXCoEdq2Lvk-NX0TGA" name="A_event_executionOccurrenceSpecification" memberEnd="_SEwvjHCoEdq2Lvk-NX0TGA _SFNbX3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFNbXnCoEdq2Lvk-NX0TGA" general="_SFNbUHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFNbX3CoEdq2Lvk-NX0TGA" type="_SEwvhXCoEdq2Lvk-NX0TGA" redefinedProperty="_SFNbUXCoEdq2Lvk-NX0TGA" association="_SFNbXXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFNbYHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFNbYXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFNbYnCoEdq2Lvk-NX0TGA" name="ReceiveOperationEvent">
    <ownedComment xmi:id="_SFNbY3CoEdq2Lvk-NX0TGA" annotatedElement="_SFNbYnCoEdq2Lvk-NX0TGA">
      <body>A ReceiveOperationEvent models the reception of an operation call.</body>
    </ownedComment>
    <generalization xmi:id="_SFNbZHCoEdq2Lvk-NX0TGA" general="_SGP9THCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SFNbZXCoEdq2Lvk-NX0TGA" name="operation" type="_M4X2IGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SFNbZnCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbZXCoEdq2Lvk-NX0TGA">
        <body>The operation associated with this event.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFNbZ3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFNbaHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFNbaXCoEdq2Lvk-NX0TGA" name="ReceiveSignalEvent">
    <ownedComment xmi:id="_SFNbanCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbaXCoEdq2Lvk-NX0TGA">
      <body>A ReceiveSignalEvent models the receiving of a signal.</body>
    </ownedComment>
    <generalization xmi:id="_SFNba3CoEdq2Lvk-NX0TGA" general="_SGP9THCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SFNbbHCoEdq2Lvk-NX0TGA" name="signal" type="_SGP9KnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFNbbXCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbbHCoEdq2Lvk-NX0TGA">
        <body>The signal associated with this event.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFNbbnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFNbb3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFNbcHCoEdq2Lvk-NX0TGA" name="InteractionUse">
    <ownedComment xmi:id="_SFNbcXCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbcHCoEdq2Lvk-NX0TGA">
      <body>An InteractionUse refers to an Interaction. The InteractionUse is a shorthand for copying the contents of the referred Interaction where the InteractionUse is. To be accurate the copying must take into account substituting parameters with arguments and connect the formal gates with the actual ones.



It is common to want to share portions of an interaction between several other interactions. An InteractionUse allows multiple interactions to reference an interaction that represents a common portion of their specification.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SFNbcnCoEdq2Lvk-NX0TGA" name="gates_match" constrainedElement="_SFNbcHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFNbc3CoEdq2Lvk-NX0TGA" annotatedElement="_SFNbcnCoEdq2Lvk-NX0TGA">
        <body>Actual Gates of the InteractionUse must match Formal Gates of the referred Interaction. Gates match when their names are equal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFNbdHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFNbdXCoEdq2Lvk-NX0TGA" name="all_lifelines" constrainedElement="_SFNbcHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFNbdnCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbdXCoEdq2Lvk-NX0TGA">
        <body>The InteractionUse must cover all Lifelines of the enclosing Interaction which appear within the referred Interaction.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFNbd3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFNbeHCoEdq2Lvk-NX0TGA" name="arguments_correspond_to_parameters" constrainedElement="_SFNbcHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFNbeXCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbeHCoEdq2Lvk-NX0TGA">
        <body>The arguments of the InteractionUse must correspond to parameters of the referred Interaction</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFNbenCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFNbe3CoEdq2Lvk-NX0TGA" name="arguments_are_constants" constrainedElement="_SFNbcHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFNbfHCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbe3CoEdq2Lvk-NX0TGA">
        <body>The arguments must only be constants, parameters of the enclosing Interaction or attributes of the classifier owning the enclosing Interaction.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFNbfXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SFNbfnCoEdq2Lvk-NX0TGA" general="_SEK5w3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SFNbf3CoEdq2Lvk-NX0TGA" name="refersTo" type="_SEK5h3CoEdq2Lvk-NX0TGA" association="_SFgWbnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFNbgHCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbf3CoEdq2Lvk-NX0TGA">
        <body>Refers to the Interaction that defines its meaning</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFNbgXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFNbgnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFNbg3CoEdq2Lvk-NX0TGA" name="actualGate" type="_SFXMoXCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SFqHRXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFNbhHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFNbhXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFNbhnCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbg3CoEdq2Lvk-NX0TGA">
        <body>The actual gates of the InteractionUse</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFNbh3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFNbiHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFNbiXCoEdq2Lvk-NX0TGA" name="argument" type="_SJYJ8XCoEdq2Lvk-NX0TGA" isOrdered="true" association="_SFqHVXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFNbinCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFNbi3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFNbjHCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbiXCoEdq2Lvk-NX0TGA">
        <body>The actual arguments of the Interaction</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFNbjXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFNbjnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFNbj3CoEdq2Lvk-NX0TGA" name="PartDecomposition">
    <ownedComment xmi:id="_SFNbkHCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbj3CoEdq2Lvk-NX0TGA">
      <body>PartDecomposition is a description of the internal interactions of one Lifeline relative to an Interaction.



A Lifeline has a class associated as the type of the ConnectableElement that the Lifeline represents. That class may have an internal structure and the PartDecomposition is an Interaction that describes the behavior of that internal structure relative to the Interaction where the decomposition is referenced.



A PartDecomposition is a specialization of InteractionUse. It associates with the ConnectableElement that it decomposes.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SFNbkXCoEdq2Lvk-NX0TGA" name="parts_of_internal_structures" constrainedElement="_SFNbj3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFNbknCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbkXCoEdq2Lvk-NX0TGA">
        <body>PartDecompositions apply only to Parts that are Parts of Internal Structures not to Parts of Collaborations.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFNbk3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFNblHCoEdq2Lvk-NX0TGA" name="assume" constrainedElement="_SFNbj3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFNblXCoEdq2Lvk-NX0TGA" annotatedElement="_SFNblHCoEdq2Lvk-NX0TGA">
        <body>Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Within X there is a sequence of constructs along L (such constructs are CombinedFragments, InteractionUse and (plain) OccurrenceSpecifications). Then a corresponding sequence of constructs must appear within D, matched one-to-one in the same order.



i) CombinedFragment covering L are matched with an extra-global CombinedFragment in D

ii) An InteractionUse covering L are matched with a global (i.e. covering all Lifelines) InteractionUse in D.

iii) A plain OccurrenceSpecification on L is considered an actualGate that must be matched by a formalGate of D

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFNblnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFNbl3CoEdq2Lvk-NX0TGA" name="commutativity_of_decomposition" constrainedElement="_SFNbj3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFNbmHCoEdq2Lvk-NX0TGA" annotatedElement="_SFNbl3CoEdq2Lvk-NX0TGA">
        <body>Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Assume also that there is within X an

InteractionUse (say) U that covers L. According to the constraint above U will have a counterpart CU within D. Within the Interaction referenced by U, L should also be decomposed, and the decomposition should reference CU. (This rule is called commutativity of decomposition)

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFNbmXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SFNbmnCoEdq2Lvk-NX0TGA" general="_SFNbcHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFXMUHCoEdq2Lvk-NX0TGA" name="InteractionOperand">
    <ownedComment xmi:id="_SFXMUXCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMUHCoEdq2Lvk-NX0TGA">
      <body>An InteractionOperand is contained in a CombinedFragment. An InteractionOperand represents one operand of the expression given by the enclosing CombinedFragment. 



An InteractionOperand is an InteractionFragment with an optional guard expression. An InteractionOperand may be

guarded by a InteractionConstraint. Only InteractionOperands with a guard that evaluates to true at this point in the interaction will be considered for the production of the traces for the enclosing CombinedFragment.



InteractionOperand contains an ordered set of InteractionFragments.



In Sequence Diagrams these InteractionFragments are ordered according to their geometrical position vertically. The geometrical position of the InteractionFragment is given by the topmost vertical coordinate of its contained OccurrenceSpecifications or symbols.</body>
    </ownedComment>
    <ownedRule xmi:id="_SFXMUnCoEdq2Lvk-NX0TGA" name="guard_directly_prior" constrainedElement="_SFXMUHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMU3CoEdq2Lvk-NX0TGA" annotatedElement="_SFXMUnCoEdq2Lvk-NX0TGA">
        <body>The guard must be placed directly prior to (above) the OccurrenceSpecification that will become the first OccurrenceSpecification within this InteractionOperand.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMVHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFXMVXCoEdq2Lvk-NX0TGA" name="guard_contain_references" constrainedElement="_SFXMUHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMVnCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMVXCoEdq2Lvk-NX0TGA">
        <body>The guard must contain only references to values local to the Lifeline on which it resides, or values global to the whole Interaction.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMV3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SFXMWHCoEdq2Lvk-NX0TGA" general="_SEK5w3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SFXMWXCoEdq2Lvk-NX0TGA" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SFXMWnCoEdq2Lvk-NX0TGA" name="guard" type="_SFXMZnCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SFgWZHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFXMW3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFXMXHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFXMXXCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMWnCoEdq2Lvk-NX0TGA">
        <body>Constraint of the operand.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFXMXnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFXMX3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFXMYHCoEdq2Lvk-NX0TGA" name="fragment" type="_SEK5w3CoEdq2Lvk-NX0TGA" isOrdered="true" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SFqHWXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFXMYXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFXMYnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFXMY3CoEdq2Lvk-NX0TGA" annotatedElement="_SFXMYHCoEdq2Lvk-NX0TGA">
        <body>The fragments of the operand.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFXMZHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFXMZXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFXMZnCoEdq2Lvk-NX0TGA" name="InteractionConstraint">
    <ownedComment xmi:id="_SFXMZ3CoEdq2Lvk-NX0TGA" annotatedElement="_SFXMZnCoEdq2Lvk-NX0TGA">
      <body>An InteractionConstraint is a Boolean expression that guards an operand in a CombinedFragment. InteractionConstraint is a specialization of Constraint. Furthermore the InteractionConstraint contains two expressions designating the minimum and maximum number of times a loop CombinedFragment should execute.</body>
    </ownedComment>
    <ownedRule xmi:id="_SFXMaHCoEdq2Lvk-NX0TGA" name="dynamic_variables" constrainedElement="_SFXMZnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMaXCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMaHCoEdq2Lvk-NX0TGA">
        <body>The dynamic variables that take part in the constraint must be owned by the ConnectableElement corresponding to the covered Lifeline.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXManCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFXMa3CoEdq2Lvk-NX0TGA" name="global_data" constrainedElement="_SFXMZnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMbHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMa3CoEdq2Lvk-NX0TGA">
        <body>The constraint may contain references to global data or write-once data.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMbXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFXMbnCoEdq2Lvk-NX0TGA" name="minint_maxint" constrainedElement="_SFXMZnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMb3CoEdq2Lvk-NX0TGA" annotatedElement="_SFXMbnCoEdq2Lvk-NX0TGA">
        <body>Minint/maxint can only be present if the InteractionConstraint is associated with the operand of a loop CombinedFragment.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMcHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFXMcXCoEdq2Lvk-NX0TGA" name="minint_non_negative" constrainedElement="_SFXMZnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMcnCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMcXCoEdq2Lvk-NX0TGA">
        <body>If minint is specified, then the expression must evaluate to a non-negative integer.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMc3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFXMdHCoEdq2Lvk-NX0TGA" name="maxint_positive" constrainedElement="_SFXMZnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMdXCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMdHCoEdq2Lvk-NX0TGA">
        <body>If maxint is specified, then the expression must evaluate to a positive integer.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMdnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFXMd3CoEdq2Lvk-NX0TGA" name="maxint_greater_equal_minint" constrainedElement="_SFXMZnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMeHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMd3CoEdq2Lvk-NX0TGA">
        <body>If maxint is specified, then minint must be specified and the evaluation of maxint must be >= the evaluation of minint</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMeXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SFXMenCoEdq2Lvk-NX0TGA" general="_R0OZAHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SFXMe3CoEdq2Lvk-NX0TGA" name="minint" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SFqHT3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFXMfHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFXMfXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFXMfnCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMe3CoEdq2Lvk-NX0TGA">
        <body>The minimum number of iterations of a loop</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFXMf3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFXMgHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFXMgXCoEdq2Lvk-NX0TGA" name="maxint" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SFqHUnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFXMgnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFXMg3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFXMhHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMgXCoEdq2Lvk-NX0TGA">
        <body>The maximum number of iterations of a loop</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFXMhXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFXMhnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_SFXMh3CoEdq2Lvk-NX0TGA" name="InteractionOperatorKind">
    <ownedComment xmi:id="_SFXMiHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMh3CoEdq2Lvk-NX0TGA">
      <body>InteractionOperatorKind is an enumeration designating the different kinds of operators of CombinedFragments. The InteractionOperand defines the type of operator of a CombinedFragment.</body>
    </ownedComment>
    <ownedLiteral xmi:id="_SFXMiXCoEdq2Lvk-NX0TGA" name="seq">
      <ownedComment xmi:id="_SFXMinCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMiXCoEdq2Lvk-NX0TGA">
        <body>The interactionOperator seq designates that the CombinedFragment represents a weak sequencing between the behaviors of the operands.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SFXMi3CoEdq2Lvk-NX0TGA" name="alt">
      <ownedComment xmi:id="_SFXMjHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMi3CoEdq2Lvk-NX0TGA">
        <body>The interactionOperator alt designates that the CombinedFragment represents a choice of behavior. At most one of the operands will be chosen. The chosen operand must have an explicit or implicit guard expression that evaluates to true at this point in the interaction. An implicit true guard is implied if the operand has no guard.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SFXMjXCoEdq2Lvk-NX0TGA" name="opt">
      <ownedComment xmi:id="_SFXMjnCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMjXCoEdq2Lvk-NX0TGA">
        <body>The interactionOperator opt designates that the CombinedFragment represents a choice of behavior where either the (sole) operand happens or nothing happens. An option is semantically equivalent to an alternative CombinedFragment where there is one operand with non-empty content and the second operand is empty.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SFXMj3CoEdq2Lvk-NX0TGA" name="break">
      <ownedComment xmi:id="_SFXMkHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMj3CoEdq2Lvk-NX0TGA">
        <body>The interactionOperator break designates that the CombinedFragment represents a breaking scenario in the sense that the operand is a scenario that is performed instead of the remainder of the enclosing InteractionFragment. A break operator with a guard is chosen when the guard is true and the rest of the enclosing Interaction Fragment is ignored. When the guard of the break operand is false, the break operand is ignored and the rest of the enclosing InteractionFragment is chosen. The choice between a break operand without a guard and the rest of the enclosing InteractionFragment is done non-deterministically.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SFXMkXCoEdq2Lvk-NX0TGA" name="par">
      <ownedComment xmi:id="_SFXMknCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMkXCoEdq2Lvk-NX0TGA">
        <body>The interactionOperator par designates that the CombinedFragment represents a parallel merge between the behaviors of the operands. The OccurrenceSpecifications of the different operands can be interleaved in any way as long as the ordering imposed by each operand as such is preserved.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SFXMk3CoEdq2Lvk-NX0TGA" name="strict">
      <ownedComment xmi:id="_SFXMlHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMk3CoEdq2Lvk-NX0TGA">
        <body>The interactionOperator strict designates that the CombinedFragment represents a strict sequencing between the behaviors of the operands. The semantics of strict sequencing defines a strict ordering of the operands on the first level within the CombinedFragment with interactionOperator strict. Therefore OccurrenceSpecifications within contained CombinedFragment will not directly be compared with other OccurrenceSpecifications of the enclosing CombinedFragment.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SFXMlXCoEdq2Lvk-NX0TGA" name="loop">
      <ownedComment xmi:id="_SFXMlnCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMlXCoEdq2Lvk-NX0TGA">
        <body>The interactionOperator loop designates that the CombinedFragment represents a loop. The loop operand will be repeated a number of times.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SFXMl3CoEdq2Lvk-NX0TGA" name="critical">
      <ownedComment xmi:id="_SFXMmHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMl3CoEdq2Lvk-NX0TGA">
        <body>The interactionOperator critical designates that the CombinedFragment represents a critical region. A critical region means that the traces of the region cannot be interleaved by other OccurrenceSpecifications (on those Lifelines covered by the region). This means that the region is treated atomically by the enclosing fragment when determining the set of valid traces. Even though enclosing CombinedFragments may imply that some OccurrenceSpecifications may interleave into the region, such as e.g. with par-operator, this is prevented by defining a region.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SFXMmXCoEdq2Lvk-NX0TGA" name="neg">
      <ownedComment xmi:id="_SFXMmnCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMmXCoEdq2Lvk-NX0TGA">
        <body>The interactionOperator neg designates that the CombinedFragment represents traces that are defined to be invalid.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SFXMm3CoEdq2Lvk-NX0TGA" name="assert">
      <ownedComment xmi:id="_SFXMnHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMm3CoEdq2Lvk-NX0TGA">
        <body>The interactionOperator assert designates that the CombinedFragment represents an assertion. The sequences of the operand of the assertion are the only valid continuations. All other continuations result in an invalid trace.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SFXMnXCoEdq2Lvk-NX0TGA" name="ignore">
      <ownedComment xmi:id="_SFXMnnCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMnXCoEdq2Lvk-NX0TGA">
        <body>The interacionOperator ignore designates that there are some message types that are not shown within this combined fragment. These message types can be considered insignificant and are implicitly ignored if they appear in a corresponding execution. Alternatively, one can understand ignore to mean that the message types that are ignored can appear anywhere in the traces.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SFXMn3CoEdq2Lvk-NX0TGA" name="consider">
      <ownedComment xmi:id="_SFXMoHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMn3CoEdq2Lvk-NX0TGA">
        <body>The interactionOperator consider designates which messages should be considered within this combined fragment. This is equivalent to defining every other message to be ignored.</body>
      </ownedComment>
    </ownedLiteral>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFXMoXCoEdq2Lvk-NX0TGA" name="Gate">
    <ownedComment xmi:id="_SFXMonCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMoXCoEdq2Lvk-NX0TGA">
      <body>A Gate is a connection point for relating a Message outside an InteractionFragment with a Message inside the InteractionFragment. Gate is a specialization of MessageEnd. Gates are connected through Messages. A Gate is actually a representative of an OccurrenceSpecification that is not in the same scope as the Gate. Gates play different roles: we have formal gates on Interactions, actual gates on InteractionUses, expression gates on CombinedFragments.</body>
    </ownedComment>
    <ownedRule xmi:id="_SFXMo3CoEdq2Lvk-NX0TGA" name="messages_actual_gate" constrainedElement="_SFXMoXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMpHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMo3CoEdq2Lvk-NX0TGA">
        <body>The message leading to/from an actualGate of an InteractionUse must correspond to the message leading from/to the formalGate with the same name of the Interaction referenced by the InteractionUse.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMpXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFXMpnCoEdq2Lvk-NX0TGA" name="messages_combined_fragment" constrainedElement="_SFXMoXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMp3CoEdq2Lvk-NX0TGA" annotatedElement="_SFXMpnCoEdq2Lvk-NX0TGA">
        <body>The message leading to/from an (expression) Gate within a CombinedFragment must correspond to the message leading from/to the CombinedFragment on its outside.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMqHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SFXMqXCoEdq2Lvk-NX0TGA" general="_SEd0qHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFXMqnCoEdq2Lvk-NX0TGA" name="CombinedFragment">
    <ownedComment xmi:id="_SFXMq3CoEdq2Lvk-NX0TGA" annotatedElement="_SFXMqnCoEdq2Lvk-NX0TGA">
      <body>A combined fragment defines an expression of interaction fragments. A combined fragment is defined by an interaction operator and corresponding interaction operands. Through the use of CombinedFragments the user will be able to describe a number of traces in a compact and concise manner. CombinedFragment is a specialization of InteractionFragment.</body>
    </ownedComment>
    <ownedRule xmi:id="_SFXMrHCoEdq2Lvk-NX0TGA" name="opt_loop_break_neg" constrainedElement="_SFXMqnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMrXCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMrHCoEdq2Lvk-NX0TGA">
        <body>If the interactionOperator is opt, loop, break, or neg there must be exactly one operand</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMrnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFXMr3CoEdq2Lvk-NX0TGA" name="minint_and_maxint" constrainedElement="_SFXMqnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMsHCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMr3CoEdq2Lvk-NX0TGA">
        <body>The InteractionConstraint with minint and maxint only apply when attached to an InteractionOperand where the interactionOperator is loop.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMsXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFXMsnCoEdq2Lvk-NX0TGA" name="break" constrainedElement="_SFXMqnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMs3CoEdq2Lvk-NX0TGA" annotatedElement="_SFXMsnCoEdq2Lvk-NX0TGA">
        <body>If the interactionOperator is break, the corresponding InteractionOperand must cover all Lifelines within the enclosing InteractionFragment.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMtHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFXMtXCoEdq2Lvk-NX0TGA" name="consider_and_ignore" constrainedElement="_SFXMqnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMtnCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMtXCoEdq2Lvk-NX0TGA">
        <body>The interaction operators 'consider' and 'ignore' can only be used for the CombineIgnoreFragment subtype of CombinedFragment</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFXMt3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>((interactionOperator = #consider) or (interactionOperator = #ignore)) implies oclsisTypeOf(CombineIgnoreFragment)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SFXMuHCoEdq2Lvk-NX0TGA" general="_SEK5w3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SFXMuXCoEdq2Lvk-NX0TGA" name="interactionOperator" type="_SFXMh3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXMunCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMuXCoEdq2Lvk-NX0TGA">
        <body>Specifies the operation which defines the semantics of this combination of InteractionFragments.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_SFXMu3CoEdq2Lvk-NX0TGA" type="_SFXMh3CoEdq2Lvk-NX0TGA" instance="_SFXMiXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFXMvHCoEdq2Lvk-NX0TGA" name="operand" type="_SFXMUHCoEdq2Lvk-NX0TGA" isOrdered="true" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SFgWaXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFXMvXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFXMvnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFXMv3CoEdq2Lvk-NX0TGA" annotatedElement="_SFXMvHCoEdq2Lvk-NX0TGA">
        <body>The set of operands of the combined fragment.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFXMwHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFXMwXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFXMwnCoEdq2Lvk-NX0TGA" name="cfragmentGate" type="_SFXMoXCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SFqHQHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFXMw3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFXMxHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFXMxXCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMwnCoEdq2Lvk-NX0TGA">
        <body>Specifies the gates that form the interface between this CombinedFragment and its surroundings</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFXMxnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFXMx3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEK5h3CoEdq2Lvk-NX0TGA" name="Interaction">
    <ownedComment xmi:id="_SEK5iHCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5h3CoEdq2Lvk-NX0TGA">
      <body>An interaction is a unit of behavior that focuses on the observable exchange of information between ConnectableElements. An Interaction is a specialization of InteractionFragment and of Behavior.</body>
    </ownedComment>
    <generalization xmi:id="_SEK5iXCoEdq2Lvk-NX0TGA" general="_SEK5w3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SEK5inCoEdq2Lvk-NX0TGA" general="_TUPtYGveEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SEK5i3CoEdq2Lvk-NX0TGA" name="lifeline" type="_SEK5o3CoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SE6gZHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SEK5jHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEK5jXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEK5jnCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5i3CoEdq2Lvk-NX0TGA">
        <body>Specifies the participants in this Interaction.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5j3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5kHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEK5kXCoEdq2Lvk-NX0TGA" name="message" type="_gfgNwGveEdq4DLWZOhbdEA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SE6gfHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SEK5knCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEK5k3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEK5lHCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5kXCoEdq2Lvk-NX0TGA">
        <body>The Messages contained in this Interaction.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5lXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5lnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEK5l3CoEdq2Lvk-NX0TGA" name="fragment" type="_SEK5w3CoEdq2Lvk-NX0TGA" isOrdered="true" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SFDqWnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SEK5mHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEK5mXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEK5mnCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5l3CoEdq2Lvk-NX0TGA">
        <body>The ordered set of fragments in the Interaction.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5m3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5nHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEK5nXCoEdq2Lvk-NX0TGA" name="action" type="_SJYJ8XCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SFNbVHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SEK5nnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEK5n3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEK5oHCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5nXCoEdq2Lvk-NX0TGA">
        <body>Actions owned by the Interaction.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5oXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5onCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFXMyHCoEdq2Lvk-NX0TGA" name="formalGate" type="_SFXMoXCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SFqHSnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFXMyXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFXMynCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFXMy3CoEdq2Lvk-NX0TGA" annotatedElement="_SFXMyHCoEdq2Lvk-NX0TGA">
        <body>Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFXMzHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFXMzXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEK5o3CoEdq2Lvk-NX0TGA" name="Lifeline">
    <ownedComment xmi:id="_SEK5pHCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5o3CoEdq2Lvk-NX0TGA">
      <body>A lifeline represents an individual participant in the Interaction. While Parts and StructuralFeatures may have multiplicity greater than 1, Lifelines represent only one interacting entity. Lifeline is a specialization of NamedElement. If the referenced ConnectableElement is multivalued (i.e. has a multiplicity > 1), then the Lifeline may have an expression (the 'selector') that specifies which particular part is represented by this Lifeline. If the selector is omitted this means that an arbitrary representative of the multivalued ConnectableElement is chosen.</body>
    </ownedComment>
    <ownedComment xmi:id="_SFXMznCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5o3CoEdq2Lvk-NX0TGA">
      <body>A lifeline represents an individual participant in the Interaction. While Parts and StructuralFeatures may have multiplicity greater than 1, Lifelines represent only one interacting entity. Lifeline is a specialization of NamedElement.



If the referenced ConnectableElement is multivalued (i.e. has a multiplicity > 1), then the Lifeline may have an expression (the 'selector') that specifies which particular part is represented by this Lifeline.



If the selector is omitted this means that an arbitrary representative of the multivalued ConnectableElement is chosen.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SEK5pXCoEdq2Lvk-NX0TGA" name="interaction_uses_share_lifeline" constrainedElement="_SEK5o3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEK5pnCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5pXCoEdq2Lvk-NX0TGA">
        <body>If two (or more) InteractionUses within one Interaction, refer to Interactions with 'common Lifelines,' those Lifelines must also appear in the Interaction with the InteractionUses. By common Lifelines we mean Lifelines with the same selector and represents associations.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEK5p3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SEK5qHCoEdq2Lvk-NX0TGA" name="selector_specified" constrainedElement="_SEK5o3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEK5qXCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5qHCoEdq2Lvk-NX0TGA">
        <body>The selector for a Lifeline must only be specified if the referenced Part is multivalued.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEK5qnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.selector->isEmpty() implies not self.represents.isMultivalued()) or
(not self.selector->isEmpty() implies self.represents.isMultivalued())
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SEK5q3CoEdq2Lvk-NX0TGA" name="same_classifier" constrainedElement="_SEK5o3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEK5rHCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5q3CoEdq2Lvk-NX0TGA">
        <body>The classifier containing the referenced ConnectableElement must be the same classifier, or an ancestor, of the classifier that contains the interaction enclosing this lifeline.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SEK5rXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>if (represents->notEmpty()) then
(if selector->notEmpty() then represents.isMultivalued() else not represents.isMultivalued())
</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SEK5rnCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SEK5r3CoEdq2Lvk-NX0TGA" name="coveredBy" type="_SEK5w3CoEdq2Lvk-NX0TGA" association="_SEwvkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEK5sHCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5r3CoEdq2Lvk-NX0TGA">
        <body>References the InteractionFragments in which this Lifeline takes part.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5sXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5snCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEK5s3CoEdq2Lvk-NX0TGA" name="represents" type="_SD3XnHCoEdq2Lvk-NX0TGA" association="_SEwvnHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEK5tHCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5s3CoEdq2Lvk-NX0TGA">
        <body>References the ConnectableElement within the classifier that contains the enclosing interaction.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5tXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5tnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEK5t3CoEdq2Lvk-NX0TGA" name="interaction" type="_SEK5h3CoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SE6gZHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SEK5uHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEK5uXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEK5unCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5t3CoEdq2Lvk-NX0TGA">
        <body>References the Interaction enclosing this Lifeline.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5u3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5vHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEK5vXCoEdq2Lvk-NX0TGA" name="selector" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SE6gc3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SEK5vnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEK5v3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEK5wHCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5vXCoEdq2Lvk-NX0TGA">
        <body>If the referenced ConnectableElement is multivalued, then this specifies the specific individual part within that set.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5wXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5wnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFXMz3CoEdq2Lvk-NX0TGA" name="decomposedAs" type="_SFNbj3CoEdq2Lvk-NX0TGA" association="_SFgWYnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFXM0HCoEdq2Lvk-NX0TGA" annotatedElement="_SFXMz3CoEdq2Lvk-NX0TGA">
        <body>References the Interaction that represents the decomposition.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFXM0XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFXM0nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFgWQHCoEdq2Lvk-NX0TGA" name="Continuation">
    <ownedComment xmi:id="_SFgWQXCoEdq2Lvk-NX0TGA" annotatedElement="_SFgWQHCoEdq2Lvk-NX0TGA">
      <body>A Continuation is a syntactic way to define continuations of different branches of an Alternative CombinedFragment. Continuations is intuitively similar to labels representing intermediate points in a flow of control.</body>
    </ownedComment>
    <ownedRule xmi:id="_SFgWQnCoEdq2Lvk-NX0TGA" name="same_name" constrainedElement="_SFgWQHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFgWQ3CoEdq2Lvk-NX0TGA" annotatedElement="_SFgWQnCoEdq2Lvk-NX0TGA">
        <body>Continuations with the same name may only cover the same set of Lifelines (within one Classifier).</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFgWRHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFgWRXCoEdq2Lvk-NX0TGA" name="global" constrainedElement="_SFgWQHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFgWRnCoEdq2Lvk-NX0TGA" annotatedElement="_SFgWRXCoEdq2Lvk-NX0TGA">
        <body>Continuations are always global in the enclosing InteractionFragment e.g. it always covers all Lifelines covered by the enclosing InteractionFragment.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFgWR3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFgWSHCoEdq2Lvk-NX0TGA" name="first_or_last_interaction_fragment" constrainedElement="_SFgWQHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFgWSXCoEdq2Lvk-NX0TGA" annotatedElement="_SFgWSHCoEdq2Lvk-NX0TGA">
        <body>Continuations always occur as the very first InteractionFragment or the very last InteractionFragment of the enclosing InteractionFragment.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFgWSnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SFgWS3CoEdq2Lvk-NX0TGA" general="_SEK5w3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SFgWTHCoEdq2Lvk-NX0TGA" name="setting" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SFgWTXCoEdq2Lvk-NX0TGA" annotatedElement="_SFgWTHCoEdq2Lvk-NX0TGA">
        <body>True: when the Continuation is at the end of the enclosing InteractionFragment and False when it is in the beginning.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SFgWTnCoEdq2Lvk-NX0TGA" value="true"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SEK5w3CoEdq2Lvk-NX0TGA" name="InteractionFragment" isAbstract="true">
    <ownedComment xmi:id="_SEK5xHCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5w3CoEdq2Lvk-NX0TGA">
      <body>InteractionFragment is an abstract notion of the most general interaction unit. An interaction fragment is a piece of an interaction. Each interaction fragment is conceptually like an interaction by itself. InteractionFragment is an abstract class and a specialization of NamedElement.</body>
    </ownedComment>
    <generalization xmi:id="_SEK5xXCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SEK5xnCoEdq2Lvk-NX0TGA" name="covered" type="_SEK5o3CoEdq2Lvk-NX0TGA" association="_SEwvkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SEK5x3CoEdq2Lvk-NX0TGA" annotatedElement="_SEK5xnCoEdq2Lvk-NX0TGA">
        <body>References the Lifelines that the InteractionFragment involves.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5yHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5yXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEK5ynCoEdq2Lvk-NX0TGA" name="generalOrdering" type="_SEd0fHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SFDqVXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SEK5y3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEK5zHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEK5zXCoEdq2Lvk-NX0TGA" annotatedElement="_SEK5ynCoEdq2Lvk-NX0TGA">
        <body>The general ordering relationships contained in this fragment.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK5znCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK5z3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SEK50HCoEdq2Lvk-NX0TGA" name="enclosingInteraction" type="_SEK5h3CoEdq2Lvk-NX0TGA" association="_SFDqWnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SEK50XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SEK50nCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SEK503CoEdq2Lvk-NX0TGA" annotatedElement="_SEK50HCoEdq2Lvk-NX0TGA">
        <body>The Interaction enclosing this InteractionFragment.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEK51HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEK51XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFgWT3CoEdq2Lvk-NX0TGA" name="enclosingOperand" type="_SFXMUHCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SFqHWXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SFgWUHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFgWUXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFgWUnCoEdq2Lvk-NX0TGA" annotatedElement="_SFgWT3CoEdq2Lvk-NX0TGA">
        <body>The operand enclosing this InteractionFragment (they may nest recursively)</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFgWU3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFgWVHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFgWVXCoEdq2Lvk-NX0TGA" name="ConsiderIgnoreFragment">
    <ownedComment xmi:id="_SFgWVnCoEdq2Lvk-NX0TGA" annotatedElement="_SFgWVXCoEdq2Lvk-NX0TGA">
      <body>A ConsiderIgnoreFragment is a kind of combined fragment that is used for the consider and ignore cases, which require lists of pertinent messages to be specified.</body>
    </ownedComment>
    <ownedRule xmi:id="_SFgWV3CoEdq2Lvk-NX0TGA" name="consider_or_ignore" constrainedElement="_SFgWVXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFgWWHCoEdq2Lvk-NX0TGA" annotatedElement="_SFgWV3CoEdq2Lvk-NX0TGA">
        <body>The interaction operator of a ConsiderIgnoreFragment must be either 'consider' or 'ignore'.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFgWWXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(interactionOperator = #consider) or (interactionOperator = #ignore)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SFgWWnCoEdq2Lvk-NX0TGA" name="type" constrainedElement="_SFgWVXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFgWW3CoEdq2Lvk-NX0TGA" annotatedElement="_SFgWWnCoEdq2Lvk-NX0TGA">
        <body>The NamedElements must be of a type of element that identifies a message (e.g., an Operation, Reception, or a Signal).</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFgWXHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>message->forAll(m | m.oclIsKindOf(Operation) or m.oclIsKindOf(Reception) or m.oclIsKindOf(Signal))</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SFgWXXCoEdq2Lvk-NX0TGA" general="_SFXMqnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SFgWXnCoEdq2Lvk-NX0TGA" name="message" type="_csVgUGvtEdqG6fBIPwe-mw" association="_SFqHXXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFgWX3CoEdq2Lvk-NX0TGA" annotatedElement="_SFgWXnCoEdq2Lvk-NX0TGA">
        <body>The set of messages that apply to this fragment</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFgWYHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFgWYXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFgWYnCoEdq2Lvk-NX0TGA" name="A_lifeline_decomposedAs" memberEnd="_SFgWY3CoEdq2Lvk-NX0TGA _SFXMz3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFgWY3CoEdq2Lvk-NX0TGA" type="_SEK5o3CoEdq2Lvk-NX0TGA" association="_SFgWYnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFgWZHCoEdq2Lvk-NX0TGA" name="A_guard_interactionOperand" memberEnd="_SFgWZnCoEdq2Lvk-NX0TGA _SFXMWnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFgWZXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFgWZnCoEdq2Lvk-NX0TGA" type="_SFXMUHCoEdq2Lvk-NX0TGA" association="_SFgWZHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFgWZ3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFgWaHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFgWaXCoEdq2Lvk-NX0TGA" name="A_operand_combinedFragment" memberEnd="_SFXMvHCoEdq2Lvk-NX0TGA _SFgWa3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFgWanCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFgWa3CoEdq2Lvk-NX0TGA" type="_SFXMqnCoEdq2Lvk-NX0TGA" association="_SFgWaXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFgWbHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFgWbXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFgWbnCoEdq2Lvk-NX0TGA" name="A_refersTo_interactionUse" memberEnd="_SFNbf3CoEdq2Lvk-NX0TGA _SFgWb3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFgWb3CoEdq2Lvk-NX0TGA" type="_SFNbcHCoEdq2Lvk-NX0TGA" association="_SFgWbnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFgWcHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFgWcXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFqHQHCoEdq2Lvk-NX0TGA" name="A_cfragmentGate_combinedFragment" memberEnd="_SFXMwnCoEdq2Lvk-NX0TGA _SFqHQnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFqHQXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFqHQnCoEdq2Lvk-NX0TGA" type="_SFXMqnCoEdq2Lvk-NX0TGA" association="_SFqHQHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFqHQ3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFqHRHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFqHRXCoEdq2Lvk-NX0TGA" name="A_interactionUse_actualGate" memberEnd="_SFqHR3CoEdq2Lvk-NX0TGA _SFNbg3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFqHRnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFqHR3CoEdq2Lvk-NX0TGA" type="_SFNbcHCoEdq2Lvk-NX0TGA" association="_SFqHRXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFqHSHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFqHSXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFqHSnCoEdq2Lvk-NX0TGA" name="A_formalGate_interaction" memberEnd="_SFXMyHCoEdq2Lvk-NX0TGA _SFqHTHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFqHS3CoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFqHTHCoEdq2Lvk-NX0TGA" type="_SEK5h3CoEdq2Lvk-NX0TGA" association="_SFqHSnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFqHTXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFqHTnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFqHT3CoEdq2Lvk-NX0TGA" name="A_minint_interactionConstraint" memberEnd="_SFqHUXCoEdq2Lvk-NX0TGA _SFXMe3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFqHUHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFqHUXCoEdq2Lvk-NX0TGA" type="_SFXMZnCoEdq2Lvk-NX0TGA" association="_SFqHT3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFqHUnCoEdq2Lvk-NX0TGA" name="A_maxint_interactionConstraint" memberEnd="_SFXMgXCoEdq2Lvk-NX0TGA _SFqHVHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFqHU3CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFqHVHCoEdq2Lvk-NX0TGA" type="_SFXMZnCoEdq2Lvk-NX0TGA" association="_SFqHUnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFqHVXCoEdq2Lvk-NX0TGA" name="A_argument_interactionUse" memberEnd="_SFNbiXCoEdq2Lvk-NX0TGA _SFqHVnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFqHVnCoEdq2Lvk-NX0TGA" type="_SFNbcHCoEdq2Lvk-NX0TGA" association="_SFqHVXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFqHV3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFqHWHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFqHWXCoEdq2Lvk-NX0TGA" name="A_fragment_enclosingOperand" memberEnd="_SFgWT3CoEdq2Lvk-NX0TGA _SFXMYHCoEdq2Lvk-NX0TGA">
    <ownedRule xmi:id="_SFqHWnCoEdq2Lvk-NX0TGA" constrainedElement="_SFqHWXCoEdq2Lvk-NX0TGA">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SFqHW3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>ordered</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SFqHXHCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFqHXXCoEdq2Lvk-NX0TGA" name="A_message_considerIgnoreFragment" memberEnd="_SFgWXnCoEdq2Lvk-NX0TGA _SFqHXnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SFqHXnCoEdq2Lvk-NX0TGA" type="_SFgWVXCoEdq2Lvk-NX0TGA" association="_SFqHXXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFqHX3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFqHYHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFzRMHCoEdq2Lvk-NX0TGA" name="Manifestation">
    <ownedComment xmi:id="_SFzRMXCoEdq2Lvk-NX0TGA" annotatedElement="_SFzRMHCoEdq2Lvk-NX0TGA">
      <body>In the metamodel, a Manifestation is a subtype of Abstraction. A Manifestation is owned by an Artifact.</body>
    </ownedComment>
    <generalization xmi:id="_SFzRMnCoEdq2Lvk-NX0TGA" general="_SCh6wHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SFzRM3CoEdq2Lvk-NX0TGA" name="utilizedElement" type="_jKxnwGwLEdq7X4sGURiZYA" subsettedProperty="_SCh6zHCoEdq2Lvk-NX0TGA" association="_SFzRN3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFzRNHCoEdq2Lvk-NX0TGA" annotatedElement="_SFzRM3CoEdq2Lvk-NX0TGA">
        <body>The model element that is utilized in the manifestation in an Artifact.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFzRNXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFzRNnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFzRN3CoEdq2Lvk-NX0TGA" name="A_utilizedElement_manifestation" memberEnd="_SFzROXCoEdq2Lvk-NX0TGA _SFzRM3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFzROHCoEdq2Lvk-NX0TGA" general="_SDHwqHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFzROXCoEdq2Lvk-NX0TGA" type="_SFzRMHCoEdq2Lvk-NX0TGA" association="_SFzRN3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFzROnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFzRO3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFzRPHCoEdq2Lvk-NX0TGA" name="A_nestedArtifact_artifact" memberEnd="_SFqHa3CoEdq2Lvk-NX0TGA _SFzRPnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFzRPXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFzRPnCoEdq2Lvk-NX0TGA" type="_SFqHYXCoEdq2Lvk-NX0TGA" redefinedProperty="_R2wIo3CoEdq2Lvk-NX0TGA" association="_SFzRPHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFzRP3CoEdq2Lvk-NX0TGA" name="A_manifestation_artifact" memberEnd="_SFzRQnCoEdq2Lvk-NX0TGA _SFqHcXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFzRQHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SFzRQXCoEdq2Lvk-NX0TGA" general="_SDHwrnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFzRQnCoEdq2Lvk-NX0TGA" type="_SFqHYXCoEdq2Lvk-NX0TGA" association="_SFzRP3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFzRQ3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFzRRHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFzRRXCoEdq2Lvk-NX0TGA" name="A_ownedOperation_artifact" memberEnd="_SFqHd3CoEdq2Lvk-NX0TGA _SFzRSXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFzRRnCoEdq2Lvk-NX0TGA" general="_R2wIlHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SFzRR3CoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SFzRSHCoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFzRSXCoEdq2Lvk-NX0TGA" type="_SFqHYXCoEdq2Lvk-NX0TGA" subsettedProperty="_RzCGOXCoEdq2Lvk-NX0TGA _R13XzHCoEdq2Lvk-NX0TGA _RyIuU3CoEdq2Lvk-NX0TGA" association="_SFzRRXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFzRSnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFzRS3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SFzRTHCoEdq2Lvk-NX0TGA" name="A_ownedAttribute_artifact" memberEnd="_SFqHfXCoEdq2Lvk-NX0TGA _SFzRT3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SFzRTXCoEdq2Lvk-NX0TGA" general="_R2KSwXCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SFzRTnCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SFzRT3CoEdq2Lvk-NX0TGA" type="_SFqHYXCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA _RyIuU3CoEdq2Lvk-NX0TGA _R2KSxHCoEdq2Lvk-NX0TGA" association="_SFzRTHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFzRUHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFzRUXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SF9CMHCoEdq2Lvk-NX0TGA" name="CallEvent">
    <ownedComment xmi:id="_SF9CMXCoEdq2Lvk-NX0TGA" annotatedElement="_SF9CMHCoEdq2Lvk-NX0TGA">
      <body>A call event represents the reception of a request to invoke a specific operation. A call event is distinct from the call action that caused it. A call event may cause the invocation of a behavior that is the method of the operation referenced by the call request, if that operation is owned or inherited by the classifier that specified the receiver object.</body>
    </ownedComment>
    <generalization xmi:id="_SF9CMnCoEdq2Lvk-NX0TGA" general="_SGP9THCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SF9CM3CoEdq2Lvk-NX0TGA" name="operation" type="_M4X2IGveEdq4DLWZOhbdEA" association="_SGjfIHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SF9CNHCoEdq2Lvk-NX0TGA" annotatedElement="_SF9CM3CoEdq2Lvk-NX0TGA">
        <body>Designates the operation whose invocation raised the call event.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SF9CNXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SF9CNnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SF9CN3CoEdq2Lvk-NX0TGA" name="ChangeEvent">
    <ownedComment xmi:id="_SF9COHCoEdq2Lvk-NX0TGA" annotatedElement="_SF9CN3CoEdq2Lvk-NX0TGA">
      <body>A change event occurs when a Boolean-valued expression becomes true, for example, as a result of a change in the value held in a slot corresponding to an attribute, or a change in the value referenced by a link corresponding to an association. A change event is raised implicitly and is not the result of an explicit action.</body>
    </ownedComment>
    <generalization xmi:id="_SF9COXCoEdq2Lvk-NX0TGA" general="_SGZuJnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SF9COnCoEdq2Lvk-NX0TGA" name="changeExpression" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SGjfN3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SF9CO3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SF9CPHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SF9CPXCoEdq2Lvk-NX0TGA" annotatedElement="_SF9COnCoEdq2Lvk-NX0TGA">
        <body>A Boolean-valued expression that will result in a change event whenever its value changes from false to true.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SF9CPnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SF9CP3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SGP9IHCoEdq2Lvk-NX0TGA" name="Reception">
    <ownedComment xmi:id="_SGP9IXCoEdq2Lvk-NX0TGA" annotatedElement="_SGP9IHCoEdq2Lvk-NX0TGA">
      <body>A reception is a declaration stating that a classifier is prepared to react to the receipt of a signal. A reception designates a signal and specifies the expected behavioral response. The details of handling a signal are specified by the behavior associated with the reception or the classifier itself.</body>
    </ownedComment>
    <ownedRule xmi:id="_SGP9InCoEdq2Lvk-NX0TGA" name="not_query" constrainedElement="_SGP9IHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SGP9I3CoEdq2Lvk-NX0TGA" annotatedElement="_SGP9InCoEdq2Lvk-NX0TGA">
        <body>A Reception can not be a query.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SGP9JHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>not self.isQuery</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SGP9JXCoEdq2Lvk-NX0TGA" general="_R00O8nCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SGP9JnCoEdq2Lvk-NX0TGA" name="signal" type="_SGP9KnCoEdq2Lvk-NX0TGA" association="_SGZuKnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SGP9J3CoEdq2Lvk-NX0TGA" annotatedElement="_SGP9JnCoEdq2Lvk-NX0TGA">
        <body>The signal that this reception handles.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGP9KHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGP9KXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SGP9KnCoEdq2Lvk-NX0TGA" name="Signal">
    <ownedComment xmi:id="_SGP9K3CoEdq2Lvk-NX0TGA" annotatedElement="_SGP9KnCoEdq2Lvk-NX0TGA">
      <body>A signal is a specification of send request instances communicated between objects. The receiving object handles the received request instances as specified by its receptions. The data carried by a send request (which was passed to it by the send invocation occurrence that caused that request) are represented as attributes of the signal. A signal is defined independently of the classifiers handling the signal occurrence.</body>
    </ownedComment>
    <generalization xmi:id="_SGP9LHCoEdq2Lvk-NX0TGA" general="_6UV2QGwJEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SGP9LXCoEdq2Lvk-NX0TGA" name="ownedAttribute" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RxPWcHCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_SGjfPHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SGP9LnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SGP9L3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SGP9MHCoEdq2Lvk-NX0TGA" annotatedElement="_SGP9LXCoEdq2Lvk-NX0TGA">
        <body>The attributes owned by the signal.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGP9MXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGP9MnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SGP9M3CoEdq2Lvk-NX0TGA" name="SignalEvent">
    <ownedComment xmi:id="_SGP9NHCoEdq2Lvk-NX0TGA" annotatedElement="_SGP9M3CoEdq2Lvk-NX0TGA">
      <body>A signal event represents the receipt of an asynchronous signal. A signal event may cause a response, such as a state machine transition as specified in the classifier behavior of the classifier that specified the receiver object, if the signal referenced by the send request is mentioned in a reception owned or inherited by the classifier that specified the receiver object.</body>
    </ownedComment>
    <generalization xmi:id="_SGP9NXCoEdq2Lvk-NX0TGA" general="_SGP9THCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SGP9NnCoEdq2Lvk-NX0TGA" name="signal" type="_SGP9KnCoEdq2Lvk-NX0TGA" association="_SGjfJHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SGP9N3CoEdq2Lvk-NX0TGA" annotatedElement="_SGP9NnCoEdq2Lvk-NX0TGA">
        <body>The specific signal that is associated with this event.</body>
      </ownedComment>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_SGP9RHCoEdq2Lvk-NX0TGA" name="CallConcurrencyKind">
    <ownedComment xmi:id="_SGP9RXCoEdq2Lvk-NX0TGA" annotatedElement="_SGP9RHCoEdq2Lvk-NX0TGA">
      <body>CallConcurrencyKind is an enumeration with the following literals:

 sequential No concurrency management mechanism is associated with the operation and, therefore, concurrency conflicts may occur. Instances that invoke a behavioral feature need to coordinate so that only one invocation to a target on any behavioral feature occurs at once.

 guarded Multiple invocations of a behavioral feature may occur simultaneously to one instance, but only one is allowed to commence. The others are blocked until the performance of the first behavioral feature is complete. It is the responsibility of the system designer to ensure that deadlocks do not occur due to simultaneous blocks.

 concurrent Multiple invocations of a behavioral feature may occur simultaneously to one instance and all of them may proceed concurrently.



</body>
    </ownedComment>
    <ownedLiteral xmi:id="_SGP9RnCoEdq2Lvk-NX0TGA" name="sequential">
      <ownedComment xmi:id="_SGP9R3CoEdq2Lvk-NX0TGA" annotatedElement="_SGP9RnCoEdq2Lvk-NX0TGA">
        <body>No concurrency management mechanism is associated with the operation and, therefore, concurrency conflicts may occur. Instances that invoke a behavioral feature need to coordinate so that only one invocation to a target on any behavioral feature occurs at once.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SGP9SHCoEdq2Lvk-NX0TGA" name="guarded">
      <ownedComment xmi:id="_SGP9SXCoEdq2Lvk-NX0TGA" annotatedElement="_SGP9SHCoEdq2Lvk-NX0TGA">
        <body>Multiple invocations of a behavioral feature may occur simultaneously to one instance, but only one is allowed to commence. The others are blocked until the performance of the first behavioral feature is complete. It is the responsibility of the system designer to ensure that deadlocks do not occur due to simultaneous blocks.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SGP9SnCoEdq2Lvk-NX0TGA" name="concurrent">
      <ownedComment xmi:id="_SGP9S3CoEdq2Lvk-NX0TGA" annotatedElement="_SGP9SnCoEdq2Lvk-NX0TGA">
        <body>Multiple invocations of a behavioral feature may occur simultaneously to one instance and all of them may proceed concurrently.</body>
      </ownedComment>
    </ownedLiteral>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SGP9THCoEdq2Lvk-NX0TGA" name="MessageEvent" isAbstract="true">
    <ownedComment xmi:id="_SGP9TXCoEdq2Lvk-NX0TGA" annotatedElement="_SGP9THCoEdq2Lvk-NX0TGA">
      <body>A message event specifies the receipt by an object of either a call or a signal. MessageEvent is an abstract metaclass.</body>
    </ownedComment>
    <generalization xmi:id="_SGP9TnCoEdq2Lvk-NX0TGA" general="_SGZuJnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SGP9T3CoEdq2Lvk-NX0TGA" name="AnyReceiveEvent">
    <ownedComment xmi:id="_SGP9UHCoEdq2Lvk-NX0TGA" annotatedElement="_SGP9T3CoEdq2Lvk-NX0TGA">
      <body>A transition trigger associated with AnyReceiveEvent specifies that the transition is to be triggered by the receipt of any message that is not explicitly referenced in another transition from the same vertex.</body>
    </ownedComment>
    <generalization xmi:id="_SGP9UXCoEdq2Lvk-NX0TGA" general="_SGP9THCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_iY7sMGvsEdqG6fBIPwe-mw" name="BehavioredClassifier" isAbstract="true">
    <ownedComment xmi:id="_SDRhsXCoEdq2Lvk-NX0TGA" annotatedElement="_iY7sMGvsEdqG6fBIPwe-mw">
      <body>A BehavioredClassifier may have an interface realization.</body>
    </ownedComment>
    <ownedComment xmi:id="_SBoi-HCoEdq2Lvk-NX0TGA" annotatedElement="_iY7sMGvsEdqG6fBIPwe-mw">
      <body>A classifier can have behavior specifications defined in its namespace. One of these may specify the behavior of the classifier itself.</body>
    </ownedComment>
    <ownedRule xmi:id="_SBoi-XCoEdq2Lvk-NX0TGA" name="class_behavior" constrainedElement="_iY7sMGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SBoi-nCoEdq2Lvk-NX0TGA" annotatedElement="_SBoi-XCoEdq2Lvk-NX0TGA">
        <body>If a behavior is classifier behavior, it does not have a specification.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SBoi-3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.classifierBehavior.notEmpty() implies self.specification.isEmpty()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SBoi_HCoEdq2Lvk-NX0TGA" general="_6UV2QGwJEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SBoi_XCoEdq2Lvk-NX0TGA" name="ownedBehavior" type="_TUPtYGveEdq4DLWZOhbdEA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SB7d8HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SBoi_nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SBoi_3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SBojAHCoEdq2Lvk-NX0TGA" annotatedElement="_SBoi_XCoEdq2Lvk-NX0TGA">
        <body>References behavior specifications owned by a classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBojAXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBojAnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SByT4HCoEdq2Lvk-NX0TGA" name="classifierBehavior" type="_TUPtYGveEdq4DLWZOhbdEA" subsettedProperty="_SBoi_XCoEdq2Lvk-NX0TGA" association="_SB7d9XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SByT4XCoEdq2Lvk-NX0TGA" annotatedElement="_SByT4HCoEdq2Lvk-NX0TGA">
        <body>A behavior specification that specifies the behavior of the classifier itself.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SByT4nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SByT43CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SDRhs3CoEdq2Lvk-NX0TGA" name="interfaceRealization" type="_SDRhpHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA _SC01sHCoEdq2Lvk-NX0TGA" association="_SDarpnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SDRhtHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SDRhtXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SDRhtnCoEdq2Lvk-NX0TGA" annotatedElement="_SDRhs3CoEdq2Lvk-NX0TGA"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDRht3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDRhuHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SGZuIHCoEdq2Lvk-NX0TGA" name="ownedTrigger" type="_SF9CTnCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SGspEHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SGZuIXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SGZuInCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SGZuI3CoEdq2Lvk-NX0TGA" annotatedElement="_SGZuIHCoEdq2Lvk-NX0TGA">
        <body>References Trigger descriptions owned by a Classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGZuJHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGZuJXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SGZuJnCoEdq2Lvk-NX0TGA" name="Event" isAbstract="true">
    <ownedComment xmi:id="_SGZuJ3CoEdq2Lvk-NX0TGA" annotatedElement="_SGZuJnCoEdq2Lvk-NX0TGA">
      <body>An event is the specification of some occurrence that may potentially trigger effects by an object.</body>
    </ownedComment>
    <generalization xmi:id="_SGZuKHCoEdq2Lvk-NX0TGA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SGZuKnCoEdq2Lvk-NX0TGA" name="A_reception_signal" memberEnd="_SGZuK3CoEdq2Lvk-NX0TGA _SGP9JnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SGZuK3CoEdq2Lvk-NX0TGA" type="_SGP9IHCoEdq2Lvk-NX0TGA" association="_SGZuKnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGZuLHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGZuLXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SGjfIHCoEdq2Lvk-NX0TGA" name="A_operation_callEvent" memberEnd="_SGjfIXCoEdq2Lvk-NX0TGA _SF9CM3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SGjfIXCoEdq2Lvk-NX0TGA" type="_SF9CMHCoEdq2Lvk-NX0TGA" association="_SGjfIHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGjfInCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGjfI3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SGjfJHCoEdq2Lvk-NX0TGA" name="A_signal_signalEvent" memberEnd="_SGP9NnCoEdq2Lvk-NX0TGA _SGjfJXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SGjfJXCoEdq2Lvk-NX0TGA" type="_SGP9M3CoEdq2Lvk-NX0TGA" association="_SGjfJHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGjfJnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGjfJ3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SGjfKHCoEdq2Lvk-NX0TGA" name="A_ownedReception_interface" memberEnd="_SGGzMXCoEdq2Lvk-NX0TGA _SGjfK3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SGjfKXCoEdq2Lvk-NX0TGA" general="_R2wIlHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SGjfKnCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SGjfK3CoEdq2Lvk-NX0TGA" type="_8Ugn8GvtEdqG6fBIPwe-mw" association="_SGjfKHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGjfLHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGjfLXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SGjfLnCoEdq2Lvk-NX0TGA" name="A_ownedReception_class" memberEnd="_SF9CSHCoEdq2Lvk-NX0TGA _SGjfMXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SGjfL3CoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SGjfMHCoEdq2Lvk-NX0TGA" general="_R2wIlHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SGjfMXCoEdq2Lvk-NX0TGA" type="_00owUGvdEdq4DLWZOhbdEA" association="_SGjfLnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGjfMnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGjfM3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SGjfNHCoEdq2Lvk-NX0TGA" name="A_when_timeEvent" memberEnd="_SGjfNnCoEdq2Lvk-NX0TGA _SGP9PnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SGjfNXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SGjfNnCoEdq2Lvk-NX0TGA" type="_SGP9OHCoEdq2Lvk-NX0TGA" association="_SGjfNHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SGjfN3CoEdq2Lvk-NX0TGA" name="A_changeExpression_changeEvent" memberEnd="_SF9COnCoEdq2Lvk-NX0TGA _SGjfOXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SGjfOHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SGjfOXCoEdq2Lvk-NX0TGA" type="_SF9CN3CoEdq2Lvk-NX0TGA" association="_SGjfN3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_R2dNoHCoEdq2Lvk-NX0TGA" name="A_raisedException_behavioralFeature" memberEnd="_R00O_HCoEdq2Lvk-NX0TGA _R2dNoXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_R2dNoXCoEdq2Lvk-NX0TGA" type="_R00O8nCoEdq2Lvk-NX0TGA" association="_R2dNoHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGjfOnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGjfO3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SGjfPHCoEdq2Lvk-NX0TGA" name="A_ownedAttribute_owningSignal" memberEnd="_SGjfP3CoEdq2Lvk-NX0TGA _SGP9LXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SGjfPXCoEdq2Lvk-NX0TGA" general="_R2KSwXCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SGjfPnCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SGjfP3CoEdq2Lvk-NX0TGA" name="owningSignal" type="_SGP9KnCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA _R2KSxHCoEdq2Lvk-NX0TGA _RyIuU3CoEdq2Lvk-NX0TGA" association="_SGjfPHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGjfQHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGjfQXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SGspEHCoEdq2Lvk-NX0TGA" name="A_ownedTrigger_behavioredClassifier" memberEnd="_SGspEnCoEdq2Lvk-NX0TGA _SGZuIHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SGspEXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SGspEnCoEdq2Lvk-NX0TGA" type="_iY7sMGvsEdqG6fBIPwe-mw" association="_SGspEHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGspE3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGspFHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SGspFXCoEdq2Lvk-NX0TGA" name="A_event_trigger" memberEnd="_SF9CUXCoEdq2Lvk-NX0TGA _SGspFnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SGspFnCoEdq2Lvk-NX0TGA" type="_SF9CTnCoEdq2Lvk-NX0TGA" association="_SGspFXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SG2aFnCoEdq2Lvk-NX0TGA" name="EncapsulatedClassifier" isAbstract="true">
    <ownedComment xmi:id="_SG2aF3CoEdq2Lvk-NX0TGA" annotatedElement="_SG2aFnCoEdq2Lvk-NX0TGA">
      <body>Extends a classifier with the ability to own ports as specific and type checked interaction points.</body>
    </ownedComment>
    <generalization xmi:id="_SG2aGHCoEdq2Lvk-NX0TGA" general="_FQiVsGwYEdqHKKVoxc0dlA"/>
    <ownedAttribute xmi:id="_SG2aGXCoEdq2Lvk-NX0TGA" name="ownedPort" type="_ZAuvEGveEdq4DLWZOhbdEA" isDerived="true" subsettedProperty="_SD3XhHCoEdq2Lvk-NX0TGA" association="_SG_kAHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SG2aGnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SG2aG3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SG2aHHCoEdq2Lvk-NX0TGA" annotatedElement="_SG2aGXCoEdq2Lvk-NX0TGA">
        <body>References a set of ports that an encapsulated classifier owns.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SG2aHXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SG2aHnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_aOgw0GveEdq4DLWZOhbdEA" name="ConnectorEnd">
    <ownedComment xmi:id="_SDkcm3CoEdq2Lvk-NX0TGA" annotatedElement="_aOgw0GveEdq4DLWZOhbdEA">
      <body>A connector end is an endpoint of a connector, which attaches the connector to a connectable element. Each connector end is part of one connector.</body>
    </ownedComment>
    <ownedRule xmi:id="_SDkcnHCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_aOgw0GveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SDkcnXCoEdq2Lvk-NX0TGA" annotatedElement="_SDkcnHCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the connector end may not be more general than the multiplicity of the association typing the owning connector.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SDkcnnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SG2aH3CoEdq2Lvk-NX0TGA" name="part_with_port_empty" constrainedElement="_aOgw0GveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SG2aIHCoEdq2Lvk-NX0TGA" annotatedElement="_SG2aH3CoEdq2Lvk-NX0TGA">
        <body>If a connector end is attached to a port of the containing classifier, partWithPort will be empty.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SG2aIXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SG2aInCoEdq2Lvk-NX0TGA" name="role_and_part_with_port" constrainedElement="_aOgw0GveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SG2aI3CoEdq2Lvk-NX0TGA" annotatedElement="_SG2aInCoEdq2Lvk-NX0TGA">
        <body>If a connector end references both a role and a partWithPort, then the role must be a port that is defined by the type of the partWithPort.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SG2aJHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SG2aJXCoEdq2Lvk-NX0TGA" name="self_part_with_port" constrainedElement="_aOgw0GveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SG2aJnCoEdq2Lvk-NX0TGA" annotatedElement="_SG2aJXCoEdq2Lvk-NX0TGA">
        <body>The property held in self.partWithPort must not be a Port.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SG2aJ3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SDkcn3CoEdq2Lvk-NX0TGA" general="_Gjgl0GveEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SDkcoHCoEdq2Lvk-NX0TGA" name="definingEnd" type="_Jp_1oGveEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" association="_SEK5gHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SDkcoXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SDkconCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SDkco3CoEdq2Lvk-NX0TGA" annotatedElement="_SDkcoHCoEdq2Lvk-NX0TGA">
        <body>A derived association referencing the corresponding association end on the association which types the connector owing this connector end. This association is derived by selecting the association end at the same place in the ordering of association ends as this connector end.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDkcpHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDkcpXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SDkcpnCoEdq2Lvk-NX0TGA" name="role" type="_SD3XnHCoEdq2Lvk-NX0TGA" association="_SEK5hHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SDkcp3CoEdq2Lvk-NX0TGA" annotatedElement="_SDkcpnCoEdq2Lvk-NX0TGA">
        <body>The connectable element attached at this connector end. When an instance of the containing classifier is created, a link may (depending on the multiplicities) be created to an instance of the classifier that types this connectable element.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDkcqHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDkcqXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SG2aKHCoEdq2Lvk-NX0TGA" name="partWithPort" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_SG_kE3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SG2aKXCoEdq2Lvk-NX0TGA" annotatedElement="_SG2aKHCoEdq2Lvk-NX0TGA">
        <body>Indicates the role of the internal structure of a classifier with the port to which the connector end is attached.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SG2aKnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SG2aK3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_QT7XMFYKEdqrn7iZ0eqieg" name="getDefiningEnd" visibility="protected" type="_Jp_1oGveEdq4DLWZOhbdEA">
      <returnResult xmi:id="_VkstQFYKEdqrn7iZ0eqieg" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SG_kAHCoEdq2Lvk-NX0TGA" name="A_encapsulatedClassifier_ownedPort" memberEnd="_SG_kA3CoEdq2Lvk-NX0TGA _SG2aGXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SG_kAnCoEdq2Lvk-NX0TGA" general="_SEBIhnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SG_kA3CoEdq2Lvk-NX0TGA" type="_SG2aFnCoEdq2Lvk-NX0TGA" redefinedProperty="_SEBIinCoEdq2Lvk-NX0TGA" subsettedProperty="_RzCGOXCoEdq2Lvk-NX0TGA" association="_SG_kAHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SG_kBHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SG_kBXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SG_kBnCoEdq2Lvk-NX0TGA" name="A_required_port" memberEnd="_SG_kB3CoEdq2Lvk-NX0TGA _SGspK3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SG_kB3CoEdq2Lvk-NX0TGA" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_SG_kBnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SG_kCHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SG_kCXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SG_kCnCoEdq2Lvk-NX0TGA" name="A_redefinedPort_port" memberEnd="_SGspMXCoEdq2Lvk-NX0TGA _SG_kDHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SG_kC3CoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SG_kDHCoEdq2Lvk-NX0TGA" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_SG_kCnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SG_kDXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SG_kDnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SG_kD3CoEdq2Lvk-NX0TGA" name="A_provided_port" memberEnd="_SG2aEHCoEdq2Lvk-NX0TGA _SG_kEHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SG_kEHCoEdq2Lvk-NX0TGA" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_SG_kD3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SG_kEXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SG_kEnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SG_kE3CoEdq2Lvk-NX0TGA" name="A_partWithPort_connectorEnd" memberEnd="_SG2aKHCoEdq2Lvk-NX0TGA _SG_kFHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SG_kFHCoEdq2Lvk-NX0TGA" type="_aOgw0GveEdq4DLWZOhbdEA" association="_SG_kE3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHJVAHCoEdq2Lvk-NX0TGA" name="CollaborationUse">
    <ownedComment xmi:id="_SHJVAXCoEdq2Lvk-NX0TGA" annotatedElement="_SHJVAHCoEdq2Lvk-NX0TGA">
      <body>A collaboration use represents one particular use of a collaboration to explain the relationships between the properties of a classifier. A collaboration use shows how the pattern described by a collaboration is applied in a given context, by binding specific entities from that context to the roles of the collaboration. Depending on the context, these entities could be structural features of a classifier, instance specifications, or even roles in some containing collaboration. There may be multiple occurrences of a given collaboration within a classifier, each involving a different set of roles and connectors. A given role or connector may be involved in multiple occurrences of the same or different collaborations.



Associated dependencies map features of the collaboration type to features in the classifier. These dependencies indicate which role in the classifier plays which role in the collaboration.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SHJVAnCoEdq2Lvk-NX0TGA" name="client_elements" constrainedElement="_SHJVAHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHJVA3CoEdq2Lvk-NX0TGA" annotatedElement="_SHJVAnCoEdq2Lvk-NX0TGA">
        <body>All the client elements of a roleBinding are in one classifier and all supplier elements of a roleBinding are in one collaboration and they are compatible.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHJVBHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHJVBXCoEdq2Lvk-NX0TGA" name="every_role" constrainedElement="_SHJVAHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHJVBnCoEdq2Lvk-NX0TGA" annotatedElement="_SHJVBXCoEdq2Lvk-NX0TGA">
        <body>Every role in the collaboration is bound within the collaboration use to a connectable element within the classifier or operation.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHJVB3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHJVCHCoEdq2Lvk-NX0TGA" name="connectors" constrainedElement="_SHJVAHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHJVCXCoEdq2Lvk-NX0TGA" annotatedElement="_SHJVCHCoEdq2Lvk-NX0TGA">
        <body>The connectors in the classifier connect according to the connectors in the collaboration</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHJVCnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHJVC3CoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SHJVDHCoEdq2Lvk-NX0TGA" name="type" type="_SHJVFnCoEdq2Lvk-NX0TGA" association="_SHcP8HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHJVDXCoEdq2Lvk-NX0TGA" annotatedElement="_SHJVDHCoEdq2Lvk-NX0TGA">
        <body>The collaboration which is used in this occurrence. The collaboration defines the cooperation between its roles which are mapped to properties of the classifier owning the collaboration use.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHJVDnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHJVD3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHJVEHCoEdq2Lvk-NX0TGA" name="roleBinding" type="_rEDGkGwKEdq7X4sGURiZYA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SHcP9HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHJVEXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHJVEnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHJVE3CoEdq2Lvk-NX0TGA" annotatedElement="_SHJVEHCoEdq2Lvk-NX0TGA">
        <body>A mapping between features of the collaboration type and features of the classifier or operation. This mapping indicates which connectable element of the classifier or operation plays which role(s) in the collaboration. A connectable element may be bound to multiple roles in the same collaboration use (that is, it may play multiple roles).

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHJVFHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHJVFXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHJVFnCoEdq2Lvk-NX0TGA" name="Collaboration">
    <ownedComment xmi:id="_SHJVF3CoEdq2Lvk-NX0TGA" annotatedElement="_SHJVFnCoEdq2Lvk-NX0TGA">
      <body>A collaboration is represented as a kind of classifier and defines a set of cooperating entities to be played by instances (its roles), as well as a set of connectors that define communication paths between the participating instances. The cooperating entities are the properties of the collaboration.



A collaboration specifies a view (or projection) of a set of cooperating classifiers. It describes the required links between instances that play the roles of the collaboration, as well as the features required of the classifiers that specify the participating instances. Several collaborations may describe different projections of the same set of classifiers.

</body>
    </ownedComment>
    <generalization xmi:id="_SHJVGXCoEdq2Lvk-NX0TGA" general="_FQiVsGwYEdqHKKVoxc0dlA"/>
    <generalization xmi:id="_SHJVGnCoEdq2Lvk-NX0TGA" general="_iY7sMGvsEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SHJVG3CoEdq2Lvk-NX0TGA" name="collaborationRole" type="_SD3XnHCoEdq2Lvk-NX0TGA" subsettedProperty="_SD3XkHCoEdq2Lvk-NX0TGA" association="_SHcQA3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHJVHHCoEdq2Lvk-NX0TGA" annotatedElement="_SHJVG3CoEdq2Lvk-NX0TGA">
        <body>References connectable elements (possibly owned by other classifiers) which represent roles that instances may play in this collaboration.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHJVHXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHJVHnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SHcP8HCoEdq2Lvk-NX0TGA" name="A_type_collaborationUse" memberEnd="_SHJVDHCoEdq2Lvk-NX0TGA _SHcP8XCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SHcP8XCoEdq2Lvk-NX0TGA" type="_SHJVAHCoEdq2Lvk-NX0TGA" association="_SHcP8HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHcP8nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHcP83CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SHcP9HCoEdq2Lvk-NX0TGA" name="A_roleBinding_collaborationUse" memberEnd="_SHJVEHCoEdq2Lvk-NX0TGA _SHcP9nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SHcP9XCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SHcP9nCoEdq2Lvk-NX0TGA" type="_SHJVAHCoEdq2Lvk-NX0TGA" association="_SHcP9HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHcP93CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHcP-HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SHcP-XCoEdq2Lvk-NX0TGA" name="A_classifier_representation" memberEnd="_SHcP-3CoEdq2Lvk-NX0TGA _SHTGAHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SHcP-nCoEdq2Lvk-NX0TGA" general="_SHcP_nCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SHcP-3CoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" redefinedProperty="_SHcQAHCoEdq2Lvk-NX0TGA" association="_SHcP-XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHcP_HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHcP_XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SHcP_nCoEdq2Lvk-NX0TGA" name="A_collaborationUse_classifier" memberEnd="_SHTGBHCoEdq2Lvk-NX0TGA _SHcQAHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SHcP_3CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SHcQAHCoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SHcP_nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHcQAXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHcQAnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SHcQA3CoEdq2Lvk-NX0TGA" name="A_collaborationRole_collaboration" memberEnd="_SHJVG3CoEdq2Lvk-NX0TGA _SHcQBXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SHcQBHCoEdq2Lvk-NX0TGA" general="_SEBIkXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SHcQBXCoEdq2Lvk-NX0TGA" type="_SHJVFnCoEdq2Lvk-NX0TGA" redefinedProperty="_SEBIk3CoEdq2Lvk-NX0TGA" association="_SHcQA3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHcQBnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHcQB3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHcQCHCoEdq2Lvk-NX0TGA" name="CreateObjectAction">
    <ownedComment xmi:id="_SHcQCXCoEdq2Lvk-NX0TGA" annotatedElement="_SHcQCHCoEdq2Lvk-NX0TGA">
      <body>CreateObjectAction is an action that creates an object that conforms to a statically specified classifier and puts it on an output pin at runtime.</body>
    </ownedComment>
    <ownedRule xmi:id="_SHcQCnCoEdq2Lvk-NX0TGA" name="classifier_not_abstract" constrainedElement="_SHcQCHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHcQC3CoEdq2Lvk-NX0TGA" annotatedElement="_SHcQCnCoEdq2Lvk-NX0TGA">
        <body>The classifier cannot be abstract.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHcQDHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>not (self.classifier.isAbstract = #true)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHcQDXCoEdq2Lvk-NX0TGA" name="classifier_not_association_class" constrainedElement="_SHcQCHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHcQDnCoEdq2Lvk-NX0TGA" annotatedElement="_SHcQDXCoEdq2Lvk-NX0TGA">
        <body>The classifier cannot be an association class</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHcQD3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>not self.classifier.oclIsKindOf(AssociationClass)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHcQEHCoEdq2Lvk-NX0TGA" name="same_type" constrainedElement="_SHcQCHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHcQEXCoEdq2Lvk-NX0TGA" annotatedElement="_SHcQEHCoEdq2Lvk-NX0TGA">
        <body>The type of the result pin must be the same as the classifier of the action.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHcQEnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.type = self.classifier</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHcQE3CoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SHcQCHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHcQFHCoEdq2Lvk-NX0TGA" annotatedElement="_SHcQE3CoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHcQFXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHcQFnCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHcQF3CoEdq2Lvk-NX0TGA" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SICs4HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHcQGHCoEdq2Lvk-NX0TGA" annotatedElement="_SHcQF3CoEdq2Lvk-NX0TGA">
        <body>Classifier to be instantiated.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHcQGXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHcQGnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHcQG3CoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SICs5HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHcQHHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHcQHXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHcQHnCoEdq2Lvk-NX0TGA" annotatedElement="_SHcQG3CoEdq2Lvk-NX0TGA">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHcQH3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHcQIHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHmA8HCoEdq2Lvk-NX0TGA" name="DestroyObjectAction">
    <ownedComment xmi:id="_SHmA8XCoEdq2Lvk-NX0TGA" annotatedElement="_SHmA8HCoEdq2Lvk-NX0TGA">
      <body>This action destroys the object on its input pin at runtime. The object may be a link object, in which case the semantics of DestroyLinkAction also applies.</body>
    </ownedComment>
    <ownedRule xmi:id="_SHmA8nCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SHmA8HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmA83CoEdq2Lvk-NX0TGA" annotatedElement="_SHmA8nCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmA9HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.target.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmA9XCoEdq2Lvk-NX0TGA" name="no_type" constrainedElement="_SHmA8HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmA9nCoEdq2Lvk-NX0TGA" annotatedElement="_SHmA9XCoEdq2Lvk-NX0TGA">
        <body>The input pin has no type.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmA93CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.target.type->size() = 0</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHmA-HCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHmA-XCoEdq2Lvk-NX0TGA" name="isDestroyLinks" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SHmA-nCoEdq2Lvk-NX0TGA" annotatedElement="_SHmA-XCoEdq2Lvk-NX0TGA">
        <body>Specifies whether links in which the object participates are destroyed along with the object.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SHmA-3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHmA_HCoEdq2Lvk-NX0TGA" name="isDestroyOwnedObjects" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SHmA_XCoEdq2Lvk-NX0TGA" annotatedElement="_SHmA_HCoEdq2Lvk-NX0TGA">
        <body>Specifies whether objects owned by the object are destroyed along with the object.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SHmA_nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHmA_3CoEdq2Lvk-NX0TGA" name="target" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SICs6XCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHmBAHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHmBAXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHmBAnCoEdq2Lvk-NX0TGA" annotatedElement="_SHmA_3CoEdq2Lvk-NX0TGA">
        <body>The input pin providing the object to be destroyed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHmBA3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHmBBHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHmBBXCoEdq2Lvk-NX0TGA" name="TestIdentityAction">
    <ownedComment xmi:id="_SHmBBnCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBBXCoEdq2Lvk-NX0TGA">
      <body>This action returns true if the two input values are the same identity, false if they are not.</body>
    </ownedComment>
    <ownedRule xmi:id="_SHmBB3CoEdq2Lvk-NX0TGA" name="no_type" constrainedElement="_SHmBBXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBCHCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBB3CoEdq2Lvk-NX0TGA">
        <body>The input pins have no type.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBCXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.first.type->size() = 0
and self.second.type->size() = 0
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmBCnCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SHmBBXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBC3CoEdq2Lvk-NX0TGA" annotatedElement="_SHmBCnCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the input pins is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBDHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.first.multiplicity.is(1,1)
and self.second.multiplicity.is(1,1)
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmBDXCoEdq2Lvk-NX0TGA" name="result_is_boolean" constrainedElement="_SHmBBXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBDnCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBDXCoEdq2Lvk-NX0TGA">
        <body>The type of the result is Boolean.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBD3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.type.oclIsTypeOf(Boolean)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHmBEHCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHmBEXCoEdq2Lvk-NX0TGA" name="first" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SICs7nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHmBEnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHmBE3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHmBFHCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBEXCoEdq2Lvk-NX0TGA">
        <body>Gives the pin on which an object is placed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHmBFXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHmBFnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHmBF3CoEdq2Lvk-NX0TGA" name="second" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SICs83CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHmBGHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHmBGXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHmBGnCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBF3CoEdq2Lvk-NX0TGA">
        <body>Gives the pin on which an object is placed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHmBG3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHmBHHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHmBHXCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SICs-HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHmBHnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHmBH3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHmBIHCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBHXCoEdq2Lvk-NX0TGA">
        <body>Tells whether the two input objects are identical.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHmBIXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHmBInCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHmBI3CoEdq2Lvk-NX0TGA" name="ReadSelfAction">
    <ownedComment xmi:id="_SHmBJHCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBI3CoEdq2Lvk-NX0TGA">
      <body>Every action is ultimately a part of some behavior, which is in turn optionally attached in some way to the specification of a classifier; for example as the body of a method or as part of a state machine. When the behavior executes, it does so in the context of some specific host instance of that classifier. This action produces this host instance, if any, on its output pin. The type of the output pin is the classifier to which the behavior is associated in the user model.</body>
    </ownedComment>
    <ownedRule xmi:id="_SHmBJXCoEdq2Lvk-NX0TGA" name="contained" constrainedElement="_SHmBI3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBJnCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBJXCoEdq2Lvk-NX0TGA">
        <body>The action must be contained in an behavior that has a host classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBJ3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.context->size() = 1</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmBKHCoEdq2Lvk-NX0TGA" name="not_static" constrainedElement="_SHmBI3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBKXCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBKHCoEdq2Lvk-NX0TGA">
        <body>If the action is contained in an behavior that is acting as the body of a method, then the operation of the method must not be static.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBKnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmBK3CoEdq2Lvk-NX0TGA" name="type" constrainedElement="_SHmBI3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBLHCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBK3CoEdq2Lvk-NX0TGA">
        <body>The type of the result output pin is the host classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBLXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.type = self.context</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmBLnCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SHmBI3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBL3CoEdq2Lvk-NX0TGA" annotatedElement="_SHmBLnCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the result output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBMHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHmBMXCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHmBMnCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SICs_XCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHmBM3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHmBNHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHmBNXCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBMnCoEdq2Lvk-NX0TGA">
        <body>Gives the output pin on which the hosting object is placed.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHmBNnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHmBN3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHmBOHCoEdq2Lvk-NX0TGA" name="StructuralFeatureAction" isAbstract="true">
    <ownedComment xmi:id="_SHmBOXCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBOHCoEdq2Lvk-NX0TGA">
      <body>This abstract action class statically specifies the structural feature being accessed. The object to access is specified dynamically, by referring to an input pin on which the object will be placed at runtime. The type of the value of this pin is the classifier that owns the specified structural feature, and the value's multiplicity is 1..1.</body>
    </ownedComment>
    <ownedRule xmi:id="_SHmBOnCoEdq2Lvk-NX0TGA" name="not_static" constrainedElement="_SHmBOHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBO3CoEdq2Lvk-NX0TGA" annotatedElement="_SHmBOnCoEdq2Lvk-NX0TGA">
        <body>The structural feature must not be static.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBPHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.structuralFeature.isStatic = #false</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmBPXCoEdq2Lvk-NX0TGA" name="same_type" constrainedElement="_SHmBOHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBPnCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBPXCoEdq2Lvk-NX0TGA">
        <body>The type of the object input pin is the same as the classifier of the object passed on this pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBP3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmBQHCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SHmBOHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBQXCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBQHCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the input pin must be 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBQnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.object.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmBQ3CoEdq2Lvk-NX0TGA" name="visibility" constrainedElement="_SHmBOHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBRHCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBQ3CoEdq2Lvk-NX0TGA">
        <body>Visibility of structural feature must allow access to the object performing the action.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBRXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>let host : Classifier = self.context in
self.structuralFeature.visibility = #public
or host = self.structuralFeature.featuringClassifier.type
or (self.structuralFeature.visibility = #protected and host.allSupertypes
->includes(self.structuralFeature.featuringClassifier.type)))
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmBRnCoEdq2Lvk-NX0TGA" name="one_featuring_classifier" constrainedElement="_SHmBOHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBR3CoEdq2Lvk-NX0TGA" annotatedElement="_SHmBRnCoEdq2Lvk-NX0TGA">
        <body>A structural feature has exactly one featuringClassifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBSHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.structuralFeature.featuringClassifier->size() = 1</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHmBSXCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHmBSnCoEdq2Lvk-NX0TGA" name="structuralFeature" type="_RzCGWnCoEdq2Lvk-NX0TGA" association="_SICtAnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBS3CoEdq2Lvk-NX0TGA" annotatedElement="_SHmBSnCoEdq2Lvk-NX0TGA">
        <body>Structural feature to be read.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHmBTHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHmBTXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHmBTnCoEdq2Lvk-NX0TGA" name="object" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SICtBnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHmBT3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHmBUHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHmBUXCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBTnCoEdq2Lvk-NX0TGA">
        <body>Gives the input pin from which the object whose structural feature is to be read or written is obtained.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHmBUnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHmBU3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHmBVHCoEdq2Lvk-NX0TGA" name="ReadStructuralFeatureAction">
    <ownedComment xmi:id="_SHmBVXCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBVHCoEdq2Lvk-NX0TGA">
      <body>This action reads the values of a structural feature, in order if the structural feature is ordered.</body>
    </ownedComment>
    <ownedRule xmi:id="_SHmBVnCoEdq2Lvk-NX0TGA" name="type_and_ordering" constrainedElement="_SHmBVHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBV3CoEdq2Lvk-NX0TGA" annotatedElement="_SHmBVnCoEdq2Lvk-NX0TGA">
        <body>The type and ordering of the result output pin are the same as the type and ordering of the structural feature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBWHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.type = self.structuralFeature.type
and self.result.ordering = self.structuralFeature.ordering
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmBWXCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SHmBVHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBWnCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBWXCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the structural feature must be compatible with the multiplicity of the output pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBW3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.structuralFeature.multiplicity.compatibleWith(self.result.multiplicity)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHmBXHCoEdq2Lvk-NX0TGA" general="_SHmBOHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHmBXXCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SICtC3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHmBXnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHmBX3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHmBYHCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBXXCoEdq2Lvk-NX0TGA">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHmBYXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHmBYnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHmBY3CoEdq2Lvk-NX0TGA" name="WriteStructuralFeatureAction" isAbstract="true">
    <ownedComment xmi:id="_SHmBZHCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBY3CoEdq2Lvk-NX0TGA">
      <body>A write structural feature action operates on a structural feature of an object to modify its values. It has an input pin on which the value that will be added or removed is put. Other aspects of write structural feature actions are inherited from StructuralFeatureAction.</body>
    </ownedComment>
    <ownedRule xmi:id="_SHmBZXCoEdq2Lvk-NX0TGA" name="input_pin" constrainedElement="_SHmBY3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBZnCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBZXCoEdq2Lvk-NX0TGA">
        <body>The type input pin is the same as the classifier of the structural feature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBZ3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.value.type = self.structuralFeature.featuringClassifier</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHmBaHCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SHmBY3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHmBaXCoEdq2Lvk-NX0TGA" annotatedElement="_SHmBaHCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHmBanCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.value.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHmBa3CoEdq2Lvk-NX0TGA" general="_SHmBOHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHmBbHCoEdq2Lvk-NX0TGA" name="value" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SIL20HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHmBbXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHmBbnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHmBb3CoEdq2Lvk-NX0TGA" annotatedElement="_SHmBbHCoEdq2Lvk-NX0TGA">
        <body>Value to be added or removed from the structural feature.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHmBcHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHmBcXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHmBcnCoEdq2Lvk-NX0TGA" name="ClearStructuralFeatureAction">
    <ownedComment xmi:id="_SHmBc3CoEdq2Lvk-NX0TGA" annotatedElement="_SHmBcnCoEdq2Lvk-NX0TGA">
      <body>This action removes all values of a structural feature.</body>
    </ownedComment>
    <generalization xmi:id="_SHmBdHCoEdq2Lvk-NX0TGA" general="_SHmBOHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHvx8HCoEdq2Lvk-NX0TGA" name="RemoveStructuralFeatureValueAction">
    <ownedComment xmi:id="_SHvx8XCoEdq2Lvk-NX0TGA" annotatedElement="_SHvx8HCoEdq2Lvk-NX0TGA">
      <body>The object to access is specified dynamically, by referring to an input pin on which the object will be placed at runtime. The type of the value of this pin is the classifier that owns the specified structural feature, and the value's multiplicity is 1..1.



Structural features are potentially multi-valued and ordered, and may support duplicates, so the action supports specification of removal points for new values. It also supports the removal of all duplicate values.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SHvx8nCoEdq2Lvk-NX0TGA" name="non_unique_removal" constrainedElement="_SHvx8HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvx83CoEdq2Lvk-NX0TGA" annotatedElement="_SHvx8nCoEdq2Lvk-NX0TGA">
        <body>Actions removing a value from ordered nonunique structural features must have a single removeAt input pin if isRemoveDuplicates is false. It must be of type Unlimited Natural with multiplicity 1..1. Otherwise, the action has no removeAt input pin.

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvx9HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHvx9XCoEdq2Lvk-NX0TGA" general="_SHmBY3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHvx9nCoEdq2Lvk-NX0TGA" name="isRemoveDuplicates" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SHvx93CoEdq2Lvk-NX0TGA" annotatedElement="_SHvx9nCoEdq2Lvk-NX0TGA">
        <body>Specifies whether to remove duplicates of the value in nonunique structural features.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SHvx-HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHvx-XCoEdq2Lvk-NX0TGA" name="removeAt" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SIVn2nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHvx-nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHvx-3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHvx_HCoEdq2Lvk-NX0TGA" annotatedElement="_SHvx-XCoEdq2Lvk-NX0TGA">
        <body>Specifies the position of an existing value to remove in ordered nonunique structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHvx_XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHvx_nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHvx_3CoEdq2Lvk-NX0TGA" name="AddStructuralFeatureValueAction">
    <ownedComment xmi:id="_SHvyAHCoEdq2Lvk-NX0TGA" annotatedElement="_SHvx_3CoEdq2Lvk-NX0TGA">
      <body>Structural Features are potentially multi-valued and ordered, so the action supports specification of insertion points for new values. It also supports the removal of existing values of the structural feature before the new value is added.



The object to access is specified dynamically, by referring to an input pin on which the object will be placed at runtime. The type of the value of this pin is the classifier that owns the specified structural feature, and the value's multiplicity is 1..1.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SHvyAXCoEdq2Lvk-NX0TGA" name="unlimited_natural_and_multiplicity" constrainedElement="_SHvx_3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyAnCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyAXCoEdq2Lvk-NX0TGA">
        <body>Actions adding a value to ordered structural features must have a single input pin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, otherwise the action has no input pin for the insertion point.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyA3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>let insertAtPins : Collection = self.insertAt in
if self.structuralFeature.isOrdered = #false
then insertAtPins->size() = 0
else let insertAtPin : InputPin= insertAt->asSequence()->first() in
insertAtPins->size() = 1
and insertAtPin.type = UnlimitedNatural
and insertAtPin.multiplicity.is(1,1))
endif
</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHvyBHCoEdq2Lvk-NX0TGA" general="_SHmBY3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHvyBXCoEdq2Lvk-NX0TGA" name="isReplaceAll" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SHvyBnCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyBXCoEdq2Lvk-NX0TGA">
        <body>Specifies whether existing values of the structural feature of the object should be removed before adding the new value.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SHvyB3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHvyCHCoEdq2Lvk-NX0TGA" name="insertAt" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SIL21XCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHvyCXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHvyCnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHvyC3CoEdq2Lvk-NX0TGA" annotatedElement="_SHvyCHCoEdq2Lvk-NX0TGA">
        <body>Gives the position at which to insert a new value or move an existing value in ordered structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero. This pin is omitted for unordered structural features.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHvyDHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHvyDXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHvyDnCoEdq2Lvk-NX0TGA" name="LinkAction" isAbstract="true">
    <ownedComment xmi:id="_SHvyD3CoEdq2Lvk-NX0TGA" annotatedElement="_SHvyDnCoEdq2Lvk-NX0TGA">
      <body>A link action creates, destroys, or reads links, identifying a link by its end objects and qualifier values, if any.</body>
    </ownedComment>
    <ownedRule xmi:id="_SHvyEHCoEdq2Lvk-NX0TGA" name="same_association" constrainedElement="_SHvyDnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyEXCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyEHCoEdq2Lvk-NX0TGA">
        <body>The association ends of the link end data must all be from the same association and include all and only the association ends of that association.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyEnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.endData->collect(end) = self.association()->collect(connection))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHvyE3CoEdq2Lvk-NX0TGA" name="not_static" constrainedElement="_SHvyDnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyFHCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyE3CoEdq2Lvk-NX0TGA">
        <body>The association ends of the link end data must not be static.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyFXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.endData->forall(end.oclisKindOf(NavigableEnd) implies end.isStatic = #false</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHvyFnCoEdq2Lvk-NX0TGA" name="same_pins" constrainedElement="_SHvyDnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyF3CoEdq2Lvk-NX0TGA" annotatedElement="_SHvyFnCoEdq2Lvk-NX0TGA">
        <body>The input pins of the action are the same as the pins of the link end data and insertion pins.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyGHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.input->asSet() =
let ledpins : Set = self.endData->collect(value) in
if self.oclIsKindOf(LinkEndCreationData)
then ledpins->union(self.endData.oclAsType(LinkEndCreationData).insertAt)
else ledpins
</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHvyGXCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHvyGnCoEdq2Lvk-NX0TGA" name="endData" type="_SHvyK3CoEdq2Lvk-NX0TGA" association="_SIL22nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHvyG3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHvyHHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHvyHXCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyGnCoEdq2Lvk-NX0TGA">
        <body>Data identifying one end of a link by the objects on its ends and qualifiers.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHvyHnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHvyH3CoEdq2Lvk-NX0TGA" value="2"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHvyIHCoEdq2Lvk-NX0TGA" name="inputValue" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SIVn8XCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHvyIXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHvyInCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHvyI3CoEdq2Lvk-NX0TGA" annotatedElement="_SHvyIHCoEdq2Lvk-NX0TGA">
        <body>Pins taking end objects and qualifier values as input.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHvyJHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHvyJXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SHvyJnCoEdq2Lvk-NX0TGA" name="association" type="_AwvxoGwNEdq7X4sGURiZYA" isQuery="true" bodyCondition="_SHvyKHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyJ3CoEdq2Lvk-NX0TGA" annotatedElement="_SHvyJnCoEdq2Lvk-NX0TGA">
        <body>The association operates on LinkAction. It returns the association of the action.</body>
      </ownedComment>
      <ownedRule xmi:id="_SHvyKHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SHvyJnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyKXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.endData->asSequence().first().end.association</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SHvyKnCoEdq2Lvk-NX0TGA" type="_AwvxoGwNEdq7X4sGURiZYA" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHvyP3CoEdq2Lvk-NX0TGA" name="ReadLinkAction">
    <ownedComment xmi:id="_SHvyQHCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyP3CoEdq2Lvk-NX0TGA">
      <body>This action navigates an association towards one end, which is the end that does not have an input pin to take its object (the open end). The objects put on the result output pin are the ones participating in the association at the open end, conforming to the specified qualifiers, in order if the end is ordered. The semantics is undefined for reading a link that violates the navigability or visibility of the open end.</body>
    </ownedComment>
    <ownedRule xmi:id="_SHvyQXCoEdq2Lvk-NX0TGA" name="one_open_end" constrainedElement="_SHvyP3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyQnCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyQXCoEdq2Lvk-NX0TGA">
        <body>Exactly one link-end data specification (the 'open' end) must not have an end object input pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyQ3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.endData->select(ed | ed.value->size() = 0)->size() = 1</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHvyRHCoEdq2Lvk-NX0TGA" name="type_and_ordering" constrainedElement="_SHvyP3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyRXCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyRHCoEdq2Lvk-NX0TGA">
        <body>The type and ordering of the result output pin are same as the type and ordering of the open association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyRnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>let openend : AssociationEnd = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in
self.result.type = openend.type
and self.result.ordering = openend.ordering
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHvyR3CoEdq2Lvk-NX0TGA" name="compatible_multiplicity" constrainedElement="_SHvyP3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvySHCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyR3CoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the open association end must be compatible with the multiplicity of the result output pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvySXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>let openend : AssociationEnd = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in
openend.multiplicity.compatibleWith(self.result.multiplicity)
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHvySnCoEdq2Lvk-NX0TGA" name="navigable_open_end" constrainedElement="_SHvyP3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyS3CoEdq2Lvk-NX0TGA" annotatedElement="_SHvySnCoEdq2Lvk-NX0TGA">
        <body>The open end must be navigable.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyTHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>let openend : AssociationEnd = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in
openend.isNavigable()
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHvyTXCoEdq2Lvk-NX0TGA" name="visibility" constrainedElement="_SHvyP3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyTnCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyTXCoEdq2Lvk-NX0TGA">
        <body>Visibility of the open end must allow access to the object performing the action.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyT3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>let host : Classifier = self.context in
let openend : AssociationEnd = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in
openend.visibility = #public
or self.endData->exists(oed | not oed.end = openend
and (host = oed.end.participant
or (openend.visibility = #protected
and host.allSupertypes->includes(oed.end.participant))))
</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHvyUHCoEdq2Lvk-NX0TGA" general="_SHvyDnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHvyUXCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SIL25nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHvyUnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHvyU3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHvyVHCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyUXCoEdq2Lvk-NX0TGA">
        <body>The pin on which are put the objects participating in the association at the end not specified by the inputs.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHvyVXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHvyVnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHvyV3CoEdq2Lvk-NX0TGA" name="LinkEndCreationData">
    <ownedComment xmi:id="_SHvyWHCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyV3CoEdq2Lvk-NX0TGA">
      <body>This class is required when using CreateLinkAction, to specify insertion points for ordered ends and for replacing all links at end. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, as required. This requires more than one piece of data, namely, the statically-specified end in the user model, the object on the end, and the qualifier values for that end. These pieces are brought together around LinkEndData. Each association end is identified separately with an instance of the LinkEndData class.



Qualifier values are used in CompleteActions to identify links to create.</body>
    </ownedComment>
    <ownedRule xmi:id="_SHvyWXCoEdq2Lvk-NX0TGA" name="create_link_action" constrainedElement="_SHvyV3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyWnCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyWXCoEdq2Lvk-NX0TGA">
        <body>LinkEndCreationData can only be end data for CreateLinkAction or one of its specializations.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyW3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.LinkAction.oclIsKindOf(CreateLinkAction)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHvyXHCoEdq2Lvk-NX0TGA" name="single_input_pin" constrainedElement="_SHvyV3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyXXCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyXHCoEdq2Lvk-NX0TGA">
        <body>Link end creation data for ordered association ends must have a single input pin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, otherwise the action has no input pin for the insertion point.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyXnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>let insertAtPins : Collection = self.insertAt in
if self.end.ordering = #unordered
then insertAtPins->size() = 0
else let insertAtPin : InputPin = insertAts->asSequence()->first() in
insertAtPins->size() = 1
and insertAtPin.type = UnlimitedNatural
and insertAtPin.multiplicity.is(1,1))
endif
</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHvyX3CoEdq2Lvk-NX0TGA" general="_SHvyK3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SHvyYHCoEdq2Lvk-NX0TGA" name="isReplaceAll" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SHvyYXCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyYHCoEdq2Lvk-NX0TGA">
        <body>Specifies whether the existing links emanating from the object on this end should be destroyed before creating a new link.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SHvyYnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHvyY3CoEdq2Lvk-NX0TGA" name="insertAt" type="_SJO_33CoEdq2Lvk-NX0TGA" association="_SIL263CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyZHCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyY3CoEdq2Lvk-NX0TGA">
        <body>Specifies where the new link should be inserted for ordered association ends, or where an existing link should be moved to. The type of the input is UnlimitedNatural, but the input cannot be zero. This pin is omitted for association ends that are not ordered.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHvyZXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHvyZnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SH474HCoEdq2Lvk-NX0TGA" name="CreateLinkAction">
    <ownedComment xmi:id="_SH474XCoEdq2Lvk-NX0TGA" annotatedElement="_SH474HCoEdq2Lvk-NX0TGA">
      <body>This action can be used to create links and link objects. There is no return value in either case. This is so that no change of the action is required if the association is changed to an association class or vice versa. CreateLinkAction uses a specialization of LinkEndData called LinkEndCreationData, to support ordered associations. The insertion point is specified at runtime by an additional input pin, which is required for ordered association ends and omitted for unordered ends. The insertion point is a positive integer giving the position to insert the link, or unlimited, to insert at the end. Reinserting an existing end at a new position in an ordered unique structural feature moves the end to that position. CreateLinkAction also uses LinkEndCreationData to support the destruction of existing links of the association that connect any of the objects of the new link. When the link is created, this option is available on an end-by-end basis, and causes all links of the association emanating from the 

specified ends to be destroyed before the new link is created.</body>
    </ownedComment>
    <ownedRule xmi:id="_SH474nCoEdq2Lvk-NX0TGA" name="association_not_abstract" constrainedElement="_SH474HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH4743CoEdq2Lvk-NX0TGA" annotatedElement="_SH474nCoEdq2Lvk-NX0TGA">
        <body>The association cannot be an abstract classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SH475HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.association().isAbstract = #false</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SH475XCoEdq2Lvk-NX0TGA" general="_SH479XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SH475nCoEdq2Lvk-NX0TGA" name="endData" type="_SHvyV3CoEdq2Lvk-NX0TGA" redefinedProperty="_SHvyGnCoEdq2Lvk-NX0TGA" association="_SIL273CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SH4753CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SH476HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SH476XCoEdq2Lvk-NX0TGA" annotatedElement="_SH475nCoEdq2Lvk-NX0TGA">
        <body>Specifies ends of association and inputs.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH476nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH4763CoEdq2Lvk-NX0TGA" value="2"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SH477HCoEdq2Lvk-NX0TGA" name="DestroyLinkAction">
    <ownedComment xmi:id="_SH477XCoEdq2Lvk-NX0TGA" annotatedElement="_SH477HCoEdq2Lvk-NX0TGA">
      <body>This action destroys a link or a link object. Link objects can also be destroyed with DestroyObjectAction. The link is specified in the same way as link creation, even for link objects. This allows actions to remain unchanged when their associations are transformed from ordinary ones to association classes and vice versa.



DestroyLinkAction uses a specialization of LinkEndData, called LinkEndDestructionData, to support ordered nonunique associations. The position of the link to be destroyed is specified at runtime by an additional input pin, which is required for ordered nonunique association ends and omitted for other kinds of ends. This is a positive integer giving the position of the link to destroy.



DestroyLinkAction also uses LinkEndDestructionData to support the destruction of duplicate links of the association on ends that are nonunique. This option is available on an end-by-end basis, and causes all duplicate links of the association emanating from the specified ends to be destroyed.

</body>
    </ownedComment>
    <generalization xmi:id="_SH477nCoEdq2Lvk-NX0TGA" general="_SH479XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SH4773CoEdq2Lvk-NX0TGA" name="endData" type="_SH48KnCoEdq2Lvk-NX0TGA" redefinedProperty="_SHvyGnCoEdq2Lvk-NX0TGA" association="_SIVn43CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SH478HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SH478XCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SH478nCoEdq2Lvk-NX0TGA" annotatedElement="_SH4773CoEdq2Lvk-NX0TGA">
        <body>Specifies ends of association and inputs.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH4783CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH479HCoEdq2Lvk-NX0TGA" value="2"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SH479XCoEdq2Lvk-NX0TGA" name="WriteLinkAction" isAbstract="true">
    <ownedComment xmi:id="_SH479nCoEdq2Lvk-NX0TGA" annotatedElement="_SH479XCoEdq2Lvk-NX0TGA">
      <body>A write link action takes a complete identification of a link and creates or destroys it.</body>
    </ownedComment>
    <ownedRule xmi:id="_SH4793CoEdq2Lvk-NX0TGA" name="allow_access" constrainedElement="_SH479XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH47-HCoEdq2Lvk-NX0TGA" annotatedElement="_SH4793CoEdq2Lvk-NX0TGA">
        <body>The visibility of at least one end must allow access to the class using the action.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SH47-XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SH47-nCoEdq2Lvk-NX0TGA" general="_SHvyDnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SH47-3CoEdq2Lvk-NX0TGA" name="ClearAssociationAction">
    <ownedComment xmi:id="_SH47_HCoEdq2Lvk-NX0TGA" annotatedElement="_SH47-3CoEdq2Lvk-NX0TGA">
      <body>This action destroys all links of an association that have a particular object at one end.</body>
    </ownedComment>
    <ownedRule xmi:id="_SH47_XCoEdq2Lvk-NX0TGA" name="same_type" constrainedElement="_SH47-3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH47_nCoEdq2Lvk-NX0TGA" annotatedElement="_SH47_XCoEdq2Lvk-NX0TGA">
        <body>The type of the input pin must be the same as the type of at least one of the association ends of the association.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SH47_3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.association->exists(end.type = self.object.type)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SH48AHCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SH47-3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH48AXCoEdq2Lvk-NX0TGA" annotatedElement="_SH48AHCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SH48AnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.object.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SH48A3CoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SH48BHCoEdq2Lvk-NX0TGA" name="object" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SIL29HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SH48BXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SH48BnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SH48B3CoEdq2Lvk-NX0TGA" annotatedElement="_SH48BHCoEdq2Lvk-NX0TGA">
        <body>Gives the input pin from which is obtained the object whose participation in the association is to be cleared.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH48CHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH48CXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SH48CnCoEdq2Lvk-NX0TGA" name="association" type="_AwvxoGwNEdq7X4sGURiZYA" association="_SIL2-XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH48C3CoEdq2Lvk-NX0TGA" annotatedElement="_SH48CnCoEdq2Lvk-NX0TGA">
        <body>Association to be cleared.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH48DHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH48DXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SH48DnCoEdq2Lvk-NX0TGA" name="BroadcastSignalAction">
    <ownedComment xmi:id="_SH48D3CoEdq2Lvk-NX0TGA" annotatedElement="_SH48DnCoEdq2Lvk-NX0TGA">
      <body>BroadcastSignalAction is an action that transmits a signal instance to all the potential target objects in the system, which may cause the firing of a state machine transitions or the execution of associated activities of a target object. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately after the signals are sent out. It does not wait for receipt. Any reply messages are ignored and are not transmitted to the requestor.</body>
    </ownedComment>
    <ownedRule xmi:id="_SH48EHCoEdq2Lvk-NX0TGA" name="number_and_order" constrainedElement="_SH48DnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH48EXCoEdq2Lvk-NX0TGA" annotatedElement="_SH48EHCoEdq2Lvk-NX0TGA">
        <body>The number and order of argument pins must be the same as the number and order of attributes in the signal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SH48EnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SH48E3CoEdq2Lvk-NX0TGA" name="type_ordering_multiplicity" constrainedElement="_SH48DnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH48FHCoEdq2Lvk-NX0TGA" annotatedElement="_SH48E3CoEdq2Lvk-NX0TGA">
        <body>The type, ordering, and multiplicity of an argument pin must be the same as the corresponding attribute of the signal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SH48FXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SH48FnCoEdq2Lvk-NX0TGA" general="_SJO_4nCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SH48F3CoEdq2Lvk-NX0TGA" name="signal" type="_SGP9KnCoEdq2Lvk-NX0TGA" association="_SIVn1nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH48GHCoEdq2Lvk-NX0TGA" annotatedElement="_SH48F3CoEdq2Lvk-NX0TGA">
        <body>The specification of signal object transmitted to the target objects.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH48GXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH48GnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SH48G3CoEdq2Lvk-NX0TGA" name="SendObjectAction">
    <ownedComment xmi:id="_SH48HHCoEdq2Lvk-NX0TGA" annotatedElement="_SH48G3CoEdq2Lvk-NX0TGA">
      <body>SendObjectAction is an action that transmits an object to the target object, where it may invoke behavior such as the firing of state machine transitions or the execution of an activity. The value of the object is available to the execution of invoked behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor.</body>
    </ownedComment>
    <generalization xmi:id="_SH48HXCoEdq2Lvk-NX0TGA" general="_SJO_4nCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SH48HnCoEdq2Lvk-NX0TGA" name="target" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SIVn0HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SH48H3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SH48IHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SH48IXCoEdq2Lvk-NX0TGA" annotatedElement="_SH48HnCoEdq2Lvk-NX0TGA">
        <body>The target object to which the object is sent.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH48InCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH48I3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SH48JHCoEdq2Lvk-NX0TGA" name="request" type="_SJO_33CoEdq2Lvk-NX0TGA" redefinedProperty="_SJO_5XCoEdq2Lvk-NX0TGA" association="_SIVn03CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SH48JXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SH48JnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SH48J3CoEdq2Lvk-NX0TGA" annotatedElement="_SH48JHCoEdq2Lvk-NX0TGA">
        <body>The request object, which is transmitted to the target object. The object may be copied in transmission, so identity might not be preserved. (Specialized from InvocationActon.argument)</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH48KHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH48KXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SH48KnCoEdq2Lvk-NX0TGA" name="LinkEndDestructionData">
    <ownedComment xmi:id="_SH48K3CoEdq2Lvk-NX0TGA" annotatedElement="_SH48KnCoEdq2Lvk-NX0TGA">
      <body>This class is required when using DestroyLinkAction, to specify links to destroy for nonunique ordered ends. A link cannot be passed as a runtime value to or from an action.



Qualifier values are used in CompleteActions to identify links to destroy.</body>
    </ownedComment>
    <ownedRule xmi:id="_SH48LHCoEdq2Lvk-NX0TGA" name="destroy_link_action" constrainedElement="_SH48KnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH48LXCoEdq2Lvk-NX0TGA" annotatedElement="_SH48LHCoEdq2Lvk-NX0TGA">
        <body>LinkEndDestructionData can only be end data for DestroyLinkAction or one of its specializations.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SH48LnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SH48L3CoEdq2Lvk-NX0TGA" name="unlimited_natural_and_multiplicity" constrainedElement="_SH48KnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH48MHCoEdq2Lvk-NX0TGA" annotatedElement="_SH48L3CoEdq2Lvk-NX0TGA">
        <body>LinkEndDestructionData for ordered nonunique association ends must have a single destroyAt input pin if isDestroyDuplicates is false. It must be of type UnlimitedNatural and have a multiplicity of 1..1. Otherwise, the action has no input pin for the removal position.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SH48MXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SH48MnCoEdq2Lvk-NX0TGA" general="_SHvyK3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SH48M3CoEdq2Lvk-NX0TGA" name="isDestroyDuplicates" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SH48NHCoEdq2Lvk-NX0TGA" annotatedElement="_SH48M3CoEdq2Lvk-NX0TGA">
        <body>Specifies whether to destroy duplicates of the value in nonunique association ends.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SH48NXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SH48NnCoEdq2Lvk-NX0TGA" name="destroyAt" type="_SJO_33CoEdq2Lvk-NX0TGA" association="_SIVn33CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH48N3CoEdq2Lvk-NX0TGA" annotatedElement="_SH48NnCoEdq2Lvk-NX0TGA">
        <body>Specifies the position of an existing link to be destroyed in ordered nonunique association ends. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH48OHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH48OXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SH48OnCoEdq2Lvk-NX0TGA" name="ValueSpecificationAction">
    <ownedComment xmi:id="_SH48O3CoEdq2Lvk-NX0TGA" annotatedElement="_SH48OnCoEdq2Lvk-NX0TGA">
      <body>The action returns the result of evaluating a value specification.</body>
    </ownedComment>
    <ownedRule xmi:id="_SH48PHCoEdq2Lvk-NX0TGA" name="compatible_type" constrainedElement="_SH48OnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH48PXCoEdq2Lvk-NX0TGA" annotatedElement="_SH48PHCoEdq2Lvk-NX0TGA">
        <body>The type of value specification must be compatible with the type of the result pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SH48PnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SH48P3CoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SH48OnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SH48QHCoEdq2Lvk-NX0TGA" annotatedElement="_SH48P3CoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the result pin is 1..1</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SH48QXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SH48QnCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SH48Q3CoEdq2Lvk-NX0TGA" name="value" type="_RzLQJ3CoEdq2Lvk-NX0TGA" association="_SIVn6HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SH48RHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SH48RXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SH48RnCoEdq2Lvk-NX0TGA" annotatedElement="_SH48Q3CoEdq2Lvk-NX0TGA">
        <body>Value specification to be evaluated.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH48R3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH48SHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SH48SXCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SIVn7HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SH48SnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SH48S3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SH48THCoEdq2Lvk-NX0TGA" annotatedElement="_SH48SXCoEdq2Lvk-NX0TGA">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH48TXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SH48TnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SICs4HCoEdq2Lvk-NX0TGA" name="A_classifier_createObjectAction" memberEnd="_SHcQF3CoEdq2Lvk-NX0TGA _SICs4XCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SICs4XCoEdq2Lvk-NX0TGA" type="_SHcQCHCoEdq2Lvk-NX0TGA" association="_SICs4HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SICs4nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SICs43CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SICs5HCoEdq2Lvk-NX0TGA" name="A_result_createObjectAction" memberEnd="_SHcQG3CoEdq2Lvk-NX0TGA _SICs5nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SICs5XCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SICs5nCoEdq2Lvk-NX0TGA" type="_SHcQCHCoEdq2Lvk-NX0TGA" association="_SICs5HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SICs53CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SICs6HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SICs6XCoEdq2Lvk-NX0TGA" name="A_target_destroyObjectAction" memberEnd="_SHmA_3CoEdq2Lvk-NX0TGA _SICs63CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SICs6nCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SICs63CoEdq2Lvk-NX0TGA" type="_SHmA8HCoEdq2Lvk-NX0TGA" association="_SICs6XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SICs7HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SICs7XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SICs7nCoEdq2Lvk-NX0TGA" name="A_first_testIdentityAction" memberEnd="_SHmBEXCoEdq2Lvk-NX0TGA _SICs8HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SICs73CoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SICs8HCoEdq2Lvk-NX0TGA" type="_SHmBBXCoEdq2Lvk-NX0TGA" association="_SICs7nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SICs8XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SICs8nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SICs83CoEdq2Lvk-NX0TGA" name="A_second_testIdentityAction" memberEnd="_SHmBF3CoEdq2Lvk-NX0TGA _SICs9XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SICs9HCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SICs9XCoEdq2Lvk-NX0TGA" type="_SHmBBXCoEdq2Lvk-NX0TGA" association="_SICs83CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SICs9nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SICs93CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SICs-HCoEdq2Lvk-NX0TGA" name="A_result_testIdentityAction" memberEnd="_SHmBHXCoEdq2Lvk-NX0TGA _SICs-nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SICs-XCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SICs-nCoEdq2Lvk-NX0TGA" type="_SHmBBXCoEdq2Lvk-NX0TGA" association="_SICs-HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SICs-3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SICs_HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SICs_XCoEdq2Lvk-NX0TGA" name="A_result_readSelfAction" memberEnd="_SHmBMnCoEdq2Lvk-NX0TGA _SICs_3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SICs_nCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SICs_3CoEdq2Lvk-NX0TGA" type="_SHmBI3CoEdq2Lvk-NX0TGA" association="_SICs_XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SICtAHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SICtAXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SICtAnCoEdq2Lvk-NX0TGA" name="A_structuralFeatureAction_structuralFeature" memberEnd="_SICtA3CoEdq2Lvk-NX0TGA _SHmBSnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SICtA3CoEdq2Lvk-NX0TGA" type="_SHmBOHCoEdq2Lvk-NX0TGA" association="_SICtAnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SICtBHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SICtBXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SICtBnCoEdq2Lvk-NX0TGA" name="A_object_structuralFeatureAction" memberEnd="_SHmBTnCoEdq2Lvk-NX0TGA _SICtCHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SICtB3CoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SICtCHCoEdq2Lvk-NX0TGA" type="_SHmBOHCoEdq2Lvk-NX0TGA" association="_SICtBnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SICtCXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SICtCnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SICtC3CoEdq2Lvk-NX0TGA" name="A_result_readStructuralFeatureAction" memberEnd="_SICtDXCoEdq2Lvk-NX0TGA _SHmBXXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SICtDHCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SICtDXCoEdq2Lvk-NX0TGA" type="_SHmBVHCoEdq2Lvk-NX0TGA" association="_SICtC3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SICtDnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SICtD3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIL20HCoEdq2Lvk-NX0TGA" name="A_value_writeStructuralFeatureAction" memberEnd="_SHmBbHCoEdq2Lvk-NX0TGA _SIL20nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIL20XCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIL20nCoEdq2Lvk-NX0TGA" type="_SHmBY3CoEdq2Lvk-NX0TGA" association="_SIL20HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIL203CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIL21HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIL21XCoEdq2Lvk-NX0TGA" name="A_insertAt_addStructuralFeatureValueAction" memberEnd="_SIL213CoEdq2Lvk-NX0TGA _SHvyCHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIL21nCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIL213CoEdq2Lvk-NX0TGA" type="_SHvx_3CoEdq2Lvk-NX0TGA" association="_SIL21XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIL22HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIL22XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIL22nCoEdq2Lvk-NX0TGA" name="A_endData_linkAction" memberEnd="_SIL223CoEdq2Lvk-NX0TGA _SHvyGnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SIL223CoEdq2Lvk-NX0TGA" type="_SHvyDnCoEdq2Lvk-NX0TGA" association="_SIL22nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIL23HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIL23XCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIL23nCoEdq2Lvk-NX0TGA" name="A_value_linkEndData" memberEnd="_SHvyN3CoEdq2Lvk-NX0TGA _SIL233CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SIL233CoEdq2Lvk-NX0TGA" type="_SHvyK3CoEdq2Lvk-NX0TGA" association="_SIL23nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIL24HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIL24XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIL24nCoEdq2Lvk-NX0TGA" name="A_end_linkEndData" memberEnd="_SIL243CoEdq2Lvk-NX0TGA _SHvyO3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SIL243CoEdq2Lvk-NX0TGA" type="_SHvyK3CoEdq2Lvk-NX0TGA" association="_SIL24nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIL25HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIL25XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIL25nCoEdq2Lvk-NX0TGA" name="A_result_readLinkAction" memberEnd="_SIL26HCoEdq2Lvk-NX0TGA _SHvyUXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIL253CoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIL26HCoEdq2Lvk-NX0TGA" type="_SHvyP3CoEdq2Lvk-NX0TGA" association="_SIL25nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIL26XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIL26nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIL263CoEdq2Lvk-NX0TGA" name="A_insertAt_linkEndCreationData" memberEnd="_SIL27HCoEdq2Lvk-NX0TGA _SHvyY3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SIL27HCoEdq2Lvk-NX0TGA" type="_SHvyV3CoEdq2Lvk-NX0TGA" association="_SIL263CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIL27XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIL27nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIL273CoEdq2Lvk-NX0TGA" name="A_endData_createLinkAction" memberEnd="_SH475nCoEdq2Lvk-NX0TGA _SIL28XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIL28HCoEdq2Lvk-NX0TGA" general="_SIL22nCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIL28XCoEdq2Lvk-NX0TGA" type="_SH474HCoEdq2Lvk-NX0TGA" redefinedProperty="_SIL223CoEdq2Lvk-NX0TGA" association="_SIL273CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIL28nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIL283CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIL29HCoEdq2Lvk-NX0TGA" name="A_object_clearAssociationAction" memberEnd="_SH48BHCoEdq2Lvk-NX0TGA _SIL29nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIL29XCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIL29nCoEdq2Lvk-NX0TGA" type="_SH47-3CoEdq2Lvk-NX0TGA" association="_SIL29HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIL293CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIL2-HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIL2-XCoEdq2Lvk-NX0TGA" name="A_association_clearAssociationAction" memberEnd="_SH48CnCoEdq2Lvk-NX0TGA _SIL2-nCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SIL2-nCoEdq2Lvk-NX0TGA" type="_SH47-3CoEdq2Lvk-NX0TGA" association="_SIL2-XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIL2-3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIL2_HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIVn0HCoEdq2Lvk-NX0TGA" name="A_target_sendObjectAction" memberEnd="_SH48HnCoEdq2Lvk-NX0TGA _SIVn0nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIVn0XCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIVn0nCoEdq2Lvk-NX0TGA" type="_SH48G3CoEdq2Lvk-NX0TGA" redefinedProperty="_SJh6u3CoEdq2Lvk-NX0TGA" association="_SIVn0HCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIVn03CoEdq2Lvk-NX0TGA" name="A_request_sendObjectAction" memberEnd="_SIVn1XCoEdq2Lvk-NX0TGA _SH48JHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIVn1HCoEdq2Lvk-NX0TGA" general="_SJh6sXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIVn1XCoEdq2Lvk-NX0TGA" type="_SH48G3CoEdq2Lvk-NX0TGA" redefinedProperty="_SJh6s3CoEdq2Lvk-NX0TGA" association="_SIVn03CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIVn1nCoEdq2Lvk-NX0TGA" name="A_signal_broadcastSignalAction" memberEnd="_SH48F3CoEdq2Lvk-NX0TGA _SIVn13CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SIVn13CoEdq2Lvk-NX0TGA" type="_SH48DnCoEdq2Lvk-NX0TGA" association="_SIVn1nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIVn2HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIVn2XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIVn2nCoEdq2Lvk-NX0TGA" name="A_removeAt_removeStructuralFeatureValueAction" memberEnd="_SIVn3HCoEdq2Lvk-NX0TGA _SHvx-XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIVn23CoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIVn3HCoEdq2Lvk-NX0TGA" type="_SHvx8HCoEdq2Lvk-NX0TGA" association="_SIVn2nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIVn3XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIVn3nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIVn33CoEdq2Lvk-NX0TGA" name="A_destroyAt_linkEndDestructionData" memberEnd="_SIVn4HCoEdq2Lvk-NX0TGA _SH48NnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SIVn4HCoEdq2Lvk-NX0TGA" type="_SH48KnCoEdq2Lvk-NX0TGA" association="_SIVn33CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIVn4XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIVn4nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIVn43CoEdq2Lvk-NX0TGA" name="A_endData_destroyLinkAction" memberEnd="_SIVn5XCoEdq2Lvk-NX0TGA _SH4773CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIVn5HCoEdq2Lvk-NX0TGA" general="_SIL22nCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIVn5XCoEdq2Lvk-NX0TGA" type="_SH477HCoEdq2Lvk-NX0TGA" redefinedProperty="_SIL223CoEdq2Lvk-NX0TGA" association="_SIVn43CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIVn5nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIVn53CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIVn6HCoEdq2Lvk-NX0TGA" name="A_value_valueSpecificationAction" memberEnd="_SIVn6XCoEdq2Lvk-NX0TGA _SH48Q3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SIVn6XCoEdq2Lvk-NX0TGA" type="_SH48OnCoEdq2Lvk-NX0TGA" association="_SIVn6HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIVn6nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIVn63CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIVn7HCoEdq2Lvk-NX0TGA" name="A_result_valueSpecificationAction" memberEnd="_SH48SXCoEdq2Lvk-NX0TGA _SIVn7nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIVn7XCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIVn7nCoEdq2Lvk-NX0TGA" type="_SH48OnCoEdq2Lvk-NX0TGA" association="_SIVn7HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIVn73CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIVn8HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIVn8XCoEdq2Lvk-NX0TGA" name="A_inputValue_linkAction" memberEnd="_SIVn83CoEdq2Lvk-NX0TGA _SHvyIHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIVn8nCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIVn83CoEdq2Lvk-NX0TGA" type="_SHvyDnCoEdq2Lvk-NX0TGA" redefinedProperty="_SJh6u3CoEdq2Lvk-NX0TGA" association="_SIVn8XCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIfY0HCoEdq2Lvk-NX0TGA" name="A_value_durationObservationAction" memberEnd="_SIfY0nCoEdq2Lvk-NX0TGA _SIyT4HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIfY0XCoEdq2Lvk-NX0TGA" general="_SIL20HCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIfY0nCoEdq2Lvk-NX0TGA" type="_Wrt_gGveEdq4DLWZOhbdEA" redefinedProperty="_SIL20nCoEdq2Lvk-NX0TGA" association="_SIfY0HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIfY03CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIfY1HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SIfY1XCoEdq2Lvk-NX0TGA" name="A_value_timeObservationAction" memberEnd="_SIoi0nCoEdq2Lvk-NX0TGA _SIfY13CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SIfY1nCoEdq2Lvk-NX0TGA" general="_SIL20HCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SIfY13CoEdq2Lvk-NX0TGA" type="_VMC8gGveEdq4DLWZOhbdEA" redefinedProperty="_SIL20nCoEdq2Lvk-NX0TGA" association="_SIfY1XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIfY2HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIfY2XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_QqkiIGvuEdqG6fBIPwe-mw" name="TimeExpression">
    <ownedComment xmi:id="_SIfY2nCoEdq2Lvk-NX0TGA" annotatedElement="_QqkiIGvuEdqG6fBIPwe-mw">
      <body>A TimeExpression defines a value specification that represents a time value.</body>
    </ownedComment>
    <generalization xmi:id="_SIfY23CoEdq2Lvk-NX0TGA" general="_RzLQJ3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SIfY3HCoEdq2Lvk-NX0TGA" name="firstTime" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SIfY3XCoEdq2Lvk-NX0TGA" annotatedElement="_SIfY3HCoEdq2Lvk-NX0TGA">
        <body>True if the TimeExpression describes the first point in time of the NamedElement referenced by event, in cases where the NamedElement describes something which extends in time. False if the TimeExpression describes the last point in time for the referenced NamedElement.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SIfY3nCoEdq2Lvk-NX0TGA" value="true"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SIfY33CoEdq2Lvk-NX0TGA" name="event" type="_csVgUGvtEdqG6fBIPwe-mw" association="_SI8E6HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SIfY4HCoEdq2Lvk-NX0TGA" annotatedElement="_SIfY33CoEdq2Lvk-NX0TGA">
        <body>Refers to the specification of the event occurrence that the TimeExpression describes</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIfY4XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIfY4nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_1qTPMGvsEdqG6fBIPwe-mw" name="Duration">
    <ownedComment xmi:id="_SIoiwHCoEdq2Lvk-NX0TGA" annotatedElement="_1qTPMGvsEdqG6fBIPwe-mw">
      <body>A duration defines a value specification that specifies the temporal distance between two time expressions that specify time instants.</body>
    </ownedComment>
    <generalization xmi:id="_SIoiwXCoEdq2Lvk-NX0TGA" general="_RzLQJ3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SIoiwnCoEdq2Lvk-NX0TGA" name="firstTime" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SIoiw3CoEdq2Lvk-NX0TGA" annotatedElement="_SIoiwnCoEdq2Lvk-NX0TGA">
        <body>If the duration is between times of two NamedElements, there are two Boolean attributes, one for the start of the duration and one for the end of the duration. For each of these it holds that firstTime is true if the time information is associated with the first point in time of the NamedElement referenced by event, and false if it represents the last point in time of the NamedElement. If there is only one NamedElement referenced by event, then this attribute is irrelevant.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SIoixHCoEdq2Lvk-NX0TGA" value="true"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SIoixXCoEdq2Lvk-NX0TGA" name="event" type="_csVgUGvtEdqG6fBIPwe-mw" association="_SJFOsHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SIoixnCoEdq2Lvk-NX0TGA" annotatedElement="_SIoixXCoEdq2Lvk-NX0TGA">
        <body>Refers to the specification(s) that describes the starting TimeExpression and the ending TimeExpression of the Duration. If only one NamedElement is referenced, the duration is from the first point in time of that NamedElement until the last point in time of that NamedElement.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIoix3CoEdq2Lvk-NX0TGA" value="2"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIoiyHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_VMC8gGveEdq4DLWZOhbdEA" name="TimeObservationAction">
    <ownedComment xmi:id="_SIoiyXCoEdq2Lvk-NX0TGA" annotatedElement="_VMC8gGveEdq4DLWZOhbdEA">
      <body>A TimeObservationAction defines an action that observes the current point in time and writes this value to a structural feature.</body>
    </ownedComment>
    <ownedRule xmi:id="_SIoiynCoEdq2Lvk-NX0TGA" name="input_value_time_expression" constrainedElement="_VMC8gGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SIoiy3CoEdq2Lvk-NX0TGA" annotatedElement="_SIoiynCoEdq2Lvk-NX0TGA">
        <body>The value of a TimeObservationAction’s input must be a TimeExpression.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SIoizHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.value.value.oclIsKindOf(TimeExpression)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SIoizXCoEdq2Lvk-NX0TGA" general="_SHmBY3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SIoiznCoEdq2Lvk-NX0TGA" name="now" type="_QqkiIGvuEdqG6fBIPwe-mw" isDerived="true" association="_SJO_sHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SIoiz3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SIoi0HCoEdq2Lvk-NX0TGA" isTransient="true" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SIoi0XCoEdq2Lvk-NX0TGA" annotatedElement="_SIoiznCoEdq2Lvk-NX0TGA">
        <body>Represents the current point in time and the value which is observed given by the keyword now.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SIoi0nCoEdq2Lvk-NX0TGA" name="value" type="_SJO_0HCoEdq2Lvk-NX0TGA" redefinedProperty="_SHmBbHCoEdq2Lvk-NX0TGA" association="_SIfY1XCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SIoi03CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SIoi1HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SIoi1XCoEdq2Lvk-NX0TGA" annotatedElement="_SIoi0nCoEdq2Lvk-NX0TGA">
        <body>Input whose time expression is to be written to the structural feature.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIoi1nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIoi13CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_M6leAFYkEdqB6vblk3tuMA" name="setNow" visibility="protected">
      <ownedParameter xmi:id="_PBSr0FYkEdqB6vblk3tuMA" name="newNow" visibility="protected" type="_QqkiIGvuEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SIoi2HCoEdq2Lvk-NX0TGA" name="now" type="_QqkiIGvuEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SIoi23CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SIoi2XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_SIoi2nCoEdq2Lvk-NX0TGA" operationName="getNow"/>
      </eAnnotations>
      <ownedRule xmi:id="_SIoi23CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SIoi2HCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SIoi3HCoEdq2Lvk-NX0TGA" language="OCL">
          <body>self.value.value.oclAsType(TimeExpression)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SIoi3XCoEdq2Lvk-NX0TGA" type="_QqkiIGvuEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SIyTwHCoEdq2Lvk-NX0TGA" name="DurationInterval">
    <ownedComment xmi:id="_SIyTwXCoEdq2Lvk-NX0TGA" annotatedElement="_SIyTwHCoEdq2Lvk-NX0TGA">
      <body>A DurationInterval defines the range between two Durations.</body>
    </ownedComment>
    <generalization xmi:id="_SIyTwnCoEdq2Lvk-NX0TGA" general="_SI8E2HCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SIyTw3CoEdq2Lvk-NX0TGA" name="min" type="_1qTPMGvsEdqG6fBIPwe-mw" redefinedProperty="_SI8E23CoEdq2Lvk-NX0TGA" association="_SJFOsnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SIyTxHCoEdq2Lvk-NX0TGA" annotatedElement="_SIyTw3CoEdq2Lvk-NX0TGA">
        <body>Refers to the Duration denoting the minimum value of the range.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SIyTxXCoEdq2Lvk-NX0TGA" name="max" type="_1qTPMGvsEdqG6fBIPwe-mw" redefinedProperty="_SI8E33CoEdq2Lvk-NX0TGA" association="_SJFOtXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SIyTxnCoEdq2Lvk-NX0TGA" annotatedElement="_SIyTxXCoEdq2Lvk-NX0TGA">
        <body>Refers to the Duration denoting the maximum value of the range.</body>
      </ownedComment>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SIyTx3CoEdq2Lvk-NX0TGA" name="TimeConstraint">
    <ownedComment xmi:id="_SIyTyHCoEdq2Lvk-NX0TGA" annotatedElement="_SIyTx3CoEdq2Lvk-NX0TGA">
      <body>A TimeConstraint defines a Constraint that refers to a TimeInterval.</body>
    </ownedComment>
    <generalization xmi:id="_SIyTyXCoEdq2Lvk-NX0TGA" general="_SI8Ez3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SIyTynCoEdq2Lvk-NX0TGA" name="specification" type="_SIyT0HCoEdq2Lvk-NX0TGA" redefinedProperty="_SI8E0nCoEdq2Lvk-NX0TGA" association="_SJFOvnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SIyTy3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SIyTzHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SIyTzXCoEdq2Lvk-NX0TGA" annotatedElement="_SIyTynCoEdq2Lvk-NX0TGA">
        <body>A condition that must be true when evaluated in order for the constraint to be satisfied.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIyTznCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIyTz3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SIyT0HCoEdq2Lvk-NX0TGA" name="TimeInterval">
    <ownedComment xmi:id="_SIyT0XCoEdq2Lvk-NX0TGA" annotatedElement="_SIyT0HCoEdq2Lvk-NX0TGA">
      <body>A TimeInterval defines the range between two TimeExpressions.</body>
    </ownedComment>
    <generalization xmi:id="_SIyT0nCoEdq2Lvk-NX0TGA" general="_SI8E2HCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SIyT03CoEdq2Lvk-NX0TGA" name="max" type="_QqkiIGvuEdqG6fBIPwe-mw" redefinedProperty="_SI8E33CoEdq2Lvk-NX0TGA" association="_SJFOuHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SIyT1HCoEdq2Lvk-NX0TGA" annotatedElement="_SIyT03CoEdq2Lvk-NX0TGA">
        <body>Refers to the TimeExpression denoting the maximum value of the range.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SIyT1XCoEdq2Lvk-NX0TGA" name="min" type="_QqkiIGvuEdqG6fBIPwe-mw" redefinedProperty="_SI8E23CoEdq2Lvk-NX0TGA" association="_SJFOu3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SIyT1nCoEdq2Lvk-NX0TGA" annotatedElement="_SIyT1XCoEdq2Lvk-NX0TGA">
        <body>Refers to the TimeExpression denoting the minimum value of the range.</body>
      </ownedComment>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_Wrt_gGveEdq4DLWZOhbdEA" name="DurationObservationAction">
    <ownedComment xmi:id="_SIyT13CoEdq2Lvk-NX0TGA" annotatedElement="_Wrt_gGveEdq4DLWZOhbdEA">
      <body>A DurationObservationAction defines an action that observes duration in time and writes this value to a structural feature.</body>
    </ownedComment>
    <ownedRule xmi:id="_SIyT2HCoEdq2Lvk-NX0TGA" name="input_value_duration" constrainedElement="_Wrt_gGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SIyT2XCoEdq2Lvk-NX0TGA" annotatedElement="_SIyT2HCoEdq2Lvk-NX0TGA">
        <body>The value of a DurationObservationAction’s input must be a Duration.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SIyT2nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.value.value.oclIsKindOf(Duration)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SIyT23CoEdq2Lvk-NX0TGA" general="_SHmBY3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SIyT3HCoEdq2Lvk-NX0TGA" name="duration" type="_1qTPMGvsEdqG6fBIPwe-mw" isDerived="true" association="_SJO_s3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SIyT3XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SIyT3nCoEdq2Lvk-NX0TGA" isTransient="true" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SIyT33CoEdq2Lvk-NX0TGA" annotatedElement="_SIyT3HCoEdq2Lvk-NX0TGA">
        <body>Represents the measured Duration</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SIyT4HCoEdq2Lvk-NX0TGA" name="value" type="_SJO_0HCoEdq2Lvk-NX0TGA" redefinedProperty="_SHmBbHCoEdq2Lvk-NX0TGA" association="_SIfY0HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SIyT4XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SIyT4nCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SIyT43CoEdq2Lvk-NX0TGA" annotatedElement="_SIyT4HCoEdq2Lvk-NX0TGA">
        <body>Input whose duration is to be written to the structural feature.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIyT5HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SIyT5XCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_EOLHgFYkEdqB6vblk3tuMA" name="setDuration" visibility="protected">
      <ownedParameter xmi:id="_G7VRUFYkEdqB6vblk3tuMA" name="newDuration" type="_1qTPMGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SI8EwHCoEdq2Lvk-NX0TGA" name="duration" type="_1qTPMGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SI8Ew3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SI8EwXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_SI8EwnCoEdq2Lvk-NX0TGA" operationName="getDuration"/>
      </eAnnotations>
      <ownedRule xmi:id="_SI8Ew3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SI8EwHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SI8ExHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.value.value.oclAsType(Duration)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SI8ExXCoEdq2Lvk-NX0TGA" type="_1qTPMGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SI8ExnCoEdq2Lvk-NX0TGA" name="DurationConstraint">
    <ownedComment xmi:id="_SI8Ex3CoEdq2Lvk-NX0TGA" annotatedElement="_SI8ExnCoEdq2Lvk-NX0TGA">
      <body>A DurationConstraint defines a Constraint that refers to a DurationInterval.</body>
    </ownedComment>
    <generalization xmi:id="_SI8EyHCoEdq2Lvk-NX0TGA" general="_SI8Ez3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SI8EyXCoEdq2Lvk-NX0TGA" name="specification" type="_SIyTwHCoEdq2Lvk-NX0TGA" redefinedProperty="_SI8E0nCoEdq2Lvk-NX0TGA" association="_SJFOwXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SI8EynCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SI8Ey3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SI8EzHCoEdq2Lvk-NX0TGA" annotatedElement="_SI8EyXCoEdq2Lvk-NX0TGA">
        <body>The interval constraining the duration.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SI8EzXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SI8EznCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SI8Ez3CoEdq2Lvk-NX0TGA" name="IntervalConstraint">
    <ownedComment xmi:id="_SI8E0HCoEdq2Lvk-NX0TGA" annotatedElement="_SI8Ez3CoEdq2Lvk-NX0TGA">
      <body>A IntervalConstraint defines a Constraint that refers to an Interval.</body>
    </ownedComment>
    <generalization xmi:id="_SI8E0XCoEdq2Lvk-NX0TGA" general="_R0OZAHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SI8E0nCoEdq2Lvk-NX0TGA" name="specification" type="_SI8E2HCoEdq2Lvk-NX0TGA" redefinedProperty="_R0OZDXCoEdq2Lvk-NX0TGA" association="_SJFOyHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SI8E03CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SI8E1HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SI8E1XCoEdq2Lvk-NX0TGA" annotatedElement="_SI8E0nCoEdq2Lvk-NX0TGA">
        <body>A condition that must be true when evaluated in order for the constraint to be satisfied.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SI8E1nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SI8E13CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SI8E2HCoEdq2Lvk-NX0TGA" name="Interval">
    <ownedComment xmi:id="_SI8E2XCoEdq2Lvk-NX0TGA" annotatedElement="_SI8E2HCoEdq2Lvk-NX0TGA">
      <body>An Interval defines the range between two value specifications.</body>
    </ownedComment>
    <generalization xmi:id="_SI8E2nCoEdq2Lvk-NX0TGA" general="_RzLQJ3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SI8E23CoEdq2Lvk-NX0TGA" name="min" type="_RzLQJ3CoEdq2Lvk-NX0TGA" association="_SJFOxHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SI8E3HCoEdq2Lvk-NX0TGA" annotatedElement="_SI8E23CoEdq2Lvk-NX0TGA">
        <body>Refers to the ValueSpecification denoting the minimum value of the range.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SI8E3XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SI8E3nCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SI8E33CoEdq2Lvk-NX0TGA" name="max" type="_RzLQJ3CoEdq2Lvk-NX0TGA" association="_SJFOxnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SI8E4HCoEdq2Lvk-NX0TGA" annotatedElement="_SI8E33CoEdq2Lvk-NX0TGA">
        <body>Refers to the ValueSpecification denoting the maximum value of the range.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SI8E4XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SI8E4nCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SI8E6HCoEdq2Lvk-NX0TGA" name="A_event_timeExpression" memberEnd="_SIfY33CoEdq2Lvk-NX0TGA _SI8E6XCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SI8E6XCoEdq2Lvk-NX0TGA" type="_QqkiIGvuEdqG6fBIPwe-mw" association="_SI8E6HCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJFOsHCoEdq2Lvk-NX0TGA" name="A_event_duration" memberEnd="_SIoixXCoEdq2Lvk-NX0TGA _SJFOsXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJFOsXCoEdq2Lvk-NX0TGA" type="_1qTPMGvsEdqG6fBIPwe-mw" association="_SJFOsHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJFOsnCoEdq2Lvk-NX0TGA" name="A_min_durationInterval" memberEnd="_SJFOtHCoEdq2Lvk-NX0TGA _SIyTw3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJFOs3CoEdq2Lvk-NX0TGA" general="_SJFOxHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJFOtHCoEdq2Lvk-NX0TGA" type="_SIyTwHCoEdq2Lvk-NX0TGA" redefinedProperty="_SJFOxXCoEdq2Lvk-NX0TGA" association="_SJFOsnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJFOtXCoEdq2Lvk-NX0TGA" name="A_max_durationInterval" memberEnd="_SJFOt3CoEdq2Lvk-NX0TGA _SIyTxXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJFOtnCoEdq2Lvk-NX0TGA" general="_SJFOxnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJFOt3CoEdq2Lvk-NX0TGA" type="_SIyTwHCoEdq2Lvk-NX0TGA" redefinedProperty="_SJFOx3CoEdq2Lvk-NX0TGA" association="_SJFOtXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJFOuHCoEdq2Lvk-NX0TGA" name="A_max_timeInterval" memberEnd="_SJFOunCoEdq2Lvk-NX0TGA _SIyT03CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJFOuXCoEdq2Lvk-NX0TGA" general="_SJFOxnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJFOunCoEdq2Lvk-NX0TGA" type="_SIyT0HCoEdq2Lvk-NX0TGA" redefinedProperty="_SJFOx3CoEdq2Lvk-NX0TGA" association="_SJFOuHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJFOu3CoEdq2Lvk-NX0TGA" name="A_min_timeInterval" memberEnd="_SIyT1XCoEdq2Lvk-NX0TGA _SJFOvXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJFOvHCoEdq2Lvk-NX0TGA" general="_SJFOxHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJFOvXCoEdq2Lvk-NX0TGA" type="_SIyT0HCoEdq2Lvk-NX0TGA" redefinedProperty="_SJFOxXCoEdq2Lvk-NX0TGA" association="_SJFOu3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJFOvnCoEdq2Lvk-NX0TGA" name="A_specification_timeConstraint" memberEnd="_SIyTynCoEdq2Lvk-NX0TGA _SJFOwHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJFOv3CoEdq2Lvk-NX0TGA" general="_SJFOyHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJFOwHCoEdq2Lvk-NX0TGA" type="_SIyTx3CoEdq2Lvk-NX0TGA" redefinedProperty="_SJFOynCoEdq2Lvk-NX0TGA" association="_SJFOvnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJFOwXCoEdq2Lvk-NX0TGA" name="A_specification_durationConstraint" memberEnd="_SI8EyXCoEdq2Lvk-NX0TGA _SJFOw3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJFOwnCoEdq2Lvk-NX0TGA" general="_SJFOyHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJFOw3CoEdq2Lvk-NX0TGA" type="_SI8ExnCoEdq2Lvk-NX0TGA" redefinedProperty="_SJFOynCoEdq2Lvk-NX0TGA" association="_SJFOwXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJFOxHCoEdq2Lvk-NX0TGA" name="A_min_interval" memberEnd="_SI8E23CoEdq2Lvk-NX0TGA _SJFOxXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJFOxXCoEdq2Lvk-NX0TGA" type="_SI8E2HCoEdq2Lvk-NX0TGA" association="_SJFOxHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJFOxnCoEdq2Lvk-NX0TGA" name="A_max_interval" memberEnd="_SI8E33CoEdq2Lvk-NX0TGA _SJFOx3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJFOx3CoEdq2Lvk-NX0TGA" type="_SI8E2HCoEdq2Lvk-NX0TGA" association="_SJFOxnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJFOyHCoEdq2Lvk-NX0TGA" name="A_specification_intervalConstraint" memberEnd="_SI8E0nCoEdq2Lvk-NX0TGA _SJFOynCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJFOyXCoEdq2Lvk-NX0TGA" general="_R2wImHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJFOynCoEdq2Lvk-NX0TGA" type="_SI8Ez3CoEdq2Lvk-NX0TGA" association="_SJFOyHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJO_sHCoEdq2Lvk-NX0TGA" name="A_now_timeObservationAction" memberEnd="_SJO_snCoEdq2Lvk-NX0TGA _SIoiznCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJO_sXCoEdq2Lvk-NX0TGA" general="_SIL20HCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJO_snCoEdq2Lvk-NX0TGA" type="_VMC8gGveEdq4DLWZOhbdEA" redefinedProperty="_SIL20nCoEdq2Lvk-NX0TGA" association="_SJO_sHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJO_s3CoEdq2Lvk-NX0TGA" name="A_duration_durationObservationAction" memberEnd="_SJO_tXCoEdq2Lvk-NX0TGA _SIyT3HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJO_tHCoEdq2Lvk-NX0TGA" general="_SIL20HCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJO_tXCoEdq2Lvk-NX0TGA" type="_Wrt_gGveEdq4DLWZOhbdEA" redefinedProperty="_SIL20nCoEdq2Lvk-NX0TGA" association="_SJO_s3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJO_tnCoEdq2Lvk-NX0TGA" name="OpaqueAction">
    <ownedComment xmi:id="_SJO_t3CoEdq2Lvk-NX0TGA" annotatedElement="_SJO_tnCoEdq2Lvk-NX0TGA">
      <body>An action with implementation-specific semantics.</body>
    </ownedComment>
    <generalization xmi:id="_SJO_uHCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SJO_uXCoEdq2Lvk-NX0TGA" name="body" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" association="_SJrronCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SJO_unCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SJO_u3CoEdq2Lvk-NX0TGA" isUnsettable="true" xmlFeatureKind="Element"/>
      </eAnnotations>
      <ownedComment xmi:id="_SJO_vHCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_uXCoEdq2Lvk-NX0TGA">
        <body>Specifies the action in one or more languages.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJO_vXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJO_vnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJO_v3CoEdq2Lvk-NX0TGA" name="language" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" association="_SJrrpHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SJO_wHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SJO_wXCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SJO_wnCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_v3CoEdq2Lvk-NX0TGA">
        <body>Languages the body strings use, in the same order as the body strings</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJO_w3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJO_xHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJO_xXCoEdq2Lvk-NX0TGA" name="inputValue" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SJrrpnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJO_xnCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_xXCoEdq2Lvk-NX0TGA">
        <body>Provides input to the action.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJO_x3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJO_yHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJO_yXCoEdq2Lvk-NX0TGA" name="outputValue" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SJrrqXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJO_ynCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_yXCoEdq2Lvk-NX0TGA">
        <body>Takes output from the action.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJO_y3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJO_zHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJO_0HCoEdq2Lvk-NX0TGA" name="ValuePin">
    <ownedComment xmi:id="_SJO_0XCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_0HCoEdq2Lvk-NX0TGA">
      <body>A value pin is an input pin that provides a value by evaluating a value specification.</body>
    </ownedComment>
    <ownedRule xmi:id="_SJO_0nCoEdq2Lvk-NX0TGA" name="compatible_type" constrainedElement="_SJO_0HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJO_03CoEdq2Lvk-NX0TGA" annotatedElement="_SJO_0nCoEdq2Lvk-NX0TGA">
        <body>The type of value specification must be compatible with the type of the value pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJO_1HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SJO_1XCoEdq2Lvk-NX0TGA" general="_SJO_33CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SJO_1nCoEdq2Lvk-NX0TGA" name="value" type="_RzLQJ3CoEdq2Lvk-NX0TGA" association="_SJh6vnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SJO_13CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SJO_2HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SJO_2XCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_1nCoEdq2Lvk-NX0TGA">
        <body>Value that the pin will provide.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJO_2nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJO_23CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJO_3HCoEdq2Lvk-NX0TGA" name="OutputPin">
    <ownedComment xmi:id="_SJO_3XCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_3HCoEdq2Lvk-NX0TGA">
      <body>An output pin is a pin that holds output values produced by an action.</body>
    </ownedComment>
    <generalization xmi:id="_SJO_3nCoEdq2Lvk-NX0TGA" general="_SJO_zXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJO_33CoEdq2Lvk-NX0TGA" name="InputPin">
    <ownedComment xmi:id="_SJO_4HCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_33CoEdq2Lvk-NX0TGA">
      <body>An input pin is a pin that holds input values to be consumed by an action.</body>
    </ownedComment>
    <generalization xmi:id="_SJO_4XCoEdq2Lvk-NX0TGA" general="_SJO_zXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJYJoHCoEdq2Lvk-NX0TGA" name="CallAction" isAbstract="true">
    <ownedComment xmi:id="_SJYJoXCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJoHCoEdq2Lvk-NX0TGA">
      <body>CallAction is an abstract class for actions that invoke behavior and receive return values.</body>
    </ownedComment>
    <ownedRule xmi:id="_SJYJonCoEdq2Lvk-NX0TGA" name="synchronous_call" constrainedElement="_SJYJoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJo3CoEdq2Lvk-NX0TGA" annotatedElement="_SJYJonCoEdq2Lvk-NX0TGA">
        <body>Only synchronous call actions can have result pins.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJpHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJYJpXCoEdq2Lvk-NX0TGA" name="number_and_order" constrainedElement="_SJYJoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJpnCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJpXCoEdq2Lvk-NX0TGA">
        <body>The number and order of argument pins must be the same as the number and order of parameters of the invoked behavior or behavioral feature. Pins are matched to parameters by order.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJp3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJYJqHCoEdq2Lvk-NX0TGA" name="type_ordering_multiplicity" constrainedElement="_SJYJoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJqXCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJqHCoEdq2Lvk-NX0TGA">
        <body>The type, ordering, and multiplicity of an argument pin must be the same as the corresponding parameter of the behavior or behavioral feature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJqnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SJYJq3CoEdq2Lvk-NX0TGA" general="_SJO_4nCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SJYJrHCoEdq2Lvk-NX0TGA" name="isSynchronous" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SJYJrXCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJrHCoEdq2Lvk-NX0TGA">
        <body>If true, the call is synchronous and the caller waits for completion of the invoked behavior.

If false, the call is asynchronous and the caller proceeds immediately and does not expect a return values.

</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SJYJrnCoEdq2Lvk-NX0TGA" value="true"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJYJr3CoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" isOrdered="true" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SJh6rnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SJYJsHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SJYJsXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SJYJsnCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJr3CoEdq2Lvk-NX0TGA">
        <body>A list of output pins where the results of performing the invocation are placed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJYJs3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJYJtHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJYJtXCoEdq2Lvk-NX0TGA" name="SendSignalAction">
    <ownedComment xmi:id="_SJYJtnCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJtXCoEdq2Lvk-NX0TGA">
      <body>SendSignalAction is an action that creates a signal instance from its inputs, and transmits it to the target object, where it may cause the firing of a state machine transition or the execution of an activity. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor. If the input is already a signal instance, use SendObjectAction.</body>
    </ownedComment>
    <ownedRule xmi:id="_SJYJt3CoEdq2Lvk-NX0TGA" name="number_order" constrainedElement="_SJYJtXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJuHCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJt3CoEdq2Lvk-NX0TGA">
        <body>The number and order of argument pins must be the same as the number and order of attributes in the signal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJuXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJYJunCoEdq2Lvk-NX0TGA" name="type_ordering_multiplicity" constrainedElement="_SJYJtXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJu3CoEdq2Lvk-NX0TGA" annotatedElement="_SJYJunCoEdq2Lvk-NX0TGA">
        <body>The type, ordering, and multiplicity of an argument pin must be the same as the corresponding attribute of the signal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJvHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SJYJvXCoEdq2Lvk-NX0TGA" general="_SJO_4nCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SJYJvnCoEdq2Lvk-NX0TGA" name="target" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SJh6pXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SJYJv3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SJYJwHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SJYJwXCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJvnCoEdq2Lvk-NX0TGA">
        <body>The target object to which the signal is sent.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJYJwnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJYJw3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJYJxHCoEdq2Lvk-NX0TGA" name="signal" type="_SGP9KnCoEdq2Lvk-NX0TGA" association="_SJh6qnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJxXCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJxHCoEdq2Lvk-NX0TGA">
        <body>The type of signal transmitted to the target object.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJYJxnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJYJx3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJYJyHCoEdq2Lvk-NX0TGA" name="CallOperationAction">
    <ownedComment xmi:id="_SJYJyXCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJyHCoEdq2Lvk-NX0TGA">
      <body>CallOperationAction is an action that transmits an operation call request to the target object, where it may cause the invocation of associated behavior. The argument values of the action are available to the execution of the invoked behavior. If the action is marked synchronous, the execution of the call operation action waits until the execution of the invoked behavior completes and a reply transmission is returned to the caller; otherwise execution of the action is complete when the invocation of the operation is established and the execution of the invoked operation proceeds concurrently with the execution of the calling behavior. Any values returned as part of the reply transmission are put on the result output pins of the call operation action. Upon receipt of the reply transmission, execution of the call operation action is complete.</body>
    </ownedComment>
    <ownedRule xmi:id="_SJYJynCoEdq2Lvk-NX0TGA" name="argument_pin_equal_parameter" constrainedElement="_SJYJyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJy3CoEdq2Lvk-NX0TGA" annotatedElement="_SJYJynCoEdq2Lvk-NX0TGA">
        <body>The number of argument pins and the number of owned parameters of the operation of type in and in-out must be equal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJzHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJYJzXCoEdq2Lvk-NX0TGA" name="result_pin_equal_parameter" constrainedElement="_SJYJyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJznCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJzXCoEdq2Lvk-NX0TGA">
        <body>The number of result pins and the number of owned parameters of the operation of type return, out, and in-out must be equal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJz3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJYJ0HCoEdq2Lvk-NX0TGA" name="type_ordering_multiplicity" constrainedElement="_SJYJyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJ0XCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ0HCoEdq2Lvk-NX0TGA">
        <body>The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding owned parameter of the operation.

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJ0nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJYJ03CoEdq2Lvk-NX0TGA" name="type_target_pin" constrainedElement="_SJYJyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJ1HCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ03CoEdq2Lvk-NX0TGA">
        <body>The type of the target pin must be the same as the type that owns the operation.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJ1XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SJYJ1nCoEdq2Lvk-NX0TGA" general="_SJYJoHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SJYJ13CoEdq2Lvk-NX0TGA" name="operation" type="_M4X2IGveEdq4DLWZOhbdEA" association="_SJYKCnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJ2HCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ13CoEdq2Lvk-NX0TGA">
        <body>The operation to be invoked by the action execution.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJYJ2XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJYJ2nCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJYJ23CoEdq2Lvk-NX0TGA" name="target" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SJh6oHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SJYJ3HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SJYJ3XCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SJYJ3nCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ23CoEdq2Lvk-NX0TGA">
        <body>The target object to which the request is sent. The classifier of the target object is used to dynamically determine a behavior to invoke. This object constitutes the context of the execution of the operation.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJYJ33CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJYJ4HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJYJ4XCoEdq2Lvk-NX0TGA" name="CallBehaviorAction">
    <ownedComment xmi:id="_SJYJ4nCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ4XCoEdq2Lvk-NX0TGA">
      <body>CallBehaviorAction is a call action that invokes a behavior directly rather than invoking a behavioral feature that, in turn, results in the invocation of that behavior. The argument values of the action are available to the execution of the invoked behavior. For synchronous calls the execution of the call behavior action waits until the execution of the invoked behavior completes and a result is returned on its output pin. The action completes immediately without a result, if the call is asynchronous. In particular, the invoked behavior may be an activity.</body>
    </ownedComment>
    <ownedRule xmi:id="_SJYJ43CoEdq2Lvk-NX0TGA" name="argument_pin_equal_parameter" constrainedElement="_SJYJ4XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJ5HCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ43CoEdq2Lvk-NX0TGA">
        <body>The number of argument pins and the number of parameters of the behavior of type in and in-out must be equal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJ5XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJYJ5nCoEdq2Lvk-NX0TGA" name="result_pin_equal_parameter" constrainedElement="_SJYJ4XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJ53CoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ5nCoEdq2Lvk-NX0TGA">
        <body>The number of result pins and the number of parameters of the behavior of type return, out, and in-out must be equal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJ6HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJYJ6XCoEdq2Lvk-NX0TGA" name="type_ordering_multiplicity" constrainedElement="_SJYJ4XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJ6nCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ6XCoEdq2Lvk-NX0TGA">
        <body>The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding parameter of the behavior.

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJYJ63CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SJYJ7HCoEdq2Lvk-NX0TGA" general="_SJYJoHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SJYJ7XCoEdq2Lvk-NX0TGA" name="behavior" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SJYKBnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJYJ7nCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ7XCoEdq2Lvk-NX0TGA">
        <body>The invoked behavior. It must be capable of accepting and returning control.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJYJ73CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJYJ8HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJYKBnCoEdq2Lvk-NX0TGA" name="A_behavior_callBehaviorAction" memberEnd="_SJYJ7XCoEdq2Lvk-NX0TGA _SJYKB3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJYKB3CoEdq2Lvk-NX0TGA" type="_SJYJ4XCoEdq2Lvk-NX0TGA" association="_SJYKBnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJYKCHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJYKCXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJYKCnCoEdq2Lvk-NX0TGA" name="A_operation_callOperationAction" memberEnd="_SJYJ13CoEdq2Lvk-NX0TGA _SJYKC3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJYKC3CoEdq2Lvk-NX0TGA" type="_SJYJyHCoEdq2Lvk-NX0TGA" association="_SJYKCnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJYKDHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJYKDXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJh6oHCoEdq2Lvk-NX0TGA" name="A_target_callOperationAction" memberEnd="_SJYJ23CoEdq2Lvk-NX0TGA _SJh6onCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJh6oXCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJh6onCoEdq2Lvk-NX0TGA" type="_SJYJyHCoEdq2Lvk-NX0TGA" association="_SJh6oHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJh6o3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJh6pHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJh6pXCoEdq2Lvk-NX0TGA" name="A_target_sendSignalAction" memberEnd="_SJYJvnCoEdq2Lvk-NX0TGA _SJh6p3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJh6pnCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJh6p3CoEdq2Lvk-NX0TGA" type="_SJYJtXCoEdq2Lvk-NX0TGA" association="_SJh6pXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJh6qHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJh6qXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJh6qnCoEdq2Lvk-NX0TGA" name="A_signal_sendSignalAction" memberEnd="_SJh6q3CoEdq2Lvk-NX0TGA _SJYJxHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJh6q3CoEdq2Lvk-NX0TGA" type="_SJYJtXCoEdq2Lvk-NX0TGA" association="_SJh6qnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJh6rHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJh6rXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJh6rnCoEdq2Lvk-NX0TGA" name="A_result_callAction" memberEnd="_SJYJr3CoEdq2Lvk-NX0TGA _SJh6sHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJh6r3CoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJh6sHCoEdq2Lvk-NX0TGA" type="_SJYJoHCoEdq2Lvk-NX0TGA" redefinedProperty="_SJh6tnCoEdq2Lvk-NX0TGA" association="_SJh6rnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJh6sXCoEdq2Lvk-NX0TGA" name="A_argument_invocationAction" memberEnd="_SJO_5XCoEdq2Lvk-NX0TGA _SJh6s3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJh6snCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJh6s3CoEdq2Lvk-NX0TGA" type="_SJO_4nCoEdq2Lvk-NX0TGA" redefinedProperty="_SJh6u3CoEdq2Lvk-NX0TGA" association="_SJh6sXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJh6tHCoEdq2Lvk-NX0TGA" name="A_action_output" memberEnd="_SJh6tnCoEdq2Lvk-NX0TGA _SJYJ9HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJh6tXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJh6tnCoEdq2Lvk-NX0TGA" type="_SJYJ8XCoEdq2Lvk-NX0TGA" association="_SJh6tHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJh6t3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJh6uHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJh6uXCoEdq2Lvk-NX0TGA" name="A_action_input" memberEnd="_SJh6u3CoEdq2Lvk-NX0TGA _SJYJ-nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJh6unCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJh6u3CoEdq2Lvk-NX0TGA" type="_SJYJ8XCoEdq2Lvk-NX0TGA" association="_SJh6uXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJh6vHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJh6vXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJh6vnCoEdq2Lvk-NX0TGA" name="A_value_valuePin" memberEnd="_SJO_1nCoEdq2Lvk-NX0TGA _SJh6v3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJh6v3CoEdq2Lvk-NX0TGA" type="_SJO_0HCoEdq2Lvk-NX0TGA" association="_SJh6vnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJh6wHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJh6wXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJrroHCoEdq2Lvk-NX0TGA" name="A_context_action" isDerived="true" memberEnd="_SJrroXCoEdq2Lvk-NX0TGA _SJYKAHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJrroXCoEdq2Lvk-NX0TGA" type="_SJYJ8XCoEdq2Lvk-NX0TGA" association="_SJrroHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJrronCoEdq2Lvk-NX0TGA" name="A_body_opaqueAction" memberEnd="_SJO_uXCoEdq2Lvk-NX0TGA _SJrro3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJrro3CoEdq2Lvk-NX0TGA" type="_SJO_tnCoEdq2Lvk-NX0TGA" association="_SJrronCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJrrpHCoEdq2Lvk-NX0TGA" name="A_language_opaqueAction" memberEnd="_SJO_v3CoEdq2Lvk-NX0TGA _SJrrpXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJrrpXCoEdq2Lvk-NX0TGA" type="_SJO_tnCoEdq2Lvk-NX0TGA" association="_SJrrpHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJrrpnCoEdq2Lvk-NX0TGA" name="A_inputValue_opaqueAction" memberEnd="_SJO_xXCoEdq2Lvk-NX0TGA _SJrrqHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJrrp3CoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJrrqHCoEdq2Lvk-NX0TGA" type="_SJO_tnCoEdq2Lvk-NX0TGA" redefinedProperty="_SJh6u3CoEdq2Lvk-NX0TGA" association="_SJrrpnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJrrqXCoEdq2Lvk-NX0TGA" name="A_outputValue_opaqueAction" memberEnd="_SJO_yXCoEdq2Lvk-NX0TGA _SJrrq3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SJrrqnCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SJrrq3CoEdq2Lvk-NX0TGA" type="_SJO_tnCoEdq2Lvk-NX0TGA" redefinedProperty="_SJh6tnCoEdq2Lvk-NX0TGA" association="_SJrrqXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJO_4nCoEdq2Lvk-NX0TGA" name="InvocationAction" isAbstract="true">
    <ownedComment xmi:id="_SJO_43CoEdq2Lvk-NX0TGA" annotatedElement="_SJO_4nCoEdq2Lvk-NX0TGA">
      <body>Invocation is an abstract class for the various actions that invoke behavior.</body>
    </ownedComment>
    <ownedComment xmi:id="_SJrrrHCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_4nCoEdq2Lvk-NX0TGA">
      <body>In addition to targeting an object, invocation actions can also invoke behavioral features on ports from where the invocation requests are routed onwards on links deriving from attached connectors. Invocation actions may also be sent to a target via a given port, either on the sending object or on another object.</body>
    </ownedComment>
    <ownedRule xmi:id="_SJrrrXCoEdq2Lvk-NX0TGA" name="on_port_receiver" constrainedElement="_SJO_4nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJrrrnCoEdq2Lvk-NX0TGA" annotatedElement="_SJrrrXCoEdq2Lvk-NX0TGA">
        <body>The onPort must be a port on the receiver object.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJrrr3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SJO_5HCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SJO_5XCoEdq2Lvk-NX0TGA" name="argument" type="_SJO_33CoEdq2Lvk-NX0TGA" isOrdered="true" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SJh6sXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SJO_5nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SJO_53CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SJO_6HCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_5XCoEdq2Lvk-NX0TGA">
        <body>Specification of the ordered set of argument values that appears during execution.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJO_6XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJO_6nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJrrsHCoEdq2Lvk-NX0TGA" name="onPort" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_SJ01lHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJrrsXCoEdq2Lvk-NX0TGA" annotatedElement="_SJrrsHCoEdq2Lvk-NX0TGA">
        <body>A optional port of the receiver object on which the behavioral feature is invoked.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJrrsnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJrrs3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SF9CTnCoEdq2Lvk-NX0TGA" name="Trigger">
    <ownedComment xmi:id="_SF9CT3CoEdq2Lvk-NX0TGA" annotatedElement="_SF9CTnCoEdq2Lvk-NX0TGA">
      <body>A trigger specifies an event that may cause the execution of an associated behavior. An event is often ultimately caused by the execution of an action, but need not be.</body>
    </ownedComment>
    <ownedComment xmi:id="_SJrrtHCoEdq2Lvk-NX0TGA" annotatedElement="_SF9CTnCoEdq2Lvk-NX0TGA">
      <body>A trigger specification may be qualified by the port on which the event occurred.</body>
    </ownedComment>
    <generalization xmi:id="_SF9CUHCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SF9CUXCoEdq2Lvk-NX0TGA" name="event" type="_SGZuJnCoEdq2Lvk-NX0TGA" association="_SGspFXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SF9CUnCoEdq2Lvk-NX0TGA" annotatedElement="_SF9CUXCoEdq2Lvk-NX0TGA">
        <body>The event that causes the trigger.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SF9CU3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SF9CVHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJrrtXCoEdq2Lvk-NX0TGA" name="port" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_SJ01kHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJrrtnCoEdq2Lvk-NX0TGA" annotatedElement="_SJrrtXCoEdq2Lvk-NX0TGA">
        <body>A optional port of the receiver object on which the behavioral feature is invoked.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJrrt3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJrruHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJ01kHCoEdq2Lvk-NX0TGA" name="A_port_trigger" memberEnd="_SJrrtXCoEdq2Lvk-NX0TGA _SJ01kXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJ01kXCoEdq2Lvk-NX0TGA" type="_SF9CTnCoEdq2Lvk-NX0TGA" association="_SJ01kHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJ01knCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJ01k3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJ01lHCoEdq2Lvk-NX0TGA" name="A_onPort_invocationAction" memberEnd="_SJ01lXCoEdq2Lvk-NX0TGA _SJrrsHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SJ01lXCoEdq2Lvk-NX0TGA" type="_SJO_4nCoEdq2Lvk-NX0TGA" association="_SJ01lHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJ01lnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJ01l3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJ01mHCoEdq2Lvk-NX0TGA" name="GeneralizationSet">
    <ownedComment xmi:id="_SJ01mXCoEdq2Lvk-NX0TGA" annotatedElement="_SJ01mHCoEdq2Lvk-NX0TGA">
      <body>Each Generalization is a binary relationship that relates a specific Classifier to a more general Classifier (i.e., from a class to its superclasses). Each GeneralizationSet defines a particular set of Generalization relationships that describe the way in which a general Classifier (or superclass) may be divided using specific subtypes. For example, a GeneralizationSet could define a partitioning of the class Person into two subclasses: Male Person and Female Person. Here, the GeneralizationSet would associate two instances of Generalization. Both instances would have Person as the general classifier, however one Generalization would involve Male Person as the specific Classifier and the other would involve Female Person as the specific classifier. In other words, the class Person can here be said to be partitioned into two subclasses: Male Person and Female Person. Person could also be divided into North American Person, Asian Person, European Person, or something else. This collection of subsets would  define a different GeneralizationSet that would associate with three other Generalization relationships. All three would have Person as the general Classifier; only the specific classifiers would differ: i.e., North American Person, Asian Person, and European Person.</body>
    </ownedComment>
    <ownedRule xmi:id="_SJ01mnCoEdq2Lvk-NX0TGA" name="generalization_same_classifier" constrainedElement="_SJ01mHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJ01m3CoEdq2Lvk-NX0TGA" annotatedElement="_SJ01mnCoEdq2Lvk-NX0TGA">
        <body>Every Generalization associated with a particular GeneralizationSet must have the same general Classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJ01nHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>generalization->collect(g | g.general)->asSet()->size() &lt;= 1</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJ01nXCoEdq2Lvk-NX0TGA" name="maps_to_generalization_set" constrainedElement="_SJ01mHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJ01nnCoEdq2Lvk-NX0TGA" annotatedElement="_SJ01nXCoEdq2Lvk-NX0TGA">
        <body>The Classifier that maps to a GeneralizationSet may neither be a specific nor a general Classifier in any of the Generalization relationships defined for that GeneralizationSet. In other words, a power type may not be an instance of itself nor may its instances be its subclasses.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJ01n3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SJ01oHCoEdq2Lvk-NX0TGA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SJ01oXCoEdq2Lvk-NX0TGA" name="isCovering" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SJ01onCoEdq2Lvk-NX0TGA" annotatedElement="_SJ01oXCoEdq2Lvk-NX0TGA">
        <body>Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet. For example, Person could have two Generalization relationships each with a different specific Classifier: Male Person and Female Person. This GeneralizationSet would be covering because every instance of Person would be an instance of Male Person or Female Person. In contrast, Person could have a three Generalization relationships involving three specific Classifiers: North American Person, Asian Person, and European Person. This GeneralizationSet would not be covering because there are instances of Person for which these three specific Classifiers do not apply. The first example, then, could be read: any Person would be specialized as either being a Male Person or a Female Personand nothing else; the second could be read: any Person would be specialized as being North American Person, Asian Person, European Person, or something else.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SJ01o3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJ01pHCoEdq2Lvk-NX0TGA" name="isDisjoint" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SJ01pXCoEdq2Lvk-NX0TGA" annotatedElement="_SJ01pHCoEdq2Lvk-NX0TGA">
        <body>Indicates whether or not the set of specific Classifiers in a Generalization relationship have instance in common. If isDisjoint is true, the specific Classifiers for a particular GeneralizationSet have no members in common; that is, their intersection is empty. If isDisjoint is false, the specific Classifiers in a particular GeneralizationSet have one or more members in common; that is, their intersection is not empty. For example, Person could have two Generalization relationships, each with the different specific Classifier: Manager or Staff. This would be disjoint because every instance of Person must either be a Manager or Staff. In contrast, Person could have two Generalization relationships involving two specific (and non-covering) Classifiers: Sales Person and Manager. This GeneralizationSet would not be disjoint because there are instances of Person which can be a Sales Person and a Manager.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SJ01pnCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJ01p3CoEdq2Lvk-NX0TGA" name="powertype" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SJ-mmHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJ01qHCoEdq2Lvk-NX0TGA" annotatedElement="_SJ01p3CoEdq2Lvk-NX0TGA">
        <body>Designates the Classifier that is defined as the power type for the associated GeneralizationSet.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJ01qXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJ01qnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJ01q3CoEdq2Lvk-NX0TGA" name="generalization" type="_C7AF4GwREdq14q0ETb1t3g" association="_SJ-mmXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJ01rHCoEdq2Lvk-NX0TGA" annotatedElement="_SJ01q3CoEdq2Lvk-NX0TGA">
        <body>Designates the instances of Generalization which are members of a given GeneralizationSet.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJ01rXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJ01rnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_C7AF4GwREdq14q0ETb1t3g" name="Generalization">
    <ownedComment xmi:id="_R6xs9nCoEdq2Lvk-NX0TGA" annotatedElement="_C7AF4GwREdq14q0ETb1t3g">
      <body>A generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier.

A generalization can be designated as being a member of a particular generalization set.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SJ-mkHCoEdq2Lvk-NX0TGA" annotatedElement="_C7AF4GwREdq14q0ETb1t3g">
      <body>A generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier.



</body>
    </ownedComment>
    <ownedRule xmi:id="_SJ-mkXCoEdq2Lvk-NX0TGA" name="generalization_same_classifier" constrainedElement="_C7AF4GwREdq14q0ETb1t3g">
      <ownedComment xmi:id="_SJ-mknCoEdq2Lvk-NX0TGA" annotatedElement="_SJ-mkXCoEdq2Lvk-NX0TGA">
        <body>Every Generalization associated with a given GeneralizationSet must have the same general Classifier. That is, all Generalizations for a particular GeneralizationSet must have the same superclass.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJ-mk3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_R6xs93CoEdq2Lvk-NX0TGA" general="_Rx-9UHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R6xs-HCoEdq2Lvk-NX0TGA" name="isSubstitutable" type="_UdivYGvsEdqG6fBIPwe-mw">
      <eAnnotations xmi:id="_R6xs-XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R6xs-nCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R6xs-3CoEdq2Lvk-NX0TGA" annotatedElement="_R6xs-HCoEdq2Lvk-NX0TGA">
        <body>Indicates whether the specific classifier can be used wherever the general classifier can be used. If true, the execution traces of the specific classifier will be a superset of the execution traces of the general classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6xs_HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6xs_XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R6xs_nCoEdq2Lvk-NX0TGA" name="specific" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_Rx-9U3CoEdq2Lvk-NX0TGA _Rx-9bHCoEdq2Lvk-NX0TGA" association="_SAJVIHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R6xs_3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R6xtAHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R6xtAXCoEdq2Lvk-NX0TGA" annotatedElement="_R6xs_nCoEdq2Lvk-NX0TGA">
        <body>References the specializing classifier in the Generalization relationship.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6xtAnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6xtA3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R6xtBHCoEdq2Lvk-NX0TGA" name="general" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_Rx-9WXCoEdq2Lvk-NX0TGA" association="_SAJVI3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R6xtBXCoEdq2Lvk-NX0TGA" annotatedElement="_R6xtBHCoEdq2Lvk-NX0TGA">
        <body>References the general classifier in the Generalization relationship.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6xtBnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6xtB3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJ-mlHCoEdq2Lvk-NX0TGA" name="generalizationSet" type="_SJ01mHCoEdq2Lvk-NX0TGA" association="_SJ-mmXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJ-mlXCoEdq2Lvk-NX0TGA" annotatedElement="_SJ-mlHCoEdq2Lvk-NX0TGA">
        <body>Designates a set in which instances of Generalization is considered members.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJ-mlnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJ-ml3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJ-mmHCoEdq2Lvk-NX0TGA" name="A_powertypeExtent_powertype" memberEnd="_SJ01p3CoEdq2Lvk-NX0TGA _SJ01snCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SJ-mmXCoEdq2Lvk-NX0TGA" name="A_generalizationSet_generalization" memberEnd="_SJ01q3CoEdq2Lvk-NX0TGA _SJ-mlHCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJ-mmnCoEdq2Lvk-NX0TGA" name="InformationItem">
    <ownedComment xmi:id="_SJ-mm3CoEdq2Lvk-NX0TGA" annotatedElement="_SJ-mmnCoEdq2Lvk-NX0TGA">
      <body>An information item is an abstraction of all kinds of information that can be exchanged between objects. It is a kind of classifier intended for representing information in a very abstract way, one which cannot be instantiated. One purpose of InformationItems is to be able to define preliminary models, before having made detailed modeling decisions on types or structures. One other purpose of information items and information flows is to abstract complex models by a less precise but more general representation of the information exchanged betwen entities of a system.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SJ-mnHCoEdq2Lvk-NX0TGA" name="sources_and_targets" constrainedElement="_SJ-mmnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJ-mnXCoEdq2Lvk-NX0TGA" annotatedElement="_SJ-mnHCoEdq2Lvk-NX0TGA">
        <body>The sources and targets of an information item (its related information flows) must designate subsets of the sources and targets of the representation information item, if any.The Classifiers that can realize an information item can only be of the following kind: Class, Interface, InformationItem, Signal, Component.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJ-mnnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.represented->select(p | p->oclIsKindOf(InformationItem))->forAll(p |

  p.informationFlow.source->forAll(q | self.informationFlow.source->include(q)) and

    p.informationFlow.target->forAll(q | self.informationFlow.target->include(q)))) and

      (self.represented->forAll(p | p->oclIsKindOf(Class) or oclIsKindOf(Interface) or

        oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component)))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJ-mn3CoEdq2Lvk-NX0TGA" name="has_no" constrainedElement="_SJ-mmnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJ-moHCoEdq2Lvk-NX0TGA" annotatedElement="_SJ-mn3CoEdq2Lvk-NX0TGA">
        <body>An informationItem has no feature, no generalization, and no associations.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJ-moXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.generalization->isEmpty() and self.feature->isEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJ-monCoEdq2Lvk-NX0TGA" name="not_instantiable" constrainedElement="_SJ-mmnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJ-mo3CoEdq2Lvk-NX0TGA" annotatedElement="_SJ-monCoEdq2Lvk-NX0TGA">
        <body>It is not instantiable.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJ-mpHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>isAbstract</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SJ-mpXCoEdq2Lvk-NX0TGA" general="_6UV2QGwJEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SJ-mpnCoEdq2Lvk-NX0TGA" name="represented" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SKIXvXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJ-mp3CoEdq2Lvk-NX0TGA" annotatedElement="_SJ-mpnCoEdq2Lvk-NX0TGA">
        <body>Determines the classifiers that will specify the structure and nature of the information. An information item represents all its represented classifiers.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJ-mqHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJ-mqXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKIXkHCoEdq2Lvk-NX0TGA" name="InformationFlow">
    <ownedComment xmi:id="_SKIXkXCoEdq2Lvk-NX0TGA" annotatedElement="_SKIXkHCoEdq2Lvk-NX0TGA">
      <body>An information flow specifies that one or more information items circulates from its sources to its targets. Information flows require some kind of information channel for transmitting information items from the source to the destination. An information channel is represented in various ways depending on the nature of its sources and targets. It may be represented by connectors, links, associations, or even dependencies. For example, if the source and destination are parts in some composite structure such as a collaboration, then the information channel is likely to be represented by a connector between them. Or, if the source and target are objects (which are a kind of InstanceSpecification), they may be represented by a link that joins the two, and so on.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKIXknCoEdq2Lvk-NX0TGA" name="sources_and_targets_kind" constrainedElement="_SKIXkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKIXk3CoEdq2Lvk-NX0TGA" annotatedElement="_SKIXknCoEdq2Lvk-NX0TGA">
        <body>The sources and targets of the information flow can only be one of the following kind: Actor, Node, UseCase, Artifact, Class, Component, Port, Property, Interface, Package, ActivityNode, ActivityPartition and InstanceSpecification except when its classifier is a relationship (i.e. it represents a link).</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKIXlHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.source->forAll(p | p->oclIsKindOf(Actor) or oclIsKindOf(Node) or

  oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or oclIsKindOf(Class) or

  oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or

  oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or

  oclIsKindOf(ActivityPartition) or oclIsKindOf(InstanceSpecification))) and

    (self.target->forAll(p | p->oclIsKindOf(Actor) or oclIsKindOf(Node) or

      oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or oclIsKindOf(Class) or

      oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or

      oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or

      oclIsKindOf(ActivityPartition) or oclIsKindOf(InstanceSpecification)))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKIXlXCoEdq2Lvk-NX0TGA" name="must_conform" constrainedElement="_SKIXkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKIXlnCoEdq2Lvk-NX0TGA" annotatedElement="_SKIXlXCoEdq2Lvk-NX0TGA">
        <body>The sources and targets of the information flow must conform with the sources and targets or conversely the targets and sources of the realization relationships.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKIXl3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKIXmHCoEdq2Lvk-NX0TGA" name="convey_classifiers" constrainedElement="_SKIXkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKIXmXCoEdq2Lvk-NX0TGA" annotatedElement="_SKIXmHCoEdq2Lvk-NX0TGA">
        <body>An information flow can only convey classifiers that are allowed to represent an information item.

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKIXmnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.conveyed.represented->forAll(p | p->oclIsKindOf(Class) or oclIsKindOf(Interface)

  or oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component))</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKIXm3CoEdq2Lvk-NX0TGA" general="_Rx-9UHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SKIXnHCoEdq2Lvk-NX0TGA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SKIXnXCoEdq2Lvk-NX0TGA" name="realization" type="_RzCGUXCoEdq2Lvk-NX0TGA" association="_SKIXuXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKIXnnCoEdq2Lvk-NX0TGA" annotatedElement="_SKIXnXCoEdq2Lvk-NX0TGA">
        <body>Determines which Relationship will realize the specified flow</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXn3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXoHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKIXoXCoEdq2Lvk-NX0TGA" name="conveyed" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SKIXwXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKIXonCoEdq2Lvk-NX0TGA" annotatedElement="_SKIXoXCoEdq2Lvk-NX0TGA">
        <body>Specifies the information items that may circulate on this information flow.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXo3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXpHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKIXpXCoEdq2Lvk-NX0TGA" name="informationSource" type="_csVgUGvtEdqG6fBIPwe-mw" subsettedProperty="_Rx-9U3CoEdq2Lvk-NX0TGA" association="_SKIXxXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKIXpnCoEdq2Lvk-NX0TGA" annotatedElement="_SKIXpXCoEdq2Lvk-NX0TGA">
        <body>Defines from which source the conveyed InformationItems are initiated.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXp3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXqHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKIXqXCoEdq2Lvk-NX0TGA" name="informationTarget" type="_csVgUGvtEdqG6fBIPwe-mw" subsettedProperty="_Rx-9WXCoEdq2Lvk-NX0TGA" association="_SKIXynCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKIXqnCoEdq2Lvk-NX0TGA" annotatedElement="_SKIXqXCoEdq2Lvk-NX0TGA">
        <body>Defines to which target the conveyed InformationItems are directed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXq3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXrHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKIXrXCoEdq2Lvk-NX0TGA" name="realizingActivityEdge" type="_SLwvUnCoEdq2Lvk-NX0TGA" association="_SKIXz3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKIXrnCoEdq2Lvk-NX0TGA" annotatedElement="_SKIXrXCoEdq2Lvk-NX0TGA">
        <body>Determines which ActivityEdges will realize the specified flow.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXr3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXsHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKIXsXCoEdq2Lvk-NX0TGA" name="realizingConnector" type="_SDuNkHCoEdq2Lvk-NX0TGA" association="_SKIX03CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKIXsnCoEdq2Lvk-NX0TGA" annotatedElement="_SKIXsXCoEdq2Lvk-NX0TGA">
        <body>Determines which Connectors will realize the specified flow.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXs3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXtHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKIXtXCoEdq2Lvk-NX0TGA" name="realizingMessage" type="_gfgNwGveEdq4DLWZOhbdEA" association="_SKIX13CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKIXtnCoEdq2Lvk-NX0TGA" annotatedElement="_SKIXtXCoEdq2Lvk-NX0TGA">
        <body>Determines which Messages will realize the specified flow.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXt3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXuHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKIXuXCoEdq2Lvk-NX0TGA" name="A_realization_abstraction" memberEnd="_SKIXnXCoEdq2Lvk-NX0TGA _SKIXunCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SKIXunCoEdq2Lvk-NX0TGA" name="abstraction" type="_SKIXkHCoEdq2Lvk-NX0TGA" association="_SKIXuXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXu3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXvHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKIXvXCoEdq2Lvk-NX0TGA" name="A_represented_representation" memberEnd="_SJ-mpnCoEdq2Lvk-NX0TGA _SKIXvnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SKIXvnCoEdq2Lvk-NX0TGA" name="representation" type="_SJ-mmnCoEdq2Lvk-NX0TGA" association="_SKIXvXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXv3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXwHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKIXwXCoEdq2Lvk-NX0TGA" name="A_conveyed_informationFlow" memberEnd="_SKIXoXCoEdq2Lvk-NX0TGA _SKIXwnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SKIXwnCoEdq2Lvk-NX0TGA" type="_SKIXkHCoEdq2Lvk-NX0TGA" association="_SKIXwXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXw3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXxHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKIXxXCoEdq2Lvk-NX0TGA" name="A_informationSource_informationFlow" memberEnd="_SKIXpXCoEdq2Lvk-NX0TGA _SKIXx3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SKIXxnCoEdq2Lvk-NX0TGA" general="_R2m-r3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SKIXx3CoEdq2Lvk-NX0TGA" type="_SKIXkHCoEdq2Lvk-NX0TGA" association="_SKIXxXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXyHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXyXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKIXynCoEdq2Lvk-NX0TGA" name="A_informationTarget_informationFlow" memberEnd="_SKIXqXCoEdq2Lvk-NX0TGA _SKIXzHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SKIXy3CoEdq2Lvk-NX0TGA" general="_R2m-snCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SKIXzHCoEdq2Lvk-NX0TGA" type="_SKIXkHCoEdq2Lvk-NX0TGA" association="_SKIXynCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIXzXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIXznCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKIXz3CoEdq2Lvk-NX0TGA" name="A_realizingActivityEdge_informationFlow" memberEnd="_SKIX0HCoEdq2Lvk-NX0TGA _SKIXrXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SKIX0HCoEdq2Lvk-NX0TGA" type="_SKIXkHCoEdq2Lvk-NX0TGA" association="_SKIXz3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIX0XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIX0nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKIX03CoEdq2Lvk-NX0TGA" name="A_realizingConnector_informationFlow" memberEnd="_SKIX1HCoEdq2Lvk-NX0TGA _SKIXsXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SKIX1HCoEdq2Lvk-NX0TGA" type="_SKIXkHCoEdq2Lvk-NX0TGA" association="_SKIX03CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIX1XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIX1nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKIX13CoEdq2Lvk-NX0TGA" name="A_realizingMessage_informationFlow" memberEnd="_SKIXtXCoEdq2Lvk-NX0TGA _SKIX2HCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SKIX2HCoEdq2Lvk-NX0TGA" type="_SKIXkHCoEdq2Lvk-NX0TGA" association="_SKIX13CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKIX2XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKIX2nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_NVhqMGv0Edq7X4sGURiZYA" name="Model">
    <ownedComment xmi:id="_SKRhgHCoEdq2Lvk-NX0TGA" annotatedElement="_NVhqMGv0Edq7X4sGURiZYA">
      <body>The Model construct is defined as a Package. It contains a (hierarchical) set of elements that together describe the physical system being modeled. A Model may also contain a set of elements that represents the environment of the system, typically Actors, together with their interrelationships, such as Associations and Dependencies</body>
    </ownedComment>
    <generalization xmi:id="_SKRhgXCoEdq2Lvk-NX0TGA" general="_-cvRAGvzEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SKRhgnCoEdq2Lvk-NX0TGA" name="viewpoint" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <eAnnotations xmi:id="_SKRhg3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SKRhhHCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKRhhXCoEdq2Lvk-NX0TGA" annotatedElement="_SKRhgnCoEdq2Lvk-NX0TGA">
        <body>The name of the viewpoint that is expressed by a model (This name may refer to a profile definition).</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKRhhnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKRhh3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_9nl2EGwREdq14q0ETb1t3g" name="isMetamodel" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="__8c0oGwREdq14q0ETb1t3g" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKRhiHCoEdq2Lvk-NX0TGA" name="VariableAction" isAbstract="true">
    <ownedComment xmi:id="_SKRhiXCoEdq2Lvk-NX0TGA" annotatedElement="_SKRhiHCoEdq2Lvk-NX0TGA">
      <body>VariableAction is an abstract class for actions that operate on a statically specified variable.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKRhinCoEdq2Lvk-NX0TGA" name="scope_of_variable" constrainedElement="_SKRhiHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKRhi3CoEdq2Lvk-NX0TGA" annotatedElement="_SKRhinCoEdq2Lvk-NX0TGA">
        <body>The action must be in the scope of the variable.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKRhjHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.variable.isAccessibleBy(self)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKRhjXCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKRhjnCoEdq2Lvk-NX0TGA" name="variable" type="_SOc243CoEdq2Lvk-NX0TGA" association="_SKbSuXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKRhj3CoEdq2Lvk-NX0TGA" annotatedElement="_SKRhjnCoEdq2Lvk-NX0TGA">
        <body>Variable to be read.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKRhkHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKRhkXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKRhknCoEdq2Lvk-NX0TGA" name="ReadVariableAction">
    <ownedComment xmi:id="_SKRhk3CoEdq2Lvk-NX0TGA" annotatedElement="_SKRhknCoEdq2Lvk-NX0TGA">
      <body>This action reads the values of a variables, in order if the variable is ordered.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKRhlHCoEdq2Lvk-NX0TGA" name="type_and_ordering" constrainedElement="_SKRhknCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKRhlXCoEdq2Lvk-NX0TGA" annotatedElement="_SKRhlHCoEdq2Lvk-NX0TGA">
        <body>The type and ordering of the result output pin of a read-variable action are the same as the type and ordering of the variable.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKRhlnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.type =self.variable.type
and self.result.ordering = self.variable.ordering
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKRhl3CoEdq2Lvk-NX0TGA" name="compatible_multiplicity" constrainedElement="_SKRhknCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKRhmHCoEdq2Lvk-NX0TGA" annotatedElement="_SKRhl3CoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the variable must be compatible with the multiplicity of the output pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKRhmXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.variable.multiplicity.compatibleWith(self.result.multiplicity)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKRhmnCoEdq2Lvk-NX0TGA" general="_SKRhiHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKRhm3CoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SKbSvXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKRhnHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKRhnXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKRhnnCoEdq2Lvk-NX0TGA" annotatedElement="_SKRhm3CoEdq2Lvk-NX0TGA">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKRhn3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKRhoHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKRhoXCoEdq2Lvk-NX0TGA" name="WriteVariableAction" isAbstract="true">
    <ownedComment xmi:id="_SKRhonCoEdq2Lvk-NX0TGA" annotatedElement="_SKRhoXCoEdq2Lvk-NX0TGA">
      <body>A write variable action operates on a variable to modify its values. It has an input pin on which the value that will be added or removed is put. Other aspects of write variable actions are inherited from VariableAction.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKRho3CoEdq2Lvk-NX0TGA" name="same_type" constrainedElement="_SKRhoXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKRhpHCoEdq2Lvk-NX0TGA" annotatedElement="_SKRho3CoEdq2Lvk-NX0TGA">
        <body>The type input pin is the same as the type of the variable.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKRhpXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.value.type = self.variable.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKRhpnCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SKRhoXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKRhp3CoEdq2Lvk-NX0TGA" annotatedElement="_SKRhpnCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKRhqHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.value.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKRhqXCoEdq2Lvk-NX0TGA" general="_SKRhiHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKRhqnCoEdq2Lvk-NX0TGA" name="value" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SKbSwnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKRhq3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKRhrHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKRhrXCoEdq2Lvk-NX0TGA" annotatedElement="_SKRhqnCoEdq2Lvk-NX0TGA">
        <body>Value to be added or removed from the variable.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKRhrnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKRhr3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKRhsHCoEdq2Lvk-NX0TGA" name="ClearVariableAction">
    <ownedComment xmi:id="_SKRhsXCoEdq2Lvk-NX0TGA" annotatedElement="_SKRhsHCoEdq2Lvk-NX0TGA">
      <body>This action removes all values of an variable.</body>
    </ownedComment>
    <generalization xmi:id="_SKRhsnCoEdq2Lvk-NX0TGA" general="_SKRhiHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKbSgHCoEdq2Lvk-NX0TGA" name="AddVariableValueAction">
    <ownedComment xmi:id="_SKbSgXCoEdq2Lvk-NX0TGA" annotatedElement="_SKbSgHCoEdq2Lvk-NX0TGA">
      <body>Variables are potentially multi-valued and ordered, so the action supports specification of insertion points for new values. It also supports the removal of existing values of the variable before the new value is added.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKbSgnCoEdq2Lvk-NX0TGA" name="single_input_pin" constrainedElement="_SKbSgHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKbSg3CoEdq2Lvk-NX0TGA" annotatedElement="_SKbSgnCoEdq2Lvk-NX0TGA">
        <body>Actions adding values to ordered variables must have a single input pin for the insertion point with type UnlimtedNatural and multiplicity of 1..1, otherwise the action has no input pin for the insertion point.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKbShHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>let insertAtPins : Collection = self.insertAt in
if self.variable.ordering = #unordered
then insertAtPins->size() = 0
else let insertAtPin : InputPin = insertAt->asSequence()->first() in
insertAtPins->size() = 1
and insertAtPin.type = UnlimitedNatural
and insertAtPin.multiplicity.is(1,1))
endif
</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKbShXCoEdq2Lvk-NX0TGA" general="_SKRhoXCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKbShnCoEdq2Lvk-NX0TGA" name="isReplaceAll" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SKbSh3CoEdq2Lvk-NX0TGA" annotatedElement="_SKbShnCoEdq2Lvk-NX0TGA">
        <body>Specifies whether existing values of the variable should be removed before adding the new value.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SKbSiHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKbSiXCoEdq2Lvk-NX0TGA" name="insertAt" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SKbSx3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKbSinCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKbSi3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKbSjHCoEdq2Lvk-NX0TGA" annotatedElement="_SKbSiXCoEdq2Lvk-NX0TGA">
        <body>Gives the position at which to insert a new value or move an existing value in ordered variables. The types is UnlimitedINatural, but the value cannot be zero. This pin is omitted for unordered variables.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKbSjXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKbSjnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKbSj3CoEdq2Lvk-NX0TGA" name="RemoveVariableValueAction">
    <ownedComment xmi:id="_SKbSkHCoEdq2Lvk-NX0TGA" annotatedElement="_SKbSj3CoEdq2Lvk-NX0TGA">
      <body>One value is removed from the set of possible variable values. Variables are potentially multi-valued and ordered, and may support duplicates, so the action supports specification of removal points for new values.  It also supports the removal of all duplicate values.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKbSkXCoEdq2Lvk-NX0TGA" name="unlimited_natural" constrainedElement="_SKbSj3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKbSknCoEdq2Lvk-NX0TGA" annotatedElement="_SKbSkXCoEdq2Lvk-NX0TGA">
        <body>Actions removing a value from ordered nonunique variables must have a single removeAt input pin if isRemoveDuplicates is false. It must be of type UnlimitedNatural with multiplicity of 1..1, otherwise the action has no removeAt input pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKbSk3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKbSlHCoEdq2Lvk-NX0TGA" general="_SKRhoXCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKbSlXCoEdq2Lvk-NX0TGA" name="isRemoveDuplicates" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SKbSlnCoEdq2Lvk-NX0TGA" annotatedElement="_SKbSlXCoEdq2Lvk-NX0TGA">
        <body>Specifies whether to remove duplicates of the value in nonunique variables.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SKbSl3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKbSmHCoEdq2Lvk-NX0TGA" name="removeAt" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SKkccHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKbSmXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKbSmnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKbSm3CoEdq2Lvk-NX0TGA" annotatedElement="_SKbSmHCoEdq2Lvk-NX0TGA">
        <body>Specifies the position of an existing value to remove in ordered nonunique variables. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKbSnHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKbSnXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKbSnnCoEdq2Lvk-NX0TGA" name="RaiseExceptionAction">
    <ownedComment xmi:id="_SKbSn3CoEdq2Lvk-NX0TGA" annotatedElement="_SKbSnnCoEdq2Lvk-NX0TGA">
      <body>RaiseExceptionAction is an action that causes an exception to occur. The input value becomes the exception object.</body>
    </ownedComment>
    <generalization xmi:id="_SKbSoHCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKbSoXCoEdq2Lvk-NX0TGA" name="exception" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SKkcenCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKbSonCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKbSo3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKbSpHCoEdq2Lvk-NX0TGA" annotatedElement="_SKbSoXCoEdq2Lvk-NX0TGA">
        <body>An input pin whose value becomes an exception object.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKbSpXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKbSpnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKbSp3CoEdq2Lvk-NX0TGA" name="ActionInputPin">
    <ownedComment xmi:id="_SKbSqHCoEdq2Lvk-NX0TGA" annotatedElement="_SKbSp3CoEdq2Lvk-NX0TGA">
      <body>An action input pin is a kind of pin that executes an action to determine the values to input to another.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKbSqXCoEdq2Lvk-NX0TGA" name="one_output_pin" constrainedElement="_SKbSp3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKbSqnCoEdq2Lvk-NX0TGA" annotatedElement="_SKbSqXCoEdq2Lvk-NX0TGA">
        <body>The fromAction of an action input pin must have exactly one output pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKbSq3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKbSrHCoEdq2Lvk-NX0TGA" name="input_pin" constrainedElement="_SKbSp3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKbSrXCoEdq2Lvk-NX0TGA" annotatedElement="_SKbSrHCoEdq2Lvk-NX0TGA">
        <body>The fromAction of an action input pin must only have action input pins as input pins.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKbSrnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKbSr3CoEdq2Lvk-NX0TGA" name="no_control_or_data_flow" constrainedElement="_SKbSp3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKbSsHCoEdq2Lvk-NX0TGA" annotatedElement="_SKbSr3CoEdq2Lvk-NX0TGA">
        <body>The fromAction of an action input pin cannot have control or data flows coming into or out of it or its pins.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKbSsXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKbSsnCoEdq2Lvk-NX0TGA" general="_SJO_33CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKbSs3CoEdq2Lvk-NX0TGA" name="fromAction" type="_SJYJ8XCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SKkcdXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKbStHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKbStXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKbStnCoEdq2Lvk-NX0TGA" annotatedElement="_SKbSs3CoEdq2Lvk-NX0TGA">
        <body>The action used to provide values.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKbSt3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKbSuHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKbSuXCoEdq2Lvk-NX0TGA" name="A_variable_variableAction" memberEnd="_SKbSunCoEdq2Lvk-NX0TGA _SKRhjnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SKbSunCoEdq2Lvk-NX0TGA" type="_SKRhiHCoEdq2Lvk-NX0TGA" association="_SKbSuXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKbSu3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKbSvHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKbSvXCoEdq2Lvk-NX0TGA" name="A_result_readVariableAction" memberEnd="_SKbSv3CoEdq2Lvk-NX0TGA _SKRhm3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SKbSvnCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SKbSv3CoEdq2Lvk-NX0TGA" type="_SKRhknCoEdq2Lvk-NX0TGA" association="_SKbSvXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKbSwHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKbSwXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKbSwnCoEdq2Lvk-NX0TGA" name="A_value_writeVariableAction" memberEnd="_SKbSxHCoEdq2Lvk-NX0TGA _SKRhqnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SKbSw3CoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SKbSxHCoEdq2Lvk-NX0TGA" type="_SKRhoXCoEdq2Lvk-NX0TGA" association="_SKbSwnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKbSxXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKbSxnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKbSx3CoEdq2Lvk-NX0TGA" name="A_insertAt_addVariableValueAction" memberEnd="_SKbSiXCoEdq2Lvk-NX0TGA _SKbSyXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SKbSyHCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SKbSyXCoEdq2Lvk-NX0TGA" type="_SKbSgHCoEdq2Lvk-NX0TGA" association="_SKbSx3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKbSynCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKbSy3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKkccHCoEdq2Lvk-NX0TGA" name="A_removeAt_removeVariableValueAction" memberEnd="_SKbSmHCoEdq2Lvk-NX0TGA _SKkccnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SKkccXCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SKkccnCoEdq2Lvk-NX0TGA" type="_SKbSj3CoEdq2Lvk-NX0TGA" association="_SKkccHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKkcc3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKkcdHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKkcdXCoEdq2Lvk-NX0TGA" name="A_fromAction_actionInputPin" memberEnd="_SKkcd3CoEdq2Lvk-NX0TGA _SKbSs3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SKkcdnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SKkcd3CoEdq2Lvk-NX0TGA" type="_SKbSp3CoEdq2Lvk-NX0TGA" association="_SKkcdXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKkceHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKkceXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SKkcenCoEdq2Lvk-NX0TGA" name="A_exception_raiseExceptionAction" memberEnd="_SKkcfHCoEdq2Lvk-NX0TGA _SKbSoXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SKkce3CoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SKkcfHCoEdq2Lvk-NX0TGA" type="_SKbSnnCoEdq2Lvk-NX0TGA" association="_SKkcenCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKkcfXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKkcfnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKkcf3CoEdq2Lvk-NX0TGA" name="ReadExtentAction">
    <ownedComment xmi:id="_SKkcgHCoEdq2Lvk-NX0TGA" annotatedElement="_SKkcf3CoEdq2Lvk-NX0TGA">
      <body>ReadExtentAction is an action that retrieves the current instances of a classifier.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKkcgXCoEdq2Lvk-NX0TGA" name="type_is_classifier" constrainedElement="_SKkcf3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkcgnCoEdq2Lvk-NX0TGA" annotatedElement="_SKkcgXCoEdq2Lvk-NX0TGA">
        <body>The type of the result output pin is the classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKkcg3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKkchHCoEdq2Lvk-NX0TGA" name="multiplicity_of_result" constrainedElement="_SKkcf3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkchXCoEdq2Lvk-NX0TGA" annotatedElement="_SKkchHCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the result output pin is 0..*.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKkchnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.multiplicity.is(0,#null)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKkch3CoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKkciHCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SK3-7XCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKkciXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKkcinCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKkci3CoEdq2Lvk-NX0TGA" annotatedElement="_SKkciHCoEdq2Lvk-NX0TGA">
        <body>The runtime instances of the classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKkcjHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKkcjXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKkcjnCoEdq2Lvk-NX0TGA" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SLBIYHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkcj3CoEdq2Lvk-NX0TGA" annotatedElement="_SKkcjnCoEdq2Lvk-NX0TGA">
        <body>The classifier whose instances are to be retrieved.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKkckHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKkckXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKkcknCoEdq2Lvk-NX0TGA" name="ReclassifyObjectAction">
    <ownedComment xmi:id="_SKkck3CoEdq2Lvk-NX0TGA" annotatedElement="_SKkcknCoEdq2Lvk-NX0TGA">
      <body>ReclassifyObjectAction adds given classifier to an object and removes given classifiers from that object. Multiple classifiers may be added and removed at a time.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKkclHCoEdq2Lvk-NX0TGA" name="classifier_not_abstract" constrainedElement="_SKkcknCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkclXCoEdq2Lvk-NX0TGA" annotatedElement="_SKkclHCoEdq2Lvk-NX0TGA">
        <body>None of the new classifiers may be abstract.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKkclnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>not self.newClassifier->exists(isAbstract = true)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKkcl3CoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SKkcknCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkcmHCoEdq2Lvk-NX0TGA" annotatedElement="_SKkcl3CoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKkcmXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.argument.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKkcmnCoEdq2Lvk-NX0TGA" name="input_pin" constrainedElement="_SKkcknCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkcm3CoEdq2Lvk-NX0TGA" annotatedElement="_SKkcmnCoEdq2Lvk-NX0TGA">
        <body>The input pin has no type.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKkcnHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.argument.type->size() = 0</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKkcnXCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKkcnnCoEdq2Lvk-NX0TGA" name="isReplaceAll" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SKkcn3CoEdq2Lvk-NX0TGA" annotatedElement="_SKkcnnCoEdq2Lvk-NX0TGA">
        <body>Specifies whether existing classifiers should be removed before adding the new classifiers.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SKkcoHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKkcoXCoEdq2Lvk-NX0TGA" name="oldClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SLBIZHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkconCoEdq2Lvk-NX0TGA" annotatedElement="_SKkcoXCoEdq2Lvk-NX0TGA">
        <body>A set of classifiers to be removed from the classifiers of the object.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKkco3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKkcpHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKkcpXCoEdq2Lvk-NX0TGA" name="newClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SLBIaHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkcpnCoEdq2Lvk-NX0TGA" annotatedElement="_SKkcpXCoEdq2Lvk-NX0TGA">
        <body>A set of classifiers to be added to the classifiers of the object.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKkcp3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKkcqHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKkcqXCoEdq2Lvk-NX0TGA" name="object" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SLUqaXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKkcqnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKkcq3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKkcrHCoEdq2Lvk-NX0TGA" annotatedElement="_SKkcqXCoEdq2Lvk-NX0TGA">
        <body>Holds the object to be reclassified.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKkcrXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKkcrnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKkcr3CoEdq2Lvk-NX0TGA" name="ReadIsClassifiedObjectAction">
    <ownedComment xmi:id="_SKkcsHCoEdq2Lvk-NX0TGA" annotatedElement="_SKkcr3CoEdq2Lvk-NX0TGA">
      <body>This action tests the classification of an object against a given class. It can be restricted to testing direct instances.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKkcsXCoEdq2Lvk-NX0TGA" name="multiplicity_of_input" constrainedElement="_SKkcr3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkcsnCoEdq2Lvk-NX0TGA" annotatedElement="_SKkcsXCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKkcs3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.object.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKkctHCoEdq2Lvk-NX0TGA" name="no_type" constrainedElement="_SKkcr3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkctXCoEdq2Lvk-NX0TGA" annotatedElement="_SKkctHCoEdq2Lvk-NX0TGA">
        <body>The input pin has no type.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKkctnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.object.type->isEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKkct3CoEdq2Lvk-NX0TGA" name="multiplicity_of_output" constrainedElement="_SKkcr3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkcuHCoEdq2Lvk-NX0TGA" annotatedElement="_SKkct3CoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKkcuXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKkcunCoEdq2Lvk-NX0TGA" name="boolean_result" constrainedElement="_SKkcr3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkcu3CoEdq2Lvk-NX0TGA" annotatedElement="_SKkcunCoEdq2Lvk-NX0TGA">
        <body>The type of the output pin is Boolean</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKkcvHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.type = Boolean</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKkcvXCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKkcvnCoEdq2Lvk-NX0TGA" name="isDirect" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SKkcv3CoEdq2Lvk-NX0TGA" annotatedElement="_SKkcvnCoEdq2Lvk-NX0TGA">
        <body>Indicates whether the classifier must directly classify the input object.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SKkcwHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKkcwXCoEdq2Lvk-NX0TGA" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SLBIbHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKkcwnCoEdq2Lvk-NX0TGA" annotatedElement="_SKkcwXCoEdq2Lvk-NX0TGA">
        <body>The classifier against which the classification of the input object is tested.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKkcw3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKkcxHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKkcxXCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SLBIbnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKkcxnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKkcx3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKkcyHCoEdq2Lvk-NX0TGA" annotatedElement="_SKkcxXCoEdq2Lvk-NX0TGA">
        <body>After termination of the action, will hold the result of the test.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKkcyXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKkcynCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKkcy3CoEdq2Lvk-NX0TGA" name="object" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SLBIc3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKkczHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKkczXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKkcznCoEdq2Lvk-NX0TGA" annotatedElement="_SKkcy3CoEdq2Lvk-NX0TGA">
        <body>Holds the object whose classification is to be tested.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKkcz3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKkc0HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKuNcHCoEdq2Lvk-NX0TGA" name="StartClassifierBehaviorAction">
    <ownedComment xmi:id="_SKuNcXCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNcHCoEdq2Lvk-NX0TGA">
      <body>StartClassifierBehaviorAction is an action that starts the classifier behavior of the input.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKuNcnCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SKuNcHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNc3CoEdq2Lvk-NX0TGA" annotatedElement="_SKuNcnCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the input pin is 1..1</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNdHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNdXCoEdq2Lvk-NX0TGA" name="type_has_classifier" constrainedElement="_SKuNcHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNdnCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNdXCoEdq2Lvk-NX0TGA">
        <body>If the input pin has a type, then the type must have a classifier behavior.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNd3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKuNeHCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKuNeXCoEdq2Lvk-NX0TGA" name="object" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SLBIeHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKuNenCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKuNe3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKuNfHCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNeXCoEdq2Lvk-NX0TGA">
        <body>Holds the object on which to start the owned behavior.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKuNfXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKuNfnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKuNf3CoEdq2Lvk-NX0TGA" name="QualifierValue">
    <ownedComment xmi:id="_SKuNgHCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNf3CoEdq2Lvk-NX0TGA">
      <body>A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, as required. This requires more than one piece of data, namely, the end in the user model, the object on the end, and the qualifier values for that end. These pieces are brought together around LinkEndData. Each association end is identified separately with an instance of the LinkEndData class.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKuNgXCoEdq2Lvk-NX0TGA" name="qualifier_attribute" constrainedElement="_SKuNf3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNgnCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNgXCoEdq2Lvk-NX0TGA">
        <body>The qualifier attribute must be a qualifier of the association end of the link-end data.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNg3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.LinkEndData.end->collect(qualifier)->includes(self.qualifier)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNhHCoEdq2Lvk-NX0TGA" name="type_of_qualifier" constrainedElement="_SKuNf3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNhXCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNhHCoEdq2Lvk-NX0TGA">
        <body>The type of the qualifier value input pin is the same as the type of the qualifier attribute.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNhnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.value.type = self.qualifier.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNh3CoEdq2Lvk-NX0TGA" name="multiplicity_of_qualifier" constrainedElement="_SKuNf3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNiHCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNh3CoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the qualifier value input pin is &quot;1..1&quot;.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNiXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.value.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKuNinCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SKuNi3CoEdq2Lvk-NX0TGA" name="qualifier" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_SLK5YHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNjHCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNi3CoEdq2Lvk-NX0TGA">
        <body>Attribute representing the qualifier for which the value is to be specified.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKuNjXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKuNjnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKuNj3CoEdq2Lvk-NX0TGA" name="value" type="_SJO_33CoEdq2Lvk-NX0TGA" association="_SLK5ZHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNkHCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNj3CoEdq2Lvk-NX0TGA">
        <body>Input pin from which the specified value for the qualifier is taken.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKuNkXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKuNknCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SHvyK3CoEdq2Lvk-NX0TGA" name="LinkEndData">
    <ownedComment xmi:id="_SHvyLHCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyK3CoEdq2Lvk-NX0TGA">
      <body>LinkEndData is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of LinkAction. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, if any. This requires more than one piece of data, namely, the staticallyspecified end in the user model, the object on the end, and the qualifier values for that end, if any. These pieces are brought together around LinkEndData. Each association end is identified separately with an instance of the LinkEndData class.</body>
    </ownedComment>
    <ownedComment xmi:id="_SKuNk3CoEdq2Lvk-NX0TGA" annotatedElement="_SHvyK3CoEdq2Lvk-NX0TGA">
      <body>LinkEndData is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of LinkAction. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, if any. This requires more than one piece of data, namely, the staticallyspecified end in the user model, the object on the end, and the qualifier values for that end, if any. These pieces are brought together around LinkEndData. Each association end is identified separately with an instance of the LinkEndData class.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SHvyLXCoEdq2Lvk-NX0TGA" name="property_is_association_end" constrainedElement="_SHvyK3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyLnCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyLXCoEdq2Lvk-NX0TGA">
        <body>The property must be an association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyL3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.end.association->size() = 1</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHvyMHCoEdq2Lvk-NX0TGA" name="same_type" constrainedElement="_SHvyK3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyMXCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyMHCoEdq2Lvk-NX0TGA">
        <body>The type of the end object input pin is the same as the type of the association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyMnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.value.type = self.end.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SHvyM3CoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SHvyK3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyNHCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyM3CoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the end object input pin must be 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHvyNXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.value.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNlHCoEdq2Lvk-NX0TGA" name="qualifiers" constrainedElement="_SHvyK3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNlXCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNlHCoEdq2Lvk-NX0TGA">
        <body>The qualifiers include all and only the qualifiers of the association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNlnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.qualifier->collect(qualifier) = self.end.qualifier</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNl3CoEdq2Lvk-NX0TGA" name="end_object_input_pin" constrainedElement="_SHvyK3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNmHCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNl3CoEdq2Lvk-NX0TGA">
        <body>The end object input pin is not also a qualifier value input pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNmXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.value->excludesAll(self.qualifier.value)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SHvyNnCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SHvyN3CoEdq2Lvk-NX0TGA" name="value" type="_SJO_33CoEdq2Lvk-NX0TGA" association="_SIL23nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyOHCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyN3CoEdq2Lvk-NX0TGA">
        <body>Input pin that provides the specified object for the given end. This pin is omitted if the link-end data specifies an 'open' end for reading.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHvyOXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHvyOnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHvyO3CoEdq2Lvk-NX0TGA" name="end" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_SIL24nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHvyPHCoEdq2Lvk-NX0TGA" annotatedElement="_SHvyO3CoEdq2Lvk-NX0TGA">
        <body>Association end for which this link-end data specifies values.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHvyPXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHvyPnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKuNmnCoEdq2Lvk-NX0TGA" name="qualifier" type="_SKuNf3CoEdq2Lvk-NX0TGA" association="_SLBIfXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKuNm3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKuNnHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKuNnXCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNmnCoEdq2Lvk-NX0TGA">
        <body>List of qualifier values</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKuNnnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKuNn3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKuNoHCoEdq2Lvk-NX0TGA" name="ReadLinkObjectEndAction">
    <ownedComment xmi:id="_SKuNoXCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNoHCoEdq2Lvk-NX0TGA">
      <body>This action reads the object on an end of a link object. The association end to retrieve the object from is specified statically, and the link object to read is provided on the input pin at run time.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKuNonCoEdq2Lvk-NX0TGA" name="property" constrainedElement="_SKuNoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNo3CoEdq2Lvk-NX0TGA" annotatedElement="_SKuNonCoEdq2Lvk-NX0TGA">
        <body>The property must be an association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNpHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.end.association.notEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNpXCoEdq2Lvk-NX0TGA" name="association_of_association" constrainedElement="_SKuNoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNpnCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNpXCoEdq2Lvk-NX0TGA">
        <body>The association of the association end must be an association class.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNp3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.end.Association.oclIsKindOf(AssociationClass)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNqHCoEdq2Lvk-NX0TGA" name="ends_of_association" constrainedElement="_SKuNoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNqXCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNqHCoEdq2Lvk-NX0TGA">
        <body>The ends of the association must not be static.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNqnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.end.association.memberEnd->forall(e | not e.isStatic)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNq3CoEdq2Lvk-NX0TGA" name="type_of_object" constrainedElement="_SKuNoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNrHCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNq3CoEdq2Lvk-NX0TGA">
        <body>The type of the object input pin is the association class that owns the association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNrXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.object.type = self.end.association</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNrnCoEdq2Lvk-NX0TGA" name="multiplicity_of_object" constrainedElement="_SKuNoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNr3CoEdq2Lvk-NX0TGA" annotatedElement="_SKuNrnCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the object input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNsHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.object.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNsXCoEdq2Lvk-NX0TGA" name="type_of_result" constrainedElement="_SKuNoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNsnCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNsXCoEdq2Lvk-NX0TGA">
        <body>The type of the result output pin is the same as the type of the association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNs3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.type = self.end.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNtHCoEdq2Lvk-NX0TGA" name="multiplicity_of_result" constrainedElement="_SKuNoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNtXCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNtHCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the result output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNtnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKuNt3CoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKuNuHCoEdq2Lvk-NX0TGA" name="object" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SLK5aHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKuNuXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKuNunCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKuNu3CoEdq2Lvk-NX0TGA" annotatedElement="_SKuNuHCoEdq2Lvk-NX0TGA">
        <body>Gives the input pin from which the link object is obtained.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKuNvHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKuNvXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKuNvnCoEdq2Lvk-NX0TGA" name="end" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_SLK5bXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNv3CoEdq2Lvk-NX0TGA" annotatedElement="_SKuNvnCoEdq2Lvk-NX0TGA">
        <body>Link end to be read.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKuNwHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKuNwXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKuNwnCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SLK5cXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKuNw3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKuNxHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKuNxXCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNwnCoEdq2Lvk-NX0TGA">
        <body>Pin where the result value is placed</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKuNxnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKuNx3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SKuNyHCoEdq2Lvk-NX0TGA" name="ReadLinkObjectEndQualifierAction">
    <ownedComment xmi:id="_SKuNyXCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNyHCoEdq2Lvk-NX0TGA">
      <body>This action reads a qualifier value or values on an end of a link object. The association end to retrieve the qualifier from is specified statically, and the link object to read is provided on the input pin at run time.</body>
    </ownedComment>
    <ownedRule xmi:id="_SKuNynCoEdq2Lvk-NX0TGA" name="qualifier_attribute" constrainedElement="_SKuNyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNy3CoEdq2Lvk-NX0TGA" annotatedElement="_SKuNynCoEdq2Lvk-NX0TGA">
        <body>The qualifier attribute must be a qualifier attribute of an association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNzHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.qualifier.associationEnd->size() = 1</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuNzXCoEdq2Lvk-NX0TGA" name="association_of_association" constrainedElement="_SKuNyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuNznCoEdq2Lvk-NX0TGA" annotatedElement="_SKuNzXCoEdq2Lvk-NX0TGA">
        <body>The association of the association end of the qualifier attribute must be an association class.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuNz3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.qualifier.associationEnd.association.oclIsKindOf(AssociationClass)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuN0HCoEdq2Lvk-NX0TGA" name="ends_of_association" constrainedElement="_SKuNyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuN0XCoEdq2Lvk-NX0TGA" annotatedElement="_SKuN0HCoEdq2Lvk-NX0TGA">
        <body>The ends of the association must not be static.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuN0nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.qualifier.associationEnd.association.memberEnd->forall(e | not e.isStatic)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuN03CoEdq2Lvk-NX0TGA" name="type_of_object" constrainedElement="_SKuNyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuN1HCoEdq2Lvk-NX0TGA" annotatedElement="_SKuN03CoEdq2Lvk-NX0TGA">
        <body>The type of the object input pin is the association class that owns the association end that has the given qualifier attribute.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuN1XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.object.type = self.qualifier.associationEnd.association</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuN1nCoEdq2Lvk-NX0TGA" name="multiplicity_of_qualifier" constrainedElement="_SKuNyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuN13CoEdq2Lvk-NX0TGA" annotatedElement="_SKuN1nCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the qualifier attribute is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuN2HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.qualifier.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuN2XCoEdq2Lvk-NX0TGA" name="multiplicity_of_object" constrainedElement="_SKuNyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuN2nCoEdq2Lvk-NX0TGA" annotatedElement="_SKuN2XCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the object input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuN23CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.object.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuN3HCoEdq2Lvk-NX0TGA" name="same_type" constrainedElement="_SKuNyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuN3XCoEdq2Lvk-NX0TGA" annotatedElement="_SKuN3HCoEdq2Lvk-NX0TGA">
        <body>The type of the result output pin is the same as the type of the qualifier attribute.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuN3nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.type = self.qualifier.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SKuN33CoEdq2Lvk-NX0TGA" name="multiplicity_of_result" constrainedElement="_SKuNyHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuN4HCoEdq2Lvk-NX0TGA" annotatedElement="_SKuN33CoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the result output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SKuN4XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SKuN4nCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SKuN43CoEdq2Lvk-NX0TGA" name="object" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SLK5dnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKuN5HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKuN5XCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKuN5nCoEdq2Lvk-NX0TGA" annotatedElement="_SKuN43CoEdq2Lvk-NX0TGA">
        <body>(Specialized from Action:input) Gives the input pin from which the link object is obtained.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKuN53CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKuN6HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKuN6XCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SLK5e3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SKuN6nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SKuN63CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SKuN7HCoEdq2Lvk-NX0TGA" annotatedElement="_SKuN6XCoEdq2Lvk-NX0TGA">
        <body>Pin where the result value is placed</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKuN7XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKuN7nCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SKuN73CoEdq2Lvk-NX0TGA" name="qualifier" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_SLUqYHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SKuN8HCoEdq2Lvk-NX0TGA" annotatedElement="_SKuN73CoEdq2Lvk-NX0TGA">
        <body>The attribute representing the qualifier to be read.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SKuN8XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SKuN8nCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SK3-cHCoEdq2Lvk-NX0TGA" name="CreateLinkObjectAction">
    <ownedComment xmi:id="_SK3-cXCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-cHCoEdq2Lvk-NX0TGA">
      <body>This action is exclusively for creating links of association classes. It returns the created link object.</body>
    </ownedComment>
    <ownedRule xmi:id="_SK3-cnCoEdq2Lvk-NX0TGA" name="association_class" constrainedElement="_SK3-cHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-c3CoEdq2Lvk-NX0TGA" annotatedElement="_SK3-cnCoEdq2Lvk-NX0TGA">
        <body>The association must be an association class.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-dHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.association().oclIsKindOf(Class)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-dXCoEdq2Lvk-NX0TGA" name="type_of_result" constrainedElement="_SK3-cHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-dnCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-dXCoEdq2Lvk-NX0TGA">
        <body>The type of the result pin must be the same as the association of the action.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-d3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.type = self.association()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-eHCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_SK3-cHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-eXCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-eHCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-enCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.result.multiplicity.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SK3-e3CoEdq2Lvk-NX0TGA" general="_SH474HCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SK3-fHCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SLUqZHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SK3-fXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SK3-fnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SK3-f3CoEdq2Lvk-NX0TGA" annotatedElement="_SK3-fHCoEdq2Lvk-NX0TGA">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK3-gHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SK3-gXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SK3-gnCoEdq2Lvk-NX0TGA" name="AcceptEventAction">
    <ownedComment xmi:id="_SK3-g3CoEdq2Lvk-NX0TGA" annotatedElement="_SK3-gnCoEdq2Lvk-NX0TGA">
      <body>AcceptEventAction is an action that waits for the occurrence of an event meeting specified conditions.</body>
    </ownedComment>
    <ownedRule xmi:id="_SK3-hHCoEdq2Lvk-NX0TGA" name="no_input_pins" constrainedElement="_SK3-gnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-hXCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-hHCoEdq2Lvk-NX0TGA">
        <body>AcceptEventActions may have no input pins.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-hnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-h3CoEdq2Lvk-NX0TGA" name="no_output_pins" constrainedElement="_SK3-gnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-iHCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-h3CoEdq2Lvk-NX0TGA">
        <body>There are no output pins if the trigger events are only ChangeEvents, or if they are only CallEvents when this action is an instance of AcceptEventAction and not an instance of a descendant of AcceptEventAction (such as AcceptCallAction).</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-iXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-inCoEdq2Lvk-NX0TGA" name="trigger_events" constrainedElement="_SK3-gnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-i3CoEdq2Lvk-NX0TGA" annotatedElement="_SK3-inCoEdq2Lvk-NX0TGA">
        <body>If the trigger events are all TimeEvents, there is exactly one output pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-jHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-jXCoEdq2Lvk-NX0TGA" name="unmarshall_signal_events" constrainedElement="_SK3-gnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-jnCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-jXCoEdq2Lvk-NX0TGA">
        <body>If isUnmarshall is true, there must be exactly one trigger for events of type SignalEvent. The number of result output pins must be the same as the number of attributes of the signal. The type and ordering of each result output pin must be the same as the corresponding attribute of the signal. The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding attribute.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-j3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SK3-kHCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SK3-kXCoEdq2Lvk-NX0TGA" name="isUnmarshall" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SK3-knCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-kXCoEdq2Lvk-NX0TGA">
        <body>Indicates whether there is a single output pin for the event, or multiple output pins for attributes of the event.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SK3-k3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SK3-lHCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SLUqbHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-lXCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-lHCoEdq2Lvk-NX0TGA">
        <body>Pins holding the received event objects or their attributes. Event objects may be copied in transmission, so identity might not be preserved.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK3-lnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SK3-l3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SK3-mHCoEdq2Lvk-NX0TGA" name="trigger" type="_SF9CTnCoEdq2Lvk-NX0TGA" association="_SLd0anCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SK3-mXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SK3-mnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SK3-m3CoEdq2Lvk-NX0TGA" annotatedElement="_SK3-mHCoEdq2Lvk-NX0TGA">
        <body>The type of events accepted by the action, as specified by triggers. For triggers with signal events, a signal of the specified type or any subtype of the specified signal type is accepted.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK3-nHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SK3-nXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SK3-nnCoEdq2Lvk-NX0TGA" name="AcceptCallAction">
    <ownedComment xmi:id="_SK3-n3CoEdq2Lvk-NX0TGA" annotatedElement="_SK3-nnCoEdq2Lvk-NX0TGA">
      <body>AcceptCallAction is an accept event action representing the receipt of a synchronous call request. In addition to the normal operation parameters, the action produces an output that is needed later to supply the information to the ReplyAction necessary to return control to the caller. This action is for synchronous calls. If it is used to handle an asynchronous call, execution of the subsequent reply action will complete immediately with no effects.</body>
    </ownedComment>
    <ownedRule xmi:id="_SK3-oHCoEdq2Lvk-NX0TGA" name="result_pins" constrainedElement="_SK3-nnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-oXCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-oHCoEdq2Lvk-NX0TGA">
        <body>The result pins must match the in and inout parameters of the operation specified by the trigger event in number, type, and order.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-onCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-o3CoEdq2Lvk-NX0TGA" name="trigger_call_event" constrainedElement="_SK3-nnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-pHCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-o3CoEdq2Lvk-NX0TGA">
        <body>The trigger event must be a CallEvent.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-pXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>trigger.event.oclIsKindOf(CallEvent)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-pnCoEdq2Lvk-NX0TGA" name="unmarshall" constrainedElement="_SK3-nnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-p3CoEdq2Lvk-NX0TGA" annotatedElement="_SK3-pnCoEdq2Lvk-NX0TGA">
        <body>isUnmrashall must be true for an AcceptCallAction.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-qHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>isUnmarshall = true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SK3-qXCoEdq2Lvk-NX0TGA" general="_SK3-gnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SK3-qnCoEdq2Lvk-NX0TGA" name="returnInformation" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SLUqb3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-q3CoEdq2Lvk-NX0TGA" annotatedElement="_SK3-qnCoEdq2Lvk-NX0TGA">
        <body>Pin where a value is placed containing sufficient information to perform a subsequent reply and return control to the caller. The contents of this value are opaque. It can be passed and copied but it cannot be manipulated by the model.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK3-rHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SK3-rXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SK3-rnCoEdq2Lvk-NX0TGA" name="ReplyAction">
    <ownedComment xmi:id="_SK3-r3CoEdq2Lvk-NX0TGA" annotatedElement="_SK3-rnCoEdq2Lvk-NX0TGA">
      <body>ReplyAction is an action that accepts a set of return values and a value containing return information produced by a previous accept call action. The reply action returns the values to the caller of the previous call, completing execution of the call.</body>
    </ownedComment>
    <ownedRule xmi:id="_SK3-sHCoEdq2Lvk-NX0TGA" name="pins_match_parameter" constrainedElement="_SK3-rnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-sXCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-sHCoEdq2Lvk-NX0TGA">
        <body>The reply value pins must match the return, out, and inout parameters of the operation on the event on the trigger in number, type, and order.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-snCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-s3CoEdq2Lvk-NX0TGA" name="event_on_reply_to_call_trigger" constrainedElement="_SK3-rnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-tHCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-s3CoEdq2Lvk-NX0TGA">
        <body>The event on replyToCall trigger must be a CallEvent replyToCallEvent.oclIsKindOf(CallEvent)</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-tXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>replyToCallEvent.oclIsKindOf(CallEvent)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SK3-tnCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SK3-t3CoEdq2Lvk-NX0TGA" name="replyToCall" type="_SF9CTnCoEdq2Lvk-NX0TGA" association="_SLd0UHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-uHCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-t3CoEdq2Lvk-NX0TGA">
        <body>The trigger specifying the operation whose call is being replied to.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK3-uXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SK3-unCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SK3-u3CoEdq2Lvk-NX0TGA" name="returnInformation" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SLd0YHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SK3-vHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SK3-vXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SK3-vnCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-u3CoEdq2Lvk-NX0TGA">
        <body>A pin containing the return information value produced by an earlier AcceptCallAction.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK3-v3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SK3-wHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SK3-wXCoEdq2Lvk-NX0TGA" name="replyValue" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SLd0ZXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SK3-wnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SK3-w3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SK3-xHCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-wXCoEdq2Lvk-NX0TGA">
        <body>A list of pins containing the reply values of the operation. These values are returned to the caller.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK3-xXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SK3-xnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SK3-x3CoEdq2Lvk-NX0TGA" name="UnmarshallAction">
    <ownedComment xmi:id="_SK3-yHCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-x3CoEdq2Lvk-NX0TGA">
      <body>The outputs of this action correspond to the structural features of the specified type. The input must be of this type.</body>
    </ownedComment>
    <ownedRule xmi:id="_SK3-yXCoEdq2Lvk-NX0TGA" name="same_type" constrainedElement="_SK3-x3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-ynCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-yXCoEdq2Lvk-NX0TGA">
        <body>The type of the object input pin must be the same as the unmarshall classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-y3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-zHCoEdq2Lvk-NX0TGA" name="multiplicity_of_object" constrainedElement="_SK3-x3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-zXCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-zHCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of the object input pin is 1..1</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-znCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-z3CoEdq2Lvk-NX0TGA" name="number_of_result" constrainedElement="_SK3-x3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-0HCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-z3CoEdq2Lvk-NX0TGA">
        <body>The number of result output pins must be the same as the number of structural features of the unmarshall classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-0XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-0nCoEdq2Lvk-NX0TGA" name="type_and_ordering" constrainedElement="_SK3-x3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-03CoEdq2Lvk-NX0TGA" annotatedElement="_SK3-0nCoEdq2Lvk-NX0TGA">
        <body>The type and ordering of each result output pin must be the same as the corresponding structural feature of the unmarshall classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-1HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-1XCoEdq2Lvk-NX0TGA" name="multiplicity_of_result" constrainedElement="_SK3-x3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-1nCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-1XCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding structural features of the unmarshall classifier.

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-13CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-2HCoEdq2Lvk-NX0TGA" name="structural_feature" constrainedElement="_SK3-x3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-2XCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-2HCoEdq2Lvk-NX0TGA">
        <body>The unmarshall classifier must have at least one structural feature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-2nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SK3-23CoEdq2Lvk-NX0TGA" name="unmarshallType_is_classifier" constrainedElement="_SK3-x3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-3HCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-23CoEdq2Lvk-NX0TGA">
        <body>unmarshallType must be a Classifier with ordered attributes</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SK3-3XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SK3-3nCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SK3-33CoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SLd0UnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-4HCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-33CoEdq2Lvk-NX0TGA">
        <body>The values of the structural features of the input object.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK3-4XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SK3-4nCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SK3-43CoEdq2Lvk-NX0TGA" name="unmarshallType" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SLd0V3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SK3-5HCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-43CoEdq2Lvk-NX0TGA">
        <body>The type of the object to be unmarshalled.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK3-5XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SK3-5nCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SK3-53CoEdq2Lvk-NX0TGA" name="object" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SLd0W3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SK3-6HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SK3-6XCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SK3-6nCoEdq2Lvk-NX0TGA" annotatedElement="_SK3-53CoEdq2Lvk-NX0TGA">
        <body>The object to be unmarshalled.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK3-63CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SK3-7HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SK3-7XCoEdq2Lvk-NX0TGA" name="A_result_readExtentAction" memberEnd="_SK3-73CoEdq2Lvk-NX0TGA _SKkciHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SK3-7nCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SK3-73CoEdq2Lvk-NX0TGA" type="_SKkcf3CoEdq2Lvk-NX0TGA" association="_SK3-7XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK3-8HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SK3-8XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLBIYHCoEdq2Lvk-NX0TGA" name="A_classifier_readExtentAction" memberEnd="_SLBIYXCoEdq2Lvk-NX0TGA _SKkcjnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLBIYXCoEdq2Lvk-NX0TGA" type="_SKkcf3CoEdq2Lvk-NX0TGA" association="_SLBIYHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLBIYnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLBIY3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLBIZHCoEdq2Lvk-NX0TGA" name="A_oldClassifier_reclassifyObjectAction" memberEnd="_SKkcoXCoEdq2Lvk-NX0TGA _SLBIZXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLBIZXCoEdq2Lvk-NX0TGA" type="_SKkcknCoEdq2Lvk-NX0TGA" association="_SLBIZHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLBIZnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLBIZ3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLBIaHCoEdq2Lvk-NX0TGA" name="A_newClassifier_reclassifyObjectAction" memberEnd="_SKkcpXCoEdq2Lvk-NX0TGA _SLBIaXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLBIaXCoEdq2Lvk-NX0TGA" type="_SKkcknCoEdq2Lvk-NX0TGA" association="_SLBIaHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLBIanCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLBIa3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLBIbHCoEdq2Lvk-NX0TGA" name="A_classifier_readIsClassifiedObjectAction" memberEnd="_SKkcwXCoEdq2Lvk-NX0TGA _SLBIbXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLBIbXCoEdq2Lvk-NX0TGA" type="_SKkcr3CoEdq2Lvk-NX0TGA" association="_SLBIbHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLBIbnCoEdq2Lvk-NX0TGA" name="A_result_readIsClassifiedObjectAction" memberEnd="_SKkcxXCoEdq2Lvk-NX0TGA _SLBIcHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLBIb3CoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLBIcHCoEdq2Lvk-NX0TGA" type="_SKkcr3CoEdq2Lvk-NX0TGA" association="_SLBIbnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLBIcXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLBIcnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLBIc3CoEdq2Lvk-NX0TGA" name="A_object_readIsClassifiedObjectAction" memberEnd="_SKkcy3CoEdq2Lvk-NX0TGA _SLBIdXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLBIdHCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLBIdXCoEdq2Lvk-NX0TGA" type="_SKkcr3CoEdq2Lvk-NX0TGA" association="_SLBIc3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLBIdnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLBId3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLBIeHCoEdq2Lvk-NX0TGA" name="A_object_startClassifierBehaviorAction" memberEnd="_SLBIenCoEdq2Lvk-NX0TGA _SKuNeXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLBIeXCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLBIenCoEdq2Lvk-NX0TGA" type="_SKuNcHCoEdq2Lvk-NX0TGA" association="_SLBIeHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLBIe3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLBIfHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLBIfXCoEdq2Lvk-NX0TGA" name="A_qualifier_linkEndData" memberEnd="_SKuNmnCoEdq2Lvk-NX0TGA _SLBIfnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLBIfnCoEdq2Lvk-NX0TGA" type="_SHvyK3CoEdq2Lvk-NX0TGA" association="_SLBIfXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLBIf3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLBIgHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLK5YHCoEdq2Lvk-NX0TGA" name="A_qualifier_qualifierValue" memberEnd="_SLK5YXCoEdq2Lvk-NX0TGA _SKuNi3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLK5YXCoEdq2Lvk-NX0TGA" type="_SKuNf3CoEdq2Lvk-NX0TGA" association="_SLK5YHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLK5YnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLK5Y3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLK5ZHCoEdq2Lvk-NX0TGA" name="A_value_qualifierValue" memberEnd="_SLK5ZXCoEdq2Lvk-NX0TGA _SKuNj3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLK5ZXCoEdq2Lvk-NX0TGA" type="_SKuNf3CoEdq2Lvk-NX0TGA" association="_SLK5ZHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLK5ZnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLK5Z3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLK5aHCoEdq2Lvk-NX0TGA" name="A_object_readLinkObjectEndAction" memberEnd="_SKuNuHCoEdq2Lvk-NX0TGA _SLK5anCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLK5aXCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLK5anCoEdq2Lvk-NX0TGA" type="_SKuNoHCoEdq2Lvk-NX0TGA" association="_SLK5aHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLK5a3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLK5bHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLK5bXCoEdq2Lvk-NX0TGA" name="A_end_readLinkObjectEndAction" memberEnd="_SKuNvnCoEdq2Lvk-NX0TGA _SLK5bnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLK5bnCoEdq2Lvk-NX0TGA" type="_SKuNoHCoEdq2Lvk-NX0TGA" association="_SLK5bXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLK5b3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLK5cHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLK5cXCoEdq2Lvk-NX0TGA" name="A_result_readLinkObjectEndAction" memberEnd="_SKuNwnCoEdq2Lvk-NX0TGA _SLK5c3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLK5cnCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLK5c3CoEdq2Lvk-NX0TGA" type="_SKuNoHCoEdq2Lvk-NX0TGA" association="_SLK5cXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLK5dHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLK5dXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLK5dnCoEdq2Lvk-NX0TGA" name="A_object_readLinkObjectEndQualifierAction" memberEnd="_SKuN43CoEdq2Lvk-NX0TGA _SLK5eHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLK5d3CoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLK5eHCoEdq2Lvk-NX0TGA" type="_SKuNyHCoEdq2Lvk-NX0TGA" association="_SLK5dnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLK5eXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLK5enCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLK5e3CoEdq2Lvk-NX0TGA" name="A_result_readLinkObjectEndQualifierAction" memberEnd="_SKuN6XCoEdq2Lvk-NX0TGA _SLK5fXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLK5fHCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLK5fXCoEdq2Lvk-NX0TGA" type="_SKuNyHCoEdq2Lvk-NX0TGA" association="_SLK5e3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLK5fnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLK5f3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLUqYHCoEdq2Lvk-NX0TGA" name="A_qualifier_readLinkObjectEndQualifierAction" memberEnd="_SLUqYXCoEdq2Lvk-NX0TGA _SKuN73CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLUqYXCoEdq2Lvk-NX0TGA" type="_SKuNyHCoEdq2Lvk-NX0TGA" association="_SLUqYHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUqYnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUqY3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLUqZHCoEdq2Lvk-NX0TGA" name="A_result_createLinkObjectAction" memberEnd="_SK3-fHCoEdq2Lvk-NX0TGA _SLUqZnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLUqZXCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLUqZnCoEdq2Lvk-NX0TGA" type="_SK3-cHCoEdq2Lvk-NX0TGA" association="_SLUqZHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLUqZ3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLUqaHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLUqaXCoEdq2Lvk-NX0TGA" name="A_reclassifyObjectAction_object" memberEnd="_SLUqa3CoEdq2Lvk-NX0TGA _SKkcqXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLUqanCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLUqa3CoEdq2Lvk-NX0TGA" type="_SKkcknCoEdq2Lvk-NX0TGA" redefinedProperty="_SJh6u3CoEdq2Lvk-NX0TGA" association="_SLUqaXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLUqbHCoEdq2Lvk-NX0TGA" name="A_result_acceptEventAction" memberEnd="_SK3-lHCoEdq2Lvk-NX0TGA _SLUqbnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLUqbXCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLUqbnCoEdq2Lvk-NX0TGA" type="_SK3-gnCoEdq2Lvk-NX0TGA" redefinedProperty="_SJh6tnCoEdq2Lvk-NX0TGA" association="_SLUqbHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLUqb3CoEdq2Lvk-NX0TGA" name="A_returnInformation_acceptCallAction" memberEnd="_SLUqcXCoEdq2Lvk-NX0TGA _SK3-qnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLUqcHCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLUqcXCoEdq2Lvk-NX0TGA" type="_SK3-nnCoEdq2Lvk-NX0TGA" redefinedProperty="_SJh6tnCoEdq2Lvk-NX0TGA" association="_SLUqb3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLd0UHCoEdq2Lvk-NX0TGA" name="A_replyToCall_replyAction" memberEnd="_SK3-t3CoEdq2Lvk-NX0TGA _SLd0UXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLd0UXCoEdq2Lvk-NX0TGA" type="_SK3-rnCoEdq2Lvk-NX0TGA" association="_SLd0UHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLd0UnCoEdq2Lvk-NX0TGA" name="A_result_unmarshallAction" memberEnd="_SK3-33CoEdq2Lvk-NX0TGA _SLd0VHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLd0U3CoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLd0VHCoEdq2Lvk-NX0TGA" type="_SK3-x3CoEdq2Lvk-NX0TGA" association="_SLd0UnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLd0VXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLd0VnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLd0V3CoEdq2Lvk-NX0TGA" name="A_unmarshallType_unmarshallAction" memberEnd="_SK3-43CoEdq2Lvk-NX0TGA _SLd0WHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLd0WHCoEdq2Lvk-NX0TGA" type="_SK3-x3CoEdq2Lvk-NX0TGA" association="_SLd0V3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLd0WXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLd0WnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLd0W3CoEdq2Lvk-NX0TGA" name="A_object_unmarshallAction" memberEnd="_SK3-53CoEdq2Lvk-NX0TGA _SLd0XXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLd0XHCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLd0XXCoEdq2Lvk-NX0TGA" type="_SK3-x3CoEdq2Lvk-NX0TGA" association="_SLd0W3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLd0XnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLd0X3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLd0YHCoEdq2Lvk-NX0TGA" name="A_returnInformation_replyAction" memberEnd="_SK3-u3CoEdq2Lvk-NX0TGA _SLd0YnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLd0YXCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLd0YnCoEdq2Lvk-NX0TGA" type="_SK3-rnCoEdq2Lvk-NX0TGA" association="_SLd0YHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLd0Y3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLd0ZHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLd0ZXCoEdq2Lvk-NX0TGA" name="A_replyValue_replyAction" memberEnd="_SK3-wXCoEdq2Lvk-NX0TGA _SLd0Z3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLd0ZnCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SLd0Z3CoEdq2Lvk-NX0TGA" type="_SK3-rnCoEdq2Lvk-NX0TGA" association="_SLd0ZXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLd0aHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLd0aXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLd0anCoEdq2Lvk-NX0TGA" name="A_trigger_acceptEventAction" memberEnd="_SK3-mHCoEdq2Lvk-NX0TGA _SLd0a3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SLd0a3CoEdq2Lvk-NX0TGA" type="_SK3-gnCoEdq2Lvk-NX0TGA" association="_SLd0anCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLd0bHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLd0bXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SLd0bnCoEdq2Lvk-NX0TGA" name="ReduceAction">
    <ownedComment xmi:id="_SLd0b3CoEdq2Lvk-NX0TGA" annotatedElement="_SLd0bnCoEdq2Lvk-NX0TGA">
      <body>This action takes a collection as input and produces an output by applying a behavior with two inputs pairwise to the elements of the collection.</body>
    </ownedComment>
    <ownedRule xmi:id="_SLd0cHCoEdq2Lvk-NX0TGA" name="input_type_is_collection" constrainedElement="_SLd0bnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLd0cXCoEdq2Lvk-NX0TGA" annotatedElement="_SLd0cHCoEdq2Lvk-NX0TGA">
        <body>The type of the input must be a collection.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLd0cnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SLd0c3CoEdq2Lvk-NX0TGA" name="output_types_are_compatible" constrainedElement="_SLd0bnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLd0dHCoEdq2Lvk-NX0TGA" annotatedElement="_SLd0c3CoEdq2Lvk-NX0TGA">
        <body>The type of the output must be compatible with the type of the output of the reducer behavior.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLd0dXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SLd0dnCoEdq2Lvk-NX0TGA" name="reducer_inputs_output" constrainedElement="_SLd0bnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLd0d3CoEdq2Lvk-NX0TGA" annotatedElement="_SLd0dnCoEdq2Lvk-NX0TGA">
        <body>The reducer behavior must have two input parameters and one output parameter, of types compatible with the types of elements of the input collection.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLd0eHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SLd0eXCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SLd0enCoEdq2Lvk-NX0TGA" name="reducer" type="_TUPtYGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SLd0e3CoEdq2Lvk-NX0TGA" annotatedElement="_SLd0enCoEdq2Lvk-NX0TGA">
        <body>Behavior that is applied to two elements of the input collection to produce a value that is the same type as elements of the collection.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLd0fHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLd0fXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLd0fnCoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <ownedComment xmi:id="_SLd0f3CoEdq2Lvk-NX0TGA" annotatedElement="_SLd0fnCoEdq2Lvk-NX0TGA">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLd0gHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLd0gXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLd0gnCoEdq2Lvk-NX0TGA" name="collection" type="_SJO_33CoEdq2Lvk-NX0TGA" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <ownedComment xmi:id="_SLd0g3CoEdq2Lvk-NX0TGA" annotatedElement="_SLd0gnCoEdq2Lvk-NX0TGA">
        <body>The collection to be reduced.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLd0hHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLd0hXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLd0hnCoEdq2Lvk-NX0TGA" name="isOrdered" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SLd0h3CoEdq2Lvk-NX0TGA" annotatedElement="_SLd0hnCoEdq2Lvk-NX0TGA">
        <body>Tells whether the order of the input collection should determine the order in which the behavior is applied to its elements.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SLd0iHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLwvQ3CoEdq2Lvk-NX0TGA" name="A_subgroup_superGroup" memberEnd="_SLnld3CoEdq2Lvk-NX0TGA _SLnlcXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLwvRHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SLwvT3CoEdq2Lvk-NX0TGA" name="ControlNode" isAbstract="true">
    <ownedComment xmi:id="_SLwvUHCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvT3CoEdq2Lvk-NX0TGA">
      <body>A control node is an activity node used to coordinate the flows between other nodes. It covers initial node, final node and its children, fork node, join node, decision node, and merge node.</body>
    </ownedComment>
    <generalization xmi:id="_SLwvUXCoEdq2Lvk-NX0TGA" general="_SLnlf3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SLwvc3CoEdq2Lvk-NX0TGA" name="ControlFlow">
    <ownedComment xmi:id="_SLwvdHCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvc3CoEdq2Lvk-NX0TGA">
      <body>Objects and data cannot pass along a control flow edge.</body>
    </ownedComment>
    <ownedRule xmi:id="_SLwvdXCoEdq2Lvk-NX0TGA" name="object_nodes" constrainedElement="_SLwvc3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLwvdnCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvdXCoEdq2Lvk-NX0TGA">
        <body>Control flows may not have object nodes at either end, except for object nodes with control type.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLwvd3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SLwveHCoEdq2Lvk-NX0TGA" general="_SLwvUnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SL6gQHCoEdq2Lvk-NX0TGA" name="InitialNode">
    <ownedComment xmi:id="_SL6gQXCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gQHCoEdq2Lvk-NX0TGA">
      <body>An activity may have more than one initial node.</body>
    </ownedComment>
    <ownedRule xmi:id="_SL6gQnCoEdq2Lvk-NX0TGA" name="no_incoming_edges" constrainedElement="_SL6gQHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gQ3CoEdq2Lvk-NX0TGA" annotatedElement="_SL6gQnCoEdq2Lvk-NX0TGA">
        <body>An initial node has no incoming edges.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SL6gRHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SL6gRXCoEdq2Lvk-NX0TGA" name="control_edges" constrainedElement="_SL6gQHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gRnCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gRXCoEdq2Lvk-NX0TGA">
        <body>Only control edges can have initial nodes as source.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SL6gR3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SL6gSHCoEdq2Lvk-NX0TGA" general="_SLwvT3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SL6gW3CoEdq2Lvk-NX0TGA" name="ActivityParameterNode">
    <ownedComment xmi:id="_SL6gXHCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gW3CoEdq2Lvk-NX0TGA">
      <body>Activity parameter nodes are object nodes at the beginning and end of flows that provide a means to accept inputs to an activity and provide outputs from the activity, through the activity parameters.</body>
    </ownedComment>
    <ownedRule xmi:id="_SL6gXXCoEdq2Lvk-NX0TGA" name="has_parameters" constrainedElement="_SL6gW3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gXnCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gXXCoEdq2Lvk-NX0TGA">
        <body>Activity parameter nodes must have parameters from the containing activity.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SL6gX3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SL6gYHCoEdq2Lvk-NX0TGA" name="same_type" constrainedElement="_SL6gW3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gYXCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gYHCoEdq2Lvk-NX0TGA">
        <body>The type of an activity parameter node is the same as the type of its parameter.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SL6gYnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SL6gY3CoEdq2Lvk-NX0TGA" name="no_edges" constrainedElement="_SL6gW3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gZHCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gY3CoEdq2Lvk-NX0TGA">
        <body>An activity parameter node may have all incoming edges or all outgoing edges, but it must not have both incoming and outgoing edges.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SL6gZXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SL6gZnCoEdq2Lvk-NX0TGA" name="no_incoming_edges" constrainedElement="_SL6gW3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gZ3CoEdq2Lvk-NX0TGA" annotatedElement="_SL6gZnCoEdq2Lvk-NX0TGA">
        <body>Activity parameter object nodes with no incoming edges and one or more outgoing edges must have a parameter with in or inout direction.

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SL6gaHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SL6gaXCoEdq2Lvk-NX0TGA" name="no_outgoing_edges" constrainedElement="_SL6gW3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6ganCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gaXCoEdq2Lvk-NX0TGA">
        <body>Activity parameter object nodes with no outgoing edges and one or more incoming edges must have a parameter with out, inout, or return direction.

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SL6ga3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SL6gbHCoEdq2Lvk-NX0TGA" general="_SLwvRXCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SL6gbXCoEdq2Lvk-NX0TGA" name="parameter" type="_KyaPMGveEdq4DLWZOhbdEA" association="_SMz4I3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gbnCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gbXCoEdq2Lvk-NX0TGA">
        <body>The parameter the object node will be accepting or providing values for.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SL6gb3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SL6gcHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SMERUXCoEdq2Lvk-NX0TGA" name="A_activity_edge" memberEnd="_SMERS3CoEdq2Lvk-NX0TGA _SLwvW3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SMERUnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SMz4IHCoEdq2Lvk-NX0TGA" name="A_outgoing_source" memberEnd="_SL6gdnCoEdq2Lvk-NX0TGA _SLwvYXCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SMz4IXCoEdq2Lvk-NX0TGA" name="A_target_incoming" memberEnd="_SLwvZXCoEdq2Lvk-NX0TGA _SL6genCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SMz4I3CoEdq2Lvk-NX0TGA" name="A_parameter_activityParameterNode" memberEnd="_SL6gbXCoEdq2Lvk-NX0TGA _SMz4JHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SMz4JHCoEdq2Lvk-NX0TGA" type="_SL6gW3CoEdq2Lvk-NX0TGA" association="_SMz4I3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SMz4JXCoEdq2Lvk-NX0TGA" name="A_redefinedNode_activityNode" memberEnd="_SL6gfnCoEdq2Lvk-NX0TGA _SMz4J3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SMz4JnCoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SMz4J3CoEdq2Lvk-NX0TGA" type="_SLnlf3CoEdq2Lvk-NX0TGA" redefinedProperty="_R2wIk3CoEdq2Lvk-NX0TGA" association="_SMz4JXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SMz4KHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SMz4KXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SMz4KnCoEdq2Lvk-NX0TGA" name="A_redefinedEdge_activityEdge" memberEnd="_SLwvb3CoEdq2Lvk-NX0TGA _SMz4LHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SMz4K3CoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SMz4LHCoEdq2Lvk-NX0TGA" type="_SLwvUnCoEdq2Lvk-NX0TGA" redefinedProperty="_R2wIk3CoEdq2Lvk-NX0TGA" association="_SMz4KnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SMz4LXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SMz4LnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SMz4L3CoEdq2Lvk-NX0TGA" name="ForkNode">
    <ownedComment xmi:id="_SMz4MHCoEdq2Lvk-NX0TGA" annotatedElement="_SMz4L3CoEdq2Lvk-NX0TGA">
      <body>A fork node has one incoming edge and multiple outgoing edges.</body>
    </ownedComment>
    <ownedRule xmi:id="_SMz4MXCoEdq2Lvk-NX0TGA" name="one_incoming_edge" constrainedElement="_SMz4L3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SMz4MnCoEdq2Lvk-NX0TGA" annotatedElement="_SMz4MXCoEdq2Lvk-NX0TGA">
        <body>A fork node has one incoming edge.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SMz4M3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SMz4NHCoEdq2Lvk-NX0TGA" name="edges" constrainedElement="_SMz4L3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SMz4NXCoEdq2Lvk-NX0TGA" annotatedElement="_SMz4NHCoEdq2Lvk-NX0TGA">
        <body>The edges coming into and out of a fork node must be either all object flows or all control flows.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SMz4NnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SMz4N3CoEdq2Lvk-NX0TGA" general="_SLwvT3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SMz4OHCoEdq2Lvk-NX0TGA" name="FlowFinalNode">
    <ownedComment xmi:id="_SMz4OXCoEdq2Lvk-NX0TGA" annotatedElement="_SMz4OHCoEdq2Lvk-NX0TGA">
      <body>A flow final destroys all tokens that arrive at it. It has no effect on other flows in the activity.</body>
    </ownedComment>
    <generalization xmi:id="_SMz4OnCoEdq2Lvk-NX0TGA" general="_SNGzEHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SMz4O3CoEdq2Lvk-NX0TGA" name="CentralBufferNode">
    <ownedComment xmi:id="_SMz4PHCoEdq2Lvk-NX0TGA" annotatedElement="_SMz4O3CoEdq2Lvk-NX0TGA">
      <body>A central buffer node accepts tokens from upstream objects nodes and passes them along to downstream object nodes. They act as a buffer for multiple in flows and out flows from other object nodes. They do not connect directly to actions.</body>
    </ownedComment>
    <generalization xmi:id="_SMz4PXCoEdq2Lvk-NX0TGA" general="_SLwvRXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SM9CEHCoEdq2Lvk-NX0TGA" name="ActivityPartition">
    <ownedComment xmi:id="_SM9CEXCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CEHCoEdq2Lvk-NX0TGA">
      <body>Partitions divide the nodes and edges to constrain and show a view of the contained nodes. Partitions can share contents. They often correspond to organizational units in a business model. They may be used to allocate characteristics or resources among the nodes of an activity.</body>
    </ownedComment>
    <ownedRule xmi:id="_SM9CEnCoEdq2Lvk-NX0TGA" name="dimension_not_contained" constrainedElement="_SM9CEHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CE3CoEdq2Lvk-NX0TGA" annotatedElement="_SM9CEnCoEdq2Lvk-NX0TGA">
        <body>A partition with isDimension = true may not be contained by another partition.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SM9CFHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SM9CFXCoEdq2Lvk-NX0TGA" name="represents_part" constrainedElement="_SM9CEHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CFnCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CFXCoEdq2Lvk-NX0TGA">
        <body>If a partition represents a part, then all the non-external partitions in the same dimension and at the same level of nesting in that dimension must represent parts directly contained in the internal structure of the same classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SM9CF3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SM9CGHCoEdq2Lvk-NX0TGA" name="represents_classifier" constrainedElement="_SM9CEHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CGXCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CGHCoEdq2Lvk-NX0TGA">
        <body>If a non-external partition represents a classifier and is contained in another partition, then the containing partition must represent a classifier, and the classifier of the subpartition must be nested in the classifier represented by the containing partition, or be at the contained end of a strong composition association with the classifier represented by the containing partition.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SM9CGnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SM9CG3CoEdq2Lvk-NX0TGA" name="represents_part_and_is_contained" constrainedElement="_SM9CEHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CHHCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CG3CoEdq2Lvk-NX0TGA">
        <body>If a partition represents a part and is contained by another partition, then the part must be of a classifier represented by the containing partition, or of a classifier that is the type of a part representing the containing partition.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SM9CHXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SM9CHnCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <generalization xmi:id="_SM9CH3CoEdq2Lvk-NX0TGA" general="_SLnlYnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SM9CIHCoEdq2Lvk-NX0TGA" name="isDimension" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SM9CIXCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CIHCoEdq2Lvk-NX0TGA">
        <body>Tells whether the partition groups other partitions along a dimension.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SM9CInCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SM9CI3CoEdq2Lvk-NX0TGA" name="isExternal" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SM9CJHCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CI3CoEdq2Lvk-NX0TGA">
        <body>Tells whether the partition represents an entity to which the partitioning structure does not apply.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SM9CJXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SM9CJnCoEdq2Lvk-NX0TGA" name="edge" type="_SLwvUnCoEdq2Lvk-NX0TGA" subsettedProperty="_SL6gVXCoEdq2Lvk-NX0TGA" association="_SNGzHnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CJ3CoEdq2Lvk-NX0TGA" annotatedElement="_SM9CJnCoEdq2Lvk-NX0TGA">
        <body>Edges immediately contained in the group.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SM9CKHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SM9CKXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SM9CKnCoEdq2Lvk-NX0TGA" name="node" type="_SLnlf3CoEdq2Lvk-NX0TGA" subsettedProperty="_SLnlZXCoEdq2Lvk-NX0TGA" association="_SNGzIHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CK3CoEdq2Lvk-NX0TGA" annotatedElement="_SM9CKnCoEdq2Lvk-NX0TGA">
        <body>Nodes immediately contained in the group.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SM9CLHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SM9CLXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SM9CLnCoEdq2Lvk-NX0TGA" name="subpartition" type="_SM9CEHCoEdq2Lvk-NX0TGA" subsettedProperty="_SLnlcXCoEdq2Lvk-NX0TGA" association="_SNGzInCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SM9CL3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SM9CMHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SM9CMXCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CLnCoEdq2Lvk-NX0TGA">
        <body>Partitions immediately contained in the partition. Specialized from Activity-Group::subgroup.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SM9CMnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SM9CM3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SM9CNHCoEdq2Lvk-NX0TGA" name="superPartition" type="_SM9CEHCoEdq2Lvk-NX0TGA" subsettedProperty="_SLnld3CoEdq2Lvk-NX0TGA" association="_SNGzInCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SM9CNXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SM9CNnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SM9CN3CoEdq2Lvk-NX0TGA" annotatedElement="_SM9CNHCoEdq2Lvk-NX0TGA">
        <body>Partition immediately containing the partition.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SM9COHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SM9COXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SM9COnCoEdq2Lvk-NX0TGA" name="represents" type="_kl90MGvbEdq4DLWZOhbdEA" association="_SNQkEHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CO3CoEdq2Lvk-NX0TGA" annotatedElement="_SM9COnCoEdq2Lvk-NX0TGA">
        <body>An element constraining behaviors invoked by nodes in the partition.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SM9CPHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SM9CPXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SM9CUXCoEdq2Lvk-NX0TGA" name="MergeNode">
    <ownedComment xmi:id="_SM9CUnCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CUXCoEdq2Lvk-NX0TGA">
      <body>A merge node has multiple incoming edges and a single outgoing edge.</body>
    </ownedComment>
    <ownedRule xmi:id="_SM9CU3CoEdq2Lvk-NX0TGA" name="one_outgoing_edge" constrainedElement="_SM9CUXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CVHCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CU3CoEdq2Lvk-NX0TGA">
        <body>A merge node has one outgoing edge.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SM9CVXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SM9CVnCoEdq2Lvk-NX0TGA" name="edges" constrainedElement="_SM9CUXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CV3CoEdq2Lvk-NX0TGA" annotatedElement="_SM9CVnCoEdq2Lvk-NX0TGA">
        <body>The edges coming into and out of a merge node must be either all object flows or all control flows.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SM9CWHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SM9CWXCoEdq2Lvk-NX0TGA" general="_SLwvT3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SM9CWnCoEdq2Lvk-NX0TGA" name="DecisionNode">
    <ownedComment xmi:id="_SM9CW3CoEdq2Lvk-NX0TGA" annotatedElement="_SM9CWnCoEdq2Lvk-NX0TGA">
      <body>A decision node has one incoming edge and multiple outgoing activity edges.</body>
    </ownedComment>
    <ownedRule xmi:id="_SM9CXHCoEdq2Lvk-NX0TGA" name="one_incoming_edge" constrainedElement="_SM9CWnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CXXCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CXHCoEdq2Lvk-NX0TGA">
        <body>A decision node has one incoming edge.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SM9CXnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SM9CX3CoEdq2Lvk-NX0TGA" name="input_parameter" constrainedElement="_SM9CWnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CYHCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CX3CoEdq2Lvk-NX0TGA">
        <body>A decision input behavior has zero or one input parameter and one output parameter. Any input parameter must be the same as or a supertype of the type of object tokens coming along the incoming edge. The behavior cannot have side effects.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SM9CYXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SM9CYnCoEdq2Lvk-NX0TGA" name="edges" constrainedElement="_SM9CWnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CY3CoEdq2Lvk-NX0TGA" annotatedElement="_SM9CYnCoEdq2Lvk-NX0TGA">
        <body>The edges coming into and out of a decision node must be either all object flows or all control flows.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SM9CZHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SM9CZXCoEdq2Lvk-NX0TGA" general="_SLwvT3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SM9CZnCoEdq2Lvk-NX0TGA" name="decisionInput" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SNQkF3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CZ3CoEdq2Lvk-NX0TGA" annotatedElement="_SM9CZnCoEdq2Lvk-NX0TGA">
        <body>Provides input to guard specifications on edges outgoing from the decision node.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SM9CaHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SM9CaXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SNGzEHCoEdq2Lvk-NX0TGA" name="FinalNode" isAbstract="true">
    <ownedComment xmi:id="_SNGzEXCoEdq2Lvk-NX0TGA" annotatedElement="_SNGzEHCoEdq2Lvk-NX0TGA">
      <body>A final node is an abstract control node at which a flow in an activity stops.</body>
    </ownedComment>
    <ownedRule xmi:id="_SNGzEnCoEdq2Lvk-NX0TGA" name="no_outgoing_edges" constrainedElement="_SNGzEHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNGzE3CoEdq2Lvk-NX0TGA" annotatedElement="_SNGzEnCoEdq2Lvk-NX0TGA">
        <body>A final node has no outgoing edges.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNGzFHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SNGzFXCoEdq2Lvk-NX0TGA" general="_SLwvT3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SL6gSXCoEdq2Lvk-NX0TGA" name="ActivityFinalNode">
    <ownedComment xmi:id="_SL6gSnCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gSXCoEdq2Lvk-NX0TGA">
      <body>An activity may have more than one activity final node. The first one reached stops all flows in the activity.</body>
    </ownedComment>
    <generalization xmi:id="_SNGzFnCoEdq2Lvk-NX0TGA" general="_SNGzEHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SNGzHnCoEdq2Lvk-NX0TGA" name="A_edge_inPartition" memberEnd="_SM9CJnCoEdq2Lvk-NX0TGA _SM9CPnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SNGzH3CoEdq2Lvk-NX0TGA" general="_SMz4InCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SNGzIHCoEdq2Lvk-NX0TGA" name="A_inPartition_node" memberEnd="_SM9CKnCoEdq2Lvk-NX0TGA _SM9CS3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SNGzIXCoEdq2Lvk-NX0TGA" general="_SLwvQHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SNGzInCoEdq2Lvk-NX0TGA" name="A_subpartition_superPartition" memberEnd="_SM9CLnCoEdq2Lvk-NX0TGA _SM9CNHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SNGzI3CoEdq2Lvk-NX0TGA" general="_SLwvQ3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SNQkEHCoEdq2Lvk-NX0TGA" name="A_represents_activityPartition" memberEnd="_SM9COnCoEdq2Lvk-NX0TGA _SNQkEXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SNQkEXCoEdq2Lvk-NX0TGA" type="_SM9CEHCoEdq2Lvk-NX0TGA" association="_SNQkEHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNQkEnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNQkE3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SNQkFHCoEdq2Lvk-NX0TGA" name="A_activityEdge_guard" memberEnd="_SM9CQnCoEdq2Lvk-NX0TGA _SNQkFnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SNQkFXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SNQkFnCoEdq2Lvk-NX0TGA" type="_SLwvUnCoEdq2Lvk-NX0TGA" association="_SNQkFHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SNQkF3CoEdq2Lvk-NX0TGA" name="A_decisionInput_decisionNode" memberEnd="_SNQkGHCoEdq2Lvk-NX0TGA _SM9CZnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SNQkGHCoEdq2Lvk-NX0TGA" type="_SM9CWnCoEdq2Lvk-NX0TGA" association="_SNQkF3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNQkGXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNQkGnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SNZuAHCoEdq2Lvk-NX0TGA" name="A_partition_activity" memberEnd="_SNQkG3CoEdq2Lvk-NX0TGA _SNZuAnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SNZuAXCoEdq2Lvk-NX0TGA" general="_SLwvQXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SNZuAnCoEdq2Lvk-NX0TGA" type="_SLnlUHCoEdq2Lvk-NX0TGA" association="_SNZuAHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SNGzF3CoEdq2Lvk-NX0TGA" name="JoinNode">
    <ownedComment xmi:id="_SNGzGHCoEdq2Lvk-NX0TGA" annotatedElement="_SNGzF3CoEdq2Lvk-NX0TGA">
      <body>A join node has multiple incoming edges and one outgoing edge.</body>
    </ownedComment>
    <ownedComment xmi:id="_SNZuA3CoEdq2Lvk-NX0TGA" annotatedElement="_SNGzF3CoEdq2Lvk-NX0TGA">
      <body>A join node has multiple incoming edges and one outgoing edge. In CompleteActivities, Join nodes have a Boolean value specification using the names of the incoming edges to specify the conditions under which the join will emit a token.</body>
    </ownedComment>
    <ownedRule xmi:id="_SNZuBHCoEdq2Lvk-NX0TGA" name="one_outgoing_edge" constrainedElement="_SNGzF3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNZuBXCoEdq2Lvk-NX0TGA" annotatedElement="_SNZuBHCoEdq2Lvk-NX0TGA">
        <body>A join node has one outgoing edge.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNZuBnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.outgoing->size() = 1</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNZuB3CoEdq2Lvk-NX0TGA" name="incoming_object_flow" constrainedElement="_SNGzF3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNZuCHCoEdq2Lvk-NX0TGA" annotatedElement="_SNZuB3CoEdq2Lvk-NX0TGA">
        <body>If a join node has an incoming object flow, it must have an outgoing object flow, otherwise, it must have an outgoing control flow.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNZuCXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.incoming.select(e | e.isTypeOf(ObjectFlow)->notEmpty() implies

  self.outgoing.isTypeOf(ObjectFlow)) and

    (self.incoming.select(e | e.isTypeOf(ObjectFlow)->empty() implies

      self.outgoing.isTypeOf(ControlFlow))</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SNGzGXCoEdq2Lvk-NX0TGA" general="_SLwvT3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SNZuCnCoEdq2Lvk-NX0TGA" name="isCombineDuplicate" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SNZuC3CoEdq2Lvk-NX0TGA" annotatedElement="_SNZuCnCoEdq2Lvk-NX0TGA">
        <body>Tells whether tokens having objects with the same identity are combined into one by the join.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SNZuDHCoEdq2Lvk-NX0TGA" value="true"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNZuDXCoEdq2Lvk-NX0TGA" name="joinSpec" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SOc24HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SNZuDnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SNZuD3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SNZuEHCoEdq2Lvk-NX0TGA" annotatedElement="_SNZuDXCoEdq2Lvk-NX0TGA">
        <body>A specification giving the conditions under which the join with emit a token. Default is &quot;and&quot;.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNZuEXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNZuEnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SNZuE3CoEdq2Lvk-NX0TGA" name="DataStoreNode">
    <ownedComment xmi:id="_SNZuFHCoEdq2Lvk-NX0TGA" annotatedElement="_SNZuE3CoEdq2Lvk-NX0TGA">
      <body>A data store keeps all tokens that enter it, copying them when they are chosen to move downstream. Incoming tokens containing a particular object replace any tokens in the object node containing that object.</body>
    </ownedComment>
    <generalization xmi:id="_SNZuFXCoEdq2Lvk-NX0TGA" general="_SMz4O3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SLwveXCoEdq2Lvk-NX0TGA" name="ObjectFlow">
    <ownedComment xmi:id="_SLwvenCoEdq2Lvk-NX0TGA" annotatedElement="_SLwveXCoEdq2Lvk-NX0TGA">
      <body>An object flow models the flow of values to or from object nodes.</body>
    </ownedComment>
    <ownedRule xmi:id="_SLwve3CoEdq2Lvk-NX0TGA" name="no_actions" constrainedElement="_SLwveXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLwvfHCoEdq2Lvk-NX0TGA" annotatedElement="_SLwve3CoEdq2Lvk-NX0TGA">
        <body>Object flows may not have actions at either end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLwvfXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SLwvfnCoEdq2Lvk-NX0TGA" name="compatible_types" constrainedElement="_SLwveXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLwvf3CoEdq2Lvk-NX0TGA" annotatedElement="_SLwvfnCoEdq2Lvk-NX0TGA">
        <body>Object nodes connected by an object flow, with optionally intervening control nodes, must have compatible types. In particular, the downstream object node type must be the same or a supertype of the upstream object node type.

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLwvgHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SLwvgXCoEdq2Lvk-NX0TGA" name="same_upper_bounds" constrainedElement="_SLwveXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLwvgnCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvgXCoEdq2Lvk-NX0TGA">
        <body>Object nodes connected by an object flow, with optionally intervening control nodes, must have the same upper bounds.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLwvg3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNZuFnCoEdq2Lvk-NX0TGA" name="target" constrainedElement="_SLwveXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNZuF3CoEdq2Lvk-NX0TGA" annotatedElement="_SNZuFnCoEdq2Lvk-NX0TGA">
        <body>An edge with constant weight may not target an object node, or lead to an object node downstream with no intervening actions, that has an upper bound less than the weight.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNZuGHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNZuGXCoEdq2Lvk-NX0TGA" name="transformation_behaviour" constrainedElement="_SLwveXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNZuGnCoEdq2Lvk-NX0TGA" annotatedElement="_SNZuGXCoEdq2Lvk-NX0TGA">
        <body>A transformation behavior has one input parameter and one output parameter. The input parameter must be the same as or a supertype of the type of object token coming from the source end. The output parameter must be the same or a subtype of the type of object token expected downstream. The behavior cannot have side effects.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNZuG3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNZuHHCoEdq2Lvk-NX0TGA" name="selection_behaviour" constrainedElement="_SLwveXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNZuHXCoEdq2Lvk-NX0TGA" annotatedElement="_SNZuHHCoEdq2Lvk-NX0TGA">
        <body>An object flow may have a selection behavior only if has an object node as a source.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNZuHnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNZuH3CoEdq2Lvk-NX0TGA" name="input_and_output_parameter" constrainedElement="_SLwveXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNZuIHCoEdq2Lvk-NX0TGA" annotatedElement="_SNZuH3CoEdq2Lvk-NX0TGA">
        <body>A selection behavior has one input parameter and one output parameter. The input parameter must be a bag of elements of the same as or a supertype of the type of source object node. The output parameter must be the same or a subtype of the type of source object node. The behavior cannot have side effects.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNZuIXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNZuInCoEdq2Lvk-NX0TGA" name="is_multicast_or_is_multireceive" constrainedElement="_SLwveXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNZuI3CoEdq2Lvk-NX0TGA" annotatedElement="_SNZuInCoEdq2Lvk-NX0TGA">
        <body>isMulticast and isMultireceive cannot both be true.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNZuJHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SLwvhHCoEdq2Lvk-NX0TGA" general="_SLwvUnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SNZuJXCoEdq2Lvk-NX0TGA" name="isMulticast" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SNZuJnCoEdq2Lvk-NX0TGA" annotatedElement="_SNZuJXCoEdq2Lvk-NX0TGA">
        <body>Tells whether the objects in the flow are passed by multicasting.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SNZuJ3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNZuKHCoEdq2Lvk-NX0TGA" name="isMultireceive" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SNZuKXCoEdq2Lvk-NX0TGA" annotatedElement="_SNZuKHCoEdq2Lvk-NX0TGA">
        <body>Tells whether the objects in the flow are gathered from respondents to multicasting.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SNZuKnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNZuK3CoEdq2Lvk-NX0TGA" name="transformation" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SOJU73CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNZuLHCoEdq2Lvk-NX0TGA" annotatedElement="_SNZuK3CoEdq2Lvk-NX0TGA">
        <body>Changes or replaces data tokens flowing along edge.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNZuLXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNZuLnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNZuL3CoEdq2Lvk-NX0TGA" name="selection" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SOTF43CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNZuMHCoEdq2Lvk-NX0TGA" annotatedElement="_SNZuL3CoEdq2Lvk-NX0TGA">
        <body>Selects tokens from a source object node.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNZuMXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNZuMnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_SNjfAHCoEdq2Lvk-NX0TGA" name="ParameterEffectKind">
    <ownedComment xmi:id="_SNjfAXCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfAHCoEdq2Lvk-NX0TGA">
      <body>The datatype ParameterEffectKind is an enumeration that indicates the effect of a behavior on values passed in or out of its parameters.</body>
    </ownedComment>
    <ownedLiteral xmi:id="_SNjfAnCoEdq2Lvk-NX0TGA" name="create"/>
    <ownedLiteral xmi:id="_SNjfA3CoEdq2Lvk-NX0TGA" name="read"/>
    <ownedLiteral xmi:id="_SNjfBHCoEdq2Lvk-NX0TGA" name="update"/>
    <ownedLiteral xmi:id="_SNjfBXCoEdq2Lvk-NX0TGA" name="delete"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SLwvRXCoEdq2Lvk-NX0TGA" name="ObjectNode" isAbstract="true">
    <ownedComment xmi:id="_SLwvRnCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvRXCoEdq2Lvk-NX0TGA">
      <body>An object node is an activity node that indicates an instance of a particular classifier, possibly in a particular state, may be available at a particular point in the activity. Object nodes can be used in a variety of ways, depending on where objects are flowing from and to, as described in the semantics section.</body>
    </ownedComment>
    <ownedComment xmi:id="_SNjfEHCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvRXCoEdq2Lvk-NX0TGA">
      <body>An object node is an activity node that indicates an instance of a particular classifier, possibly in a particular state, may be available at a particular point in the activity. Object nodes can be used in a variety of ways, depending on where objects are flowing from and to, as described in the semantics section.

Complete object nodes add support for token selection, limitation on the number of tokens, specifying the state required for tokens, and carrying control values.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SLwvR3CoEdq2Lvk-NX0TGA" name="object_flow_edges" constrainedElement="_SLwvRXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLwvSHCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvR3CoEdq2Lvk-NX0TGA">
        <body>All edges coming into or going out of object nodes must be object flow edges.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLwvSXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SLwvSnCoEdq2Lvk-NX0TGA" name="not_unique" constrainedElement="_SLwvRXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLwvS3CoEdq2Lvk-NX0TGA" annotatedElement="_SLwvSnCoEdq2Lvk-NX0TGA">
        <body>Object nodes are not unique typed elements</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLwvTHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>isUnique = false</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNjfEXCoEdq2Lvk-NX0TGA" name="selection_behavior" constrainedElement="_SLwvRXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNjfEnCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfEXCoEdq2Lvk-NX0TGA">
        <body>If an object node has a selection behavior, then the ordering of the object node is ordered, and vice versa.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNjfE3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNjfFHCoEdq2Lvk-NX0TGA" name="input_output_parameter" constrainedElement="_SLwvRXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNjfFXCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfFHCoEdq2Lvk-NX0TGA">
        <body>A selection behavior has one input parameter and one output parameter. The input parameter must be a bag of elements of the same type as the object node or a supertype of the type of object node. The output parameter must be the same or a subtype of the type of object node. The behavior cannot have side effects.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNjfFnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SLwvTXCoEdq2Lvk-NX0TGA" general="_SLnlf3CoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SLwvTnCoEdq2Lvk-NX0TGA" general="_RzLQIHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SNjfF3CoEdq2Lvk-NX0TGA" name="ordering" type="_SNjfK3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNjfGHCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfF3CoEdq2Lvk-NX0TGA">
        <body>Tells whether and how the tokens in the object node are ordered for selection to traverse edges outgoing from the object node.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_SNjfGXCoEdq2Lvk-NX0TGA" instance="_SNjfMHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNjfGnCoEdq2Lvk-NX0TGA" name="isControlType" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SNjfG3CoEdq2Lvk-NX0TGA" annotatedElement="_SNjfGnCoEdq2Lvk-NX0TGA">
        <body>Tells whether the type of the object node is to be treated as control.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SNjfHHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNjfHXCoEdq2Lvk-NX0TGA" name="upperBound" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SOJU5XCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SNjfHnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SNjfH3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SNjfIHCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfHXCoEdq2Lvk-NX0TGA">
        <body>The maximum number of tokens allowed in the node. Objects cannot flow into the node if the upper bound is reached.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNjfIXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNjfInCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNjfI3CoEdq2Lvk-NX0TGA" name="inState" type="_SQh63HCoEdq2Lvk-NX0TGA" association="_SOJU6nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNjfJHCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfI3CoEdq2Lvk-NX0TGA">
        <body>The required states of the object available at this point in the activity.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNjfJXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNjfJnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNjfJ3CoEdq2Lvk-NX0TGA" name="selection" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SOTF53CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNjfKHCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfJ3CoEdq2Lvk-NX0TGA">
        <body>Selects tokens for outgoing edges.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNjfKXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNjfKnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_SNjfK3CoEdq2Lvk-NX0TGA" name="ObjectNodeOrderingKind">
    <ownedComment xmi:id="_SNjfLHCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfK3CoEdq2Lvk-NX0TGA">
      <body>ObjectNodeOrderingKind is an enumeration indicating queuing order within a node.</body>
    </ownedComment>
    <ownedLiteral xmi:id="_SNjfLXCoEdq2Lvk-NX0TGA" name="unordered"/>
    <ownedLiteral xmi:id="_SNjfLnCoEdq2Lvk-NX0TGA" name="ordered"/>
    <ownedLiteral xmi:id="_SNjfL3CoEdq2Lvk-NX0TGA" name="LIFO"/>
    <ownedLiteral xmi:id="_SNjfMHCoEdq2Lvk-NX0TGA" name="FIFO"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SNjfMXCoEdq2Lvk-NX0TGA" name="ParameterSet">
    <ownedComment xmi:id="_SNjfMnCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfMXCoEdq2Lvk-NX0TGA">
      <body>An parameter set acts as a complete set of inputs or outputs to a behavior, exclusive of other parameter sets on the behavior.</body>
    </ownedComment>
    <ownedRule xmi:id="_SNjfM3CoEdq2Lvk-NX0TGA" name="same_parameterized_entity" constrainedElement="_SNjfMXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNjfNHCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfM3CoEdq2Lvk-NX0TGA">
        <body>The parameters in a parameter set must all be inputs or all be outputs of the same parameterized entity, and the parameter set is owned by that entity.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNjfNXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNjfNnCoEdq2Lvk-NX0TGA" name="input" constrainedElement="_SNjfMXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNjfN3CoEdq2Lvk-NX0TGA" annotatedElement="_SNjfNnCoEdq2Lvk-NX0TGA">
        <body>If a behavior has input parameters that are in a parameter set, then any inputs that are not in a parameter set must be streaming. Same for output parameters.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNjfOHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNjfOXCoEdq2Lvk-NX0TGA" name="two_parameter_sets" constrainedElement="_SNjfMXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNjfOnCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfOXCoEdq2Lvk-NX0TGA">
        <body>Two parameter sets cannot have exactly the same set of parameters.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNjfO3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SNjfPHCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SNjfPXCoEdq2Lvk-NX0TGA" name="parameter" type="_KyaPMGveEdq4DLWZOhbdEA" association="_SOJU7nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNjfPnCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfPXCoEdq2Lvk-NX0TGA">
        <body>Parameters in the parameter set.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNjfP3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNjfQHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNjfQXCoEdq2Lvk-NX0TGA" name="condition" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SOTF63CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SNjfQnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SNjfQ3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SNjfRHCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfQXCoEdq2Lvk-NX0TGA">
        <body>Constraint that should be satisfied for the owner of the parameters in an input parameter set to start execution using the values provided for those parameters, or the owner of the parameters in an output parameter set to end execution providing the values for those parameters, if all preconditions and conditions on input parameter sets were satisfied.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNjfRXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNjfRnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_KyaPMGveEdq4DLWZOhbdEA" name="Parameter">
    <ownedComment xmi:id="_R00O4HCoEdq2Lvk-NX0TGA" annotatedElement="_KyaPMGveEdq4DLWZOhbdEA">
      <body>A parameter is a kind of typed element in order to allow the specification of an optional multiplicity on parameters. In addition, it supports the specification of an optional default value.</body>
    </ownedComment>
    <ownedComment xmi:id="_R67d93CoEdq2Lvk-NX0TGA" annotatedElement="_KyaPMGveEdq4DLWZOhbdEA">
      <body>A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature. It has a type, and may have a multiplicity and an optional default value.</body>
    </ownedComment>
    <ownedComment xmi:id="_SHTGCnCoEdq2Lvk-NX0TGA" annotatedElement="_KyaPMGveEdq4DLWZOhbdEA">
      <body>Parameters are allowed to be treated as connectable elements.</body>
    </ownedComment>
    <ownedComment xmi:id="_SNtQA3CoEdq2Lvk-NX0TGA" annotatedElement="_KyaPMGveEdq4DLWZOhbdEA">
      <body>Parameters are extended in complete activities to add support for streaming, exceptions, and parameter sets.</body>
    </ownedComment>
    <ownedRule xmi:id="_SHTGC3CoEdq2Lvk-NX0TGA" name="connector_end" constrainedElement="_KyaPMGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SHTGDHCoEdq2Lvk-NX0TGA" annotatedElement="_SHTGC3CoEdq2Lvk-NX0TGA">
        <body>A parameter may only be associated with a connector end within the context of a collaboration.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SHTGDXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.end.notEmpty() implies self.collaboration.notEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNtQBHCoEdq2Lvk-NX0TGA" name="stream_and_exception" constrainedElement="_KyaPMGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SNtQBXCoEdq2Lvk-NX0TGA" annotatedElement="_SNtQBHCoEdq2Lvk-NX0TGA">
        <body>A parameter cannot be a stream and exception at the same time.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNtQBnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNtQB3CoEdq2Lvk-NX0TGA" name="not_exception" constrainedElement="_KyaPMGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SNtQCHCoEdq2Lvk-NX0TGA" annotatedElement="_SNtQB3CoEdq2Lvk-NX0TGA">
        <body>An input parameter cannot be an exception.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNtQCXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNtQCnCoEdq2Lvk-NX0TGA" name="reentrant_behaviors" constrainedElement="_KyaPMGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SNtQC3CoEdq2Lvk-NX0TGA" annotatedElement="_SNtQCnCoEdq2Lvk-NX0TGA">
        <body>Reentrant behaviors cannot have stream parameters.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNtQDHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SNtQDXCoEdq2Lvk-NX0TGA" name="in_and_out" constrainedElement="_KyaPMGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SNtQDnCoEdq2Lvk-NX0TGA" annotatedElement="_SNtQDXCoEdq2Lvk-NX0TGA">
        <body>Only in and inout parameters may have a delete effect. Only out, inout, and return parameters may have a create effect.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SNtQD3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_R00O4nCoEdq2Lvk-NX0TGA" general="_Gjgl0GveEdq4DLWZOhbdEA"/>
    <generalization xmi:id="_SHTGDnCoEdq2Lvk-NX0TGA" general="_SD3XnHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R00O6XCoEdq2Lvk-NX0TGA" name="direction" type="_R2AhuXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R00O6nCoEdq2Lvk-NX0TGA" annotatedElement="_R00O6XCoEdq2Lvk-NX0TGA">
        <body>Indicates whether a parameter is being sent into or out of a behavioral element.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_R7En4HCoEdq2Lvk-NX0TGA" instance="_R2Ahu3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R00O43CoEdq2Lvk-NX0TGA" name="default" type="_aAyVgGvsEdqG6fBIPwe-mw" isDerived="true">
      <eAnnotations xmi:id="_R00O5HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R00O5XCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R00O5nCoEdq2Lvk-NX0TGA" annotatedElement="_R00O43CoEdq2Lvk-NX0TGA">
        <body>Specifies a String that represents a value to be used when no argument is supplied for the Parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7En4XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7En4nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R7En43CoEdq2Lvk-NX0TGA" name="defaultValue" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SAvLBXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R7En5HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R7En5XCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R7En5nCoEdq2Lvk-NX0TGA" annotatedElement="_R7En43CoEdq2Lvk-NX0TGA">
        <body>Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7En53CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7En6HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R00O7HCoEdq2Lvk-NX0TGA" name="operation" type="_M4X2IGveEdq4DLWZOhbdEA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_R2wIrHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R00O7XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R00O7nCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R00O73CoEdq2Lvk-NX0TGA" annotatedElement="_R00O7HCoEdq2Lvk-NX0TGA">
        <body>References the Operation for which this is a formal parameter.</body>
      </ownedComment>
      <ownedComment xmi:id="_R7En6XCoEdq2Lvk-NX0TGA" annotatedElement="_R00O7HCoEdq2Lvk-NX0TGA">
        <body>References the Operation owning this parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7OY4HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7OY4XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNtQEHCoEdq2Lvk-NX0TGA" name="isException" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SNtQEXCoEdq2Lvk-NX0TGA" annotatedElement="_SNtQEHCoEdq2Lvk-NX0TGA">
        <body>Tells whether an output parameter may emit a value to the exclusion of the other outputs.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SNtQEnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNtQE3CoEdq2Lvk-NX0TGA" name="isStream" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SNtQFHCoEdq2Lvk-NX0TGA" annotatedElement="_SNtQE3CoEdq2Lvk-NX0TGA">
        <body>Tells whether an input parameter may accept values while its behavior is executing, or whether an output parameter post values while the behavior is executing.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SNtQFXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNtQFnCoEdq2Lvk-NX0TGA" name="effect" type="_SNjfAHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SNtQF3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SNtQGHCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SNtQGXCoEdq2Lvk-NX0TGA" annotatedElement="_SNtQFnCoEdq2Lvk-NX0TGA">
        <body>Specifies the effect that the owner of the parameter has on values passed in or out of the parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNtQGnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNtQG3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SN2Z8HCoEdq2Lvk-NX0TGA" name="parameterSet" type="_SNjfMXCoEdq2Lvk-NX0TGA" association="_SOJU7nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SN2Z8XCoEdq2Lvk-NX0TGA" annotatedElement="_SN2Z8HCoEdq2Lvk-NX0TGA">
        <body>The parameter sets containing the parameter. See ParameterSet.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SN2Z8nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SN2Z83CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_7UJKkFYJEdqrn7iZ0eqieg" name="getDefault" visibility="protected" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_-PwAEFYJEdqrn7iZ0eqieg" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4VLgQVYjEdqB6vblk3tuMA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4VLgQFYjEdqB6vblk3tuMA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_QKbgcWXCEdqEJs8umHJc9g" name="isSetDefault" visibility="protected" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_TKzhMGXCEdqEJs8umHJc9g" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_5FAasFYjEdqB6vblk3tuMA" name="setDefault" visibility="protected">
      <ownedParameter xmi:id="_7D0QwFYjEdqB6vblk3tuMA" name="newDefault" visibility="protected" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_VQnXIGXCEdqEJs8umHJc9g" name="unsetDefault" visibility="protected"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SN2aAXCoEdq2Lvk-NX0TGA" name="InterruptibleActivityRegion">
    <ownedComment xmi:id="_SN2aAnCoEdq2Lvk-NX0TGA" annotatedElement="_SN2aAXCoEdq2Lvk-NX0TGA">
      <body>An interruptible region contains activity nodes. When a token leaves an interruptible region via edges designated by the region as interrupting edges, all tokens and behaviors in the region are terminated.</body>
    </ownedComment>
    <ownedRule xmi:id="_SN2aA3CoEdq2Lvk-NX0TGA" name="interrupting_edges" constrainedElement="_SN2aAXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SN2aBHCoEdq2Lvk-NX0TGA" annotatedElement="_SN2aA3CoEdq2Lvk-NX0TGA">
        <body>Interrupting edges of a region must have their source node in the region and their target node outside the region in the same activity containing the region.

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SN2aBXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SN2aBnCoEdq2Lvk-NX0TGA" general="_SLnlYnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SN2aB3CoEdq2Lvk-NX0TGA" name="interruptingEdge" type="_SLwvUnCoEdq2Lvk-NX0TGA" association="_SOTF4HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SN2aCHCoEdq2Lvk-NX0TGA" annotatedElement="_SN2aB3CoEdq2Lvk-NX0TGA">
        <body>The edges leaving the region that will abort other tokens flowing in the region.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SN2aCXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SN2aCnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SN2aC3CoEdq2Lvk-NX0TGA" name="node" type="_SLnlf3CoEdq2Lvk-NX0TGA" subsettedProperty="_SLnlZXCoEdq2Lvk-NX0TGA" association="_SOTF4XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SN2aDHCoEdq2Lvk-NX0TGA" annotatedElement="_SN2aC3CoEdq2Lvk-NX0TGA">
        <body>Nodes immediately contained in the group.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SN2aDXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SN2aDnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_R00O8nCoEdq2Lvk-NX0TGA" name="BehavioralFeature">
    <ownedComment xmi:id="_R00O83CoEdq2Lvk-NX0TGA" annotatedElement="_R00O8nCoEdq2Lvk-NX0TGA">
      <body>A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances. BehavioralFeature is an abstract metaclass specializing Feature and Namespace. Kinds of behavioral aspects are modeled by subclasses of BehavioralFeature.</body>
    </ownedComment>
    <ownedComment xmi:id="_R67d8HCoEdq2Lvk-NX0TGA" annotatedElement="_R00O8nCoEdq2Lvk-NX0TGA">
      <body>A behavioral feature specifies that an instance of a classifier will respond to a designated request by invoking a behavior.

BehavioralFeature is an abstract metaclass specializing Feature and Namespace. Kinds of behavioral aspects are modeled by subclasses of BehavioralFeature.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SB7d0HCoEdq2Lvk-NX0TGA" annotatedElement="_R00O8nCoEdq2Lvk-NX0TGA">
      <body>A behavioral feature is implemented (realized) by a behavior. A behavioral feature specifies that a classifier will respond to a designated request by invoking its implementing method.</body>
    </ownedComment>
    <ownedComment xmi:id="_SN2aFnCoEdq2Lvk-NX0TGA" annotatedElement="_R00O8nCoEdq2Lvk-NX0TGA">
      <body>The concept of BehavioralFeature is extended to own ParameterSets.</body>
    </ownedComment>
    <generalization xmi:id="_R00O9HCoEdq2Lvk-NX0TGA" general="_RyIuUHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R00O9XCoEdq2Lvk-NX0TGA" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_R00O9nCoEdq2Lvk-NX0TGA" name="ownedParameter" type="_KyaPMGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_R2TcvHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R00O93CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R00O-HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R00O-XCoEdq2Lvk-NX0TGA" annotatedElement="_R00O9nCoEdq2Lvk-NX0TGA">
        <body>Specifies the ordered set of formal parameters of this BehavioralFeature.</body>
      </ownedComment>
      <ownedComment xmi:id="_R67d8XCoEdq2Lvk-NX0TGA" annotatedElement="_R00O9nCoEdq2Lvk-NX0TGA">
        <body>Specifies the ordered set of formal parameters owned by this BehavioralFeature. The parameter direction can be 'in', 'inout', 'out', pr 'return' to specify input, output, or return parameters.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R67d8nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R67d83CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SB7d0XCoEdq2Lvk-NX0TGA" name="isAbstract" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SB7d0nCoEdq2Lvk-NX0TGA" annotatedElement="_SB7d0XCoEdq2Lvk-NX0TGA">
        <body>If true, then the behavioral feature does not have an implementation, and one must be supplied by a more specific element. If false, the behavioral feature must have an implementation in the classifier or one must be inherited from a more general element.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SB7d03CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SB7d1HCoEdq2Lvk-NX0TGA" name="method" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SB7d_3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SB7d1XCoEdq2Lvk-NX0TGA" annotatedElement="_SB7d1HCoEdq2Lvk-NX0TGA">
        <body>A behavioral description that implements the behavioral feature. There may be at most one behavior for a particular pairing of a classifier (as owner of the behavior) and a behavioral feature (as specification of the behavior).</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SB7d1nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SB7d13CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFzRUnCoEdq2Lvk-NX0TGA" name="concurrency" type="_SGP9RHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SFzRU3CoEdq2Lvk-NX0TGA" annotatedElement="_SFzRUnCoEdq2Lvk-NX0TGA">
        <body>Specifies the semantics of concurrent calls to the same passive instance (i.e., an instance originating from a class with isActive being false). Active instances control access to their own behavioral features.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_SFzRVHCoEdq2Lvk-NX0TGA" type="_SGP9RHCoEdq2Lvk-NX0TGA" instance="_SGP9RnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R00O_HCoEdq2Lvk-NX0TGA" name="raisedException" type="_ynRtoGvtEdqG6fBIPwe-mw" association="_R2dNoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R00O_XCoEdq2Lvk-NX0TGA" annotatedElement="_R00O_HCoEdq2Lvk-NX0TGA">
        <body>References the Types representing exceptions that may be raised during an invocation of this feature.</body>
      </ownedComment>
      <ownedComment xmi:id="_SFzRVXCoEdq2Lvk-NX0TGA" annotatedElement="_R00O_HCoEdq2Lvk-NX0TGA">
        <body>The signals that the behavioral feature raises as exceptions.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFzRVnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFzRV3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SN2aF3CoEdq2Lvk-NX0TGA" name="ownedParameterSet" type="_SNjfMXCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SOTF7nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SN2aGHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SN2aGXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SN2aGnCoEdq2Lvk-NX0TGA" annotatedElement="_SN2aF3CoEdq2Lvk-NX0TGA">
        <body>The ParameterSets owned by this BehavioralFeature.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SN2aG3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SN2aHHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_R00PAHCoEdq2Lvk-NX0TGA" name="isDistinguishableFrom" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_R13X2XCoEdq2Lvk-NX0TGA" bodyCondition="_R00PAnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R00PAXCoEdq2Lvk-NX0TGA" annotatedElement="_R00PAHCoEdq2Lvk-NX0TGA">
        <body>The query isDistinguishableFrom() determines whether two BehavioralFeatures may coexist in the same Namespace. It specifies that they have to have different signatures.</body>
      </ownedComment>
      <ownedRule xmi:id="_R00PAnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R00PAHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R67d9nCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if n.oclIsKindOf(BehavioralFeature)
then
  if ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->notEmpty()
  then Set{}->including(self)->including(n)->isUnique(bf | bf.ownedParameter->collect(type))
  else true
  endif
else true
endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R00PBHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_R00PBXCoEdq2Lvk-NX0TGA" name="n" type="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedParameter xmi:id="_R00PBnCoEdq2Lvk-NX0TGA" name="ns" type="_ZiwkoGwLEdq7X4sGURiZYA"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_TUPtYGveEdq4DLWZOhbdEA" name="Behavior">
    <ownedComment xmi:id="_SBex5HCoEdq2Lvk-NX0TGA" annotatedElement="_TUPtYGveEdq4DLWZOhbdEA">
      <body>Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution.



A classifier behavior is always a definition of behavior and not an illustration. It describes the sequence of state changes an instance of a classifier may undergo in the course of its lifetime. Its precise semantics depends on the kind of classifier. For example, the classifier behavior of a collaboration represents emergent behavior of all the parts, whereas the classifier behavior of a class is just the behavior of instances of the class separated from the behaviors of any of its parts.

When a behavior is associated as the method of a behavioral feature, it defines the implementation of that feature; i.e., the computation that generates the effects of the behavioral feature.



As a classifier, a behavior can be specialized. Instantiating a behavior is referred to as &quot;invoking&quot; the behavior, an instantiated behavior is also called a behavior &quot;execution.&quot; A behavior may be invoked directly or its invocation may be the result of invoking the behavioral feature that specifies this behavior. A behavior can also be instantiated as an object in virtue of it being a class. The specification of a behavior can take a number of forms, as described in the subclasses of Behavior. Behavior is an abstract metaclass factoring out the commonalities of these different specification mechanisms.



When a behavior is invoked, its execution receives a set of input values that are used to affect the course of execution and as a result of its execution it produces a set of output values which are returned, as specified by its parameters. The observable effects of a behavior execution may include changes of values of various objects involved in the execution, the creation and destruction of objects, generation of communications between objects, as well as an explicit set of output values.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SOAK8HCoEdq2Lvk-NX0TGA" annotatedElement="_TUPtYGveEdq4DLWZOhbdEA">
      <body>The concept of Behavior is extended to own ParameterSets.</body>
    </ownedComment>
    <ownedRule xmi:id="_SBex5XCoEdq2Lvk-NX0TGA" name="parameters_match" constrainedElement="_TUPtYGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SBex5nCoEdq2Lvk-NX0TGA" annotatedElement="_SBex5XCoEdq2Lvk-NX0TGA">
        <body>The parameters of the behavior must match the parameters of the implemented behavioral feature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SBex53CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SBex6HCoEdq2Lvk-NX0TGA" name="feature_of_context_classifier" constrainedElement="_TUPtYGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SBex6XCoEdq2Lvk-NX0TGA" annotatedElement="_SBex6HCoEdq2Lvk-NX0TGA">
        <body>The implemented behavioral feature must be a feature (possibly inherited) of the context classifier of the behavior.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SBex6nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SBex63CoEdq2Lvk-NX0TGA" name="must_realize" constrainedElement="_TUPtYGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SBex7HCoEdq2Lvk-NX0TGA" annotatedElement="_SBex63CoEdq2Lvk-NX0TGA">
        <body>If the implemented behavioral feature has been redefined in the ancestors of the owner of the behavior, then the behavior must realize the latest redefining behavioral feature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SBex7XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SBex7nCoEdq2Lvk-NX0TGA" name="most_one_behaviour" constrainedElement="_TUPtYGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SBex73CoEdq2Lvk-NX0TGA" annotatedElement="_SBex7nCoEdq2Lvk-NX0TGA">
        <body>There may be at most one behavior for a given pairing of classifier (as owner of the behavior) and behavioral feature (as specification of the behavior).</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SBex8HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SBoi4HCoEdq2Lvk-NX0TGA" general="_00owUGvdEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SBoi4XCoEdq2Lvk-NX0TGA" name="isReentrant" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SBoi4nCoEdq2Lvk-NX0TGA" annotatedElement="_SBoi4XCoEdq2Lvk-NX0TGA">
        <body>Tells whether the behavior can be invoked while it is still executing from a previous invocation.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SBoi43CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SBoi5HCoEdq2Lvk-NX0TGA" name="redefinedBehavior" type="_TUPtYGveEdq4DLWZOhbdEA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_SB7d-nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SBoi5XCoEdq2Lvk-NX0TGA" annotatedElement="_SBoi5HCoEdq2Lvk-NX0TGA">
        <body>References a behavior that this behavior redefines. A subtype of Behavior may redefine any other subtype of Behavior. If the behavior implements a behavioral feature, it replaces the redefined behavior. If the behavior is a classifier behavior, it extends the redefined behavior.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBoi5nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBoi53CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SBoi6HCoEdq2Lvk-NX0TGA" name="specification" type="_R00O8nCoEdq2Lvk-NX0TGA" association="_SB7d_3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SBoi6XCoEdq2Lvk-NX0TGA" annotatedElement="_SBoi6HCoEdq2Lvk-NX0TGA">
        <body>Designates a behavioral feature that the behavior implements. The behavioral feature must be owned by the classifier that owns the behavior or be inherited by it. The parameters of the behavioral feature and the implementing behavior must match. If a behavior does not have a specification, it is directly associated with a classifier (i.e., it is the behavior of the classifier as a whole).</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBoi6nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBoi63CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SBoi7HCoEdq2Lvk-NX0TGA" name="ownedParameter" type="_KyaPMGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SB7eAHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SBoi7XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SBoi7nCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SBoi73CoEdq2Lvk-NX0TGA" annotatedElement="_SBoi7HCoEdq2Lvk-NX0TGA">
        <body>References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavior completes its execution.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBoi8HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBoi8XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SBoi8nCoEdq2Lvk-NX0TGA" name="context" type="_iY7sMGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" subsettedProperty="_RzCGOXCoEdq2Lvk-NX0TGA" association="_SCFO0HCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SBoi83CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SBoi9HCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SBoi9XCoEdq2Lvk-NX0TGA" annotatedElement="_SBoi8nCoEdq2Lvk-NX0TGA">
        <body>The classifier that is the context for the execution of the behavior. If the behavior is owned by a BehavioredClassifier, that classifier is the context. Otherwise, the context is the first BehavioredClassifier reached by following the chain of owner relationships. For example, following this algorithm, the context of an entry action in a state machine is the classifier that owns the state machine. The features of the context classifier as well as the elements visible to the context classifier are visible to the behavior.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SBoi9nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SBoi93CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOAK8XCoEdq2Lvk-NX0TGA" name="ownedParameterSet" type="_SNjfMXCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SOTF83CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SOAK8nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SOAK83CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SOAK9HCoEdq2Lvk-NX0TGA" annotatedElement="_SOAK8XCoEdq2Lvk-NX0TGA">
        <body>The ParameterSets owned by this Behavior.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOAK9XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOAK9nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_Zp2iwFYgEdqB6vblk3tuMA" name="getContext" visibility="protected" type="_iY7sMGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_flYtEFYgEdqB6vblk3tuMA" type="_iY7sMGvsEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FIHcsVYjEdqB6vblk3tuMA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FIHcsFYjEdqB6vblk3tuMA"/>
      </returnResult>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJO_zXCoEdq2Lvk-NX0TGA" name="Pin">
    <ownedComment xmi:id="_SJO_znCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_zXCoEdq2Lvk-NX0TGA">
      <body>A pin is a typed element and multiplicity element that provides values to actions and accept result values from them.</body>
    </ownedComment>
    <ownedComment xmi:id="_SMERQHCoEdq2Lvk-NX0TGA" annotatedElement="_SJO_zXCoEdq2Lvk-NX0TGA">
      <body>A pin is an object node for inputs and outputs to actions.</body>
    </ownedComment>
    <ownedRule xmi:id="_SOAK93CoEdq2Lvk-NX0TGA" name="control_pins" constrainedElement="_SJO_zXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOAK-HCoEdq2Lvk-NX0TGA" annotatedElement="_SOAK93CoEdq2Lvk-NX0TGA">
        <body>Control pins have a control type</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SOAK-XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>isControl implies isControlType</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SMERQXCoEdq2Lvk-NX0TGA" general="_SLwvRXCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SOAK-nCoEdq2Lvk-NX0TGA" name="isControl" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SOAK-3CoEdq2Lvk-NX0TGA" annotatedElement="_SOAK-nCoEdq2Lvk-NX0TGA">
        <body>Tells whether the pins provide data to the actions, or just controls when it executes it.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SOAK_HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOJU4nCoEdq2Lvk-NX0TGA" name="A_weight_activityEdge" memberEnd="_SNjfBnCoEdq2Lvk-NX0TGA _SOJU5HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SOJU43CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SOJU5HCoEdq2Lvk-NX0TGA" type="_SLwvUnCoEdq2Lvk-NX0TGA" association="_SOJU4nCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOJU5XCoEdq2Lvk-NX0TGA" name="A_upperBound_objectNode" memberEnd="_SNjfHXCoEdq2Lvk-NX0TGA _SOJU53CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SOJU5nCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SOJU53CoEdq2Lvk-NX0TGA" type="_SLwvRXCoEdq2Lvk-NX0TGA" association="_SOJU5XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOJU6HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOJU6XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOJU6nCoEdq2Lvk-NX0TGA" name="A_inState_objectNode" memberEnd="_SNjfI3CoEdq2Lvk-NX0TGA _SOJU63CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SOJU63CoEdq2Lvk-NX0TGA" type="_SLwvRXCoEdq2Lvk-NX0TGA" association="_SOJU6nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOJU7HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOJU7XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOJU7nCoEdq2Lvk-NX0TGA" name="A_parameterSet_parameter" memberEnd="_SN2Z8HCoEdq2Lvk-NX0TGA _SNjfPXCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOJU73CoEdq2Lvk-NX0TGA" name="A_transformation_objectFlow" memberEnd="_SNZuK3CoEdq2Lvk-NX0TGA _SOJU8HCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SOJU8HCoEdq2Lvk-NX0TGA" type="_SLwveXCoEdq2Lvk-NX0TGA" association="_SOJU73CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOJU8XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOJU8nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOJU83CoEdq2Lvk-NX0TGA" name="A_action_localPrecondition" memberEnd="_SOJU9XCoEdq2Lvk-NX0TGA _SN2Z9XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SOJU9HCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SOJU9XCoEdq2Lvk-NX0TGA" type="_SJYJ8XCoEdq2Lvk-NX0TGA" association="_SOJU83CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOJU9nCoEdq2Lvk-NX0TGA" name="A_action_localPostcondition" memberEnd="_SOJU-HCoEdq2Lvk-NX0TGA _SN2Z-3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SOJU93CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SOJU-HCoEdq2Lvk-NX0TGA" type="_SJYJ8XCoEdq2Lvk-NX0TGA" association="_SOJU9nCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOTF4HCoEdq2Lvk-NX0TGA" name="A_interruptingEdge_interrupts" memberEnd="_SNjfDHCoEdq2Lvk-NX0TGA _SN2aB3CoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOTF4XCoEdq2Lvk-NX0TGA" name="A_inInterruptibleRegion_node" memberEnd="_SN2aC3CoEdq2Lvk-NX0TGA _SN2aEHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SOTF4nCoEdq2Lvk-NX0TGA" general="_SLwvQHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOTF43CoEdq2Lvk-NX0TGA" name="A_selection_objectFlow" memberEnd="_SOTF5HCoEdq2Lvk-NX0TGA _SNZuL3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SOTF5HCoEdq2Lvk-NX0TGA" type="_SLwveXCoEdq2Lvk-NX0TGA" association="_SOTF43CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOTF5XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOTF5nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOTF53CoEdq2Lvk-NX0TGA" name="A_selection_objectNode" memberEnd="_SNjfJ3CoEdq2Lvk-NX0TGA _SOTF6HCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SOTF6HCoEdq2Lvk-NX0TGA" type="_SLwvRXCoEdq2Lvk-NX0TGA" association="_SOTF53CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOTF6XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOTF6nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOTF63CoEdq2Lvk-NX0TGA" name="A_condition_parameterSet" memberEnd="_SNjfQXCoEdq2Lvk-NX0TGA _SOTF7XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SOTF7HCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SOTF7XCoEdq2Lvk-NX0TGA" type="_SNjfMXCoEdq2Lvk-NX0TGA" association="_SOTF63CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOTF7nCoEdq2Lvk-NX0TGA" name="A_ownedParameterSet_behavioralFeature" memberEnd="_SN2aF3CoEdq2Lvk-NX0TGA _SOTF8HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SOTF73CoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SOTF8HCoEdq2Lvk-NX0TGA" type="_R00O8nCoEdq2Lvk-NX0TGA" association="_SOTF7nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOTF8XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOTF8nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOTF83CoEdq2Lvk-NX0TGA" name="A_ownedParameterSet_behavior" memberEnd="_SOAK8XCoEdq2Lvk-NX0TGA _SOTF9XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SOTF9HCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SOTF9XCoEdq2Lvk-NX0TGA" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SOTF83CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOTF9nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOTF93CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOc24HCoEdq2Lvk-NX0TGA" name="A_joinSpec_joinNode" memberEnd="_SNZuDXCoEdq2Lvk-NX0TGA _SOc24nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SOc24XCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SOc24nCoEdq2Lvk-NX0TGA" type="_SNGzF3CoEdq2Lvk-NX0TGA" association="_SOc24HCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SOc243CoEdq2Lvk-NX0TGA" name="Variable">
    <ownedComment xmi:id="_SOc25HCoEdq2Lvk-NX0TGA" annotatedElement="_SOc243CoEdq2Lvk-NX0TGA">
      <body>A variable specifies data storage shared by the actions within a group. There are actions to write and read variables. These actions are treated as side effecting actions, similar to the actions to write and read object attributes and associations. There are no sequencing constraints among actions that access the same variable. Such actions must be explicitly coordinated by control flows or other constraints.



Any values contained by a variable must conform to the type of the variable and have cardinalities allowed by the multiplicity of the variable.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SOc25XCoEdq2Lvk-NX0TGA" name="owned" constrainedElement="_SOc243CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc25nCoEdq2Lvk-NX0TGA" annotatedElement="_SOc25XCoEdq2Lvk-NX0TGA">
        <body>A variable is owned by a StructuredNode or Activity, but not both.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SOc253CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SOc26HCoEdq2Lvk-NX0TGA" general="_RzLQIHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SOc26XCoEdq2Lvk-NX0TGA" general="_Gjgl0GveEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SOc26nCoEdq2Lvk-NX0TGA" name="scope" type="_SOc2_HCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SOvx1HCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SOc263CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SOc27HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SOc27XCoEdq2Lvk-NX0TGA" annotatedElement="_SOc26nCoEdq2Lvk-NX0TGA">
        <body>A structured activity node that owns the variable.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc27nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc273CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc28HCoEdq2Lvk-NX0TGA" name="activityScope" type="_SLnlUHCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SO5i7HCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SOc28XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SOc28nCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SOc283CoEdq2Lvk-NX0TGA" annotatedElement="_SOc28HCoEdq2Lvk-NX0TGA">
        <body>An activity that owns the variable.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc29HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc29XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SOc29nCoEdq2Lvk-NX0TGA" name="isAccessibleBy" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SOc2-HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc293CoEdq2Lvk-NX0TGA" annotatedElement="_SOc29nCoEdq2Lvk-NX0TGA">
        <body>The isAccessibleBy() operation is not defined in standard UML. Implementations should define it to specify which actions can access a variable.

</body>
      </ownedComment>
      <ownedRule xmi:id="_SOc2-HCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SOc29nCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SOc2-XCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SOc2-nCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SOc2-3CoEdq2Lvk-NX0TGA" name="a" type="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SLnlUHCoEdq2Lvk-NX0TGA" name="Activity">
    <ownedComment xmi:id="_SLnlUXCoEdq2Lvk-NX0TGA" annotatedElement="_SLnlUHCoEdq2Lvk-NX0TGA">
      <body>An activity specifies the coordination of executions of subordinate behaviors, using a control and data flow model. The subordinate behaviors coordinated by these models may be initiated because other behaviors in the model finish executing, because objects and data become available, or because events occur external to the flow. The flow of execution is modeled as activity nodes connected by activity edges. A node can be the execution of a subordinate behavior, such as an arithmetic computation, a call to an operation, or manipulation of object contents. Activity nodes also include flow-of-control constructs, such as synchronization, decision, and concurrency control. Activities may form invocation hierarchies invoking other activities, ultimately resolving to individual actions. In an object-oriented model, activities are usually invoked indirectly as methods bound to operations that are directly invoked. 



Activities may describe procedural computation. In this context, they are the methods corresponding to operations on classes. Activities may be applied to organizational modeling for business process engineering and workflow. In this context, events often originate from inside the system, such as the finishing of a task, but also from outside the system, such as a customer call. Activities can also be used for information system modeling to specify system level processes. Activities may contain actions of various kinds:

- occurrences of primitive functions, such as arithmetic functions.

- invocations of behavior, such as activities.

- communication actions, such as sending of signals.

- manipulations of objects, such as reading or writing attributes or associations.



Actions have no further decomposition in the activity containing them. However, the execution of a single action may induce the execution of many other actions. For example, a call action invokes an operation which is implemented by an activity containing actions that execute before the call action completes.</body>
    </ownedComment>
    <ownedRule xmi:id="_SLnlUnCoEdq2Lvk-NX0TGA" name="no_supergroups" constrainedElement="_SLnlUHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLnlU3CoEdq2Lvk-NX0TGA" annotatedElement="_SLnlUnCoEdq2Lvk-NX0TGA">
        <body>The groups of an activity have no supergroups.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLnlVHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SMERQnCoEdq2Lvk-NX0TGA" name="activity_parameter_node" constrainedElement="_SLnlUHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SMERQ3CoEdq2Lvk-NX0TGA" annotatedElement="_SMERQnCoEdq2Lvk-NX0TGA">
        <body>The nodes of the activity must include one ActivityParameterNode for each parameter.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SMERRHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SMERRXCoEdq2Lvk-NX0TGA" name="autonomous" constrainedElement="_SLnlUHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SMERRnCoEdq2Lvk-NX0TGA" annotatedElement="_SMERRXCoEdq2Lvk-NX0TGA">
        <body>An activity cannot be autonomous and have a classifier or behavioral feature context at the same time.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SMERR3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SLnlVXCoEdq2Lvk-NX0TGA" general="_TUPtYGveEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SMERSHCoEdq2Lvk-NX0TGA" name="isReadOnly" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SMERSXCoEdq2Lvk-NX0TGA" annotatedElement="_SMERSHCoEdq2Lvk-NX0TGA">
        <body>If true, this activity must not make any changes to variables outside the activity or to objects. (This is an assertion, not an executable property. It may be used by an execution engine to optimize model execution. If the assertion is violated by the action, then the model is ill-formed.) The default is false (an activity may make nonlocal changes).</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SMERSnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SMERS3CoEdq2Lvk-NX0TGA" name="edge" type="_SLwvUnCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SMERUXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SMERTHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SMERTXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SMERTnCoEdq2Lvk-NX0TGA" annotatedElement="_SMERS3CoEdq2Lvk-NX0TGA">
        <body>Edges expressing flow between nodes of the activity.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SMERT3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SMERUHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNQkG3CoEdq2Lvk-NX0TGA" name="partition" type="_SM9CEHCoEdq2Lvk-NX0TGA" subsettedProperty="_SLnlXHCoEdq2Lvk-NX0TGA" association="_SNZuAHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNQkHHCoEdq2Lvk-NX0TGA" annotatedElement="_SNQkG3CoEdq2Lvk-NX0TGA">
        <body>Top-level partitions in the activity.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNQkHXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNQkHnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNtQAHCoEdq2Lvk-NX0TGA" name="isSingleExecution" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SNtQAXCoEdq2Lvk-NX0TGA" annotatedElement="_SNtQAHCoEdq2Lvk-NX0TGA">
        <body>If true, all invocations of the activity are handled by the same execution.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SNtQAnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOmA0HCoEdq2Lvk-NX0TGA" name="structuredNode" type="_SOc2_HCoEdq2Lvk-NX0TGA" isReadOnly="true" isDerived="true" subsettedProperty="_SLnlVnCoEdq2Lvk-NX0TGA _SLnlXHCoEdq2Lvk-NX0TGA" association="_SO5i6XCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SOmA0XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SOmA0nCoEdq2Lvk-NX0TGA" isTransient="true" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SOmA03CoEdq2Lvk-NX0TGA" annotatedElement="_SOmA0HCoEdq2Lvk-NX0TGA">
        <body>Top-level structured nodes in the activity.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOmA1HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOmA1XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOmA1nCoEdq2Lvk-NX0TGA" name="variable" type="_SOc243CoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SO5i7HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SOmA13CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SOmA2HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SOmA2XCoEdq2Lvk-NX0TGA" annotatedElement="_SOmA1nCoEdq2Lvk-NX0TGA">
        <body>Top-level variables in the activity.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOmA2nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOmA23CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLnlXHCoEdq2Lvk-NX0TGA" name="group" type="_SLnlYnCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SLwvQXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SLnlXXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SLnlXnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SLnlX3CoEdq2Lvk-NX0TGA" annotatedElement="_SLnlXHCoEdq2Lvk-NX0TGA">
        <body>Top-level groups in the activity.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOmA3HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOmA3XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLnlVnCoEdq2Lvk-NX0TGA" name="node" type="_SLnlf3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SLnljnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SLnlV3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SLnlWHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SLnlWXCoEdq2Lvk-NX0TGA" annotatedElement="_SLnlVnCoEdq2Lvk-NX0TGA">
        <body>Nodes coordinated by the activity.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOmA3nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOmA33CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SLnlf3CoEdq2Lvk-NX0TGA" name="ActivityNode" isAbstract="true">
    <ownedComment xmi:id="_SL6gcXCoEdq2Lvk-NX0TGA" annotatedElement="_SLnlf3CoEdq2Lvk-NX0TGA">
      <body>An activity node is an abstract class for the steps of an activity. It covers executable nodes, control nodes, and object nodes. Nodes can be replaced in generalization.</body>
    </ownedComment>
    <ownedComment xmi:id="_SN2aD3CoEdq2Lvk-NX0TGA" annotatedElement="_SLnlf3CoEdq2Lvk-NX0TGA">
      <body>An activity node is an abstract class for the steps of an activity. It covers executable nodes, control nodes, and object nodes. Nodes can be contained in interruptible regions.</body>
    </ownedComment>
    <ownedComment xmi:id="_SLnlgHCoEdq2Lvk-NX0TGA" annotatedElement="_SLnlf3CoEdq2Lvk-NX0TGA">
      <body>An activity node is an abstract class for the steps of an activity. It covers executable nodes, control nodes, and object nodes.</body>
    </ownedComment>
    <ownedRule xmi:id="_SL6gcnCoEdq2Lvk-NX0TGA" name="owned" constrainedElement="_SLnlf3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gc3CoEdq2Lvk-NX0TGA" annotatedElement="_SL6gcnCoEdq2Lvk-NX0TGA">
        <body>Activity nodes can only be owned by activities or groups.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SL6gdHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SOmA4HCoEdq2Lvk-NX0TGA" name="owned_structured_node" constrainedElement="_SLnlf3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOmA4XCoEdq2Lvk-NX0TGA" annotatedElement="_SOmA4HCoEdq2Lvk-NX0TGA">
        <body>Activity nodes may be owned by at most one structured node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SOmA4nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SL6gdXCoEdq2Lvk-NX0TGA" general="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SL6gdnCoEdq2Lvk-NX0TGA" name="outgoing" type="_SLwvUnCoEdq2Lvk-NX0TGA" association="_SMz4IHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gd3CoEdq2Lvk-NX0TGA" annotatedElement="_SL6gdnCoEdq2Lvk-NX0TGA">
        <body>Edges that have the node as source.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SL6geHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SL6geXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SL6genCoEdq2Lvk-NX0TGA" name="incoming" type="_SLwvUnCoEdq2Lvk-NX0TGA" association="_SMz4IXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6ge3CoEdq2Lvk-NX0TGA" annotatedElement="_SL6genCoEdq2Lvk-NX0TGA">
        <body>Edges that have the node as target.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SL6gfHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SL6gfXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SL6gfnCoEdq2Lvk-NX0TGA" name="redefinedNode" type="_SLnlf3CoEdq2Lvk-NX0TGA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_SMz4JXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gf3CoEdq2Lvk-NX0TGA" annotatedElement="_SL6gfnCoEdq2Lvk-NX0TGA">
        <body>Inherited nodes replaced by this node in a specialization of the activity.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SL6ggHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SL6ggXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SM9CS3CoEdq2Lvk-NX0TGA" name="inPartition" type="_SM9CEHCoEdq2Lvk-NX0TGA" subsettedProperty="_SLnliHCoEdq2Lvk-NX0TGA" association="_SNGzIHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CTHCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CS3CoEdq2Lvk-NX0TGA">
        <body>Partitions containing the node.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SM9CTXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SM9CTnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SN2aEHCoEdq2Lvk-NX0TGA" name="inInterruptibleRegion" type="_SN2aAXCoEdq2Lvk-NX0TGA" subsettedProperty="_SLnliHCoEdq2Lvk-NX0TGA" association="_SOTF4XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SN2aEXCoEdq2Lvk-NX0TGA" annotatedElement="_SN2aEHCoEdq2Lvk-NX0TGA">
        <body>Interruptible regions containing the node.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SN2aEnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SN2aE3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOmA43CoEdq2Lvk-NX0TGA" name="inStructuredNode" type="_SOc2_HCoEdq2Lvk-NX0TGA" subsettedProperty="_SLnliHCoEdq2Lvk-NX0TGA" association="_SOvx1nCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SOmA5HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SOmA5XCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SOmA5nCoEdq2Lvk-NX0TGA" annotatedElement="_SOmA43CoEdq2Lvk-NX0TGA">
        <body>Structured activity node containing the node.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOmA53CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOmA6HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLnliHCoEdq2Lvk-NX0TGA" name="inGroup" type="_SLnlYnCoEdq2Lvk-NX0TGA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_SLwvQHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SLnliXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SLnlinCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SLnli3CoEdq2Lvk-NX0TGA" annotatedElement="_SLnliHCoEdq2Lvk-NX0TGA">
        <body>Groups containing the node. Multiplicity specialized to [0..1] for StructuredActivity-Group.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOmA6XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOmA6nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLnlgnCoEdq2Lvk-NX0TGA" name="activity" type="_SLnlUHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SLnljnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SLnlg3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SLnlhHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SLnlhXCoEdq2Lvk-NX0TGA" annotatedElement="_SLnlgnCoEdq2Lvk-NX0TGA">
        <body>Activity containing the node.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOmA63CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOmA7HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SOmA8HCoEdq2Lvk-NX0TGA" name="SequenceNode">
    <ownedComment xmi:id="_SOmA8XCoEdq2Lvk-NX0TGA" annotatedElement="_SOmA8HCoEdq2Lvk-NX0TGA">
      <body>A sequence node is a structured activity node that executes its actions in order.</body>
    </ownedComment>
    <generalization xmi:id="_SOmA8nCoEdq2Lvk-NX0TGA" general="_SOc2_HCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SOmA83CoEdq2Lvk-NX0TGA" name="executableNode" type="_SOmA7XCoEdq2Lvk-NX0TGA" isOrdered="true" redefinedProperty="_SOc3B3CoEdq2Lvk-NX0TGA" association="_SO5i7nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SOmA9HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SOmA9XCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SOmA9nCoEdq2Lvk-NX0TGA" annotatedElement="_SOmA83CoEdq2Lvk-NX0TGA">
        <body>An ordered set of executable nodes.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOmA93CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOmA-HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SJYJ8XCoEdq2Lvk-NX0TGA" name="Action">
    <ownedComment xmi:id="_SJYJ8nCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ8XCoEdq2Lvk-NX0TGA">
      <body>An action is a named element that is the fundamental unit of executable functionality. The execution of an action represents some transformation or processing in the modeled system, be it a computer system or otherwise.</body>
    </ownedComment>
    <ownedComment xmi:id="_SN2Z9HCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ8XCoEdq2Lvk-NX0TGA">
      <body>An action may have sets of incoming and outgoing activity edges that specify control flow and data flow from and to other nodes. An action will not begin execution until all of its input conditions are satisfied. The completion of the execution of an action may enable the execution of a set of successor nodes and actions that take their inputs from the outputs of the action. In CompleteActivities, action is extended to have pre- and postconditions.</body>
    </ownedComment>
    <ownedComment xmi:id="_SLnlfXCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ8XCoEdq2Lvk-NX0TGA">
      <body>An action may have sets of incoming and outgoing activity edges that specify control flow and data flow from and to other nodes. An action will not begin execution until all of its input conditions are satisfied. The completion of the execution of an action may enable the execution of a set of successor nodes and actions that take their inputs from the outputs of the action.</body>
    </ownedComment>
    <generalization xmi:id="_SOmA-XCoEdq2Lvk-NX0TGA" general="_SOmA7XCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SJYJ9HCoEdq2Lvk-NX0TGA" name="output" type="_SJO_3HCoEdq2Lvk-NX0TGA" isOrdered="true" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SJh6tHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SJYJ9XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SJYJ9nCoEdq2Lvk-NX0TGA" isTransient="true" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SJYJ93CoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ9HCoEdq2Lvk-NX0TGA">
        <body>The ordered set of output pins connected to the Action. The action places its results onto pins in this set.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJYJ-HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJYJ-XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJYJ-nCoEdq2Lvk-NX0TGA" name="input" type="_SJO_33CoEdq2Lvk-NX0TGA" isOrdered="true" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SJh6uXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SJYJ-3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SJYJ_HCoEdq2Lvk-NX0TGA" isTransient="true" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SJYJ_XCoEdq2Lvk-NX0TGA" annotatedElement="_SJYJ-nCoEdq2Lvk-NX0TGA">
        <body>The ordered set of input pins connected to the Action. These are among the total set of inputs.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJYJ_nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJYJ_3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJYKAHCoEdq2Lvk-NX0TGA" name="context" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" association="_SJrroHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SJYKAXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SJYKAnCoEdq2Lvk-NX0TGA" isTransient="true" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SJYKA3CoEdq2Lvk-NX0TGA" annotatedElement="_SJYKAHCoEdq2Lvk-NX0TGA">
        <body>The classifier that owns the behavior of which this action is a part.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJYKBHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJYKBXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SN2Z9XCoEdq2Lvk-NX0TGA" name="localPrecondition" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SOJU83CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SN2Z9nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SN2Z93CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SN2Z-HCoEdq2Lvk-NX0TGA" annotatedElement="_SN2Z9XCoEdq2Lvk-NX0TGA">
        <body>Constraint that must be satisfied when execution is started.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SN2Z-XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SN2Z-nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SN2Z-3CoEdq2Lvk-NX0TGA" name="localPostcondition" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SOJU9nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SN2Z_HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SN2Z_XCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SN2Z_nCoEdq2Lvk-NX0TGA" annotatedElement="_SN2Z-3CoEdq2Lvk-NX0TGA">
        <body>Constraint that must be satisfied when executed is completed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SN2Z_3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SN2aAHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOvx1HCoEdq2Lvk-NX0TGA" name="A_scope_variable" memberEnd="_SOc3AXCoEdq2Lvk-NX0TGA _SOc26nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SOvx1XCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOvx1nCoEdq2Lvk-NX0TGA" name="A_node_inStructuredNode" memberEnd="_SOmA43CoEdq2Lvk-NX0TGA _SOc3B3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SOvx13CoEdq2Lvk-NX0TGA" general="_SLwvQHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOvx2HCoEdq2Lvk-NX0TGA" name="A_clause_test" memberEnd="_SOvx2XCoEdq2Lvk-NX0TGA _SOc3PnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SOvx2XCoEdq2Lvk-NX0TGA" type="_SOc3OHCoEdq2Lvk-NX0TGA" association="_SOvx2HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOvx2nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOvx23CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOvx3HCoEdq2Lvk-NX0TGA" name="A_clause_body" memberEnd="_SOvx3XCoEdq2Lvk-NX0TGA _SOc3QnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SOvx3XCoEdq2Lvk-NX0TGA" type="_SOc3OHCoEdq2Lvk-NX0TGA" association="_SOvx3HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOvx3nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOvx33CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SOvx4HCoEdq2Lvk-NX0TGA" name="A_predecessorClause_successorClause" memberEnd="_SOc3RnCoEdq2Lvk-NX0TGA _SOc3SnCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SO5i0HCoEdq2Lvk-NX0TGA" name="A_loopNode_bodyPart" memberEnd="_SO5i0XCoEdq2Lvk-NX0TGA _SOc3KHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SO5i0XCoEdq2Lvk-NX0TGA" type="_SOc3InCoEdq2Lvk-NX0TGA" association="_SO5i0HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SO5i0nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SO5i03CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SO5i1HCoEdq2Lvk-NX0TGA" name="A_loopNode_setupPart" memberEnd="_SO5i1XCoEdq2Lvk-NX0TGA _SOc3LHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SO5i1XCoEdq2Lvk-NX0TGA" type="_SOc3InCoEdq2Lvk-NX0TGA" association="_SO5i1HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SO5i1nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SO5i13CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SO5i2HCoEdq2Lvk-NX0TGA" name="A_clause_conditionalNode" memberEnd="_SOc3HHCoEdq2Lvk-NX0TGA _SO5i2nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SO5i2XCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SO5i2nCoEdq2Lvk-NX0TGA" type="_SOc3E3CoEdq2Lvk-NX0TGA" association="_SO5i2HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SO5i23CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SO5i3HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SO5i3XCoEdq2Lvk-NX0TGA" name="A_decider_clause" memberEnd="_SOc3TnCoEdq2Lvk-NX0TGA _SO5i3nCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SO5i3nCoEdq2Lvk-NX0TGA" type="_SOc3OHCoEdq2Lvk-NX0TGA" association="_SO5i3XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SO5i33CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SO5i4HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SO5i4XCoEdq2Lvk-NX0TGA" name="A_decider_loopNode" memberEnd="_SO5i4nCoEdq2Lvk-NX0TGA _SOc3MHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SO5i4nCoEdq2Lvk-NX0TGA" type="_SOc3InCoEdq2Lvk-NX0TGA" association="_SO5i4XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SO5i43CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SO5i5HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SO5i5XCoEdq2Lvk-NX0TGA" name="A_test_loopNode" memberEnd="_SO5i5nCoEdq2Lvk-NX0TGA _SOc3NHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SO5i5nCoEdq2Lvk-NX0TGA" type="_SOc3InCoEdq2Lvk-NX0TGA" association="_SO5i5XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SO5i53CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SO5i6HCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SO5i6XCoEdq2Lvk-NX0TGA" name="A_activity_structuredNode" memberEnd="_SOc3DXCoEdq2Lvk-NX0TGA _SOmA0HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SO5i6nCoEdq2Lvk-NX0TGA" general="_SLnljnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SO5i63CoEdq2Lvk-NX0TGA" general="_SLwvQXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SO5i7HCoEdq2Lvk-NX0TGA" name="A_variable_activityScope" memberEnd="_SOc28HCoEdq2Lvk-NX0TGA _SOmA1nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SO5i7XCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SO5i7nCoEdq2Lvk-NX0TGA" name="A_executableNode_sequenceNode" memberEnd="_SOmA83CoEdq2Lvk-NX0TGA _SO5i8HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SO5i73CoEdq2Lvk-NX0TGA" general="_SOvx1nCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SO5i8HCoEdq2Lvk-NX0TGA" type="_SOmA8HCoEdq2Lvk-NX0TGA" association="_SO5i7nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SO5i8XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SO5i8nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLwvQHCoEdq2Lvk-NX0TGA" name="A_containedNode_inGroup" memberEnd="_SLnliHCoEdq2Lvk-NX0TGA _SLnlZXCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLwvQXCoEdq2Lvk-NX0TGA" name="A_group_inActivity" memberEnd="_SLnlXHCoEdq2Lvk-NX0TGA _SLnla3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLwvQnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SLnljnCoEdq2Lvk-NX0TGA" name="A_node_activity" memberEnd="_SLnlgnCoEdq2Lvk-NX0TGA _SLnlVnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SLnlj3CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SOc3E3CoEdq2Lvk-NX0TGA" name="ConditionalNode">
    <ownedComment xmi:id="_SOc3FHCoEdq2Lvk-NX0TGA" annotatedElement="_SOc3E3CoEdq2Lvk-NX0TGA">
      <body>A conditional node consists of one or more clauses. Each clause consists of a test section and a body section. When the conditional node begins execution, the test sections of the clauses are executed. If one or more test sections yield a true value, one of the corresponding body sections will be executed. If more than one test section yields a true value, only one body section will be executed. The choice is nondeterministic unless the test sequence of clauses is specified. If no test section yields a true value, then no body section is executed; this may be a semantic error if output values are expected from the conditional node.



In general, test section may be executed in any order, including simultaneously (if the underlying execution architecture supports it). The result may therefore be nondeterministic if more than one test section can be true concurrently. To enforce ordering of evaluation, sequencing constraints may be specified among clauses. One frequent case is a total ordering of clauses, in which case the clause execution order is determinate. If it is impossible for more than one test section to evaluate true simultaneously, the result is deterministic and it is unnecessary to order the clauses, as ordering may impose undesirable and unnecessary restrictions on implementation. Note that, although evaluation of test sections may be specified as concurrent, this does not require that the implementation evaluate them in parallel; it merely means that the model does not impose any order on evaluation.



An &quot;else&quot; clause is a clause that is a successor to all other clauses in the conditional and whose test part always returns true.



Output values created in the test or body section of a clause are potentially available for use outside the conditional. However, any value used outside the conditional must be created in every clause, otherwise an undefined value would be accessed if a clause not defining the value were executed.</body>
    </ownedComment>
    <ownedRule xmi:id="_SPCswHCoEdq2Lvk-NX0TGA" name="result_no_incoming" constrainedElement="_SOc3E3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPCswXCoEdq2Lvk-NX0TGA" annotatedElement="_SPCswHCoEdq2Lvk-NX0TGA">
        <body>The result output pins have no incoming edges.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPCswnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SOc3FXCoEdq2Lvk-NX0TGA" general="_SOc2_HCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SOc3FnCoEdq2Lvk-NX0TGA" name="isDeterminate" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SOc3F3CoEdq2Lvk-NX0TGA" annotatedElement="_SOc3FnCoEdq2Lvk-NX0TGA">
        <body>If true, the modeler asserts that at most one test will succeed.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SOc3GHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3GXCoEdq2Lvk-NX0TGA" name="isAssured" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SOc3GnCoEdq2Lvk-NX0TGA" annotatedElement="_SOc3GXCoEdq2Lvk-NX0TGA">
        <body>If true, the modeler asserts that at least one test will succeed.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SOc3G3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3HHCoEdq2Lvk-NX0TGA" name="clause" type="_SOc3OHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SO5i2HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SOc3HXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SOc3HnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SOc3H3CoEdq2Lvk-NX0TGA" annotatedElement="_SOc3HHCoEdq2Lvk-NX0TGA">
        <body>Set of clauses composing the conditional.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3IHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3IXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPCsw3CoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" isOrdered="true" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SPVnsnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SPCsxHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SPCsxXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPCsxnCoEdq2Lvk-NX0TGA" annotatedElement="_SPCsw3CoEdq2Lvk-NX0TGA">
        <body>A list of output pins that constitute the data flow outputs of the conditional.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPCsx3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPCsyHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SOc2_HCoEdq2Lvk-NX0TGA" name="StructuredActivityNode">
    <ownedComment xmi:id="_SOc2_XCoEdq2Lvk-NX0TGA" annotatedElement="_SOc2_HCoEdq2Lvk-NX0TGA">
      <body>A structured activity node represents a structured portion of the activity that is not shared with any other structured node, except for nesting. It may have control edges connected to it, and pins when merged with CompleteStructuredActivities. The execution of any embedded actions may not begin until the structured activity node has received its object and control tokens. The availability of output tokens from the structured activity node does not occur until all embedded actions have completed execution.



Note - Any required isolation may be achieved using a locking mechanisms, or it may simply sequentialize execution to avoid concurrency conflicts. Isolation is different from the property of &quot;atomicity&quot;, which is the guarantee that a group of actions either all complete successfully or have no effect at all. Atomicity generally requires a rollback mechanism to prevent committing partial results.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SPMdwHCoEdq2Lvk-NX0TGA" annotatedElement="_SOc2_HCoEdq2Lvk-NX0TGA">
      <body>A structured activity node represents a structured portion of the activity that is not shared with any other structured node, except for nesting. It may have control edges connected to it, and pins in CompleteStructuredActivities. The execution of any embedded actions may not begin until the structured activity node has received its object and control tokens. The availability of output tokens from the structured activity node does not occur until all embedded actions have completed execution.



Because of the concurrent nature of the execution of actions within and across activities, it can be difficult to guarantee the consistent access and modification of object memory. In order to avoid race conditions or other concurrency-related problems, it is sometimes necessary to isolate the effects of a group of actions from the effects of actions outside the group. This may be indicated by setting the mustIsolate attribute to true on a structured activity node. If a structured activity node is &quot;isolated,&quot; then any object used by an action within the node cannot be accessed by any action outside the node until the structured activity node as a whole completes. Any concurrent actions that would result in accessing such objects are required to have their execution deferred until the completion of the node.



Note - Any required isolation may be achieved using a locking mechanisms, or it may simply sequentialize execution to avoid concurrency conflicts. Isolation is different from the property of &quot;atomicity&quot;, which is the guarantee that a group of actions either all complete successfully or have no effect at all. Atomicity generally requires a rollback mechanism to prevent committing partial results.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SPMdwXCoEdq2Lvk-NX0TGA" name="edges" constrainedElement="_SOc2_HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPMdwnCoEdq2Lvk-NX0TGA" annotatedElement="_SPMdwXCoEdq2Lvk-NX0TGA">
        <body>The edges owned by a structured node must have source and target nodes in the structured node, and vice versa.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPMdw3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SOc3AHCoEdq2Lvk-NX0TGA" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
    <generalization xmi:id="_SPMdxHCoEdq2Lvk-NX0TGA" general="_SJYJ8XCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SOc2_nCoEdq2Lvk-NX0TGA" general="_SLnlYnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SOc3AXCoEdq2Lvk-NX0TGA" name="variable" type="_SOc243CoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SOvx1HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SOc3AnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SOc3A3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SOc3BHCoEdq2Lvk-NX0TGA" annotatedElement="_SOc3AXCoEdq2Lvk-NX0TGA">
        <body>A variable defined in the scope of the structured activity node. It has no value and may not be accessed</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3BXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3BnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3B3CoEdq2Lvk-NX0TGA" name="node" type="_SLnlf3CoEdq2Lvk-NX0TGA" subsettedProperty="_SLnlZXCoEdq2Lvk-NX0TGA" association="_SOvx1nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SOc3CHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SOc3CXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SOc3CnCoEdq2Lvk-NX0TGA" annotatedElement="_SOc3B3CoEdq2Lvk-NX0TGA">
        <body>Nodes immediately contained in the group.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3C3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3DHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3DXCoEdq2Lvk-NX0TGA" name="activity" type="_SLnlUHCoEdq2Lvk-NX0TGA" redefinedProperty="_SLnlgnCoEdq2Lvk-NX0TGA _SLnla3CoEdq2Lvk-NX0TGA" association="_SO5i6XCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SOc3DnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SOc3D3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SOc3EHCoEdq2Lvk-NX0TGA" annotatedElement="_SOc3DXCoEdq2Lvk-NX0TGA">
        <body>Activity immediately containing the node.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3EXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3EnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPMdxXCoEdq2Lvk-NX0TGA" name="mustIsolate" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SPMdxnCoEdq2Lvk-NX0TGA" annotatedElement="_SPMdxXCoEdq2Lvk-NX0TGA">
        <body>If true, then the actions in the node execute in isolation from actions outside the node.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SPMdx3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPMdyHCoEdq2Lvk-NX0TGA" name="edge" type="_SLwvUnCoEdq2Lvk-NX0TGA" subsettedProperty="_SL6gVXCoEdq2Lvk-NX0TGA" association="_SPfYtXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SPMdyXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SPMdynCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPMdy3CoEdq2Lvk-NX0TGA" annotatedElement="_SPMdyHCoEdq2Lvk-NX0TGA">
        <body>Edges immediately contained in the structured node.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPMdzHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPMdzXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SOc3InCoEdq2Lvk-NX0TGA" name="LoopNode">
    <ownedComment xmi:id="_SOc3I3CoEdq2Lvk-NX0TGA" annotatedElement="_SOc3InCoEdq2Lvk-NX0TGA">
      <body>Each section is a well-nested subregion of the activity whose nodes follow any predecessors of the loop and precede any successors of the loop. The test section may precede or follow the body section. The setup section is executed once on entry to the loop, and the test and body sections are executed repeatedly until the test produces a false value. The results of the final execution of the test or body are available after completion of execution of the loop.</body>
    </ownedComment>
    <ownedRule xmi:id="_SPMdznCoEdq2Lvk-NX0TGA" name="input_edges" constrainedElement="_SOc3InCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPMdz3CoEdq2Lvk-NX0TGA" annotatedElement="_SPMdznCoEdq2Lvk-NX0TGA">
        <body>Loop variable inputs must not have outgoing edges.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPMd0HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPMd0XCoEdq2Lvk-NX0TGA" name="body_output_pins" constrainedElement="_SOc3InCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPMd0nCoEdq2Lvk-NX0TGA" annotatedElement="_SPMd0XCoEdq2Lvk-NX0TGA">
        <body>The bodyOutput pins are output pins on actions in the body of the loop node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPMd03CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPMd1HCoEdq2Lvk-NX0TGA" name="result_no_incoming" constrainedElement="_SOc3InCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPMd1XCoEdq2Lvk-NX0TGA" annotatedElement="_SPMd1HCoEdq2Lvk-NX0TGA">
        <body>The result output pins have no incoming edges.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPMd1nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SOc3JHCoEdq2Lvk-NX0TGA" general="_SOc2_HCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SOc3JXCoEdq2Lvk-NX0TGA" name="isTestedFirst" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SOc3JnCoEdq2Lvk-NX0TGA" annotatedElement="_SOc3JXCoEdq2Lvk-NX0TGA">
        <body>If true, the test is performed before the first execution of the body.
If false, the body is executed once before the test is performed.
</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SOc3J3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3KHCoEdq2Lvk-NX0TGA" name="bodyPart" type="_SOmA7XCoEdq2Lvk-NX0TGA" association="_SO5i0HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc3KXCoEdq2Lvk-NX0TGA" annotatedElement="_SOc3KHCoEdq2Lvk-NX0TGA">
        <body>The set of nodes and edges that perform the repetitive computations of the loop. The body section is executed as long as the test section produces a true value.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3KnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3K3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3LHCoEdq2Lvk-NX0TGA" name="setupPart" type="_SOmA7XCoEdq2Lvk-NX0TGA" association="_SO5i1HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc3LXCoEdq2Lvk-NX0TGA" annotatedElement="_SOc3LHCoEdq2Lvk-NX0TGA">
        <body>The set of nodes and edges that initialize values or perform other setup computations for the loop.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3LnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3L3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3MHCoEdq2Lvk-NX0TGA" name="decider" type="_SJO_3HCoEdq2Lvk-NX0TGA" association="_SO5i4XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc3MXCoEdq2Lvk-NX0TGA" annotatedElement="_SOc3MHCoEdq2Lvk-NX0TGA">
        <body>An output pin within the test fragment the value of which is examined after execution of the test to determine whether to execute the loop body.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3MnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3M3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3NHCoEdq2Lvk-NX0TGA" name="test" type="_SOmA7XCoEdq2Lvk-NX0TGA" association="_SO5i5XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc3NXCoEdq2Lvk-NX0TGA" annotatedElement="_SOc3NHCoEdq2Lvk-NX0TGA">
        <body>The set of nodes, edges, and designated value that compute a Boolean value to determine if another execution of the body will be performed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3NnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3N3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPMd13CoEdq2Lvk-NX0TGA" name="result" type="_SJO_3HCoEdq2Lvk-NX0TGA" isOrdered="true" subsettedProperty="_SJYJ9HCoEdq2Lvk-NX0TGA" association="_SPVnt3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SPMd2HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SPMd2XCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPMd2nCoEdq2Lvk-NX0TGA" annotatedElement="_SPMd13CoEdq2Lvk-NX0TGA">
        <body>A list of output pins that constitute the data flow output of the entire loop.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPMd23CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPMd3HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPMd3XCoEdq2Lvk-NX0TGA" name="loopVariable" type="_SJO_3HCoEdq2Lvk-NX0TGA" isOrdered="true" association="_SPVnvHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPMd3nCoEdq2Lvk-NX0TGA" annotatedElement="_SPMd3XCoEdq2Lvk-NX0TGA">
        <body>A list of output pins that hold the values of the loop variables during an execution of the loop. When the test fails, the values are movied to the result pins of the loop.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPMd33CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPMd4HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPMd4XCoEdq2Lvk-NX0TGA" name="bodyOutput" type="_SJO_3HCoEdq2Lvk-NX0TGA" isOrdered="true" association="_SPVnwHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPMd4nCoEdq2Lvk-NX0TGA" annotatedElement="_SPMd4XCoEdq2Lvk-NX0TGA">
        <body>A list of output pins within the body fragment the values of which are moved to the loop variable pins after completion of execution of the body, before the next iteration of the loop begins or before the loop exits.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPMd43CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPMd5HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPMd5XCoEdq2Lvk-NX0TGA" name="loopVariableInput" type="_SJO_33CoEdq2Lvk-NX0TGA" isOrdered="true" subsettedProperty="_SJYJ-nCoEdq2Lvk-NX0TGA" association="_SPfYsHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SPMd5nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SPMd53CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPMd6HCoEdq2Lvk-NX0TGA" annotatedElement="_SPMd5XCoEdq2Lvk-NX0TGA">
        <body>A list of values that are moved into the loop variable pins before the first iteration of the loop.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPMd6XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPMd6nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SOc3OHCoEdq2Lvk-NX0TGA" name="Clause">
    <ownedComment xmi:id="_SOc3OXCoEdq2Lvk-NX0TGA" annotatedElement="_SOc3OHCoEdq2Lvk-NX0TGA">
      <body>A clause is an element that represents a single branch of a conditional construct, including a test and a body section. The body section is executed only if (but not necessarily if) the test section evaluates true.</body>
    </ownedComment>
    <ownedRule xmi:id="_SOc3OnCoEdq2Lvk-NX0TGA" name="decider_output" constrainedElement="_SOc3OHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc3O3CoEdq2Lvk-NX0TGA" annotatedElement="_SOc3OnCoEdq2Lvk-NX0TGA">
        <body>The decider output pin must be for the test body or a node contained by the test body as a structured node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SOc3PHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPMd63CoEdq2Lvk-NX0TGA" name="body_output_pins" constrainedElement="_SOc3OHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPMd7HCoEdq2Lvk-NX0TGA" annotatedElement="_SPMd63CoEdq2Lvk-NX0TGA">
        <body>The bodyOutput pins are output pins on actions in the body of the clause.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPMd7XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SOc3PXCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SOc3PnCoEdq2Lvk-NX0TGA" name="test" type="_SOmA7XCoEdq2Lvk-NX0TGA" association="_SOvx2HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc3P3CoEdq2Lvk-NX0TGA" annotatedElement="_SOc3PnCoEdq2Lvk-NX0TGA">
        <body>A nested activity fragment with a designated output pin that specifies the result of the test.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3QHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3QXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3QnCoEdq2Lvk-NX0TGA" name="body" type="_SOmA7XCoEdq2Lvk-NX0TGA" association="_SOvx3HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc3Q3CoEdq2Lvk-NX0TGA" annotatedElement="_SOc3QnCoEdq2Lvk-NX0TGA">
        <body>A nested activity fragment that is executed if the test evaluates to true and the clause is chosen over any concurrent clauses that also evaluate to true.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3RHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3RXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3RnCoEdq2Lvk-NX0TGA" name="predecessorClause" type="_SOc3OHCoEdq2Lvk-NX0TGA" association="_SOvx4HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc3R3CoEdq2Lvk-NX0TGA" annotatedElement="_SOc3RnCoEdq2Lvk-NX0TGA">
        <body>A set of clauses whose tests must all evaluate false before the current clause can be tested.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3SHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3SXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3SnCoEdq2Lvk-NX0TGA" name="successorClause" type="_SOc3OHCoEdq2Lvk-NX0TGA" association="_SOvx4HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc3S3CoEdq2Lvk-NX0TGA" annotatedElement="_SOc3SnCoEdq2Lvk-NX0TGA">
        <body>A set of clauses which may not be tested unless the current clause tests false.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3THCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3TXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SOc3TnCoEdq2Lvk-NX0TGA" name="decider" type="_SJO_3HCoEdq2Lvk-NX0TGA" association="_SO5i3XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SOc3T3CoEdq2Lvk-NX0TGA" annotatedElement="_SOc3TnCoEdq2Lvk-NX0TGA">
        <body>An output pin within the test fragment the value of which is examined after execution of the test to determine whether the body should be executed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOc3UHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOc3UXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPMd7nCoEdq2Lvk-NX0TGA" name="bodyOutput" type="_SJO_3HCoEdq2Lvk-NX0TGA" isOrdered="true" association="_SPVnxHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPMd73CoEdq2Lvk-NX0TGA" annotatedElement="_SPMd7nCoEdq2Lvk-NX0TGA">
        <body>A list of output pins within the body fragment whose values are moved to the result pins of the containing conditional node after execution of the clause body.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPMd8HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPMd8XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SLwvUnCoEdq2Lvk-NX0TGA" name="ActivityEdge">
    <ownedComment xmi:id="_SLwvU3CoEdq2Lvk-NX0TGA" annotatedElement="_SLwvUnCoEdq2Lvk-NX0TGA">
      <body>ActivityEdge is an abstract class for the connections along which tokens flow between activity nodes. It covers control and data flow edges. Activity edges can control token flow.</body>
    </ownedComment>
    <ownedRule xmi:id="_SLwvVHCoEdq2Lvk-NX0TGA" name="source_and_target" constrainedElement="_SLwvUnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLwvVXCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvVHCoEdq2Lvk-NX0TGA">
        <body>The source and target of an edge must be in the same activity as the edge.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLwvVnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SLwvV3CoEdq2Lvk-NX0TGA" name="owned" constrainedElement="_SLwvUnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLwvWHCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvV3CoEdq2Lvk-NX0TGA">
        <body>Activity edges may be owned only by activities or groups.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLwvWXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPMd8nCoEdq2Lvk-NX0TGA" name="structured_node" constrainedElement="_SLwvUnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPMd83CoEdq2Lvk-NX0TGA" annotatedElement="_SPMd8nCoEdq2Lvk-NX0TGA">
        <body>Activity edges may be owned by at most one structured node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPMd9HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SLwvWnCoEdq2Lvk-NX0TGA" general="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SLwvW3CoEdq2Lvk-NX0TGA" name="activity" type="_SLnlUHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SMERUXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SLwvXHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SLwvXXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SLwvXnCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvW3CoEdq2Lvk-NX0TGA">
        <body>Activity containing the edge.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLwvX3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLwvYHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLwvYXCoEdq2Lvk-NX0TGA" name="source" type="_SLnlf3CoEdq2Lvk-NX0TGA" association="_SMz4IHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLwvYnCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvYXCoEdq2Lvk-NX0TGA">
        <body>Node from which tokens are taken when they traverse the edge.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLwvY3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLwvZHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLwvZXCoEdq2Lvk-NX0TGA" name="target" type="_SLnlf3CoEdq2Lvk-NX0TGA" association="_SMz4IXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLwvZnCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvZXCoEdq2Lvk-NX0TGA">
        <body>Node to which tokens are put when they traverse the edge.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLwvZ3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLwvaHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLwvb3CoEdq2Lvk-NX0TGA" name="redefinedEdge" type="_SLwvUnCoEdq2Lvk-NX0TGA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_SMz4KnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SLwvcHCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvb3CoEdq2Lvk-NX0TGA">
        <body>Inherited edges replaced by this edge in a specialization of the activity.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLwvcXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLwvcnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SM9CPnCoEdq2Lvk-NX0TGA" name="inPartition" type="_SM9CEHCoEdq2Lvk-NX0TGA" subsettedProperty="_SLwvaXCoEdq2Lvk-NX0TGA" association="_SNGzHnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SM9CP3CoEdq2Lvk-NX0TGA" annotatedElement="_SM9CPnCoEdq2Lvk-NX0TGA">
        <body>Partitions containing the edge.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SM9CQHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SM9CQXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SM9CQnCoEdq2Lvk-NX0TGA" name="guard" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SNQkFHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SM9CQ3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SM9CRHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SM9CRXCoEdq2Lvk-NX0TGA" annotatedElement="_SM9CQnCoEdq2Lvk-NX0TGA">
        <body>Specification evaluated at runtime to determine if the edge can be traversed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SM9CRnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SM9CR3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNjfBnCoEdq2Lvk-NX0TGA" name="weight" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SOJU4nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SNjfB3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SNjfCHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SNjfCXCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfBnCoEdq2Lvk-NX0TGA">
        <body>Number of tokens consumed from the source node on each traversal.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNjfCnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNjfC3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SNjfDHCoEdq2Lvk-NX0TGA" name="interrupts" type="_SN2aAXCoEdq2Lvk-NX0TGA" association="_SOTF4HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SNjfDXCoEdq2Lvk-NX0TGA" annotatedElement="_SNjfDHCoEdq2Lvk-NX0TGA">
        <body>Region that the edge can interrupt.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SNjfDnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SNjfD3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPMd9XCoEdq2Lvk-NX0TGA" name="inStructuredNode" type="_SOc2_HCoEdq2Lvk-NX0TGA" subsettedProperty="_SLwvaXCoEdq2Lvk-NX0TGA" association="_SPfYtXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SPMd9nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SPMd93CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPMd-HCoEdq2Lvk-NX0TGA" annotatedElement="_SPMd9XCoEdq2Lvk-NX0TGA">
        <body>Structured activity node containing the edge.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPMd-XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPMd-nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLwvaXCoEdq2Lvk-NX0TGA" name="inGroup" type="_SLnlYnCoEdq2Lvk-NX0TGA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_SMz4InCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SLwvanCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SLwva3CoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SLwvbHCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvaXCoEdq2Lvk-NX0TGA">
        <body>Groups containing the edge. Multiplicity specialized to [0..1] for StructuredActivityGroup.</body>
      </ownedComment>
      <ownedComment xmi:id="_SM9CSHCoEdq2Lvk-NX0TGA" annotatedElement="_SLwvaXCoEdq2Lvk-NX0TGA">
        <body>Groups containing the edge. Multiplicity specialized to [0..1] for StructuredActivity-Group.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPMd-3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPMd_HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SLnlYnCoEdq2Lvk-NX0TGA" name="ActivityGroup" isAbstract="true">
    <ownedComment xmi:id="_SLnlY3CoEdq2Lvk-NX0TGA" annotatedElement="_SLnlYnCoEdq2Lvk-NX0TGA">
      <body>Activity groups are a generic grouping construct for nodes and edges. Nodes and edges can belong to more than one group.

They have no inherent semantics and can be used for various purposes. Subclasses of ActivityGroup may add semantics.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SL6gTHCoEdq2Lvk-NX0TGA" name="nodes_and_edges" constrainedElement="_SLnlYnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gTXCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gTHCoEdq2Lvk-NX0TGA">
        <body>All nodes and edges of the group must be in the same activity as the group.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SL6gTnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SL6gT3CoEdq2Lvk-NX0TGA" name="not_contained" constrainedElement="_SLnlYnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gUHCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gT3CoEdq2Lvk-NX0TGA">
        <body>No node or edge in a group may be contained by its subgroups or its containing groups, transitively.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SL6gUXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SL6gUnCoEdq2Lvk-NX0TGA" name="group_owned" constrainedElement="_SLnlYnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SL6gU3CoEdq2Lvk-NX0TGA" annotatedElement="_SL6gUnCoEdq2Lvk-NX0TGA">
        <body>Groups may only be owned by activities or groups.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SL6gVHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SLnlZHCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SLnlcXCoEdq2Lvk-NX0TGA" name="subgroup" type="_SLnlYnCoEdq2Lvk-NX0TGA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SLwvQ3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SLnlcnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SLnlc3CoEdq2Lvk-NX0TGA" isTransient="true" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SLnldHCoEdq2Lvk-NX0TGA" annotatedElement="_SLnlcXCoEdq2Lvk-NX0TGA">
        <body>Groups immediately contained in the group.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLnldXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLnldnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLnld3CoEdq2Lvk-NX0TGA" name="superGroup" type="_SLnlYnCoEdq2Lvk-NX0TGA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SLwvQ3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SLnleHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SLnleXCoEdq2Lvk-NX0TGA" isTransient="true" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SLnlenCoEdq2Lvk-NX0TGA" annotatedElement="_SLnld3CoEdq2Lvk-NX0TGA">
        <body>Group immediately containing the group.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLnle3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SLnlfHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLnlZXCoEdq2Lvk-NX0TGA" name="containedNode" type="_SLnlf3CoEdq2Lvk-NX0TGA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_SLwvQHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SLnlZnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SLnlZ3CoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SLnlaHCoEdq2Lvk-NX0TGA" annotatedElement="_SLnlZXCoEdq2Lvk-NX0TGA">
        <body>Nodes immediately contained in the group.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOvx0HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOvx0XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SLnla3CoEdq2Lvk-NX0TGA" name="inActivity" type="_SLnlUHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SLwvQXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SLnlbHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SLnlbXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SLnlbnCoEdq2Lvk-NX0TGA" annotatedElement="_SLnla3CoEdq2Lvk-NX0TGA">
        <body>Activity containing the group.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SOvx0nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SOvx03CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SL6gVXCoEdq2Lvk-NX0TGA" name="containedEdge" type="_SLwvUnCoEdq2Lvk-NX0TGA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_SMz4InCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SL6gVnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SL6gV3CoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SL6gWHCoEdq2Lvk-NX0TGA" annotatedElement="_SL6gVXCoEdq2Lvk-NX0TGA">
        <body>Edges immediately contained in the group.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPVnsHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPVnsXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPVnsnCoEdq2Lvk-NX0TGA" name="A_result_conditionalNode" memberEnd="_SPCsw3CoEdq2Lvk-NX0TGA _SPVntHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SPVns3CoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SPVntHCoEdq2Lvk-NX0TGA" type="_SOc3E3CoEdq2Lvk-NX0TGA" association="_SPVnsnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPVntXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPVntnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPVnt3CoEdq2Lvk-NX0TGA" name="A_result_loopNode" memberEnd="_SPMd13CoEdq2Lvk-NX0TGA _SPVnuXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SPVnuHCoEdq2Lvk-NX0TGA" general="_SJh6tHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SPVnuXCoEdq2Lvk-NX0TGA" type="_SOc3InCoEdq2Lvk-NX0TGA" association="_SPVnt3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPVnunCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPVnu3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPVnvHCoEdq2Lvk-NX0TGA" name="A_loopVariable_loopNode" memberEnd="_SPVnvXCoEdq2Lvk-NX0TGA _SPMd3XCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SPVnvXCoEdq2Lvk-NX0TGA" type="_SOc3InCoEdq2Lvk-NX0TGA" association="_SPVnvHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPVnvnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPVnv3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPVnwHCoEdq2Lvk-NX0TGA" name="A_bodyOutput_loopNode" memberEnd="_SPMd4XCoEdq2Lvk-NX0TGA _SPVnwXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SPVnwXCoEdq2Lvk-NX0TGA" type="_SOc3InCoEdq2Lvk-NX0TGA" association="_SPVnwHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPVnwnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPVnw3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPVnxHCoEdq2Lvk-NX0TGA" name="A_bodyOutput_clause" memberEnd="_SPMd7nCoEdq2Lvk-NX0TGA _SPVnxXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SPVnxXCoEdq2Lvk-NX0TGA" type="_SOc3OHCoEdq2Lvk-NX0TGA" association="_SPVnxHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPVnxnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPVnx3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPfYsHCoEdq2Lvk-NX0TGA" name="A_loopVariableInput_loopNode" memberEnd="_SPfYsnCoEdq2Lvk-NX0TGA _SPMd5XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SPfYsXCoEdq2Lvk-NX0TGA" general="_SJh6uXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SPfYsnCoEdq2Lvk-NX0TGA" type="_SOc3InCoEdq2Lvk-NX0TGA" association="_SPfYsHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPfYs3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPfYtHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPfYtXCoEdq2Lvk-NX0TGA" name="A_edge_inStructuredNode" memberEnd="_SPMdyHCoEdq2Lvk-NX0TGA _SPMd9XCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SPfYtnCoEdq2Lvk-NX0TGA" general="_SMz4InCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SMz4InCoEdq2Lvk-NX0TGA" name="A_containedEdge_inGroup" isDerived="true" memberEnd="_SLwvaXCoEdq2Lvk-NX0TGA _SL6gVXCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Class" xmi:id="_SPfYt3CoEdq2Lvk-NX0TGA" name="ExpansionNode">
    <ownedComment xmi:id="_SPfYuHCoEdq2Lvk-NX0TGA" annotatedElement="_SPfYt3CoEdq2Lvk-NX0TGA">
      <body>An expansion node is an object node used to indicate a flow across the boundary of an expansion region. A flow into a region contains a collection that is broken into its individual elements inside the region, which is executed once per element. A flow out of a region combines individual elements into a collection for use outside the region.</body>
    </ownedComment>
    <generalization xmi:id="_SPfYuXCoEdq2Lvk-NX0TGA" general="_SLwvRXCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SPfYunCoEdq2Lvk-NX0TGA" name="regionAsOutput" type="_SPpJsHCoEdq2Lvk-NX0TGA" association="_SPpJ8HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPfYu3CoEdq2Lvk-NX0TGA" annotatedElement="_SPfYunCoEdq2Lvk-NX0TGA">
        <body>The expansion region for which the node is an output.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPfYvHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPfYvXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPfYvnCoEdq2Lvk-NX0TGA" name="regionAsInput" type="_SPpJsHCoEdq2Lvk-NX0TGA" association="_SPpJ8XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPfYv3CoEdq2Lvk-NX0TGA" annotatedElement="_SPfYvnCoEdq2Lvk-NX0TGA">
        <body>The expansion region for which the node is an input.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPfYwHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPfYwXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SPpJsHCoEdq2Lvk-NX0TGA" name="ExpansionRegion">
    <ownedComment xmi:id="_SPpJsXCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJsHCoEdq2Lvk-NX0TGA">
      <body>An expansion region is a strictly nested region of an activity with explicit input and outputs (modeled as ExpansionNodes). Each input is a collection of values. If there are multiple inputs, each of them must hold the same kind of collection, although the types of the elements in the different collections may vary. The expansion region is executed once for each element (or position) in the input collection.



The number of output collections can differ from the number of input collections. On each execution of the region, an output value from the region is inserted into an output collection at the same position as the input elements. If the region execution ends with no output, then nothing is added to the output collection. When this happens the output collection will not have the same number of elements as the input collections, the region acts as a filter. If all the executions provide an output to the collection, then the output collections will have the same number of elements as the input collections.



The inputs and outputs to an expansion region are modeled as ExpansionNodes. From &quot;outside&quot; of the region, the values on these nodes appear as collections. From &quot;inside&quot; the region the values appear as elements of the collections. Object flow edges connect pins outside the region to input and output expansion nodes as collections. Object flow edges connect pins inside the region to input and output expansion nodes as individual elements. From the inside of the region, these nodes are visible as individual values. If an expansion node has a name, it is the name of the individual element within the region.



Any object flow edges that cross the boundary of the region, without passing through expansion nodes, provide values that are fixed within the different executions of the region.</body>
    </ownedComment>
    <ownedRule xmi:id="_SPpJsnCoEdq2Lvk-NX0TGA" name="expansion_nodes" constrainedElement="_SPpJsHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPpJs3CoEdq2Lvk-NX0TGA" annotatedElement="_SPpJsnCoEdq2Lvk-NX0TGA">
        <body>An ExpansionRegion must have one or more argument ExpansionNodes and zero or more result ExpansionNodes.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPpJtHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SPpJtXCoEdq2Lvk-NX0TGA" general="_SOc2_HCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SPpJtnCoEdq2Lvk-NX0TGA" name="mode" type="_SPpJwXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPpJt3CoEdq2Lvk-NX0TGA" annotatedElement="_SPpJtnCoEdq2Lvk-NX0TGA">
        <body>The way in which the executions interact:

parallel: all interactions are independent

iterative: the interactions occur in order of the elements

stream: a stream of values flows into a single execution

</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_SPpJuHCoEdq2Lvk-NX0TGA" type="_SPpJwXCoEdq2Lvk-NX0TGA" instance="_SPpJxXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPpJuXCoEdq2Lvk-NX0TGA" name="outputElement" type="_SPfYt3CoEdq2Lvk-NX0TGA" association="_SPpJ8HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPpJunCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJuXCoEdq2Lvk-NX0TGA">
        <body>An object node that accepts a separate element of the output collection during each of the multiple executions of the region. The values are formed into a collection that is available when the execution of the region is complete.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPpJu3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPpJvHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPpJvXCoEdq2Lvk-NX0TGA" name="inputElement" type="_SPfYt3CoEdq2Lvk-NX0TGA" association="_SPpJ8XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPpJvnCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJvXCoEdq2Lvk-NX0TGA">
        <body>An object node that holds a separate element of the input collection during each of the multiple executions of the region.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPpJv3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPpJwHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_SPpJwXCoEdq2Lvk-NX0TGA" name="ExpansionKind">
    <ownedComment xmi:id="_SPpJwnCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJwXCoEdq2Lvk-NX0TGA">
      <body>ExpansionKind is an enumeration type used to specify how multiple executions of an expansion region interact.</body>
    </ownedComment>
    <ownedLiteral xmi:id="_SPpJw3CoEdq2Lvk-NX0TGA" name="parallel">
      <ownedComment xmi:id="_SPpJxHCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJw3CoEdq2Lvk-NX0TGA">
        <body>The executions are independent. They may be executed concurrently.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SPpJxXCoEdq2Lvk-NX0TGA" name="iterative">
      <ownedComment xmi:id="_SPpJxnCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJxXCoEdq2Lvk-NX0TGA">
        <body>The executions are dependent and must be executed one at a time, in order of the collection elements.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SPpJx3CoEdq2Lvk-NX0TGA" name="stream">
      <ownedComment xmi:id="_SPpJyHCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJx3CoEdq2Lvk-NX0TGA">
        <body>A stream of collection elements flows into a single execution, in order of the collection elements.</body>
      </ownedComment>
    </ownedLiteral>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SOmA7XCoEdq2Lvk-NX0TGA" name="ExecutableNode" isAbstract="true">
    <ownedComment xmi:id="_SOmA7nCoEdq2Lvk-NX0TGA" annotatedElement="_SOmA7XCoEdq2Lvk-NX0TGA">
      <body>An executable node is an abstract class for activity nodes that may be executed. It is used as an attachment point for exception handlers.</body>
    </ownedComment>
    <generalization xmi:id="_SOmA73CoEdq2Lvk-NX0TGA" general="_SLnlf3CoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SPpJyXCoEdq2Lvk-NX0TGA" name="handler" type="_SPpJz3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SPpJ8nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SPpJynCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SPpJy3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPpJzHCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJyXCoEdq2Lvk-NX0TGA">
        <body>A set of exception handlers that are examined if an uncaught exception propagates to the outer level of the executable node.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPpJzXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPpJznCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SPpJz3CoEdq2Lvk-NX0TGA" name="ExceptionHandler">
    <ownedComment xmi:id="_SPpJ0HCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJz3CoEdq2Lvk-NX0TGA">
      <body>An exception handler is an element that specifies a body to execute in case the specified exception occurs during the execution of the protected node.</body>
    </ownedComment>
    <ownedRule xmi:id="_SPpJ0XCoEdq2Lvk-NX0TGA" name="exception_body" constrainedElement="_SPpJz3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPpJ0nCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJ0XCoEdq2Lvk-NX0TGA">
        <body>The exception handler and its input object node are not the source or target of any edge.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPpJ03CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPpJ1HCoEdq2Lvk-NX0TGA" name="result_pins" constrainedElement="_SPpJz3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPpJ1XCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJ1HCoEdq2Lvk-NX0TGA">
        <body>The result pins of the exception handler body must correspond in number and types to the result pins of the protected node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPpJ1nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPpJ13CoEdq2Lvk-NX0TGA" name="one_input" constrainedElement="_SPpJz3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPpJ2HCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJ13CoEdq2Lvk-NX0TGA">
        <body>The handler body has one input, and that input is the same as the exception input.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPpJ2XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPpJ2nCoEdq2Lvk-NX0TGA" name="edge_source_target" constrainedElement="_SPpJz3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPpJ23CoEdq2Lvk-NX0TGA" annotatedElement="_SPpJ2nCoEdq2Lvk-NX0TGA">
        <body>An edge that has a source in an exception handler structured node must have its target in the handler also, and vice versa.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPpJ3HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SPpJ3XCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SPpJ3nCoEdq2Lvk-NX0TGA" name="protectedNode" type="_SOmA7XCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SPpJ8nCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SPpJ33CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SPpJ4HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPpJ4XCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJ3nCoEdq2Lvk-NX0TGA">
        <body>The node protected by the handler. The handler is examined if an exception propagates to the outside of the node.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPpJ4nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPpJ43CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPpJ5HCoEdq2Lvk-NX0TGA" name="handlerBody" type="_SOmA7XCoEdq2Lvk-NX0TGA" association="_SPyToHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPpJ5XCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJ5HCoEdq2Lvk-NX0TGA">
        <body>A node that is executed if the handler satisfies an uncaught exception.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPpJ5nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPpJ53CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPpJ6HCoEdq2Lvk-NX0TGA" name="exceptionInput" type="_SLwvRXCoEdq2Lvk-NX0TGA" association="_SPyTonCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPpJ6XCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJ6HCoEdq2Lvk-NX0TGA">
        <body>An object node within the handler body. When the handler catches an exception, the exception token is placed in this node, causing the body to execute.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPpJ6nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPpJ63CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPpJ7HCoEdq2Lvk-NX0TGA" name="exceptionType" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SPyTpHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPpJ7XCoEdq2Lvk-NX0TGA" annotatedElement="_SPpJ7HCoEdq2Lvk-NX0TGA">
        <body>The kind of instances that the handler catches. If an exception occurs whose type is any of the classifiers in the set, the handler catches the exception and executes its body.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPpJ7nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPpJ73CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPpJ8HCoEdq2Lvk-NX0TGA" name="A_outputElement_regionAsOutput" memberEnd="_SPpJuXCoEdq2Lvk-NX0TGA _SPfYunCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPpJ8XCoEdq2Lvk-NX0TGA" name="A_inputElement_regionAsInput" memberEnd="_SPfYvnCoEdq2Lvk-NX0TGA _SPpJvXCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPpJ8nCoEdq2Lvk-NX0TGA" name="A_handler_protectedNode" memberEnd="_SPpJyXCoEdq2Lvk-NX0TGA _SPpJ3nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SPpJ83CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPyToHCoEdq2Lvk-NX0TGA" name="A_handlerBody_exceptionHandler" memberEnd="_SPyToXCoEdq2Lvk-NX0TGA _SPpJ5HCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SPyToXCoEdq2Lvk-NX0TGA" type="_SPpJz3CoEdq2Lvk-NX0TGA" association="_SPyToHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPyTonCoEdq2Lvk-NX0TGA" name="A_exceptionInput_exceptionHandler" memberEnd="_SPyTo3CoEdq2Lvk-NX0TGA _SPpJ6HCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SPyTo3CoEdq2Lvk-NX0TGA" type="_SPpJz3CoEdq2Lvk-NX0TGA" association="_SPyTonCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SPyTpHCoEdq2Lvk-NX0TGA" name="A_exceptionType_exceptionHandler" memberEnd="_SPpJ7HCoEdq2Lvk-NX0TGA _SPyTpXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SPyTpXCoEdq2Lvk-NX0TGA" type="_SPpJz3CoEdq2Lvk-NX0TGA" association="_SPyTpHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SPyT33CoEdq2Lvk-NX0TGA" name="ComponentRealization">
    <ownedComment xmi:id="_SPyT4HCoEdq2Lvk-NX0TGA" annotatedElement="_SPyT33CoEdq2Lvk-NX0TGA">
      <body>In the metamodel, a ComponentRealization is a subtype of Dependencies::Realization.</body>
    </ownedComment>
    <generalization xmi:id="_SPyT4XCoEdq2Lvk-NX0TGA" general="_SCh61HCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SPyT4nCoEdq2Lvk-NX0TGA" name="abstraction" type="_SPyTpnCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA _SCh60HCoEdq2Lvk-NX0TGA" association="_SP8EqnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SPyT43CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SPyT5HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPyT5XCoEdq2Lvk-NX0TGA" annotatedElement="_SPyT4nCoEdq2Lvk-NX0TGA">
        <body>The Component that owns this ComponentRealization and which is implemented by its realizing classifiers.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPyT5nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPyT53CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPyT6HCoEdq2Lvk-NX0TGA" name="realizingClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_SCh6zHCoEdq2Lvk-NX0TGA" association="_SP8ErXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPyT6XCoEdq2Lvk-NX0TGA" annotatedElement="_SPyT6HCoEdq2Lvk-NX0TGA">
        <body>A classifier that is involved in the implementation of the Component that owns this ComponentRealization.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPyT6nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPyT63CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SDuNkHCoEdq2Lvk-NX0TGA" name="Connector">
    <ownedComment xmi:id="_SDuNkXCoEdq2Lvk-NX0TGA" annotatedElement="_SDuNkHCoEdq2Lvk-NX0TGA">
      <body>Each connector may be attached to two or more connectable elements, each representing a set of instances. Each connector end is distinct in the sense that it plays a distinct role in the communication realized over a connector. The communications realized over a connector may be constrained by various constraints (including type constraints) that apply to the attached connectable elements.</body>
    </ownedComment>
    <ownedComment xmi:id="_SPyT7HCoEdq2Lvk-NX0TGA" annotatedElement="_SDuNkHCoEdq2Lvk-NX0TGA">
      <body>In the metamodel, a connector kind attribute is added to the Connector metaclass. Its value is an enumeration type with valid values 'assembly' or 'delegation'.</body>
    </ownedComment>
    <ownedRule xmi:id="_SDuNknCoEdq2Lvk-NX0TGA" name="types" constrainedElement="_SDuNkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SDuNk3CoEdq2Lvk-NX0TGA" annotatedElement="_SDuNknCoEdq2Lvk-NX0TGA">
        <body>The types of the connectable elements that the ends of a connector are attached to must conform to the types of the association ends of the association that types the connector, if any.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SDuNlHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SDuNlXCoEdq2Lvk-NX0TGA" name="compatible" constrainedElement="_SDuNkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SDuNlnCoEdq2Lvk-NX0TGA" annotatedElement="_SDuNlXCoEdq2Lvk-NX0TGA">
        <body>The connectable elements attached to the ends of a connector must be compatible.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SDuNl3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SDuNmHCoEdq2Lvk-NX0TGA" name="roles" constrainedElement="_SDuNkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SDuNmXCoEdq2Lvk-NX0TGA" annotatedElement="_SDuNmHCoEdq2Lvk-NX0TGA">
        <body>The ConnectableElements attached as roles to each ConnectorEnd owned by a Connector must be roles of the Classifier that owned the Connector, or they must be ports of such roles.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SDuNmnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPyT7XCoEdq2Lvk-NX0TGA" name="between_interfaces_ports" constrainedElement="_SDuNkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPyT7nCoEdq2Lvk-NX0TGA" annotatedElement="_SPyT7XCoEdq2Lvk-NX0TGA">
        <body>A delegation connector must only be defined between used Interfaces or Ports of the same kind, e.g. between two provided Ports or between two required Ports.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPyT73CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPyT8HCoEdq2Lvk-NX0TGA" name="between_interface_port_implements" constrainedElement="_SDuNkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPyT8XCoEdq2Lvk-NX0TGA" annotatedElement="_SPyT8HCoEdq2Lvk-NX0TGA">
        <body>If a delegation connector is defined between a used Interface or Port and an internal Part Classifier, then that Classifier must have an 'implements' relationship to the Interface type of that Port.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPyT8nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPyT83CoEdq2Lvk-NX0TGA" name="between_interface_port_signature" constrainedElement="_SDuNkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPyT9HCoEdq2Lvk-NX0TGA" annotatedElement="_SPyT83CoEdq2Lvk-NX0TGA">
        <body>If a delegation connector is defined between a source Interface or Port and a target Interface or Port, then the target Interface must support a signature compatible subset of Operations of the source Interface or Port.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPyT9XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPyT9nCoEdq2Lvk-NX0TGA" name="union_signature_compatible" constrainedElement="_SDuNkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPyT93CoEdq2Lvk-NX0TGA" annotatedElement="_SPyT9nCoEdq2Lvk-NX0TGA">
        <body>In a complete model, if a source Port has delegation connectors to a set of delegated target Ports, then the union of the Interfaces of these target Ports must be signature compatible with the Interface that types the source Port.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPyT-HCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SPyT-XCoEdq2Lvk-NX0TGA" name="assembly_connector" constrainedElement="_SDuNkHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPyT-nCoEdq2Lvk-NX0TGA" annotatedElement="_SPyT-XCoEdq2Lvk-NX0TGA">
        <body>An assembly connector must only be defined from a required Interface or Ports to a provided Interface or Port.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPyT-3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SDuNm3CoEdq2Lvk-NX0TGA" general="_RyIuUHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SDuNnHCoEdq2Lvk-NX0TGA" name="type" type="_AwvxoGwNEdq7X4sGURiZYA" association="_SEBIgnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SDuNnXCoEdq2Lvk-NX0TGA" annotatedElement="_SDuNnHCoEdq2Lvk-NX0TGA">
        <body>An optional association that specifies the link corresponding to this connector.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDuNnnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDuNn3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SDuNoHCoEdq2Lvk-NX0TGA" name="redefinedConnector" type="_SDuNkHCoEdq2Lvk-NX0TGA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_SEBInXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SDuNoXCoEdq2Lvk-NX0TGA" annotatedElement="_SDuNoHCoEdq2Lvk-NX0TGA">
        <body>A connector may be redefined when its containing classifier is specialized. The redefining connector may have a type that specializes the type of the redefined connector.

The types of the connector ends of the redefining connector may specialize the types of the connector ends of the redefined connector. The properties of the connector ends of the redefining connector may be replaced.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDuNonCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDuNo3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SDuNpHCoEdq2Lvk-NX0TGA" name="end" type="_aOgw0GveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SEBIonCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SDuNpXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SDuNpnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SDuNp3CoEdq2Lvk-NX0TGA" annotatedElement="_SDuNpHCoEdq2Lvk-NX0TGA">
        <body>A connector consists of at least two connector ends, each representing the participation of instances of the classifiers typing the connectable elements attached to this end. The set of connector ends is ordered.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDuNqHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDuNqXCoEdq2Lvk-NX0TGA" value="2"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPyT_HCoEdq2Lvk-NX0TGA" name="kind" type="_SP8EoHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SPyT_XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SPyT_nCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPyT_3CoEdq2Lvk-NX0TGA" annotatedElement="_SPyT_HCoEdq2Lvk-NX0TGA">
        <body>Indicates the kind of connector.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPyUAHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPyUAXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPyUAnCoEdq2Lvk-NX0TGA" name="contract" type="_TUPtYGveEdq4DLWZOhbdEA" association="_SP8EsHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPyUA3CoEdq2Lvk-NX0TGA" annotatedElement="_SPyUAnCoEdq2Lvk-NX0TGA">
        <body>The set of Behaviors that specify the valid interaction patterns across the connector.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPyUBHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPyUBXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_SP8EoHCoEdq2Lvk-NX0TGA" name="ConnectorKind">
    <ownedComment xmi:id="_SP8EoXCoEdq2Lvk-NX0TGA" annotatedElement="_SP8EoHCoEdq2Lvk-NX0TGA">
      <body>ConnectorKind is an enumeration of the following literal values:
 assembly Indicates that the connector is an assembly connector.
 delegation Indicates that the connector is a delegation connector.
</body>
    </ownedComment>
    <ownedLiteral xmi:id="_SP8EonCoEdq2Lvk-NX0TGA" name="assembly">
      <ownedComment xmi:id="_SP8Eo3CoEdq2Lvk-NX0TGA" annotatedElement="_SP8EonCoEdq2Lvk-NX0TGA">
        <body>Indicates that the connector is an assembly connector.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SP8EpHCoEdq2Lvk-NX0TGA" name="delegation">
      <ownedComment xmi:id="_SP8EpXCoEdq2Lvk-NX0TGA" annotatedElement="_SP8EpHCoEdq2Lvk-NX0TGA">
        <body>Indicates that the connector is a delegation connector.</body>
      </ownedComment>
    </ownedLiteral>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SP8EpnCoEdq2Lvk-NX0TGA" name="A_required_component" memberEnd="_SPyTrXCoEdq2Lvk-NX0TGA _SP8Ep3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SP8Ep3CoEdq2Lvk-NX0TGA" type="_SPyTpnCoEdq2Lvk-NX0TGA" association="_SP8EpnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SP8EqHCoEdq2Lvk-NX0TGA" name="A_provided_component" memberEnd="_SPyTs3CoEdq2Lvk-NX0TGA _SP8EqXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SP8EqXCoEdq2Lvk-NX0TGA" type="_SPyTpnCoEdq2Lvk-NX0TGA" association="_SP8EqHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SP8EqnCoEdq2Lvk-NX0TGA" name="A_realization_abstraction" memberEnd="_SPyTuXCoEdq2Lvk-NX0TGA _SPyT4nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SP8Eq3CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SP8ErHCoEdq2Lvk-NX0TGA" general="_SDHwrnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SP8ErXCoEdq2Lvk-NX0TGA" name="A_realizingClassifier_componentRealization" memberEnd="_SPyT6HCoEdq2Lvk-NX0TGA _SP8Er3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SP8ErnCoEdq2Lvk-NX0TGA" general="_SDHwqHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SP8Er3CoEdq2Lvk-NX0TGA" type="_SPyT33CoEdq2Lvk-NX0TGA" redefinedProperty="_R2m-tHCoEdq2Lvk-NX0TGA" association="_SP8ErXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SP8EsHCoEdq2Lvk-NX0TGA" name="A_contract_connector" memberEnd="_SPyUAnCoEdq2Lvk-NX0TGA _SP8EsXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SP8EsXCoEdq2Lvk-NX0TGA" type="_SDuNkHCoEdq2Lvk-NX0TGA" association="_SP8EsHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SP8EsnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SP8Es3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SPyTpnCoEdq2Lvk-NX0TGA" name="Component">
    <ownedComment xmi:id="_SPyTp3CoEdq2Lvk-NX0TGA" annotatedElement="_SPyTpnCoEdq2Lvk-NX0TGA">
      <body>A component is a subtype of Class which provides for a Component having attributes and operations, and being able to participate in Associations and Generalizations. A Component may form the abstraction for a set of realizingClassifiers that realize its behavior. In addition, because a Class itself is a subtype of an EncapsulatedClassifier, a Component may optionally have an internal structure and own a set of Ports that formalize its interaction points.



A component has a number of provided and required Interfaces, that form the basis for wiring components together, either using Dependencies, or by using Connectors. A provided Interface is one that is either implemented directly by the component or one of its realizingClassifiers, or it is the type of a provided Port of the Component. A required interface is designated by a Usage Dependency from the Component or one of its realizingClassifiers, or it is the type of a required Port.

</body>
    </ownedComment>
    <generalization xmi:id="_SPyTqHCoEdq2Lvk-NX0TGA" general="_00owUGvdEdq4DLWZOhbdEA"/>
    <generalization xmi:id="_SP8EtHCoEdq2Lvk-NX0TGA" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SPyTqnCoEdq2Lvk-NX0TGA" name="isIndirectlyInstantiated" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SPyTq3CoEdq2Lvk-NX0TGA" annotatedElement="_SPyTqnCoEdq2Lvk-NX0TGA">
        <body>The kind of instantiation that applies to a Component. If false, the component is instantiated as an addressable object. If true, the Component is defined at design-time, but at runtime (or execution-time) an object specified by the Component does not exist, that is, the component is instantiated indirectly, through the instantiation of its realizing classifiers or parts. Several standard stereotypes use this meta attribute, e.g. «specification, «focus», «subsystem».</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SPyTrHCoEdq2Lvk-NX0TGA" value="true"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPyTrXCoEdq2Lvk-NX0TGA" name="required" type="_8Ugn8GvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_SP8EpnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SPyTrnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SPyTr3CoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPyTsHCoEdq2Lvk-NX0TGA" annotatedElement="_SPyTrXCoEdq2Lvk-NX0TGA">
        <body>The interfaces that the component requires from other components in its environment in order to be able to offer its full set of provided functionality. These interfaces may be Used by the Component or any of its realizingClassifiers, or they may be the Interfaces that are required by its public Ports.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPyTsXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPyTsnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPyTs3CoEdq2Lvk-NX0TGA" name="provided" type="_8Ugn8GvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_SP8EqHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SPyTtHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SPyTtXCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPyTtnCoEdq2Lvk-NX0TGA" annotatedElement="_SPyTs3CoEdq2Lvk-NX0TGA">
        <body>The interfaces that the component exposes to its environment. These interfaces may be Realized by the Component or any of its realizingClassifiers, or they may be the Interfaces that are provided by its public Ports.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPyTt3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPyTuHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SPyTuXCoEdq2Lvk-NX0TGA" name="realization" type="_SPyT33CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SP8EqnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SPyTunCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SPyTu3CoEdq2Lvk-NX0TGA" isTransient="true" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SPyTvHCoEdq2Lvk-NX0TGA" annotatedElement="_SPyTuXCoEdq2Lvk-NX0TGA">
        <body>The set of Realizations owned by the Component. Realizations reference the Classifiers of which the Component is an abstraction; i.e., that realize its behavior.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPyTvXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPyTvnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SP8EtXCoEdq2Lvk-NX0TGA" name="packagedElement" type="_jKxnwGwLEdq7X4sGURiZYA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SQF1oHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SP8EtnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SP8Et3CoEdq2Lvk-NX0TGA"/>
      </eAnnotations>
      <ownedComment xmi:id="_SP8EuHCoEdq2Lvk-NX0TGA" annotatedElement="_SP8EtXCoEdq2Lvk-NX0TGA">
        <body>The set of PackageableElements that a Component owns. In the namespace of a component, all model elements that are involved in or related to its definition may be owned or imported explicitly. These may include e.g. Classes, Interfaces, Components, Packages, Use cases, Dependencies (e.g. mappings), and Artifacts.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SP8EuXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SP8EunCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SPyTv3CoEdq2Lvk-NX0TGA" name="realizedInterfaces" type="_8Ugn8GvtEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SPyTwXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPyTwHCoEdq2Lvk-NX0TGA" annotatedElement="_SPyTv3CoEdq2Lvk-NX0TGA">
        <body>Utility returning the set of realized interfaces of a component:</body>
      </ownedComment>
      <ownedRule xmi:id="_SPyTwXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SPyTv3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPyTwnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = (classifier.clientDependency->
select(dependency|dependency.oclIsKindOf(Realization) and dependency.supplier.oclIsKindOf(Interface)))->
collect(dependency|dependency.client)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SPyTw3CoEdq2Lvk-NX0TGA" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPyTxHCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPyTxXCoEdq2Lvk-NX0TGA"/>
      </returnResult>
      <ownedParameter xmi:id="_SPyTxnCoEdq2Lvk-NX0TGA" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SPyTx3CoEdq2Lvk-NX0TGA" name="usedInterfaces" type="_8Ugn8GvtEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SPyTyXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SPyTyHCoEdq2Lvk-NX0TGA" annotatedElement="_SPyTx3CoEdq2Lvk-NX0TGA">
        <body>Utility returning the set of used interfaces of a component:</body>
      </ownedComment>
      <ownedRule xmi:id="_SPyTyXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SPyTx3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPyTynCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = (classifier.supplierDependency->
select(dependency|dependency.oclIsKindOf(Usage) and dependency.supplier.oclIsKindOf(interface)))->
collect(dependency|dependency.supplier)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SPyTy3CoEdq2Lvk-NX0TGA" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPyTzHCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPyTzXCoEdq2Lvk-NX0TGA"/>
      </returnResult>
      <ownedParameter xmi:id="_SPyTznCoEdq2Lvk-NX0TGA" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SPyTz3CoEdq2Lvk-NX0TGA" name="required" type="_8Ugn8GvtEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SPyT0nCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SPyT0HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_SPyT0XCoEdq2Lvk-NX0TGA" operationName="getRequireds"/>
      </eAnnotations>
      <ownedRule xmi:id="_SPyT0nCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SPyTz3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPyT03CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = let usedInterfaces = UsedInterfaces(self) and

  let realizingClassifierUsedInterfaces = UsedInterfaces(self.realizingClassifier) and

  let typesOfUsedPorts = self.ownedPort.required in

    ((usedInterfaces->union(realizingClassifierUsedInterfaces))->

      union(typesOfUsedPorts))->asSet()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SPyT1HCoEdq2Lvk-NX0TGA" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPyT1XCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPyT1nCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_SPyT13CoEdq2Lvk-NX0TGA" name="provided" type="_8Ugn8GvtEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SPyT2nCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SPyT2HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_SPyT2XCoEdq2Lvk-NX0TGA" operationName="getProvideds"/>
      </eAnnotations>
      <ownedRule xmi:id="_SPyT2nCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SPyT13CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SPyT23CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = let implementedInterfaces = self.implementation->collect(impl|impl.contract) and

  let realizedInterfaces = RealizedInterfaces(self) and

  let realizingClassifierInterfaces = RealizedInterfaces(self.realizingClassifier) and

  let typesOfRequiredPorts = self.ownedPort.provided in

    (((implementedInterfaces->union(realizedInterfaces)->union(realizingClassifierInterfaces))->

      union(typesOfRequiredPorts))->asSet()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SPyT3HCoEdq2Lvk-NX0TGA" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SPyT3XCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SPyT3nCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SQF1oHCoEdq2Lvk-NX0TGA" name="A_component_packagedElement" memberEnd="_SP8EtXCoEdq2Lvk-NX0TGA _SQF1onCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SQF1oXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SQF1onCoEdq2Lvk-NX0TGA" type="_SPyTpnCoEdq2Lvk-NX0TGA" association="_SQF1oHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQF1o3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQF1pHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQF1snCoEdq2Lvk-NX0TGA" name="Node">
    <ownedComment xmi:id="_SQF1s3CoEdq2Lvk-NX0TGA" annotatedElement="_SQF1snCoEdq2Lvk-NX0TGA">
      <body>In the metamodel, a Node is a subclass of Class. It is associated with a Deployment of an Artifact. It is also associated with a set of Elements that are deployed on it. This is a derived association in that these PackageableElements are involved in a Manifestation of an Artifact that is deployed on the Node. Nodes may have an internal structure defined in terms of parts and connectors associated with them for advanced modeling applications.</body>
    </ownedComment>
    <ownedRule xmi:id="_SQF1tHCoEdq2Lvk-NX0TGA" name="internal_structure" constrainedElement="_SQF1snCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQF1tXCoEdq2Lvk-NX0TGA" annotatedElement="_SQF1tHCoEdq2Lvk-NX0TGA">
        <body>The internal structure of a Node (if defined) consists solely of parts of type Node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQF1tnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SQF1t3CoEdq2Lvk-NX0TGA" general="_00owUGvdEdq4DLWZOhbdEA"/>
    <generalization xmi:id="_SQF1uHCoEdq2Lvk-NX0TGA" general="_SQF1xXCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SQF1uXCoEdq2Lvk-NX0TGA" name="nestedNode" type="_SQF1snCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SQYwmnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQF1unCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQF1u3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQF1vHCoEdq2Lvk-NX0TGA" annotatedElement="_SQF1uXCoEdq2Lvk-NX0TGA">
        <body>The Nodes that are defined (nested) within the Node.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQF1vXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQF1vnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQF1v3CoEdq2Lvk-NX0TGA" name="Device">
    <ownedComment xmi:id="_SQF1wHCoEdq2Lvk-NX0TGA" annotatedElement="_SQF1v3CoEdq2Lvk-NX0TGA">
      <body>A Device is a physical computational resource with processing capability upon which artifacts may be deployed for execution. Devices may be complex, i.e. they may consist of other devices. In the metamodel, a Device is a subclass of Node.</body>
    </ownedComment>
    <generalization xmi:id="_SQF1wXCoEdq2Lvk-NX0TGA" general="_SQF1snCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQF1wnCoEdq2Lvk-NX0TGA" name="ExecutionEnvironment">
    <ownedComment xmi:id="_SQF1w3CoEdq2Lvk-NX0TGA" annotatedElement="_SQF1wnCoEdq2Lvk-NX0TGA">
      <body>In the metamodel, a ExecutionEnvironment is a subclass of Node. It is usually part of a general Node, representing the physical hardware environment on which the ExecutionEnvironment resides. In that environment, the ExecutionEnvironment implements a standard set of services that Components require at execution time (at the modeling level these services are usually implicit). For each component Deployment, aspects of these services may be determined by properties in a DeploymentSpecification for a particular kind of ExecutionEnvironment.</body>
    </ownedComment>
    <generalization xmi:id="_SQF1xHCoEdq2Lvk-NX0TGA" general="_SQF1snCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQF1xXCoEdq2Lvk-NX0TGA" name="DeploymentTarget" isAbstract="true">
    <ownedComment xmi:id="_SQF1xnCoEdq2Lvk-NX0TGA" annotatedElement="_SQF1xXCoEdq2Lvk-NX0TGA">
      <body>In the metamodel, DeploymentTarget is an abstract metaclass that is a specialization of NamedElement. A DeploymentTarget owns a set of Deployments.</body>
    </ownedComment>
    <generalization xmi:id="_SQF1x3CoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SQF1yHCoEdq2Lvk-NX0TGA" name="deployment" type="_SQF1pXCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA _SC01sHCoEdq2Lvk-NX0TGA" association="_SQYwl3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQF1yXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQF1ynCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQF1y3CoEdq2Lvk-NX0TGA" annotatedElement="_SQF1yHCoEdq2Lvk-NX0TGA">
        <body>The set of Deployments for a DeploymentTarget.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQF1zHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQF1zXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQF1znCoEdq2Lvk-NX0TGA" name="deployedElement" type="_jKxnwGwLEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" association="_SQYwnXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQF1z3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQF10HCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQF10XCoEdq2Lvk-NX0TGA" annotatedElement="_SQF1znCoEdq2Lvk-NX0TGA">
        <body>The set of elements that are manifested in an Artifact that is involved in Deployment to a DeploymentTarget.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQF10nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQF103CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SQF11HCoEdq2Lvk-NX0TGA" name="deployedElement" type="_jKxnwGwLEdq7X4sGURiZYA" isQuery="true" bodyCondition="_SQF113CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQF11XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_SQF11nCoEdq2Lvk-NX0TGA" operationName="getDeployedElements"/>
      </eAnnotations>
      <ownedRule xmi:id="_SQF113CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQF11HCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQF12HCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = ((self.deployment->collect(deployedArtifact))->collect(manifestation))->collect(utilizedElement)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQF12XCoEdq2Lvk-NX0TGA" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQF12nCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQF123CoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQO_kHCoEdq2Lvk-NX0TGA" name="DeployedArtifact" isAbstract="true">
    <ownedComment xmi:id="_SQO_kXCoEdq2Lvk-NX0TGA" annotatedElement="_SQO_kHCoEdq2Lvk-NX0TGA">
      <body>In the metamodel, DeployedArtifact is an abstract metaclass that is a specialization of NamedElement. A DeployedArtifact is involved in one or more Deployments to a DeploymentTarget.</body>
    </ownedComment>
    <generalization xmi:id="_SQO_knCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQO_k3CoEdq2Lvk-NX0TGA" name="CommunicationPath">
    <ownedComment xmi:id="_SQO_lHCoEdq2Lvk-NX0TGA" annotatedElement="_SQO_k3CoEdq2Lvk-NX0TGA">
      <body>In the metamodel, CommunicationPath is a subclass of Association.</body>
    </ownedComment>
    <ownedRule xmi:id="_SQO_lXCoEdq2Lvk-NX0TGA" name="association_ends" constrainedElement="_SQO_k3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQO_lnCoEdq2Lvk-NX0TGA" annotatedElement="_SQO_lXCoEdq2Lvk-NX0TGA">
        <body>The association ends of a CommunicationPath are typed by DeploymentTargets.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQO_l3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>result = self.endType->forAll (t | t.oclIsKindOf(DeploymentTarget))</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SQO_mHCoEdq2Lvk-NX0TGA" general="_AwvxoGwNEdq7X4sGURiZYA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_R7OY5nCoEdq2Lvk-NX0TGA" name="InstanceSpecification">
    <ownedComment xmi:id="_R7OY53CoEdq2Lvk-NX0TGA" annotatedElement="_R7OY5nCoEdq2Lvk-NX0TGA">
      <body>An instance specification specifies existence of an entity in a modeled system and completely or partially describes the entity.

The description may include:



- Classification of the entity by one or more classifiers of which the entity is an instance. If the only classifier specified is abstract, then the instance specification only partially describes the entity.

- The kind of instance, based on its classifier or classifiers -- for example, an instance specification whose classifier is a class describes an object of that class, while an instance specification whose classifier is an association describes a link of that association.

- Specification of values of structural features of the entity. Not all structural features of all classifiers of the instance specification need be represented by slots, in which case the instance specification is a partial description.

- Specification of how to compute, derive or construct the instance (optional).



InstanceSpecification is a concrete class.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SQO_nnCoEdq2Lvk-NX0TGA" annotatedElement="_R7OY5nCoEdq2Lvk-NX0TGA">
      <body>In the metamodel, InstanceSpecification is a specialization of DeploymentTarget and DeployedArtifact.</body>
    </ownedComment>
    <ownedRule xmi:id="_R7OY6HCoEdq2Lvk-NX0TGA" name="defining_feature" constrainedElement="_R7OY5nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R7OY6XCoEdq2Lvk-NX0TGA" annotatedElement="_R7OY6HCoEdq2Lvk-NX0TGA">
        <body>The defining feature of each slot is a structural feature (directly or inherited) of a classifier of the instance specification.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R7OY6nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>slot->forAll(s | classifier->exists (c | c.allFeatures()->includes (s.definingFeature)))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R7OY63CoEdq2Lvk-NX0TGA" name="structural_feature" constrainedElement="_R7OY5nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R7OY7HCoEdq2Lvk-NX0TGA" annotatedElement="_R7OY63CoEdq2Lvk-NX0TGA">
        <body>One structural feature (including the same feature inherited from multiple classifiers) is the defining feature of at most one slot in an instance specification.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R7OY7XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() &lt;= 1)))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQO_n3CoEdq2Lvk-NX0TGA" name="deployment_target" constrainedElement="_R7OY5nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQO_oHCoEdq2Lvk-NX0TGA" annotatedElement="_SQO_n3CoEdq2Lvk-NX0TGA">
        <body>An InstanceSpecification can be a DeploymentTarget if it is the instance specification of a Node and functions as a part in the internal structure of an encompassing Node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQO_oXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQO_onCoEdq2Lvk-NX0TGA" name="deployment_artifact" constrainedElement="_R7OY5nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQO_o3CoEdq2Lvk-NX0TGA" annotatedElement="_SQO_onCoEdq2Lvk-NX0TGA">
        <body>An InstanceSpecification can be a DeployedArtifact if it is the instance specification of an Artifact.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQO_pHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_R7OY7nCoEdq2Lvk-NX0TGA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
    <generalization xmi:id="_SQO_pXCoEdq2Lvk-NX0TGA" general="_SQF1xXCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SQO_pnCoEdq2Lvk-NX0TGA" general="_SQO_kHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R7OY73CoEdq2Lvk-NX0TGA" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_SAJVKHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R7OY8HCoEdq2Lvk-NX0TGA" annotatedElement="_R7OY73CoEdq2Lvk-NX0TGA">
        <body>The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7OY8XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7OY8nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R7OY83CoEdq2Lvk-NX0TGA" name="slot" type="_R7OY_3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SAJVKnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R7OY9HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R7OY9XCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R7OY9nCoEdq2Lvk-NX0TGA" annotatedElement="_R7OY83CoEdq2Lvk-NX0TGA">
        <body>A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7OY93CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7OY-HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R7OY-XCoEdq2Lvk-NX0TGA" name="specification" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SBCF93CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R7OY-nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R7OY-3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R7OY_HCoEdq2Lvk-NX0TGA" annotatedElement="_R7OY-XCoEdq2Lvk-NX0TGA">
        <body>A specification of how to compute, derive, or construct the instance.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7OY_XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7OY_nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SFqHYXCoEdq2Lvk-NX0TGA" name="Artifact">
    <ownedComment xmi:id="_SFqHYnCoEdq2Lvk-NX0TGA" annotatedElement="_SFqHYXCoEdq2Lvk-NX0TGA">
      <body>In the metamodel, an Artifact is a Classifier that represents a physical entity. Artifacts may have Properties that represent features of the Artifact, and Operations that can be performed on its instances. Artifacts can be involved in Associations to other Artifacts, e.g. composition associations. Artifacts can be instantiated to represent detailed copy semantics, where different instances of the same Artifact may be deployed to various Node instances (and each may have separate property values, e.g. for a 'time-stamp' property.</body>
    </ownedComment>
    <ownedComment xmi:id="_SQYwkHCoEdq2Lvk-NX0TGA" annotatedElement="_SFqHYXCoEdq2Lvk-NX0TGA">
      <body>As part of the Nodes package, an Artifact is extended to become the source of a deployment to a Node. This is achieved by specializing the abstract superclass.</body>
    </ownedComment>
    <generalization xmi:id="_SFqHY3CoEdq2Lvk-NX0TGA" general="_6UV2QGwJEdq7X4sGURiZYA"/>
    <generalization xmi:id="_SQYwkXCoEdq2Lvk-NX0TGA" general="_SQO_kHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SFqHZXCoEdq2Lvk-NX0TGA" name="fileName" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <eAnnotations xmi:id="_SFqHZnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SFqHZ3CoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFqHaHCoEdq2Lvk-NX0TGA" annotatedElement="_SFqHZXCoEdq2Lvk-NX0TGA">
        <body>A concrete name that is used to refer to the Artifact in a physical context. Example: file system name, universal resource locator.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFqHaXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFqHanCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFqHa3CoEdq2Lvk-NX0TGA" name="nestedArtifact" type="_SFqHYXCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SFzRPHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFqHbHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFqHbXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFqHbnCoEdq2Lvk-NX0TGA" annotatedElement="_SFqHa3CoEdq2Lvk-NX0TGA">
        <body>The Artifacts that are defined (nested) within the Artifact.

The association is a specialization of the ownedMember association from Namespace to NamedElement.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFqHb3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFqHcHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFqHcXCoEdq2Lvk-NX0TGA" name="manifestation" type="_SFzRMHCoEdq2Lvk-NX0TGA" subsettedProperty="_SC01sHCoEdq2Lvk-NX0TGA _Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SFzRP3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFqHcnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFqHc3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFqHdHCoEdq2Lvk-NX0TGA" annotatedElement="_SFqHcXCoEdq2Lvk-NX0TGA">
        <body>The set of model elements that are manifested in the Artifact. That is, these model elements are utilized in the construction (or generation) of the artifact.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFqHdXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFqHdnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFqHd3CoEdq2Lvk-NX0TGA" name="ownedOperation" type="_M4X2IGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RxPWdnCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_SFzRRXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFqHeHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFqHeXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFqHenCoEdq2Lvk-NX0TGA" annotatedElement="_SFqHd3CoEdq2Lvk-NX0TGA">
        <body>The Operations defined for the Artifact. The association is a specialization of the ownedMember association.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFqHe3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFqHfHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SFqHfXCoEdq2Lvk-NX0TGA" name="ownedAttribute" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RxPWcHCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_SFzRTHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SFqHfnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SFqHf3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SFqHgHCoEdq2Lvk-NX0TGA" annotatedElement="_SFqHfXCoEdq2Lvk-NX0TGA">
        <body>The attributes or association ends defined for the Artifact.

The association is a specialization of the ownedMember association.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SFqHgXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SFqHgnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SQYwknCoEdq2Lvk-NX0TGA" name="A_deployedArtifact_deployment" memberEnd="_SQF1qHCoEdq2Lvk-NX0TGA _SQYwlHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SQYwk3CoEdq2Lvk-NX0TGA" general="_SDHwqHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SQYwlHCoEdq2Lvk-NX0TGA" type="_SQF1pXCoEdq2Lvk-NX0TGA" association="_SQYwknCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQYwlXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQYwlnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SQYwl3CoEdq2Lvk-NX0TGA" name="A_deployment_location" memberEnd="_SQF1yHCoEdq2Lvk-NX0TGA _SQF1rHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SQYwmHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SQYwmXCoEdq2Lvk-NX0TGA" general="_SDHwrnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SQYwmnCoEdq2Lvk-NX0TGA" name="A_nestedNode_node" memberEnd="_SQF1uXCoEdq2Lvk-NX0TGA _SQYwnHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SQYwm3CoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SQYwnHCoEdq2Lvk-NX0TGA" type="_SQF1snCoEdq2Lvk-NX0TGA" redefinedProperty="_R2wIo3CoEdq2Lvk-NX0TGA" association="_SQYwmnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SQYwnXCoEdq2Lvk-NX0TGA" name="A_deployedElement_deploymentTarget" isDerived="true" memberEnd="_SQF1znCoEdq2Lvk-NX0TGA _SQYwnnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SQYwnnCoEdq2Lvk-NX0TGA" type="_SQF1xXCoEdq2Lvk-NX0TGA" association="_SQYwnXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQYwn3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQYwoHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQF1pXCoEdq2Lvk-NX0TGA" name="Deployment">
    <ownedComment xmi:id="_SQF1pnCoEdq2Lvk-NX0TGA" annotatedElement="_SQF1pXCoEdq2Lvk-NX0TGA">
      <body>In the metamodel, Deployment is a subtype of Dependency.</body>
    </ownedComment>
    <ownedComment xmi:id="_SQYwoXCoEdq2Lvk-NX0TGA" annotatedElement="_SQF1pXCoEdq2Lvk-NX0TGA">
      <body>A component deployment is the deployment of one or more artifacts or artifact instances to a deployment target, optionally parameterized by a deployment specification. Examples are executables and configuration files.</body>
    </ownedComment>
    <generalization xmi:id="_SQF1p3CoEdq2Lvk-NX0TGA" general="_rEDGkGwKEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SQF1qHCoEdq2Lvk-NX0TGA" name="deployedArtifact" type="_SQO_kHCoEdq2Lvk-NX0TGA" subsettedProperty="_SCh6zHCoEdq2Lvk-NX0TGA" association="_SQYwknCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQF1qXCoEdq2Lvk-NX0TGA" annotatedElement="_SQF1qHCoEdq2Lvk-NX0TGA">
        <body>The Artifacts that are deployed onto a Node. This association specializes the supplier association.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQF1qnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQF1q3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQF1rHCoEdq2Lvk-NX0TGA" name="location" type="_SQF1xXCoEdq2Lvk-NX0TGA" subsettedProperty="_SCh60HCoEdq2Lvk-NX0TGA" association="_SQYwl3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQF1rXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQF1rnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQF1r3CoEdq2Lvk-NX0TGA" annotatedElement="_SQF1rHCoEdq2Lvk-NX0TGA">
        <body>The DeployedTarget which is the target of a Deployment.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQF1sHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQF1sXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQYwonCoEdq2Lvk-NX0TGA" name="configuration" type="_SQh6gHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SQh6m3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQYwo3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQYwpHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQYwpXCoEdq2Lvk-NX0TGA" annotatedElement="_SQYwonCoEdq2Lvk-NX0TGA">
        <body>The specification of properties that parameterize the deployment and execution of one or more Artifacts. This association is specialized from the ownedMember association.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQYwpnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQYwp3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQh6gHCoEdq2Lvk-NX0TGA" name="DeploymentSpecification">
    <ownedComment xmi:id="_SQh6gXCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6gHCoEdq2Lvk-NX0TGA">
      <body>In the metamodel, a DeploymentSpecification is a subtype of Artifact. It defines a set of deployment properties that are specific to a certain Container type. An instance of a DeploymentSpecification with specific values for these properties may be contained in a complex Artifact.</body>
    </ownedComment>
    <ownedRule xmi:id="_SQh6gnCoEdq2Lvk-NX0TGA" name="deployed_elements" constrainedElement="_SQh6gHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQh6g3CoEdq2Lvk-NX0TGA" annotatedElement="_SQh6gnCoEdq2Lvk-NX0TGA">
        <body>The deployedElements of a DeploymentTarget that are involved in a Deployment that has an associated Deployment-Specification is a kind of Component (i.e. the configured components).</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQh6hHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.deployment->forAll (d | d.location.deployedElements->forAll (de |

  de.oclIsKindOf(Component)))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQh6hXCoEdq2Lvk-NX0TGA" name="deployment_target" constrainedElement="_SQh6gHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQh6hnCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6hXCoEdq2Lvk-NX0TGA">
        <body>The DeploymentTarget of a DeploymentSpecification is a kind of ExecutionEnvironment.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQh6h3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>result = self.deployment->forAll (d | d.location..oclIsKindOf(ExecutionEnvironment))</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SQh6iHCoEdq2Lvk-NX0TGA" general="_SFqHYXCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SQh6iXCoEdq2Lvk-NX0TGA" name="deploymentLocation" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <eAnnotations xmi:id="_SQh6inCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SQh6i3CoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQh6jHCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6iXCoEdq2Lvk-NX0TGA">
        <body>The location where an Artifact is deployed onto a Node. This is typically a 'directory' or 'memory address'.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQh6jXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQh6jnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQh6j3CoEdq2Lvk-NX0TGA" name="executionLocation" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <eAnnotations xmi:id="_SQh6kHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SQh6kXCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQh6knCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6j3CoEdq2Lvk-NX0TGA">
        <body>The location where a component Artifact executes. This may be a local or remote location.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQh6k3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQh6lHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQh6lXCoEdq2Lvk-NX0TGA" name="deployment" type="_SQF1pXCoEdq2Lvk-NX0TGA" association="_SQh6m3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQh6lnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQh6l3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQh6mHCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6lXCoEdq2Lvk-NX0TGA">
        <body>The deployment with which the DeploymentSpecification is associated.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQh6mXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQh6mnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SQh6m3CoEdq2Lvk-NX0TGA" name="A_configuration_deployment" memberEnd="_SQYwonCoEdq2Lvk-NX0TGA _SQh6lXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SQh6nHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQh6nXCoEdq2Lvk-NX0TGA" name="StateMachine">
    <ownedComment xmi:id="_SQh6nnCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6nXCoEdq2Lvk-NX0TGA">
      <body>A state machine owns one or more regions, which in turn own vertices and transitions.

The behaviored classifier context owning a state machine defines which signal and call triggers are defined for the state machine, and which attributes and operations are available in activities of the state machine. Signal triggers and call triggers for the state machine are defined according to the receptions and operations of this classifier.



As a kind of behavior, a state machine may have an associated behavioral feature (specification) and be the method of this behavioral feature. In this case the state machine specifies the behavior of this behavioral feature. The parameters of the state machine in this case match the parameters of the behavioral feature and provide the means for accessing (within the state machine) the behavioral feature parameters.



A state machine without a context classifier may use triggers that are independent of receptions or operations of a classifier, i.e. either just signal triggers or call triggers based upon operation template parameters of the (parameterized) statemachine.

</body>
    </ownedComment>
    <ownedRule xmi:id="_SQh6n3CoEdq2Lvk-NX0TGA" name="classifier_context" constrainedElement="_SQh6nXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQh6oHCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6n3CoEdq2Lvk-NX0TGA">
        <body>The classifier context of a state machine cannot be an interface.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQh6oXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>context->notEmpty() implies not context.oclIsKindOf(Interface)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQh6onCoEdq2Lvk-NX0TGA" name="context_classifier" constrainedElement="_SQh6nXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQh6o3CoEdq2Lvk-NX0TGA" annotatedElement="_SQh6onCoEdq2Lvk-NX0TGA">
        <body>The context classifier of the method state machine of a behavioral feature must be the classifier that owns the behavioral feature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQh6pHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>specification->notEmpty() implies (context->notEmpty() and specification->featuringClassifier->exists (c | c = context))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQh6pXCoEdq2Lvk-NX0TGA" name="connection_points" constrainedElement="_SQh6nXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQh6pnCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6pXCoEdq2Lvk-NX0TGA">
        <body>The connection points of a state machine are pseudostates of kind entry point or exit point.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQh6p3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>conectionPoint->forAll (c | c.kind = #entryPoint or c.kind = #exitPoint)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQh6qHCoEdq2Lvk-NX0TGA" name="method" constrainedElement="_SQh6nXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQh6qXCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6qHCoEdq2Lvk-NX0TGA">
        <body>A state machine as the method for a behavioral feature cannot have entry/exit connection points.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQh6qnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>specification->notEmpty() implies connectionPoint->isEmpty()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SQh6q3CoEdq2Lvk-NX0TGA" general="_TUPtYGveEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SQh6rHCoEdq2Lvk-NX0TGA" name="region" type="_SQ-mhnCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SRSIeXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQh6rXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQh6rnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQh6r3CoEdq2Lvk-NX0TGA" annotatedElement="_SQh6rHCoEdq2Lvk-NX0TGA">
        <body>The regions owned directly by the state machine.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQh6sHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQh6sXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQh6snCoEdq2Lvk-NX0TGA" name="connectionPoint" type="_SQrscnCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SRSIe3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQh6s3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQh6tHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQh6tXCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6snCoEdq2Lvk-NX0TGA">
        <body>The connection points defined for this state machine. They represent the interface of the state machine when used as part of submachine state.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQh6tnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQh6t3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQh6uHCoEdq2Lvk-NX0TGA" name="extendedStateMachine" type="_SQh6nXCoEdq2Lvk-NX0TGA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_SRSIhHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQh6uXCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6uHCoEdq2Lvk-NX0TGA">
        <body>The state machines of which this is an extension.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQh6unCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQh6u3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQh6vHCoEdq2Lvk-NX0TGA" name="submachineState" type="_SQh63HCoEdq2Lvk-NX0TGA" association="_SRIXdnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQh6vXCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6vHCoEdq2Lvk-NX0TGA">
        <body>References the submachine(s) in case of a submachine state. Multiple machines are referenced in case of a concurrent state.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQh6vnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQh6v3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SQh6wHCoEdq2Lvk-NX0TGA" name="LCA" type="_ZiwkoGwLEdq7X4sGURiZYA" isQuery="true" bodyCondition="_SQh6w3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQh6wXCoEdq2Lvk-NX0TGA" source="keywords"/>
      <ownedComment xmi:id="_SQh6wnCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6wHCoEdq2Lvk-NX0TGA">
        <body>The operation LCA(s1,s2) returns an orthogonal state or region which is the least common ancestor of states s1 and s2, based on the statemachine containment hierarchy.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQh6w3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQh6wHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQh6xHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQh6xXCoEdq2Lvk-NX0TGA" type="_ZiwkoGwLEdq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_SQh6xnCoEdq2Lvk-NX0TGA" name="s1" type="_SQh63HCoEdq2Lvk-NX0TGA"/>
      <ownedParameter xmi:id="_SQh6x3CoEdq2Lvk-NX0TGA" name="s2" type="_SQh63HCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQh6yHCoEdq2Lvk-NX0TGA" name="ancestor" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SQh6ynCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQh6yXCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6yHCoEdq2Lvk-NX0TGA">
        <body>The query ancestor(s1, s2) checks whether s2 is an ancestor state of state s1. context StateMachine::ancestor (s1 : State, s2 : State) : Boolean

</body>
      </ownedComment>
      <ownedRule xmi:id="_SQh6ynCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQh6yHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQh6y3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if (s2 = s1) then
true
else if (s1.container->isEmpty) then
true
else if (s2.container->isEmpty) then
false
else (ancestor (s1, s2.container))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQh6zHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SQh6zXCoEdq2Lvk-NX0TGA" name="s1" type="_SQh63HCoEdq2Lvk-NX0TGA"/>
      <ownedParameter xmi:id="_SQh6znCoEdq2Lvk-NX0TGA" name="s2" type="_SQh63HCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQh6z3CoEdq2Lvk-NX0TGA" name="isRedefinitionContextValid" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzCGS3CoEdq2Lvk-NX0TGA" bodyCondition="_SQh60XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQh60HCoEdq2Lvk-NX0TGA" annotatedElement="_SQh6z3CoEdq2Lvk-NX0TGA">
        <body>The query isRedefinitionContextValid() specifies whether the redefinition contexts of a statemachine are properly related to the redefinition contexts of the specified statemachine to allow this element to redefine the other. The containing classifier of a redefining statemachine must redefine the containing classifier of the redefined statemachine.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQh60XCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQh6z3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQh60nCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQh603CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SQh61HCoEdq2Lvk-NX0TGA" name="redefined" type="_SQh6nXCoEdq2Lvk-NX0TGA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQh61XCoEdq2Lvk-NX0TGA" name="isConsistentWith" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzCGRXCoEdq2Lvk-NX0TGA" bodyCondition="_SQh62HCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQh61nCoEdq2Lvk-NX0TGA" source="keywords"/>
      <ownedComment xmi:id="_SQh613CoEdq2Lvk-NX0TGA" annotatedElement="_SQh61XCoEdq2Lvk-NX0TGA">
        <body>The query isConsistentWith() specifies that a redefining state machine is consistent with a redefined state machine provided that the redefining state machine is an extension of the redefined state machine: Regions are inherited and regions can be added, inherited regions can be redefined. In case of multiple redefining state machines, extension implies that the redefining state machine gets orthogonal regions for each of the redefined state machines.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQh62HCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQh61XCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQh62XCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQh62nCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SQh623CoEdq2Lvk-NX0TGA" name="redefinee" type="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQrsBHCoEdq2Lvk-NX0TGA" name="Transition">
    <ownedComment xmi:id="_SQrsBXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsBHCoEdq2Lvk-NX0TGA">
      <body>A transition is a directed relationship between a source vertex and a target vertex. It may be part of a compound transition, which takes the state machine from one state configuration to another, representing the complete response of the state machine to an occurrence of an event of a particular type.</body>
    </ownedComment>
    <ownedRule xmi:id="_SQrsBnCoEdq2Lvk-NX0TGA" name="fork_segment_guards" constrainedElement="_SQrsBHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsB3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrsBnCoEdq2Lvk-NX0TGA">
        <body>A fork segment must not have guards or triggers.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsCHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(source.oclIsKindOf(Pseudostate) and source.kind = #fork) implies (guard->isEmpty() and trigger->isEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsCXCoEdq2Lvk-NX0TGA" name="join_segment_guards" constrainedElement="_SQrsBHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsCnCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsCXCoEdq2Lvk-NX0TGA">
        <body>A join segment must not have guards or triggers.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsC3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>(target.oclIsKindOf(Pseudostate) and target.kind = #join) implies (guard->isEmpty() and trigger->isEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsDHCoEdq2Lvk-NX0TGA" name="fork_segment_state" constrainedElement="_SQrsBHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsDXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsDHCoEdq2Lvk-NX0TGA">
        <body>A fork segment must always target a state.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsDnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(source.oclIsKindOf(Pseudostate) and source.kind = #fork) implies (target.oclIsKindOf(State))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsD3CoEdq2Lvk-NX0TGA" name="join_segment_state" constrainedElement="_SQrsBHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsEHCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsD3CoEdq2Lvk-NX0TGA">
        <body>A join segment must always originate from a state.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsEXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(target.oclIsKindOf(Pseudostate) and target.kind = #join) implies (source.oclIsKindOf(State))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsEnCoEdq2Lvk-NX0TGA" name="outgoing_pseudostates" constrainedElement="_SQrsBHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsE3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrsEnCoEdq2Lvk-NX0TGA">
        <body>Transitions outgoing pseudostates may not have a trigger.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsFHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>source.oclIsKindOf(Pseudostate) and
((source.kind &lt;> #junction) and (source.kind &lt;> #join) and (source.kind &lt;> #initial)) implies trigger->isEmpty()
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsFXCoEdq2Lvk-NX0TGA" name="initial_transition" constrainedElement="_SQrsBHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsFnCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsFXCoEdq2Lvk-NX0TGA">
        <body>An initial transition at the topmost level (region of a statemachine) either has no trigger or it has a trigger with the stereotype create.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsF3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.source.oclIsKindOf(Pseudostate) implies
(self.source.oclAsType(Pseudostate).kind = #initial) implies
(self.source.container = self.stateMachine.top) implies
((self.trigger->isEmpty) or
(self.trigger.stereotype.name = 'create'))
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsGHCoEdq2Lvk-NX0TGA" name="signatures_compatible" constrainedElement="_SQrsBHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsGXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsGHCoEdq2Lvk-NX0TGA">
        <body>In case of more than one trigger, the signatures of these must be compatible in case the parameters of the signal are assigned to local variables/attributes.

</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsGnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SQrsG3CoEdq2Lvk-NX0TGA" general="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SQrsHHCoEdq2Lvk-NX0TGA" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SQrsHXCoEdq2Lvk-NX0TGA" name="kind" type="_SQ-mznCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsHnCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsHXCoEdq2Lvk-NX0TGA">
        <body>Indicates  the precise type of the transition.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_SQrsH3CoEdq2Lvk-NX0TGA" type="_SQ-mznCoEdq2Lvk-NX0TGA" instance="_SQ-m2nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsIHCoEdq2Lvk-NX0TGA" name="container" type="_SQ-mhnCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SRIXcnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQrsIXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrsInCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrsI3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrsIHCoEdq2Lvk-NX0TGA">
        <body>Designates the region that owns this transition.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsJHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsJXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsJnCoEdq2Lvk-NX0TGA" name="source" type="_SQrsXHCoEdq2Lvk-NX0TGA" association="_SRIXdHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsJ3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrsJnCoEdq2Lvk-NX0TGA">
        <body>Designates the originating vertex (state or pseudostate) of the transition.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsKHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsKXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsKnCoEdq2Lvk-NX0TGA" name="target" type="_SQrsXHCoEdq2Lvk-NX0TGA" association="_SRIXdXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsK3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrsKnCoEdq2Lvk-NX0TGA">
        <body>Designates the target vertex that is reached when the transition is taken.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsLHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsLXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsLnCoEdq2Lvk-NX0TGA" name="redefinedTransition" type="_SQrsBHCoEdq2Lvk-NX0TGA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_SRSIcHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsL3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrsLnCoEdq2Lvk-NX0TGA">
        <body>The transition that is redefined by this transition.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsMHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsMXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsMnCoEdq2Lvk-NX0TGA" name="guard" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaWHCoEdq2Lvk-NX0TGA" association="_SRbSYHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQrsM3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrsNHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrsNXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsMnCoEdq2Lvk-NX0TGA">
        <body>A guard is a constraint that provides a fine-grained control over the firing of the transition. The guard is evaluated when an event occurrence is dispatched by the state machine. If the guard is true at that time, the transition may be enabled, otherwise, it is disabled. Guards should be pure expressions without side effects. Guard expressions with side effects are ill formed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsNnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsN3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsOHCoEdq2Lvk-NX0TGA" name="redefinitionContext" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" redefinedProperty="_RzCGOXCoEdq2Lvk-NX0TGA" association="_SRbSb3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQrsOXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrsOnCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrsO3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrsOHCoEdq2Lvk-NX0TGA">
        <body>References the classifier in which context this element may be redefined.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsPHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsPXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsPnCoEdq2Lvk-NX0TGA" name="effect" type="_TUPtYGveEdq4DLWZOhbdEA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SRbSeXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQrsP3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrsQHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrsQXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsPnCoEdq2Lvk-NX0TGA">
        <body>Specifies an optional behavior to be performed when the transition fires.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsQnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsQ3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsRHCoEdq2Lvk-NX0TGA" name="trigger" type="_SF9CTnCoEdq2Lvk-NX0TGA" association="_SRlDZ3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQrsRXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrsRnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrsR3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrsRHCoEdq2Lvk-NX0TGA">
        <body>Specifies the triggers that may fire the transition.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsSHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsSXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SQrsSnCoEdq2Lvk-NX0TGA" name="redefinitionContext" type="_6UV2QGwJEdq7X4sGURiZYA" isQuery="true" bodyCondition="_SQrsTHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsS3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrsSnCoEdq2Lvk-NX0TGA">
        <body>The redefinition context of a transition is the nearest containing statemachine.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrsTHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrsSnCoEdq2Lvk-NX0TGA _SQrsOHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsTXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = let sm = containingStateMachine() in
if sm.context->isEmpty() or sm.general->notEmpty() then
sm
else
sm.context
endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrsTnCoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQrsT3CoEdq2Lvk-NX0TGA" name="isConsistentWith" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_SQrsU3CoEdq2Lvk-NX0TGA" redefinedOperation="_RzCGRXCoEdq2Lvk-NX0TGA" bodyCondition="_SQrsUXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsUHCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsT3CoEdq2Lvk-NX0TGA">
        <body>The query isConsistentWith() specifies that a redefining transition is consistent with a redefined transition provided that the redefining transition has the following relation to the redefined transition: A redefining transition redefines all properties of the corresponding redefined transition, except the source state and the trigger.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrsUXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrsT3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsUnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = (redefinee.oclIsKindOf(Transition) and

  let trans: Transition = redefinee.oclAsType(Transition) in

    (source() = trans.source() and trigger() = tran.trigger())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_SQrsU3CoEdq2Lvk-NX0TGA" constrainedElement="_SQrsT3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsVHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>redefinee.isRedefinitionContextValid(self)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrsVXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SQrsVnCoEdq2Lvk-NX0TGA" name="redefinee" type="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQrsV3CoEdq2Lvk-NX0TGA" name="containingStateMachine" type="_SQh6nXCoEdq2Lvk-NX0TGA" isQuery="true" bodyCondition="_SQrsWXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsWHCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsV3CoEdq2Lvk-NX0TGA">
        <body>The query containingStateMachine() returns the state machine that contains the transition either directly or transitively.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrsWXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrsV3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsWnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = container.containingStateMachine()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrsW3CoEdq2Lvk-NX0TGA" type="_SQh6nXCoEdq2Lvk-NX0TGA" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQrsXHCoEdq2Lvk-NX0TGA" name="Vertex" isAbstract="true">
    <ownedComment xmi:id="_SQrsXXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsXHCoEdq2Lvk-NX0TGA">
      <body>A vertex is an abstraction of a node in a state machine graph. In general, it can be the source or destination of any number of transitions.</body>
    </ownedComment>
    <generalization xmi:id="_SQrsXnCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SQrsX3CoEdq2Lvk-NX0TGA" name="container" type="_SQ-mhnCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SRIXcHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQrsYHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrsYXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrsYnCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsX3CoEdq2Lvk-NX0TGA">
        <body>The region that contains this vertex.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsY3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsZHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsZXCoEdq2Lvk-NX0TGA" name="outgoing" type="_SQrsBHCoEdq2Lvk-NX0TGA" association="_SRIXdHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsZnCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsZXCoEdq2Lvk-NX0TGA">
        <body>Specifies the transitions departing from this vertex.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsZ3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsaHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsaXCoEdq2Lvk-NX0TGA" name="incoming" type="_SQrsBHCoEdq2Lvk-NX0TGA" association="_SRIXdXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsanCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsaXCoEdq2Lvk-NX0TGA">
        <body>Specifies the transitions entering this vertex.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsa3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsbHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SQrsbXCoEdq2Lvk-NX0TGA" name="containingStatemachine" type="_SQh6nXCoEdq2Lvk-NX0TGA" isQuery="true" bodyCondition="_SQrsb3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsbnCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsbXCoEdq2Lvk-NX0TGA">
        <body>The operation containingStatemachine() returns the state machine in which this Vertex is defined</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrsb3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrsbXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrscHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if not container->isEmpty()
then
-- the container is a region
container.containingStateMachine()
else if (oclIsKindOf(Pseudostate)) then
-- entry or exit point?
if (kind = #entryPoint) or (kind = #exitPoint) then
stateMachine
else if (oclIsKindOf(ConnectionPointReference)) then
state.containingStateMachine() -- no other valid cases possible
endif
</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrscXCoEdq2Lvk-NX0TGA" type="_SQh6nXCoEdq2Lvk-NX0TGA" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQrscnCoEdq2Lvk-NX0TGA" name="Pseudostate">
    <ownedComment xmi:id="_SQrsc3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrscnCoEdq2Lvk-NX0TGA">
      <body>Pseudostates are typically used to connect multiple transitions into more complex state transitions paths. For example, by combining a transition entering a fork pseudostate with a set of transitions exiting the fork pseudostate, we get a compound transition that leads to a set of orthogonal target states.</body>
    </ownedComment>
    <ownedRule xmi:id="_SQrsdHCoEdq2Lvk-NX0TGA" name="initial_vertex" constrainedElement="_SQrscnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsdXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsdHCoEdq2Lvk-NX0TGA">
        <body>An initial vertex can have at most one outgoing transition.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsdnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.kind = #initial) implies (self.outgoing->size &lt;= 1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsd3CoEdq2Lvk-NX0TGA" name="history_vertices" constrainedElement="_SQrscnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrseHCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsd3CoEdq2Lvk-NX0TGA">
        <body>History vertices can have at most one outgoing transition.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrseXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>((self.kind = #deepHistory) or (self.kind = #shallowHistory)) implies
(self.outgoing->size &lt;= 1)
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsenCoEdq2Lvk-NX0TGA" name="join_vertex" constrainedElement="_SQrscnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrse3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrsenCoEdq2Lvk-NX0TGA">
        <body>In a complete statemachine, a join vertex must have at least two incoming transitions and exactly one outgoing transition.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsfHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.kind = #join) implies
((self.outgoing->size = 1) and (self.incoming->size >= 2))
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsfXCoEdq2Lvk-NX0TGA" name="transitions_incoming" constrainedElement="_SQrscnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsfnCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsfXCoEdq2Lvk-NX0TGA">
        <body>All transitions incoming a join vertex must originate in different regions of an orthogonal state.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsf3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.kind = #join) implies
  self.incoming->forAll (t1, t2 | t1&lt;>t2 implies
    (self.stateMachine.LCA(t1.source, t2.source).container.isOrthogonal))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsgHCoEdq2Lvk-NX0TGA" name="fork_vertex" constrainedElement="_SQrscnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsgXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsgHCoEdq2Lvk-NX0TGA">
        <body>In a complete statemachine, a fork vertex must have at least two outgoing transitions and exactly one incoming transition.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsgnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.kind = #fork) implies
((self.incoming->size = 1) and (self.outgoing->size >= 2))
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsg3CoEdq2Lvk-NX0TGA" name="transitions_outgoing" constrainedElement="_SQrscnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrshHCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsg3CoEdq2Lvk-NX0TGA">
        <body>All transitions outgoing a fork vertex must target states in different regions of an orthogonal state.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrshXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.kind = #fork) implies
  self.outgoing->forAll (t1, t2 | t1&lt;>t2 implies
    (self.stateMachine.LCA(t1.target, t2.target).container.isOrthogonal))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrshnCoEdq2Lvk-NX0TGA" name="junction_vertex" constrainedElement="_SQrscnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsh3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrshnCoEdq2Lvk-NX0TGA">
        <body>In a complete statemachine, a junction vertex must have at least one incoming and one outgoing transition.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsiHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.kind = #junction) implies
((self.incoming->size >= 1) and (self.outgoing->size >= 1))
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsiXCoEdq2Lvk-NX0TGA" name="choice_vertex" constrainedElement="_SQrscnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsinCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsiXCoEdq2Lvk-NX0TGA">
        <body>In a complete statemachine, a choice vertex must have at least one incoming and one outgoing transition.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsi3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.kind = #choice) implies
((self.incoming->size >= 1) and (self.outgoing->size >= 1))
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrsjHCoEdq2Lvk-NX0TGA" name="outgoing_from_initial" constrainedElement="_SQrscnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsjXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsjHCoEdq2Lvk-NX0TGA">
        <body>The outgoing transition from and initial vertex may have a behavior, but not a trigger or a guard.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsjnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.kind = #initial) implies (self.outgoing.guard->isEmpty()

  and self.outgoing.trigger->isEmpty())</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SQrsj3CoEdq2Lvk-NX0TGA" general="_SQrsXHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SQrskHCoEdq2Lvk-NX0TGA" name="kind" type="_SQ-mcHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrskXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrskHCoEdq2Lvk-NX0TGA">
        <body>Determines the precise type of the Pseudostate and can be one of: entryPoint, exitPoint, initial, deepHistory, shallowHistory, join, fork, junction, terminate or choice.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_SQrsknCoEdq2Lvk-NX0TGA" type="_SQ-mcHCoEdq2Lvk-NX0TGA" instance="_SQ-mcnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsk3CoEdq2Lvk-NX0TGA" name="stateMachine" type="_SQh6nXCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SRSIe3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQrslHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrslXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrslnCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsk3CoEdq2Lvk-NX0TGA">
        <body>The StateMachine in which this Pseudostate is defined. This only applies to Pseudostates of the kind entryPoint or exitPoint.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsl3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsmHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrsmXCoEdq2Lvk-NX0TGA" name="state" type="_SQh63HCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SRlDZXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQrsmnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrsm3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrsnHCoEdq2Lvk-NX0TGA" annotatedElement="_SQrsmXCoEdq2Lvk-NX0TGA">
        <body>The State that owns this pseudostate and in which it appears.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrsnXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrsnnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQ1cgHCoEdq2Lvk-NX0TGA" name="FinalState">
    <ownedComment xmi:id="_SQ1cgXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ1cgHCoEdq2Lvk-NX0TGA">
      <body>A special kind of state signifying that the enclosing region is completed. If the enclosing region is directly contained in a state machine and all other regions in the state machine also are completed, then it means that the entire state machine is completed.</body>
    </ownedComment>
    <ownedRule xmi:id="_SQ1cgnCoEdq2Lvk-NX0TGA" name="no_outgoing_transitions" constrainedElement="_SQ1cgHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ1cg3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ1cgnCoEdq2Lvk-NX0TGA">
        <body>A final state cannot have any outgoing transitions.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ1chHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.outgoing->size() = 0</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQ1chXCoEdq2Lvk-NX0TGA" name="no_regions" constrainedElement="_SQ1cgHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ1chnCoEdq2Lvk-NX0TGA" annotatedElement="_SQ1chXCoEdq2Lvk-NX0TGA">
        <body>A final state cannot have regions.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ1ch3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.region->size() = 0</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQ1ciHCoEdq2Lvk-NX0TGA" name="cannot_reference_submachine" constrainedElement="_SQ1cgHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ1ciXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ1ciHCoEdq2Lvk-NX0TGA">
        <body>A final state cannot reference a submachine.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ1cinCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.submachine->isEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQ1ci3CoEdq2Lvk-NX0TGA" name="no_entry_behavior" constrainedElement="_SQ1cgHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ1cjHCoEdq2Lvk-NX0TGA" annotatedElement="_SQ1ci3CoEdq2Lvk-NX0TGA">
        <body>A final state has no entry behavior.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ1cjXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.entry->isEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQ1cjnCoEdq2Lvk-NX0TGA" name="no_exit behavior" constrainedElement="_SQ1cgHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ1cj3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ1cjnCoEdq2Lvk-NX0TGA">
        <body>A final state has no exit behavior.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ1ckHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.exit->isEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQ1ckXCoEdq2Lvk-NX0TGA" name="no_state_behavior" constrainedElement="_SQ1cgHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ1cknCoEdq2Lvk-NX0TGA" annotatedElement="_SQ1ckXCoEdq2Lvk-NX0TGA">
        <body>A final state has no state (doActivity) behavior.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ1ck3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.doActivity->isEmpty()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SQ1clHCoEdq2Lvk-NX0TGA" general="_SQh63HCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQ1clXCoEdq2Lvk-NX0TGA" name="ConnectionPointReference">
    <ownedComment xmi:id="_SQ1clnCoEdq2Lvk-NX0TGA" annotatedElement="_SQ1clXCoEdq2Lvk-NX0TGA">
      <body>Connection point references of a submachine state can be used as sources/targets of transitions. They represent entries into or exits out of the submachine state machine referenced by the submachine state.</body>
    </ownedComment>
    <ownedRule xmi:id="_SQ1cl3CoEdq2Lvk-NX0TGA" name="entry_pseudostates" constrainedElement="_SQ1clXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ1cmHCoEdq2Lvk-NX0TGA" annotatedElement="_SQ1cl3CoEdq2Lvk-NX0TGA">
        <body>The entry Pseudostates must be Pseudostates with kind entryPoint.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ1cmXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>entry->notEmpty() implies entry->forAll(e | e.kind = #entryPoint)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQ1cmnCoEdq2Lvk-NX0TGA" name="exit_pseudostates" constrainedElement="_SQ1clXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ1cm3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ1cmnCoEdq2Lvk-NX0TGA">
        <body>The exit Pseudostates must be Pseudostates with kind exitPoint.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ1cnHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>exit->notEmpty() implies exit->forAll(e | e.kind = #exitPoint)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SQ1cnXCoEdq2Lvk-NX0TGA" general="_SQrsXHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SQ1cnnCoEdq2Lvk-NX0TGA" name="entry" type="_SQrscnCoEdq2Lvk-NX0TGA" association="_SRIXeXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ1cn3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ1cnnCoEdq2Lvk-NX0TGA">
        <body>The entryPoint kind pseudo states corresponding to this connection point.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQ1coHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQ1coXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQ1conCoEdq2Lvk-NX0TGA" name="state" type="_SQh63HCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SRIXfXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQ1co3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQ1cpHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQ1cpXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ1conCoEdq2Lvk-NX0TGA">
        <body>The State in which the connection point refreshens are defined.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQ1cpnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQ1cp3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQ1cqHCoEdq2Lvk-NX0TGA" name="exit" type="_SQrscnCoEdq2Lvk-NX0TGA" association="_SRSIdXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ1cqXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ1cqHCoEdq2Lvk-NX0TGA">
        <body>The exitPoints kind pseudo states corresponding to this connection point.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQ1cqnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQ1cq3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_SQ-mcHCoEdq2Lvk-NX0TGA" name="PseudostateKind">
    <ownedComment xmi:id="_SQ-mcXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mcHCoEdq2Lvk-NX0TGA">
      <body>PseudoStateKind is an enumeration of the following literal values:
 initial
 deepHistory
 shallowHistory
 join
 fork
 junction
 choice
 entryPoint
 exitPoint
 terminate
</body>
    </ownedComment>
    <ownedLiteral xmi:id="_SQ-mcnCoEdq2Lvk-NX0TGA" name="initial">
      <ownedComment xmi:id="_SQ-mc3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mcnCoEdq2Lvk-NX0TGA">
        <body>An initial pseudostate represents a default vertex that is the source for a single transition to the default state of a composite state. There can be at most one initial vertex in a region. The outgoing transition from the initial vertex may have a behavior, but not a trigger or guard.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SQ-mdHCoEdq2Lvk-NX0TGA" name="deepHistory">
      <ownedComment xmi:id="_SQ-mdXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mdHCoEdq2Lvk-NX0TGA">
        <body>DeepHistory represents the most recent active configuration of the composite state that directly contains this pseudostate; e.g. the state configuration that was active when the composite state was last exited. A composite state can have at most one deep history vertex. At most one transition may originate from the history connector to the default deep history state. This transition is taken in case the composite state had never been active before. Entry actions of states entered on the path to the state represented by a deep history are performed.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SQ-mdnCoEdq2Lvk-NX0TGA" name="shallowHistory">
      <ownedComment xmi:id="_SQ-md3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mdnCoEdq2Lvk-NX0TGA">
        <body>ShallowHistory represents the most recent active substate of its containing state (but not the substates of that substate). A composite state can have at most one shallow history vertex. A transition coming into the shallow history vertex is equivalent to a transition coming into the most recent active substate of a state. At most one transition may originate from the history connector to the default shallow history state. This transition is taken in case the composite state had never been active before. Entry actions of states entered on the path to the state represented by a shallow history are performed.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SQ-meHCoEdq2Lvk-NX0TGA" name="join">
      <ownedComment xmi:id="_SQ-meXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-meHCoEdq2Lvk-NX0TGA">
        <body>Join vertices serve to merge several transitions emanating from source vertices in different orthogonal regions. The transitions entering a join vertex cannot have guards or triggers.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SQ-menCoEdq2Lvk-NX0TGA" name="fork">
      <ownedComment xmi:id="_SQ-me3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-menCoEdq2Lvk-NX0TGA">
        <body>Fork vertices serve to split an incoming transition into two or more transitions terminating on orthogonal target vertices

(i.e. vertices in different regions of a composite state). The segments outgoing from a fork vertex must not have guards or triggers.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SQ-mfHCoEdq2Lvk-NX0TGA" name="junction">
      <ownedComment xmi:id="_SQ-mfXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mfHCoEdq2Lvk-NX0TGA">
        <body>Junction vertices are semantic-free vertices that are used to chain together multiple transitions. They are used to construct compound transition paths between states. For example, a junction can be used to converge multiple incoming transitions into a single outgoing transition representing a shared transition path (this is known as an merge). Conversely, they can be used to split an incoming transition into multiple outgoing transition segments with different guard conditions. This realizes a static conditional branch. (In the latter case, outgoing transitions whose guard conditions evaluate to false are disabled. A predefined guard denoted else may be defined for at most one outgoing transition. This transition is enabled if all the guards labeling the other transitions are false.) Static conditional branches are distinct from dynamic conditional branches that are realized by choice vertices (described below).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SQ-mfnCoEdq2Lvk-NX0TGA" name="choice">
      <ownedComment xmi:id="_SQ-mf3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mfnCoEdq2Lvk-NX0TGA">
        <body>Choice vertices which, when reached, result in the dynamic evaluation of the guards of the triggers of its outgoing transitions. This realizes a dynamic conditional branch. It allows splitting of transitions into multiple outgoing paths such that the decision on which path to take may be a function of the results of prior actions performed in the same run-tocompletion step. If more than one of the guards evaluates to true, an arbitrary one is selected. If none of the guards evaluates to true, then the model is considered ill-formed. (To avoid this, it is recommended to define one outgoing transition with the predefined else guard for every choice vertex.) Choice vertices should be distinguished from static branch points that are based on junction points (described above).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SQ-mgHCoEdq2Lvk-NX0TGA" name="entryPoint">
      <ownedComment xmi:id="_SQ-mgXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mgHCoEdq2Lvk-NX0TGA">
        <body>An entry point pseudostate is an entry point of a state machine or composite state. In each region of the state machine or composite state it has a single transition to a vertex within the same region.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SQ-mgnCoEdq2Lvk-NX0TGA" name="exitPoint">
      <ownedComment xmi:id="_SQ-mg3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mgnCoEdq2Lvk-NX0TGA">
        <body>An exit point pseudostate is an exit point of a state machine or composite state. Entering an exit point within any region of the composite state or state machine referenced by a submachine state implies the exit of this composite state or submachine state and the triggering of the transition that has this exit point as source in the state machine enclosing the submachine or composite state.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SQ-mhHCoEdq2Lvk-NX0TGA" name="terminate">
      <ownedComment xmi:id="_SQ-mhXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mhHCoEdq2Lvk-NX0TGA">
        <body>Entering a terminate pseudostate implies that the execution of this state machine by means of its context object is terminated. The state machine does not exit any states nor does it perform any exit actions other than those associated with the transition leading to the terminate pseudostate. Entering a terminate pseudostate is equivalent to invoking a DestroyObjectAction.</body>
      </ownedComment>
    </ownedLiteral>
  </ownedMember>
  <ownedMember xmi:type="uml:Enumeration" xmi:id="_SQ-mznCoEdq2Lvk-NX0TGA" name="TransitionKind">
    <ownedComment xmi:id="_SQ-mz3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mznCoEdq2Lvk-NX0TGA">
      <body>TransitionKind is an enumeration of the following literal values:
 external
 internal
 local
</body>
    </ownedComment>
    <ownedRule xmi:id="_SQ-m0HCoEdq2Lvk-NX0TGA" name="state_is_local" constrainedElement="_SQ-mznCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-m0XCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-m0HCoEdq2Lvk-NX0TGA">
        <body>The source state of a transition with transition kind local must be a composite state.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ-m0nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>kind=#local implies owner.source.isComposite</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQ-m03CoEdq2Lvk-NX0TGA" name="state_is_external" constrainedElement="_SQ-mznCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-m1HCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-m03CoEdq2Lvk-NX0TGA">
        <body>The source state of a transition with transition kind external must be a composite state.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ-m1XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>kind=#external implies owner.source.isComposite</body>
      </specification>
    </ownedRule>
    <ownedLiteral xmi:id="_SQ-m1nCoEdq2Lvk-NX0TGA" name="internal">
      <ownedComment xmi:id="_SQ-m13CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-m1nCoEdq2Lvk-NX0TGA">
        <body>kind=internal implies that the transition, if triggered, occurs without exiting or entering the source state. Thus, it does not cause a state change. This means that the entry or exit condition of the source state will not be invoked. An internal transition can be taken even if the state machine is in one or more regions nested within this state.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SQ-m2HCoEdq2Lvk-NX0TGA" name="local">
      <ownedComment xmi:id="_SQ-m2XCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-m2HCoEdq2Lvk-NX0TGA">
        <body>kind=local implies that the transition, if triggered, will not exit the composite (source) state, but it will apply to any state within the composite state, and these will be exited and entered.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="_SQ-m2nCoEdq2Lvk-NX0TGA" name="external">
      <ownedComment xmi:id="_SQ-m23CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-m2nCoEdq2Lvk-NX0TGA">
        <body>kind=external implies that the transition, if triggered, will exit the composite (source) state.</body>
      </ownedComment>
    </ownedLiteral>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SGP9OHCoEdq2Lvk-NX0TGA" name="TimeEvent">
    <ownedComment xmi:id="_SGP9OXCoEdq2Lvk-NX0TGA" annotatedElement="_SGP9OHCoEdq2Lvk-NX0TGA">
      <body>A time event specifies a point in time by an expression. The expression might be absolute or might be relative to some other point in time.</body>
    </ownedComment>
    <ownedComment xmi:id="_SQ-m3HCoEdq2Lvk-NX0TGA" annotatedElement="_SGP9OHCoEdq2Lvk-NX0TGA">
      <body>Extends TimeEvent to be defined relative to entering the current state of the executing state machine.</body>
    </ownedComment>
    <ownedRule xmi:id="_SI8E43CoEdq2Lvk-NX0TGA" name="when_non_negative" constrainedElement="_SGP9OHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SI8E5HCoEdq2Lvk-NX0TGA" annotatedElement="_SI8E43CoEdq2Lvk-NX0TGA">
        <body>The ValueSpecification when must return a non-negative Integer.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SI8E5XCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQ-m3XCoEdq2Lvk-NX0TGA" name="starting_time" constrainedElement="_SGP9OHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-m3nCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-m3XCoEdq2Lvk-NX0TGA">
        <body>The starting time for a relative time event may only be omitted for a time event that is the trigger of a state machine.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ-m33CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SGP9OnCoEdq2Lvk-NX0TGA" general="_SGZuJnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SGP9O3CoEdq2Lvk-NX0TGA" name="isRelative" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SGP9PHCoEdq2Lvk-NX0TGA" annotatedElement="_SGP9O3CoEdq2Lvk-NX0TGA">
        <body>Specifies whether it is relative or absolute time.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SGP9PXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SGP9PnCoEdq2Lvk-NX0TGA" name="when" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SGjfNHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SGP9P3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SGP9QHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SGP9QXCoEdq2Lvk-NX0TGA" annotatedElement="_SGP9PnCoEdq2Lvk-NX0TGA">
        <body>Specifies the corresponding time deadline.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SI8E5nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SI8E53CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRIXcHCoEdq2Lvk-NX0TGA" name="A_container_subvertex" memberEnd="_SQ-mlnCoEdq2Lvk-NX0TGA _SQrsX3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRIXcXCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRIXcnCoEdq2Lvk-NX0TGA" name="A_container_transition" memberEnd="_SQrsIHCoEdq2Lvk-NX0TGA _SQ-mnHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRIXc3CoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRIXdHCoEdq2Lvk-NX0TGA" name="A_outgoing_source" memberEnd="_SQrsZXCoEdq2Lvk-NX0TGA _SQrsJnCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRIXdXCoEdq2Lvk-NX0TGA" name="A_incoming_target" memberEnd="_SQrsaXCoEdq2Lvk-NX0TGA _SQrsKnCoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRIXdnCoEdq2Lvk-NX0TGA" name="A_submachineState_submachine" memberEnd="_SQh6vHCoEdq2Lvk-NX0TGA _SQrrnHCoEdq2Lvk-NX0TGA">
    <ownedRule xmi:id="_SRIXd3CoEdq2Lvk-NX0TGA" constrainedElement="_SRIXdnCoEdq2Lvk-NX0TGA">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SRIXeHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>substate kind = stub</body>
      </specification>
    </ownedRule>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRIXeXCoEdq2Lvk-NX0TGA" name="A_entry_connectionPointReference" memberEnd="_SQ1cnnCoEdq2Lvk-NX0TGA _SRIXenCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SRIXenCoEdq2Lvk-NX0TGA" type="_SQ1clXCoEdq2Lvk-NX0TGA" association="_SRIXeXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRIXe3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRIXfHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRIXfXCoEdq2Lvk-NX0TGA" name="A_state_connection" memberEnd="_SQ1conCoEdq2Lvk-NX0TGA _SQrroHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRIXfnCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRIXf3CoEdq2Lvk-NX0TGA" name="A_redefinedState_state" memberEnd="_SQrrpnCoEdq2Lvk-NX0TGA _SRIXgXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRIXgHCoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRIXgXCoEdq2Lvk-NX0TGA" type="_SQh63HCoEdq2Lvk-NX0TGA" redefinedProperty="_R2wIk3CoEdq2Lvk-NX0TGA" association="_SRIXf3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRIXgnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRIXg3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRSIcHCoEdq2Lvk-NX0TGA" name="A_redefinedTransition_transition" memberEnd="_SRSIcnCoEdq2Lvk-NX0TGA _SQrsLnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRSIcXCoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRSIcnCoEdq2Lvk-NX0TGA" type="_SQrsBHCoEdq2Lvk-NX0TGA" redefinedProperty="_R2wIk3CoEdq2Lvk-NX0TGA" association="_SRSIcHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRSIc3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRSIdHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRSIdXCoEdq2Lvk-NX0TGA" name="A_exit_connectionPointReference" memberEnd="_SQ1cqHCoEdq2Lvk-NX0TGA _SRSIdnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SRSIdnCoEdq2Lvk-NX0TGA" type="_SQ1clXCoEdq2Lvk-NX0TGA" association="_SRSIdXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRSId3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRSIeHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRSIeXCoEdq2Lvk-NX0TGA" name="A_region_stateMachine" memberEnd="_SQh6rHCoEdq2Lvk-NX0TGA _SQ-monCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRSIenCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRSIe3CoEdq2Lvk-NX0TGA" name="A_connectionPoint_stateMachine" memberEnd="_SQh6snCoEdq2Lvk-NX0TGA _SQrsk3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRSIfHCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRSIfXCoEdq2Lvk-NX0TGA" name="A_region_state" memberEnd="_SQrrqnCoEdq2Lvk-NX0TGA _SQ-mqHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRSIfnCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRSIf3CoEdq2Lvk-NX0TGA" name="A_region_extendedRegion" memberEnd="_SQ-mrnCoEdq2Lvk-NX0TGA _SRSIgXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRSIgHCoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRSIgXCoEdq2Lvk-NX0TGA" type="_SQ-mhnCoEdq2Lvk-NX0TGA" redefinedProperty="_R2wIk3CoEdq2Lvk-NX0TGA" association="_SRSIf3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRSIgnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRSIg3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRSIhHCoEdq2Lvk-NX0TGA" name="A_stateMachine_extendedStateMachine" memberEnd="_SRSIhnCoEdq2Lvk-NX0TGA _SQh6uHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRSIhXCoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRSIhnCoEdq2Lvk-NX0TGA" type="_SQh6nXCoEdq2Lvk-NX0TGA" redefinedProperty="_R2wIk3CoEdq2Lvk-NX0TGA" association="_SRSIhHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRSIh3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRSIiHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRbSYHCoEdq2Lvk-NX0TGA" name="A_guard_transition" memberEnd="_SRbSYnCoEdq2Lvk-NX0TGA _SQrsMnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRbSYXCoEdq2Lvk-NX0TGA" general="_R255q3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRbSYnCoEdq2Lvk-NX0TGA" type="_SQrsBHCoEdq2Lvk-NX0TGA" association="_SRbSYHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRbSY3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRbSZHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRbSZXCoEdq2Lvk-NX0TGA" name="A_redefinitionContext_region" memberEnd="_SQ-msnCoEdq2Lvk-NX0TGA _SRbSZ3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRbSZnCoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRbSZ3CoEdq2Lvk-NX0TGA" type="_SQ-mhnCoEdq2Lvk-NX0TGA" association="_SRbSZXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRbSaHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRbSaXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRbSanCoEdq2Lvk-NX0TGA" name="A_state_redefinitionContext" isDerived="true" memberEnd="_SRbSbHCoEdq2Lvk-NX0TGA _SQrrsHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRbSa3CoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRbSbHCoEdq2Lvk-NX0TGA" type="_SQh63HCoEdq2Lvk-NX0TGA" association="_SRbSanCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRbSbXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRbSbnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRbSb3CoEdq2Lvk-NX0TGA" name="A_transition_redefinitionContext" memberEnd="_SQrsOHCoEdq2Lvk-NX0TGA _SRbScXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRbScHCoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRbScXCoEdq2Lvk-NX0TGA" type="_SQrsBHCoEdq2Lvk-NX0TGA" association="_SRbSb3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRbScnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRbSc3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRbSdHCoEdq2Lvk-NX0TGA" name="A_stateInvariant_owningState" memberEnd="_SQrrtnCoEdq2Lvk-NX0TGA _SRbSdnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRbSdXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRbSdnCoEdq2Lvk-NX0TGA" name="owningState" type="_SQh63HCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SRbSdHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRbSd3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRbSeHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRbSeXCoEdq2Lvk-NX0TGA" name="A_effect_transition" memberEnd="_SQrsPnCoEdq2Lvk-NX0TGA _SRbSe3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRbSenCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRbSe3CoEdq2Lvk-NX0TGA" type="_SQrsBHCoEdq2Lvk-NX0TGA" association="_SRbSeXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRbSfHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRbSfXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRbSfnCoEdq2Lvk-NX0TGA" name="A_entry_state" memberEnd="_SQrrvHCoEdq2Lvk-NX0TGA _SRbSgHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRbSf3CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRbSgHCoEdq2Lvk-NX0TGA" type="_SQh63HCoEdq2Lvk-NX0TGA" association="_SRbSfnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRbSgXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRbSgnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRbSg3CoEdq2Lvk-NX0TGA" name="A_exit_state" memberEnd="_SQrrwnCoEdq2Lvk-NX0TGA _SRbShXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRbShHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRbShXCoEdq2Lvk-NX0TGA" type="_SQh63HCoEdq2Lvk-NX0TGA" association="_SRbSg3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRbShnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRbSh3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRlDYHCoEdq2Lvk-NX0TGA" name="A_doActivity_state" memberEnd="_SQrryHCoEdq2Lvk-NX0TGA _SRlDYnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRlDYXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SRlDYnCoEdq2Lvk-NX0TGA" type="_SQh63HCoEdq2Lvk-NX0TGA" association="_SRlDYHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRlDY3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRlDZHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRlDZXCoEdq2Lvk-NX0TGA" name="A_connectionPoint_state" memberEnd="_SQrsmXCoEdq2Lvk-NX0TGA _SQrrznCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SRlDZnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRlDZ3CoEdq2Lvk-NX0TGA" name="A_trigger_transition" memberEnd="_SRlDaHCoEdq2Lvk-NX0TGA _SQrsRHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SRlDaHCoEdq2Lvk-NX0TGA" type="_SQrsBHCoEdq2Lvk-NX0TGA" association="_SRlDZ3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRlDaXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRlDanCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SRlDa3CoEdq2Lvk-NX0TGA" name="A_deferrableTrigger_state" memberEnd="_SQrr1HCoEdq2Lvk-NX0TGA _SRlDbHCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SRlDbHCoEdq2Lvk-NX0TGA" type="_SQh63HCoEdq2Lvk-NX0TGA" association="_SRlDa3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRlDbXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRlDbnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SRlDb3CoEdq2Lvk-NX0TGA" name="ProtocolConformance">
    <ownedComment xmi:id="_SRlDcHCoEdq2Lvk-NX0TGA" annotatedElement="_SRlDb3CoEdq2Lvk-NX0TGA">
      <body>Protocol state machines can be redefined into more specific protocol state machines, or into behavioral state machines.



Protocol conformance declares that the specific protocol state machine specifies a protocol that conforms to the general state machine one, or that the specific behavioral state machine abide by the protocol of the general protocol state machine.



A protocol state machine is owned by a classifier. The classifiers owning a general state machine and an associated specific state machine are generally also connected by a generalization or a realization link.

</body>
    </ownedComment>
    <generalization xmi:id="_SRlDcXCoEdq2Lvk-NX0TGA" general="_Rx-9UHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SRlDcnCoEdq2Lvk-NX0TGA" name="specificMachine" type="_SRuNc3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9U3CoEdq2Lvk-NX0TGA _Rx-9bHCoEdq2Lvk-NX0TGA" association="_SR3-UXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SRlDc3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SRlDdHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SRlDdXCoEdq2Lvk-NX0TGA" annotatedElement="_SRlDcnCoEdq2Lvk-NX0TGA">
        <body>Specifies the state machine which conforms to the general state machine.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRlDdnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRlDd3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SRlDeHCoEdq2Lvk-NX0TGA" name="generalMachine" type="_SRuNc3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9WXCoEdq2Lvk-NX0TGA" association="_SR3-Y3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SRlDeXCoEdq2Lvk-NX0TGA" annotatedElement="_SRlDeHCoEdq2Lvk-NX0TGA">
        <body>Specifies the protocol state machine to which the specific state machine conforms.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRlDenCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRlDe3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_8Ugn8GvtEdqG6fBIPwe-mw" name="Interface">
    <ownedComment xmi:id="_SDHwsHCoEdq2Lvk-NX0TGA" annotatedElement="_8Ugn8GvtEdqG6fBIPwe-mw">
      <body>An interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. An interface specifies a contract; any instance of a classifier that realizes the interface must fulfill that contract. The obligations that may be associated with an interface are in the form of various kinds of constraints (such as pre- and post-conditions) or protocol specifications, which may impose ordering restrictions on interactions through the interface.

Since interfaces are declarations, they are not instantiable. Instead, an interface specification is implemented by an instance of an instantiable classifier, which means that the instantiable classifier presents a public facade that conforms to the interface specification. Note that a given classifier may implement more than one interface and that an interface may be implemented by a number of different classifiers.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SGGzMHCoEdq2Lvk-NX0TGA" annotatedElement="_8Ugn8GvtEdqG6fBIPwe-mw">
      <body>Adds the capability for interfaces to include receptions (in addition to operations).</body>
    </ownedComment>
    <ownedComment xmi:id="_SRlDfHCoEdq2Lvk-NX0TGA" annotatedElement="_8Ugn8GvtEdqG6fBIPwe-mw">
      <body>Since an interface specifies conformance characteristics, it does not own detailed behavior specifications. Instead, interfaces may own a protocol state machine that specifies event sequences and pre/post conditions for the operations and receptions described by the interface.</body>
    </ownedComment>
    <ownedRule xmi:id="_SDHwsXCoEdq2Lvk-NX0TGA" name="visibility" constrainedElement="_8Ugn8GvtEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SDHwsnCoEdq2Lvk-NX0TGA" annotatedElement="_SDHwsXCoEdq2Lvk-NX0TGA">
        <body>The visibility of all features owned by an interface must be public.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SDHws3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.feature->forAll(f | f.visibility = #public)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SDHwtHCoEdq2Lvk-NX0TGA" general="_6UV2QGwJEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SDHwtXCoEdq2Lvk-NX0TGA" name="ownedAttribute" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RxPWcHCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_SDarl3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SDHwtnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SDHwt3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SDHwuHCoEdq2Lvk-NX0TGA" annotatedElement="_SDHwtXCoEdq2Lvk-NX0TGA">
        <body>The attributes (i.e. the properties) owned by the class.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDHwuXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDHwunCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SDHwu3CoEdq2Lvk-NX0TGA" name="ownedOperation" type="_M4X2IGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RxPWdnCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_SDarnXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SDHwvHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SDHwvXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SDHwvnCoEdq2Lvk-NX0TGA" annotatedElement="_SDHwu3CoEdq2Lvk-NX0TGA">
        <body>The operations owned by the class.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDHwv3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDHwwHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SDHwwXCoEdq2Lvk-NX0TGA" name="nestedClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" isOrdered="true" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SDkckHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SDHwwnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SDHww3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SDHwxHCoEdq2Lvk-NX0TGA" annotatedElement="_SDHwwXCoEdq2Lvk-NX0TGA">
        <body>References all the Classifiers that are defined (nested) within the Class.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDHwxXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDHwxnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SDRhoHCoEdq2Lvk-NX0TGA" name="redefinedInterface" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_SDkclnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SDRhoXCoEdq2Lvk-NX0TGA" annotatedElement="_SDRhoHCoEdq2Lvk-NX0TGA">
        <body>References all the Interfaces redefined by this Interface.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDRhonCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDRho3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SGGzMXCoEdq2Lvk-NX0TGA" name="ownedReception" type="_SGP9IHCoEdq2Lvk-NX0TGA" subsettedProperty="_RxPWdnCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_SGjfKHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SGGzMnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SGGzM3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SGGzNHCoEdq2Lvk-NX0TGA" annotatedElement="_SGGzMXCoEdq2Lvk-NX0TGA">
        <body>Receptions that objects providing this interface are willing to accept.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGGzNXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGGzNnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SRlDfXCoEdq2Lvk-NX0TGA" name="protocol" type="_SRuNc3CoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SR3-XXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SRlDfnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SRlDf3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SRlDgHCoEdq2Lvk-NX0TGA" annotatedElement="_SRlDfXCoEdq2Lvk-NX0TGA">
        <body>References a protocol state machine specifying the legal sequences of the invocation of the behavioral features described in the interface.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRlDgXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRlDgnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_ZAuvEGveEdq4DLWZOhbdEA" name="Port">
    <ownedComment xmi:id="_SGspF3CoEdq2Lvk-NX0TGA" annotatedElement="_ZAuvEGveEdq4DLWZOhbdEA">
      <body>Ports represent interaction points between a classifier and its environment. The interfaces associated with a port specify the nature of the interactions that may occur over a port. The required interfaces of a port characterize the requests which may be made from the classifier to its environment through this port. The provided interfaces of a port characterize requests to the classifier that its environment may make through this port.



A port has the ability to specify that any requests arriving at this port are handled by the behavior of the instance of the owning classifier, rather than being forwarded to any contained instances, if any.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SRuNUHCoEdq2Lvk-NX0TGA" annotatedElement="_ZAuvEGveEdq4DLWZOhbdEA">
      <body>Port is defined as a specialization of the general Port, adding an association to a protocol state machine.</body>
    </ownedComment>
    <ownedRule xmi:id="_SGspGHCoEdq2Lvk-NX0TGA" name="required_interfaces" constrainedElement="_ZAuvEGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SGspGXCoEdq2Lvk-NX0TGA" annotatedElement="_SGspGHCoEdq2Lvk-NX0TGA">
        <body>The required interfaces of a port must be provided by elements to which the port is connected.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SGspGnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SGspG3CoEdq2Lvk-NX0TGA" name="port_aggregation" constrainedElement="_ZAuvEGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SGspHHCoEdq2Lvk-NX0TGA" annotatedElement="_SGspG3CoEdq2Lvk-NX0TGA">
        <body>Port.aggregation must be composite.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SGspHXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SGspHnCoEdq2Lvk-NX0TGA" name="port_destroyed" constrainedElement="_ZAuvEGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SGspH3CoEdq2Lvk-NX0TGA" annotatedElement="_SGspHnCoEdq2Lvk-NX0TGA">
        <body>When a port is destroyed, all connectors attached to this port will be destroyed also.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SGspIHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SGspIXCoEdq2Lvk-NX0TGA" name="default_value" constrainedElement="_ZAuvEGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SGspInCoEdq2Lvk-NX0TGA" annotatedElement="_SGspIXCoEdq2Lvk-NX0TGA">
        <body>A defaultValue for port cannot be specified when the type of the Port is an Interface</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SGspI3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SGspJHCoEdq2Lvk-NX0TGA" general="_Jp_1oGveEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SGspJXCoEdq2Lvk-NX0TGA" name="isBehavior" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SGspJnCoEdq2Lvk-NX0TGA" annotatedElement="_SGspJXCoEdq2Lvk-NX0TGA">
        <body>Specifies whether requests arriving at this port are sent to the classifier behavior of this classifier. Such ports are referred to as behavior port. Any invocation of a behavioral feature targeted at a behavior port will be handled by the instance of the owning classifier itself, rather than by any instances that this classifier may contain.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SGspJ3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SGspKHCoEdq2Lvk-NX0TGA" name="isService" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SGspKXCoEdq2Lvk-NX0TGA" annotatedElement="_SGspKHCoEdq2Lvk-NX0TGA">
        <body>If true indicates that this port is used to provide the published functionality of a classifier; if false, this port is used to implement the classifier but is not part of the essential externally-visible functionality of the classifier and can, therefore, be altered or deleted along with the internal implementation of the classifier and other properties that are considered part of its implementation.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SGspKnCoEdq2Lvk-NX0TGA" value="true"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SGspK3CoEdq2Lvk-NX0TGA" name="required" type="_8Ugn8GvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_SG_kBnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SGspLHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SGspLXCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SGspLnCoEdq2Lvk-NX0TGA" annotatedElement="_SGspK3CoEdq2Lvk-NX0TGA">
        <body>References the interfaces specifying the set of operations and receptions which the classifier expects its environment to handle. This association is derived as the set of interfaces required by the type of the port or its supertypes.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGspL3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGspMHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SGspMXCoEdq2Lvk-NX0TGA" name="redefinedPort" type="_ZAuvEGveEdq4DLWZOhbdEA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_SG_kCnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SGspMnCoEdq2Lvk-NX0TGA" annotatedElement="_SGspMXCoEdq2Lvk-NX0TGA">
        <body>A port may be redefined when its containing classifier is specialized. The redefining port may have additional interfaces to those that are associated with the redefined port or it may replace an interface by one of its subtypes.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SGspM3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SGspNHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SG2aEHCoEdq2Lvk-NX0TGA" name="provided" type="_8Ugn8GvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_SG_kD3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SG2aEXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SG2aEnCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SG2aE3CoEdq2Lvk-NX0TGA" annotatedElement="_SG2aEHCoEdq2Lvk-NX0TGA">
        <body>References the interfaces specifying the set of operations and receptions which the classifier offers to its environment, and which it will handle either directly or by forwarding it to a part of its internal structure. This association is derived from the interfaces realized by the type of the port or by the type of the port, if the port was typed by an interface.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SG2aFHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SG2aFXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SRuNUXCoEdq2Lvk-NX0TGA" name="protocol" type="_SRuNc3CoEdq2Lvk-NX0TGA" association="_SR3-VHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SRuNUnCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNUXCoEdq2Lvk-NX0TGA">
        <body>References an optional protocol state machine which describes valid interactions at this interaction point.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRuNU3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRuNVHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_gtr8cFYhEdqB6vblk3tuMA" name="getProvideds" visibility="protected" type="_8Ugn8GvtEdqG6fBIPwe-mw">
      <returnResult xmi:id="_jIqKEFYhEdqB6vblk3tuMA" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k2x4wVYhEdqB6vblk3tuMA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k2x4wFYhEdqB6vblk3tuMA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_mxt7cFYhEdqB6vblk3tuMA" name="getRequireds" visibility="protected" type="_8Ugn8GvtEdqG6fBIPwe-mw">
      <returnResult xmi:id="_osMrIFYhEdqB6vblk3tuMA" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pyY3IVYhEdqB6vblk3tuMA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pyY3IFYhEdqB6vblk3tuMA"/>
      </returnResult>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SRuNVXCoEdq2Lvk-NX0TGA" name="ProtocolTransition">
    <ownedComment xmi:id="_SRuNVnCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNVXCoEdq2Lvk-NX0TGA">
      <body>A protocol transition (transition as specialized in the ProtocolStateMachines package) specifies a legal transition for an operation. Transitions of protocol state machines have the following information: a pre condition (guard), on trigger, and a post condition. Every protocol transition is associated to zero or one operation (referred BehavioralFeature) that belongs to the context classifier of the protocol state machine.



The protocol transition specifies that the associated (referred) operation can be called for an instance in the origin state under the initial condition (guard), and that at the end of the transition, the destination state will be reached under the final condition (post).

</body>
    </ownedComment>
    <ownedRule xmi:id="_SRuNV3CoEdq2Lvk-NX0TGA" name="belongs_to_psm" constrainedElement="_SRuNVXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SRuNWHCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNV3CoEdq2Lvk-NX0TGA">
        <body>A protocol transition always belongs to a protocol state machine.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SRuNWXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>container.belongsToPSM()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SRuNWnCoEdq2Lvk-NX0TGA" name="associated_actions" constrainedElement="_SRuNVXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SRuNW3CoEdq2Lvk-NX0TGA" annotatedElement="_SRuNWnCoEdq2Lvk-NX0TGA">
        <body>A protocol transition never has associated actions.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SRuNXHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>effect->isEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SRuNXXCoEdq2Lvk-NX0TGA" name="refers_to_operation" constrainedElement="_SRuNVXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SRuNXnCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNXXCoEdq2Lvk-NX0TGA">
        <body>If a protocol transition refers to an operation (i. e. has a call trigger corresponding to an operation), then that operation should apply to the context classifier of the state machine of the protocol transition.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SRuNX3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SRuNYHCoEdq2Lvk-NX0TGA" general="_SQrsBHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SRuNYXCoEdq2Lvk-NX0TGA" name="postCondition" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SR3-WHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SRuNYnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SRuNY3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SRuNZHCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNYXCoEdq2Lvk-NX0TGA">
        <body>Specifies the post condition of the transition which is the condition that should be obtained once the transition is triggered. This post condition is part of the post condition of the operation connected to the transition.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRuNZXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRuNZnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SRuNZ3CoEdq2Lvk-NX0TGA" name="referred" type="_M4X2IGveEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" association="_SSBvUHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SRuNaHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SRuNaXCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SRuNanCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNZ3CoEdq2Lvk-NX0TGA">
        <body>This association refers to the associated operation. It is derived from the operation of the call trigger when applicable.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRuNa3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRuNbHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SRuNbXCoEdq2Lvk-NX0TGA" name="preCondition" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_SQrsMnCoEdq2Lvk-NX0TGA" association="_SSBvVHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SRuNbnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SRuNb3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SRuNcHCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNbXCoEdq2Lvk-NX0TGA">
        <body>Specifies the precondition of the transition. It specifies the condition that should be verified before triggering the transition. This guard condition added to the source state will be evaluated as part of the precondition of the operation referred by the transition if any.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRuNcXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRuNcnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SRuNc3CoEdq2Lvk-NX0TGA" name="ProtocolStateMachine">
    <ownedComment xmi:id="_SRuNdHCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNc3CoEdq2Lvk-NX0TGA">
      <body>A protocol state machine is always defined in the context of a classifier. It specifies which operations of the classifier can be called in which state and under which condition, thus specifying the allowed call sequences on the classifier's operations. A protocol state machine presents the possible and permitted transitions on the instances of its context classifier, together with the operations which carry the transitions. In this manner, an instance lifecycle can be created for a classifier, by specifying the order in which the operations can be activated and the states through which an instance progresses during its existence.</body>
    </ownedComment>
    <ownedRule xmi:id="_SRuNdXCoEdq2Lvk-NX0TGA" name="classifier_context" constrainedElement="_SRuNc3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SRuNdnCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNdXCoEdq2Lvk-NX0TGA">
        <body>A protocol state machine must only have a classifier context, not a behavioral feature context.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SRuNd3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>(not context->isEmpty( )) and specification->isEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SRuNeHCoEdq2Lvk-NX0TGA" name="protocol_transitions" constrainedElement="_SRuNc3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SRuNeXCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNeHCoEdq2Lvk-NX0TGA">
        <body>All transitions of a protocol state machine must be protocol transitions. (transitions as extended by the ProtocolStateMachines package)</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SRuNenCoEdq2Lvk-NX0TGA" language="OCL">
        <body>region->forAll(r | r.transition->forAll(t | t.oclIsTypeOf(ProtocolTransition)))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SRuNe3CoEdq2Lvk-NX0TGA" name="entry_exit_do" constrainedElement="_SRuNc3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SRuNfHCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNe3CoEdq2Lvk-NX0TGA">
        <body>The states of a protocol state machine cannot have entry, exit, or do activity actions.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SRuNfXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>region->forAll(r | r.subvertex->forAll(v | v.oclIsKindOf(State) implies
(v.entry->isEmpty() and v.exit->isEmpty() and v.doActivity->isEmpty())))
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SRuNfnCoEdq2Lvk-NX0TGA" name="deep_or_shallow_history" constrainedElement="_SRuNc3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SRuNf3CoEdq2Lvk-NX0TGA" annotatedElement="_SRuNfnCoEdq2Lvk-NX0TGA">
        <body>Protocol state machines cannot have deep or shallow history pseudostates.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SRuNgHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>region->forAll (r | r.subvertex->forAll (v | v.oclIsKindOf(Psuedostate) implies
((v.kind &lt;> #deepHistory) and (v.kind &lt;> #shallowHistory)))))
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SRuNgXCoEdq2Lvk-NX0TGA" name="ports_connected" constrainedElement="_SRuNc3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SRuNgnCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNgXCoEdq2Lvk-NX0TGA">
        <body>If two ports are connected, then the protocol state machine of the required interface (if defined) must be conformant to the protocol state machine of the provided interface (if defined).</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SRuNg3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SRuNhHCoEdq2Lvk-NX0TGA" general="_SQh6nXCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SRuNhXCoEdq2Lvk-NX0TGA" name="conformance" type="_SRlDb3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SR3-UXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SRuNhnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SRuNh3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SRuNiHCoEdq2Lvk-NX0TGA" annotatedElement="_SRuNhXCoEdq2Lvk-NX0TGA">
        <body>Conformance between protocol state machines.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SRuNiXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SRuNinCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQh63HCoEdq2Lvk-NX0TGA" name="State">
    <ownedComment xmi:id="_SQh63XCoEdq2Lvk-NX0TGA" annotatedElement="_SQh63HCoEdq2Lvk-NX0TGA">
      <body>A state models a situation during which some (usually implicit) invariant condition holds. The invariant may represent a static situation such as an object waiting for some external event to occur. However, it can also model dynamic conditions such as the process of performing some behavior (i.e., the model element under consideration enters the state when the behavior commences and leaves it as soon as the behavior is completed). The following kinds of states are distinguished:

o Simple state,

o composite state, and

o submachine state.

A composite state is either a simple composite state (with just one region) or an orthogonal state (with more than one region).



Simple state

A simple state is a state that does not have substates, i.e. it has no regions and it has no submachine state machine.



Composite state

A composite state either contains one region or is decomposed into two or more orthogonal regions. Each region has a set of mutually exclusive disjoint subvertices and a set of transitions. A given state may only be decomposed in one of these two ways. 

Any state enclosed within a region of a composite state is called a substate of that composite state. It is called a direct substate when it is not contained by any other state; otherwise it is referred to as a indirect substate. 

Each region of a composite state may have an initial pseudostate and a final state. A transition to the enclosing state represents a transition to the initial pseudostate in each region. A newly-created object takes it's topmost default transitions, originating from the topmost initial pseudostates of each region.



A transition to a final state represents the completion of behavior in the enclosing region. Completion of behavior in all orthogonal regions represents completion of behavior by the enclosing state and triggers a completion event on the enclosing state. Completion of the topmost regions of an object corresponds to its termination.



An entry pseudostate is used to join an external transition terminating on that entry point to an internal transition emanating from that entry point. An exit pseudostate is used to join an internal transition terminating on that exit point to an external transition emanating from that exit point. The main purpose of such entry and exit points is to execute the state entry and exit actions respectively in between the actions that are associated with the joined transitions.



Semantic variation point (default entry rule)

If a transition terminates on an enclosing state and the enclosed regions do not have an initial pseudostate, the interpretation of this situation is a semantic variation point. In some interpretations, this is considered an ill-formed model. That is, in those cases the initial pseudostate is mandatory. 

An alternative interpretation allows this situation and it means that, when such a transition is taken, the state machine stays in the composite state, without entering any of the regions or their substates.



Submachine state

A submachine state specifies the insertion of the specification of a submachine state machine. The state machine that contains the submachine state is called the containing state machine. The same state machine may be a submachine more than once in the context of a single containing state machine.



A submachine state is semantically equivalent to a composite state. The regions of the submachine state machine are the regions of the composite state. The entry, exit and behavior actions, and internal transitions, are defined as part of the state. Submachine state is a decomposition mechanism that allows factoring of common behaviors and their reuse.

Transitions in the containing state machine can have entry/exit points of the inserted state machine as targets/sources.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SR3-UHCoEdq2Lvk-NX0TGA" annotatedElement="_SQh63HCoEdq2Lvk-NX0TGA">
      <body>The states of protocol state machines are exposed to the users of their context classifiers. A protocol state represents an exposed stable situation of its context classifier: when an instance of the classifier is not processing any operation, users of this instance can always know its state configuration.</body>
    </ownedComment>
    <ownedRule xmi:id="_SQh63nCoEdq2Lvk-NX0TGA" name="submachine_states" constrainedElement="_SQh63HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQh633CoEdq2Lvk-NX0TGA" annotatedElement="_SQh63nCoEdq2Lvk-NX0TGA">
        <body>Only submachine states can have connection point references.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrrgHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>isSubmachineState implies connection->notEmpty ( )</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrrgXCoEdq2Lvk-NX0TGA" name="destinations_or_sources_of_transitions" constrainedElement="_SQh63HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrrgnCoEdq2Lvk-NX0TGA" annotatedElement="_SQrrgXCoEdq2Lvk-NX0TGA">
        <body>The connection point references used as destinations/sources of transitions associated with a submachine state must be defined as entry/exit points in the submachine state machine.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrrg3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.isSubmachineState implies (self.connection->forAll (cp |

cp.entry->forAll (p | p.statemachine = self.submachine) and

cp.exit->forAll (p | p.statemachine = self.submachine)))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrrhHCoEdq2Lvk-NX0TGA" name="submachine_or_regions" constrainedElement="_SQh63HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrrhXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrrhHCoEdq2Lvk-NX0TGA">
        <body>A state is not allowed to have both a submachine and regions.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrrhnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>isComposite implies not isSubmachineState</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrrh3CoEdq2Lvk-NX0TGA" name="composite_states" constrainedElement="_SQh63HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrriHCoEdq2Lvk-NX0TGA" annotatedElement="_SQrrh3CoEdq2Lvk-NX0TGA">
        <body>Only composite states can have entry or exit pseudostates defined.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrriXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>connectionPoint->notEmpty() implies isComoposite</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQrrinCoEdq2Lvk-NX0TGA" name="entry_or_exit" constrainedElement="_SQh63HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrri3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrrinCoEdq2Lvk-NX0TGA">
        <body>Only entry or exit pseudostates can serve as connection points.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrrjHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>connectionPoint->forAll(cp|cp.kind = #entry or cp.kind = #exit)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SQrrjXCoEdq2Lvk-NX0TGA" general="_SQrsXHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SQrrjnCoEdq2Lvk-NX0TGA" general="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SQrrj3CoEdq2Lvk-NX0TGA" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SQrrkHCoEdq2Lvk-NX0TGA" name="isComposite" type="_UdivYGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
      <ownedComment xmi:id="_SQrrkXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrrkHCoEdq2Lvk-NX0TGA">
        <body>A state with isComposite=true is said to be a composite state. A composite state is a state that contains at least one region.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SQrrknCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrrk3CoEdq2Lvk-NX0TGA" name="isOrthogonal" type="_UdivYGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
      <ownedComment xmi:id="_SQrrlHCoEdq2Lvk-NX0TGA" annotatedElement="_SQrrk3CoEdq2Lvk-NX0TGA">
        <body>A state with isOrthogonal=true is said to be an orthogonal composite state. An orthogonal composite state contains two or more regions.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SQrrlXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrrlnCoEdq2Lvk-NX0TGA" name="isSimple" type="_UdivYGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
      <ownedComment xmi:id="_SQrrl3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrrlnCoEdq2Lvk-NX0TGA">
        <body>A state with isSimple=true is said to be a simple state. A simple state does not have any regions and it does not refer to any submachine state machine.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SQrrmHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" value="true"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrrmXCoEdq2Lvk-NX0TGA" name="isSubmachineState" type="_UdivYGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
      <ownedComment xmi:id="_SQrrmnCoEdq2Lvk-NX0TGA" annotatedElement="_SQrrmXCoEdq2Lvk-NX0TGA">
        <body>A state with isSubmachineState=true is said to be a submachine state. Such a state refers to a state machine (submachine).</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SQrrm3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrrnHCoEdq2Lvk-NX0TGA" name="submachine" type="_SQh6nXCoEdq2Lvk-NX0TGA" association="_SRIXdnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrrnXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrrnHCoEdq2Lvk-NX0TGA">
        <body>The state machine that is to be inserted in place of the (submachine) state.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrrnnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrrn3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrroHCoEdq2Lvk-NX0TGA" name="connection" type="_SQ1clXCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SRIXfXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQrroXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrronCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrro3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrroHCoEdq2Lvk-NX0TGA">
        <body>The entry and exit connection points used in conjunction with this (submachine) state, i.e. as targets and sources, respectively, in the region with the submachine state. A connection point reference references the corresponding definition of a connection point pseudostate in the statemachine referenced by the submachinestate.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrrpHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrrpXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrrpnCoEdq2Lvk-NX0TGA" name="redefinedState" type="_SQh63HCoEdq2Lvk-NX0TGA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_SRIXf3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrrp3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrrpnCoEdq2Lvk-NX0TGA">
        <body>The state of which this state is a redefinition.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrrqHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrrqXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrrqnCoEdq2Lvk-NX0TGA" name="region" type="_SQ-mhnCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SRSIfXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQrrq3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrrrHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrrrXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrrqnCoEdq2Lvk-NX0TGA">
        <body>The regions owned directly by the state.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrrrnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrrr3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrrsHCoEdq2Lvk-NX0TGA" name="redefinitionContext" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" redefinedProperty="_RzCGOXCoEdq2Lvk-NX0TGA" association="_SRbSanCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQrrsXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrrsnCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrrs3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrrsHCoEdq2Lvk-NX0TGA">
        <body>References the classifier in which context this element may be redefined.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrrtHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrrtXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrrtnCoEdq2Lvk-NX0TGA" name="stateInvariant" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SRbSdHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQrrt3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrruHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrruXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrrtnCoEdq2Lvk-NX0TGA">
        <body>Specifies conditions that are always true when this state is the current state. In protocol state machines, state invariants are additional conditions to the preconditions of the outgoing transitions, and to the postcondition of the incoming transitions.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrrunCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrru3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrrvHCoEdq2Lvk-NX0TGA" name="entry" type="_TUPtYGveEdq4DLWZOhbdEA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SRbSfnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQrrvXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrrvnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrrv3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrrvHCoEdq2Lvk-NX0TGA">
        <body>An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any internal behavior or transitions performed within the state.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrrwHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrrwXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrrwnCoEdq2Lvk-NX0TGA" name="exit" type="_TUPtYGveEdq4DLWZOhbdEA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SRbSg3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQrrw3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrrxHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrrxXCoEdq2Lvk-NX0TGA" annotatedElement="_SQrrwnCoEdq2Lvk-NX0TGA">
        <body>An optional behavior that is executed whenever this state is exited regardless of which transition was taken out of the state. If defined, exit actions are always executed to completion only after all internal activities and transition actions have completed execution.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrrxnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrrx3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrryHCoEdq2Lvk-NX0TGA" name="doActivity" type="_TUPtYGveEdq4DLWZOhbdEA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SRlDYHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQrryXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrrynCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrry3CoEdq2Lvk-NX0TGA" annotatedElement="_SQrryHCoEdq2Lvk-NX0TGA">
        <body>An optional behavior that is executed while being in the state. The execution starts when this state is entered, and stops either by itself, or when the state is exited, whichever comes first.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrrzHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrrzXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrrznCoEdq2Lvk-NX0TGA" name="connectionPoint" type="_SQrscnCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SRlDZXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQrrz3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrr0HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrr0XCoEdq2Lvk-NX0TGA" annotatedElement="_SQrrznCoEdq2Lvk-NX0TGA">
        <body>The entry and exit pseudostates of a composite state. These can only be entry or exit Pseudostates, and they must have different names. They can only be defined for composite states.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrr0nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrr03CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQrr1HCoEdq2Lvk-NX0TGA" name="deferrableTrigger" type="_SF9CTnCoEdq2Lvk-NX0TGA" association="_SRlDa3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQrr1XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQrr1nCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQrr13CoEdq2Lvk-NX0TGA" annotatedElement="_SQrr1HCoEdq2Lvk-NX0TGA">
        <body>A list of triggers that are candidates to be retained by the state machine if they trigger no transitions out of the state (not consumed). A deferred trigger is retained until the state machine reaches a state configuration where it is no longer deferred.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQrr2HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQrr2XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SQrr2nCoEdq2Lvk-NX0TGA" name="isSimple" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SQrr3HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrr23CoEdq2Lvk-NX0TGA" annotatedElement="_SQrr2nCoEdq2Lvk-NX0TGA">
        <body>A simple state is a state without any regions.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrr3HCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrr2nCoEdq2Lvk-NX0TGA _SQrrlnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrr3XCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = region.isEmpty()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrr3nCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQrr33CoEdq2Lvk-NX0TGA" name="isComposite" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SQrr4XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrr4HCoEdq2Lvk-NX0TGA" annotatedElement="_SQrr33CoEdq2Lvk-NX0TGA">
        <body>A composite state is a state with at least one region.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrr4XCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrr33CoEdq2Lvk-NX0TGA _SQrrkHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrr4nCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = region.notEmpty()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrr43CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQrr5HCoEdq2Lvk-NX0TGA" name="isOrthogonal" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SQrr5nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrr5XCoEdq2Lvk-NX0TGA" annotatedElement="_SQrr5HCoEdq2Lvk-NX0TGA">
        <body>An orthogonal state is a composite state with at least 2 regions</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrr5nCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrr5HCoEdq2Lvk-NX0TGA _SQrrk3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrr53CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = (region->size () > 1)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrr6HCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQrr6XCoEdq2Lvk-NX0TGA" name="isSubmachineState" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SQrr63CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrr6nCoEdq2Lvk-NX0TGA" annotatedElement="_SQrr6XCoEdq2Lvk-NX0TGA">
        <body>Only submachine states can have a reference statemachine.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrr63CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrr6XCoEdq2Lvk-NX0TGA _SQrrmXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrr7HCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = submachine.notEmpty()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrr7XCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQrr7nCoEdq2Lvk-NX0TGA" name="redefinitionContext" type="_6UV2QGwJEdq7X4sGURiZYA" isQuery="true" bodyCondition="_SQrr8HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrr73CoEdq2Lvk-NX0TGA" annotatedElement="_SQrr7nCoEdq2Lvk-NX0TGA">
        <body>The redefinition context of a state is the nearest containing statemachine.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrr8HCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrr7nCoEdq2Lvk-NX0TGA _SQrrsHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrr8XCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = let sm = containingStateMachine() in
if sm.context->isEmpty() or sm.general->notEmpty() then
sm
else
sm.context
endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrr8nCoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQrr83CoEdq2Lvk-NX0TGA" name="isRedefinitionContextValid" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzCGS3CoEdq2Lvk-NX0TGA" bodyCondition="_SQrr9XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrr9HCoEdq2Lvk-NX0TGA" annotatedElement="_SQrr83CoEdq2Lvk-NX0TGA">
        <body>The query isRedefinitionContextValid() specifies whether the redefinition contexts of a state are properly related to the redefinition contexts of the specified state to allow this element to redefine the other. The containing region of a redefining state must redefine the containing region of the redefined state.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrr9XCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrr83CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrr9nCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrr93CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SQrr-HCoEdq2Lvk-NX0TGA" name="redefined" type="_SQh63HCoEdq2Lvk-NX0TGA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQrr-XCoEdq2Lvk-NX0TGA" name="isConsistentWith" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzCGRXCoEdq2Lvk-NX0TGA" bodyCondition="_SQrr-3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrr-nCoEdq2Lvk-NX0TGA" annotatedElement="_SQrr-XCoEdq2Lvk-NX0TGA">
        <body>The query isConsistentWith() specifies that a redefining state is consistent with a redefined state provided that the redefining state is an extension of the redefined state: A simple state can be redefined (extended) to become a composite state (by adding a region) and a composite state can be redefined (extended) by adding regions and by adding vertices, states, and transitions to inherited regions. All states may add or replace entry, exit, and 'doActivity' actions.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrr-3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrr-XCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrr_HCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrr_XCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SQrr_nCoEdq2Lvk-NX0TGA" name="redefinee" type="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQrr_3CoEdq2Lvk-NX0TGA" name="containingStateMachine" type="_SQh6nXCoEdq2Lvk-NX0TGA" isQuery="true" bodyCondition="_SQrsAXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQrsAHCoEdq2Lvk-NX0TGA" annotatedElement="_SQrr_3CoEdq2Lvk-NX0TGA">
        <body>The query containingStateMachine() returns the state machine that contains the state either directly or transitively.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQrsAXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQrr_3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQrsAnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = container.containingStateMachine()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQrsA3CoEdq2Lvk-NX0TGA" type="_SQh6nXCoEdq2Lvk-NX0TGA" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SR3-UXCoEdq2Lvk-NX0TGA" name="A_conformance_specificMachine" memberEnd="_SRuNhXCoEdq2Lvk-NX0TGA _SRlDcnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SR3-UnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SR3-U3CoEdq2Lvk-NX0TGA" general="_R2m-r3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SR3-VHCoEdq2Lvk-NX0TGA" name="A_protocol_port" memberEnd="_SRuNUXCoEdq2Lvk-NX0TGA _SR3-VXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SR3-VXCoEdq2Lvk-NX0TGA" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_SR3-VHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SR3-VnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SR3-V3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SR3-WHCoEdq2Lvk-NX0TGA" name="A_postCondition_owningTransition" memberEnd="_SRuNYXCoEdq2Lvk-NX0TGA _SR3-WnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SR3-WXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SR3-WnCoEdq2Lvk-NX0TGA" name="owningTransition" type="_SRuNVXCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SR3-WHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SR3-W3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SR3-XHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SR3-XXCoEdq2Lvk-NX0TGA" name="A_protocol_interface" memberEnd="_SRlDfXCoEdq2Lvk-NX0TGA _SR3-X3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SR3-XnCoEdq2Lvk-NX0TGA" general="_R2wIn3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SR3-X3CoEdq2Lvk-NX0TGA" name="interface" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SR3-XXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SR3-YHCoEdq2Lvk-NX0TGA" annotatedElement="_SR3-X3CoEdq2Lvk-NX0TGA">
        <body>Specifies the namespace in which the protocol state machine is defined.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SR3-YXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SR3-YnCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SR3-Y3CoEdq2Lvk-NX0TGA" name="A_generalMachine_protocolConformance" memberEnd="_SRlDeHCoEdq2Lvk-NX0TGA _SR3-ZXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SR3-ZHCoEdq2Lvk-NX0TGA" general="_R2m-snCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SR3-ZXCoEdq2Lvk-NX0TGA" type="_SRlDb3CoEdq2Lvk-NX0TGA" association="_SR3-Y3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SR3-ZnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SR3-Z3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SSBvUHCoEdq2Lvk-NX0TGA" name="A_referred_protocolTransition" memberEnd="_SSBvUXCoEdq2Lvk-NX0TGA _SRuNZ3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SSBvUXCoEdq2Lvk-NX0TGA" type="_SRuNVXCoEdq2Lvk-NX0TGA" association="_SSBvUHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSBvUnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSBvU3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SSBvVHCoEdq2Lvk-NX0TGA" name="A_preCondition_protocolTransition" memberEnd="_SRuNbXCoEdq2Lvk-NX0TGA _SSBvVnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SSBvVXCoEdq2Lvk-NX0TGA" general="_SRbSYHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SSBvVnCoEdq2Lvk-NX0TGA" type="_SRuNVXCoEdq2Lvk-NX0TGA" redefinedProperty="_SRbSYnCoEdq2Lvk-NX0TGA" association="_SSBvVHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSBvV3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSBvWHCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SQ-mhnCoEdq2Lvk-NX0TGA" name="Region">
    <ownedComment xmi:id="_SQ-mh3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mhnCoEdq2Lvk-NX0TGA">
      <body>A region is an orthogonal part of either a composite state or a state machine. It contains states and transitions.</body>
    </ownedComment>
    <ownedRule xmi:id="_SQ-miHCoEdq2Lvk-NX0TGA" name="initial_vertex" constrainedElement="_SQ-mhnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-miXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-miHCoEdq2Lvk-NX0TGA">
        <body>A region can have at most one initial vertex</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ-minCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.subvertex->select (v | v.oclIsKindOf(Pseudostate))->
select(p : Pseudostate | p.kind = #initial)->size() &lt;= 1
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQ-mi3CoEdq2Lvk-NX0TGA" name="deep_history_vertex" constrainedElement="_SQ-mhnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-mjHCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mi3CoEdq2Lvk-NX0TGA">
        <body>A region can have at most one deep history vertex</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ-mjXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.subvertex->select (v | v.oclIsKindOf(Pseudostate))->
select(p : Pseudostate | p.kind = #deepHistory)->size() &lt;= 1
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQ-mjnCoEdq2Lvk-NX0TGA" name="shallow_history_vertex" constrainedElement="_SQ-mhnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-mj3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mjnCoEdq2Lvk-NX0TGA">
        <body>A region can have at most one shallow history vertex</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ-mkHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.subvertex->select(v | v.oclIsKindOf(Pseudostate))->
select(p : Pseudostate | p.kind = #shallowHistory)->size() &lt;= 1
</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQ-mkXCoEdq2Lvk-NX0TGA" name="owned" constrainedElement="_SQ-mhnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-mknCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mkXCoEdq2Lvk-NX0TGA">
        <body>If a Region is owned by a StateMachine, then it cannot also be owned by a State and vice versa.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ-mk3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>(stateMachine->notEmpty() implies state->isEmpty()) and (state->notEmpty() implies stateMachine->isEmpty())</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SQ-mlHCoEdq2Lvk-NX0TGA" general="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SQ-mlXCoEdq2Lvk-NX0TGA" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SQ-mlnCoEdq2Lvk-NX0TGA" name="subvertex" type="_SQrsXHCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SRIXcHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQ-ml3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQ-mmHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQ-mmXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mlnCoEdq2Lvk-NX0TGA">
        <body>The set of vertices that are owned by this region.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQ-mmnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQ-mm3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQ-mnHCoEdq2Lvk-NX0TGA" name="transition" type="_SQrsBHCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SRIXcnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SQ-mnXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQ-mnnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQ-mn3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mnHCoEdq2Lvk-NX0TGA">
        <body>The set of transitions owned by the region. Note that internal transitions are owned by a region, but applies to the source state.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQ-moHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQ-moXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQ-monCoEdq2Lvk-NX0TGA" name="stateMachine" type="_SQh6nXCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SRSIeXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQ-mo3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQ-mpHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQ-mpXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-monCoEdq2Lvk-NX0TGA">
        <body>The StateMachine that owns the Region. If a Region is owned by a StateMachine, then it cannot also be owned by a State.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQ-mpnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQ-mp3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQ-mqHCoEdq2Lvk-NX0TGA" name="state" type="_SQh63HCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_SRSIfXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQ-mqXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQ-mqnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQ-mq3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mqHCoEdq2Lvk-NX0TGA">
        <body>The State that owns the Region. If a Region is owned by a State, then it cannot also be owned by a StateMachine.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQ-mrHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQ-mrXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQ-mrnCoEdq2Lvk-NX0TGA" name="extendedRegion" type="_SQ-mhnCoEdq2Lvk-NX0TGA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_SRSIf3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-mr3CoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mrnCoEdq2Lvk-NX0TGA">
        <body>The region of which this region is an extension.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQ-msHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQ-msXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SQ-msnCoEdq2Lvk-NX0TGA" name="redefinitionContext" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" redefinedProperty="_RzCGOXCoEdq2Lvk-NX0TGA" association="_SRbSZXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SQ-ms3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SQ-mtHCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SQ-mtXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-msnCoEdq2Lvk-NX0TGA">
        <body>References the classifier in which context this element may be redefined.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SQ-mtnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SQ-mt3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SQ-muHCoEdq2Lvk-NX0TGA" name="redefinitionContext" type="_6UV2QGwJEdq7X4sGURiZYA" isQuery="true" bodyCondition="_SQ-munCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-muXCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-muHCoEdq2Lvk-NX0TGA">
        <body>The redefinition context of a region is the nearest containing statemachine</body>
      </ownedComment>
      <ownedRule xmi:id="_SQ-munCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQ-muHCoEdq2Lvk-NX0TGA _SQ-msnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ-mu3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = let sm = containingStateMachine() in
if sm.context->isEmpty() or sm.general->notEmpty() then
sm
else
sm.context
endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQ-mvHCoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQ-mvXCoEdq2Lvk-NX0TGA" name="isRedefinitionContextValid" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzCGS3CoEdq2Lvk-NX0TGA" bodyCondition="_SQ-mv3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-mvnCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mvXCoEdq2Lvk-NX0TGA">
        <body>The query isRedefinitionContextValid() specifies whether the redefinition contexts of a region are properly related to the redefinition contexts of the specified region to allow this element to redefine the other. The containing statemachine/state of a redefining region must redefine the containing statemachine/state of the redefined region.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQ-mv3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQ-mvXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ-mwHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQ-mwXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SQ-mwnCoEdq2Lvk-NX0TGA" name="redefined" type="_SQ-mhnCoEdq2Lvk-NX0TGA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQ-mw3CoEdq2Lvk-NX0TGA" name="isConsistentWith" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzCGRXCoEdq2Lvk-NX0TGA" bodyCondition="_SQ-mxXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-mxHCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-mw3CoEdq2Lvk-NX0TGA">
        <body>The query isConsistentWith() specifies that a redefining region is consistent with a redefined region provided that the redefining region is an extension of the redefined region, i.e. it adds vertices and transitions and it redefines states and transitions of the redefined region.</body>
      </ownedComment>
      <ownedRule xmi:id="_SQ-mxXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQ-mw3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ-mxnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQ-mx3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SQ-myHCoEdq2Lvk-NX0TGA" name="redefinee" type="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SQ-myXCoEdq2Lvk-NX0TGA" name="containingStateMachine" type="_SQh6nXCoEdq2Lvk-NX0TGA" isQuery="true" bodyCondition="_SQ-my3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SQ-mynCoEdq2Lvk-NX0TGA" annotatedElement="_SQ-myXCoEdq2Lvk-NX0TGA">
        <body>The operation containingStateMachine() returns the sate machine in which this Region is defined</body>
      </ownedComment>
      <ownedRule xmi:id="_SQ-my3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SQ-myXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQ-mzHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if stateMachine->isEmpty() 
then
state.containingStateMachine()
else
stateMachine
endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SQ-mzXCoEdq2Lvk-NX0TGA" type="_SQh6nXCoEdq2Lvk-NX0TGA" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SSBvWXCoEdq2Lvk-NX0TGA" name="belongsToPSM" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SSBvW3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSBvWnCoEdq2Lvk-NX0TGA" annotatedElement="_SSBvWXCoEdq2Lvk-NX0TGA">
        <body>The operation belongsToPSM () checks if the region belongs to a protocol state machine</body>
      </ownedComment>
      <ownedRule xmi:id="_SSBvW3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SSBvWXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSBvXHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if not stateMachine->isEmpty() then
oclIsTypeOf(ProtocolStateMachine)
else if not state->isEmpty() then
state.container.belongsToPSM ()
else false</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SSBvXXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SSBvXnCoEdq2Lvk-NX0TGA" name="AssociationClass">
    <ownedComment xmi:id="_SSBvX3CoEdq2Lvk-NX0TGA" annotatedElement="_SSBvXnCoEdq2Lvk-NX0TGA">
      <body>In the metamodel, an AssociationClass is a declaration of a semantic relationship between Classifiers, which has a set of features of its own. AssociationClass is both an Association and a Class.</body>
    </ownedComment>
    <ownedRule xmi:id="_SSBvYHCoEdq2Lvk-NX0TGA" name="cannot_be_defined" constrainedElement="_SSBvXnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSBvYXCoEdq2Lvk-NX0TGA" annotatedElement="_SSBvYHCoEdq2Lvk-NX0TGA">
        <body>An AssociationClass cannot be defined between itself and something else.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSBvYnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.endType->excludes(self) and self.endType>collect(et|et.allparents()->excludes(self))</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SSBvY3CoEdq2Lvk-NX0TGA" general="_AwvxoGwNEdq7X4sGURiZYA"/>
    <generalization xmi:id="_SSBvZHCoEdq2Lvk-NX0TGA" general="_00owUGvdEdq4DLWZOhbdEA"/>
    <ownedOperation xmi:id="_SSBvZXCoEdq2Lvk-NX0TGA" name="allConnections" type="_Jp_1oGveEdq4DLWZOhbdEA" isQuery="true" bodyCondition="_SSBvZ3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSBvZnCoEdq2Lvk-NX0TGA" annotatedElement="_SSBvZXCoEdq2Lvk-NX0TGA">
        <body>The operation allConnections results in the set of all AssociationEnds of the Association.</body>
      </ownedComment>
      <ownedRule xmi:id="_SSBvZ3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SSBvZXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSBvaHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = memberEnd->union ( self.parents ()->collect (p | p.allConnections () )</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SSBvaXCoEdq2Lvk-NX0TGA" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSBvanCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSBva3CoEdq2Lvk-NX0TGA" value="2"/>
      </returnResult>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SSK5THCoEdq2Lvk-NX0TGA" name="A_qualifier_associationEnd" memberEnd="_SSK5RnCoEdq2Lvk-NX0TGA _SSK5QHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SSK5TXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SSK5TnCoEdq2Lvk-NX0TGA" name="TemplateSignature">
    <ownedComment xmi:id="_SSK5T3CoEdq2Lvk-NX0TGA" annotatedElement="_SSK5TnCoEdq2Lvk-NX0TGA">
      <body>TemplateParameterSubstitution associates one or more actual parameters with a formal template parameter within the context of a TemplateBinding.</body>
    </ownedComment>
    <ownedRule xmi:id="_SSK5UHCoEdq2Lvk-NX0TGA" name="own_elements" constrainedElement="_SSK5TnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSK5UXCoEdq2Lvk-NX0TGA" annotatedElement="_SSK5UHCoEdq2Lvk-NX0TGA">
        <body>Parameters must own the elements they parameter or those elements must be owned by the element being templated.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSK5UnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>templatedElement.ownedElement->includesAll(parameter.parameteredElement - parameter.ownedParameteredElement)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SSK5U3CoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SSK5VHCoEdq2Lvk-NX0TGA" name="parameter" type="_KxRzgGvuEdqG6fBIPwe-mw" isOrdered="true" association="_STXMEXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSK5VXCoEdq2Lvk-NX0TGA" annotatedElement="_SSK5VHCoEdq2Lvk-NX0TGA">
        <body>The ordered set of all formal template parameters for this template signature.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSK5VnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSK5V3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSK5WHCoEdq2Lvk-NX0TGA" name="ownedParameter" type="_KxRzgGvuEdqG6fBIPwe-mw" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA _SSK5VHCoEdq2Lvk-NX0TGA" association="_STXME3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SSK5WXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSK5WnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSK5W3CoEdq2Lvk-NX0TGA" annotatedElement="_SSK5WHCoEdq2Lvk-NX0TGA">
        <body>The formal template parameters that are owned by this template signature.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSK5XHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSK5XXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSK5XnCoEdq2Lvk-NX0TGA" name="template" type="_SSebjnCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_STg9F3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SSK5X3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSK5YHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSK5YXCoEdq2Lvk-NX0TGA" annotatedElement="_SSK5XnCoEdq2Lvk-NX0TGA">
        <body>The element that owns this template signature.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSK5YnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSK5Y3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_csVgUGvtEdqG6fBIPwe-mw" name="NamedElement" isAbstract="true">
    <ownedComment xmi:id="_R1tmzHCoEdq2Lvk-NX0TGA" annotatedElement="_csVgUGvtEdqG6fBIPwe-mw">
      <body>NamedElement has a visibility attribute.</body>
    </ownedComment>
    <ownedComment xmi:id="_R3pgcHCoEdq2Lvk-NX0TGA" annotatedElement="_csVgUGvtEdqG6fBIPwe-mw">
      <body>A named element represents elements that may have a name. The name is used for identification of the named element within the namespace in which it is defined. A named element also has a qualified name that allows it to be unambiguously identified within a hierarchy of nested namespaces. NamedElement is an abstract metaclass.</body>
    </ownedComment>
    <ownedComment xmi:id="_SSK5ZHCoEdq2Lvk-NX0TGA" annotatedElement="_csVgUGvtEdqG6fBIPwe-mw">
      <body>NamedElement specializes Kernel::NamedElement and adds a composition association to Expression.</body>
    </ownedComment>
    <ownedRule xmi:id="_R1tmzXCoEdq2Lvk-NX0TGA" name="has_no_qualified_name" constrainedElement="_csVgUGvtEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_R1tmznCoEdq2Lvk-NX0TGA" annotatedElement="_R1tmzXCoEdq2Lvk-NX0TGA">
        <body>If there is no name, or one of the containing namespaces has no name, there is no qualified name.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R3pgcXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())

  implies self.qualifiedName->isEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R1tm0HCoEdq2Lvk-NX0TGA" name="has_qualified_name" constrainedElement="_csVgUGvtEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_R1tm0XCoEdq2Lvk-NX0TGA" annotatedElement="_R1tm0HCoEdq2Lvk-NX0TGA">
        <body>When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R3pgcnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()) implies
  self.qualifiedName = self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R1tm03CoEdq2Lvk-NX0TGA" name="visibility_needs_ownership" constrainedElement="_csVgUGvtEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_R1tm1HCoEdq2Lvk-NX0TGA" annotatedElement="_R1tm03CoEdq2Lvk-NX0TGA">
        <body>If a NamedElement is not owned by a Namespace, it does not have a visibility.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R3pgc3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>namespace->isEmpty() implies visibility->isEmpty()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_R1tm1nCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_R13XwHCoEdq2Lvk-NX0TGA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <eAnnotations xmi:id="_R13XwXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R13XwnCoEdq2Lvk-NX0TGA" isUnsettable="true" isID="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R13Xw3CoEdq2Lvk-NX0TGA" annotatedElement="_R13XwHCoEdq2Lvk-NX0TGA">
        <body>The name of the NamedElement.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3zRcHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R3zRcXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R13XxnCoEdq2Lvk-NX0TGA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA">
      <eAnnotations xmi:id="_R13Xx3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R13XyHCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R13XyXCoEdq2Lvk-NX0TGA" annotatedElement="_R13XxnCoEdq2Lvk-NX0TGA">
        <body>Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3zRcnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R3zRc3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R3zRdHCoEdq2Lvk-NX0TGA" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
      <eAnnotations xmi:id="_R3zRdXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R3zRdnCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R3zRd3CoEdq2Lvk-NX0TGA" annotatedElement="_R3zRdHCoEdq2Lvk-NX0TGA">
        <body>A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3zReHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R3zReXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SC01sHCoEdq2Lvk-NX0TGA" name="clientDependency" type="_rEDGkGwKEdq7X4sGURiZYA" association="_SDHwrnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SC01sXCoEdq2Lvk-NX0TGA" annotatedElement="_SC01sHCoEdq2Lvk-NX0TGA">
        <body>Indicates the dependencies that reference the client.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SC01snCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SC01s3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R13XzHCoEdq2Lvk-NX0TGA" name="namespace" type="_ZiwkoGwLEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_R2wIn3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R13XzXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R13XznCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R13Xz3CoEdq2Lvk-NX0TGA" annotatedElement="_R13XzHCoEdq2Lvk-NX0TGA">
        <body>Specifies the namespace that owns the NamedElement.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SC01tHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SC01tXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSUqQHCoEdq2Lvk-NX0TGA" name="nameExpression" type="_SSebQHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_STquKXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SSUqQXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSUqQnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSUqQ3CoEdq2Lvk-NX0TGA" annotatedElement="_SSUqQHCoEdq2Lvk-NX0TGA">
        <body>The string expression used to define the name of this named element.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSUqRHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSUqRXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_o2CW4GwKEdq7X4sGURiZYA" name="createDependency" type="_rEDGkGwKEdq7X4sGURiZYA">
      <returnResult xmi:id="_us8f4GwKEdq7X4sGURiZYA" type="_rEDGkGwKEdq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_vYdiEGwKEdq7X4sGURiZYA" name="supplier" type="_csVgUGvtEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_z4f-wGwKEdq7X4sGURiZYA" name="getLabel" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_1p5q8GwKEdq7X4sGURiZYA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_34WfgWwKEdq7X4sGURiZYA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_34WfgGwKEdq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_5KmxkGwKEdq7X4sGURiZYA" name="getLabel" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_5KmxkWwKEdq7X4sGURiZYA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5KmxkmwKEdq7X4sGURiZYA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5Kmxk2wKEdq7X4sGURiZYA"/>
      </returnResult>
      <ownedParameter xmi:id="_6FwyQGwKEdq7X4sGURiZYA" name="isLocalized" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R13X5XCoEdq2Lvk-NX0TGA" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R13X6XCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R13X5nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_R13X53CoEdq2Lvk-NX0TGA" operationName="getQualifiedName"/>
      </eAnnotations>
      <ownedComment xmi:id="_R13X6HCoEdq2Lvk-NX0TGA" annotatedElement="_R13X5XCoEdq2Lvk-NX0TGA">
        <body>When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.</body>
      </ownedComment>
      <ownedRule xmi:id="_R13X6XCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R13X5XCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R13X6nCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()
then 
    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))
else
    Set{}
endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R13X63CoEdq2Lvk-NX0TGA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R13X0nCoEdq2Lvk-NX0TGA" name="allNamespaces" type="_ZiwkoGwLEdq7X4sGURiZYA" isOrdered="true" isQuery="true" bodyCondition="_R13X1HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R13X03CoEdq2Lvk-NX0TGA" annotatedElement="_R13X0nCoEdq2Lvk-NX0TGA">
        <body>The query allNamespaces() gives the sequence of namespaces in which the NamedElement is nested, working outwards.</body>
      </ownedComment>
      <ownedRule xmi:id="_R13X1HCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R13X0nCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R38bYHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if self.namespace->isEmpty()
then Sequence{}
else self.namespace.allNamespaces()->prepend(self.namespace)
endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R13X1nCoEdq2Lvk-NX0TGA" type="_ZiwkoGwLEdq7X4sGURiZYA" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R38bYXCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R38bYnCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_R13X2XCoEdq2Lvk-NX0TGA" name="isDistinguishableFrom" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R13X23CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R13X2nCoEdq2Lvk-NX0TGA" annotatedElement="_R13X2XCoEdq2Lvk-NX0TGA">
        <body>The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names.</body>
      </ownedComment>
      <ownedRule xmi:id="_R13X23CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R13X2XCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R38bY3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)
then ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()
else true
endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R13X3XCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_R13X3nCoEdq2Lvk-NX0TGA" name="n" type="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedParameter xmi:id="_R13X33CoEdq2Lvk-NX0TGA" name="ns" type="_ZiwkoGwLEdq7X4sGURiZYA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R13X4HCoEdq2Lvk-NX0TGA" name="separator" type="_aAyVgGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R13X4nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R13X4XCoEdq2Lvk-NX0TGA" annotatedElement="_R13X4HCoEdq2Lvk-NX0TGA">
        <body>The query separator() gives the string that is used to separate names when constructing a qualified name.</body>
      </ownedComment>
      <ownedRule xmi:id="_R13X4nCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R13X4HCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R38bZHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = '::'</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R13X5HCoEdq2Lvk-NX0TGA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_KxRzgGvuEdqG6fBIPwe-mw" name="TemplateParameter">
    <ownedComment xmi:id="_SSUqRnCoEdq2Lvk-NX0TGA" annotatedElement="_KxRzgGvuEdqG6fBIPwe-mw">
      <body>TemplateParameter references a ParameterableElement which is exposed as a formal template parameter in the containing template.</body>
    </ownedComment>
    <ownedRule xmi:id="_SSUqR3CoEdq2Lvk-NX0TGA" name="must_be_compatible" constrainedElement="_KxRzgGvuEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SSUqSHCoEdq2Lvk-NX0TGA" annotatedElement="_SSUqR3CoEdq2Lvk-NX0TGA">
        <body>The default must be compatible with the formal template parameter.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSUqSXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>default->notEmpty() implies default->isCompatibleWith(parameteredElement)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SSUqSnCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SSUqS3CoEdq2Lvk-NX0TGA" name="signature" type="_SSK5TnCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_STXME3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SSUqTHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSUqTXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSUqTnCoEdq2Lvk-NX0TGA" annotatedElement="_SSUqS3CoEdq2Lvk-NX0TGA">
        <body>The template signature that owns this template parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSUqT3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSUqUHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSUqUXCoEdq2Lvk-NX0TGA" name="parameteredElement" type="_SSnlMHCoEdq2Lvk-NX0TGA" association="_STg9FHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSUqUnCoEdq2Lvk-NX0TGA" annotatedElement="_SSUqUXCoEdq2Lvk-NX0TGA">
        <body>The element exposed by this template parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSUqU3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSUqVHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSUqVXCoEdq2Lvk-NX0TGA" name="ownedParameteredElement" type="_SSnlMHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA _SSUqUXCoEdq2Lvk-NX0TGA" association="_STg9GXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SSUqVnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSUqV3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSUqWHCoEdq2Lvk-NX0TGA" annotatedElement="_SSUqVXCoEdq2Lvk-NX0TGA">
        <body>The element that is owned by this template parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSUqWXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSUqWnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSUqW3CoEdq2Lvk-NX0TGA" name="default" type="_SSnlMHCoEdq2Lvk-NX0TGA" association="_STg9HHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSUqXHCoEdq2Lvk-NX0TGA" annotatedElement="_SSUqW3CoEdq2Lvk-NX0TGA">
        <body>The element that is the default for this formal template parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSUqXXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSUqXnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSUqX3CoEdq2Lvk-NX0TGA" name="ownedDefault" type="_SSnlMHCoEdq2Lvk-NX0TGA" subsettedProperty="_SSUqW3CoEdq2Lvk-NX0TGA _Rx-9ZnCoEdq2Lvk-NX0TGA" association="_STquEHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SSUqYHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSUqYXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSUqYnCoEdq2Lvk-NX0TGA" annotatedElement="_SSUqX3CoEdq2Lvk-NX0TGA">
        <body>The element that is owned by this template parameter for the purpose of providing a default.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSUqY3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSUqZHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SSebQHCoEdq2Lvk-NX0TGA" name="StringExpression">
    <ownedComment xmi:id="_SSebQXCoEdq2Lvk-NX0TGA" annotatedElement="_SSebQHCoEdq2Lvk-NX0TGA">
      <body>StringExpression is a specialization of the general Expression metaclass which adds the ability to contain sub-expressions and whose operands are exclusively LiteralStrings.</body>
    </ownedComment>
    <ownedRule xmi:id="_SSebQnCoEdq2Lvk-NX0TGA" name="operands" constrainedElement="_SSebQHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSebQ3CoEdq2Lvk-NX0TGA" annotatedElement="_SSebQnCoEdq2Lvk-NX0TGA">
        <body>All the operands of a StringExpression must be LiteralStrings</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSebRHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>operand->forAll (op | op.oclIsKindOf (LiteralString))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SSebRXCoEdq2Lvk-NX0TGA" name="subexpressions" constrainedElement="_SSebQHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSebRnCoEdq2Lvk-NX0TGA" annotatedElement="_SSebRXCoEdq2Lvk-NX0TGA">
        <body>If a StringExpression has sub-expressions, it cannot have operands and vice versa (this avoids the problem of having to
define a collating sequence between operands and subexpressions).
</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSebR3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>if subExpression->notEmpty() then operand->isEmpty() else operand->notEmpty()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SSebSHCoEdq2Lvk-NX0TGA" general="_SSebjnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SSebSXCoEdq2Lvk-NX0TGA" general="_R2AhsHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SSebSnCoEdq2Lvk-NX0TGA" name="subExpression" type="_SSebQHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_STg9FXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SSebS3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSebTHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSebTXCoEdq2Lvk-NX0TGA" annotatedElement="_SSebSnCoEdq2Lvk-NX0TGA">
        <body>The StringExpressions that constitute this StringExpression.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSebTnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSebT3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSebUHCoEdq2Lvk-NX0TGA" name="owningExpression" type="_SSebQHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_STg9FXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SSebUXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSebUnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSebU3CoEdq2Lvk-NX0TGA" annotatedElement="_SSebUHCoEdq2Lvk-NX0TGA">
        <body>The string expression of which this expression is a substring.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSebVHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSebVXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SSebVnCoEdq2Lvk-NX0TGA" name="stringValue" type="_aAyVgGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RzLQOnCoEdq2Lvk-NX0TGA" bodyCondition="_SSebWHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSebV3CoEdq2Lvk-NX0TGA" annotatedElement="_SSebVnCoEdq2Lvk-NX0TGA">
        <body>The query stringValue() returns the string that concatenates, in order, all the component string literals of all the subexpressions that are part of the StringExpression.

</body>
      </ownedComment>
      <ownedRule xmi:id="_SSebWHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SSebVnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSebWXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if subExpression->notEmpty()
then subExpression->iterate(se; stringValue = | stringValue.concat(se.stringValue()))
else operand->iterate()(op; stringValue =  | stringValue.concat(op.value))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SSebWnCoEdq2Lvk-NX0TGA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SSebW3CoEdq2Lvk-NX0TGA" name="TemplateBinding">
    <ownedComment xmi:id="_SSebXHCoEdq2Lvk-NX0TGA" annotatedElement="_SSebW3CoEdq2Lvk-NX0TGA">
      <body>TemplateBinding is a directed relationship from a bound templateable element to the template signature of the target template. A TemplateBinding owns a set of template parameter substitutions.</body>
    </ownedComment>
    <ownedRule xmi:id="_SSebXXCoEdq2Lvk-NX0TGA" name="parameter_substitution_formal" constrainedElement="_SSebW3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSebXnCoEdq2Lvk-NX0TGA" annotatedElement="_SSebXXCoEdq2Lvk-NX0TGA">
        <body>Each parameter substitution must refer to a formal template parameter of the target template signature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSebX3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>parameterSubstitution->forAll(b | template.parameter->includes(b.formal))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SSebYHCoEdq2Lvk-NX0TGA" name="one_parameter_substitution" constrainedElement="_SSebW3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSebYXCoEdq2Lvk-NX0TGA" annotatedElement="_SSebYHCoEdq2Lvk-NX0TGA">
        <body>A binding contains at most one parameter substitution for each formal template parameter of the target template signature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSebYnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>template.parameter->forAll(p | parameterSubstitution->select(b | b.formal = p)->size() &lt;= 1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SSebY3CoEdq2Lvk-NX0TGA" general="_Rx-9UHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SSebZHCoEdq2Lvk-NX0TGA" name="boundElement" type="_SSebjnCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA _Rx-9U3CoEdq2Lvk-NX0TGA" association="_STXMFnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SSebZXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSebZnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSebZ3CoEdq2Lvk-NX0TGA" annotatedElement="_SSebZHCoEdq2Lvk-NX0TGA">
        <body>The element that is bound by this binding.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSebaHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSebaXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSebanCoEdq2Lvk-NX0TGA" name="signature" type="_SSK5TnCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9WXCoEdq2Lvk-NX0TGA" association="_STXMG3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSeba3CoEdq2Lvk-NX0TGA" annotatedElement="_SSebanCoEdq2Lvk-NX0TGA">
        <body>The template signature for the template that is the target of the binding.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSebbHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSebbXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSebbnCoEdq2Lvk-NX0TGA" name="parameterSubstitution" type="_SSebdHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_STg9EHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SSebb3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSebcHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSebcXCoEdq2Lvk-NX0TGA" annotatedElement="_SSebbnCoEdq2Lvk-NX0TGA">
        <body>The parameter substitutions owned by this template binding.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSebcnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSebc3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SSebdHCoEdq2Lvk-NX0TGA" name="TemplateParameterSubstitution">
    <ownedComment xmi:id="_SSebdXCoEdq2Lvk-NX0TGA" annotatedElement="_SSebdHCoEdq2Lvk-NX0TGA">
      <body>TemplateParameterSubstitution associates one or more actual parameters with a formal template parameter within the context of a TemplateBinding.</body>
    </ownedComment>
    <ownedRule xmi:id="_SSebdnCoEdq2Lvk-NX0TGA" name="must_be_compatible" constrainedElement="_SSebdHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSebd3CoEdq2Lvk-NX0TGA" annotatedElement="_SSebdnCoEdq2Lvk-NX0TGA">
        <body>The actual parameter must be compatible with the formal template parameter, e.g. the actual parameter for a class template parameter must be a class.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSebeHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>actual->forAll(a | a.isCompatibleWith(formal.parameteredElement))</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SSebeXCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SSebenCoEdq2Lvk-NX0TGA" name="formal" type="_KxRzgGvuEdqG6fBIPwe-mw" association="_STXMGXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSebe3CoEdq2Lvk-NX0TGA" annotatedElement="_SSebenCoEdq2Lvk-NX0TGA">
        <body>The formal template parameter that is associated with this substitution.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSebfHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSebfXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSebfnCoEdq2Lvk-NX0TGA" name="templateBinding" type="_SSebW3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_STg9EHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SSebf3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSebgHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSebgXCoEdq2Lvk-NX0TGA" annotatedElement="_SSebfnCoEdq2Lvk-NX0TGA">
        <body>The optional bindings from this element to templates.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSebgnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSebg3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSebhHCoEdq2Lvk-NX0TGA" name="actual" type="_SSnlMHCoEdq2Lvk-NX0TGA" association="_STg9EnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSebhXCoEdq2Lvk-NX0TGA" annotatedElement="_SSebhHCoEdq2Lvk-NX0TGA">
        <body>The elements that are the actual parameters for this substitution.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSebhnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSebh3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSebiHCoEdq2Lvk-NX0TGA" name="ownedActual" type="_SSnlMHCoEdq2Lvk-NX0TGA" subsettedProperty="_SSebhHCoEdq2Lvk-NX0TGA _Rx-9ZnCoEdq2Lvk-NX0TGA" association="_STquFnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SSebiXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSebinCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSebi3CoEdq2Lvk-NX0TGA" annotatedElement="_SSebiHCoEdq2Lvk-NX0TGA">
        <body>The actual parameters that are owned by this substitution.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSebjHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSebjXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SSebjnCoEdq2Lvk-NX0TGA" name="TemplateableElement" isAbstract="true">
    <ownedComment xmi:id="_SSebj3CoEdq2Lvk-NX0TGA" annotatedElement="_SSebjnCoEdq2Lvk-NX0TGA">
      <body>TemplateableElement may contain a template signature which specifies the formal template parameters. A TemplateableElement that contains a template signature is often referred to as a template. TemplateableElement may contain bindings to templates that describe how the templateable element is constructed by replacing the formal template parameters with actual parameters. A TemplateableElement containing bindings is oftenreferred to as a bound element.</body>
    </ownedComment>
    <generalization xmi:id="_SSebkHCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SSebkXCoEdq2Lvk-NX0TGA" name="templateBinding" type="_SSebW3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_STXMFnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SSebknCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSebk3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSeblHCoEdq2Lvk-NX0TGA" annotatedElement="_SSebkXCoEdq2Lvk-NX0TGA">
        <body>The optional bindings from this element to templates.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSeblXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSeblnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSebl3CoEdq2Lvk-NX0TGA" name="ownedTemplateSignature" type="_SSK5TnCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_STg9F3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SSebmHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSebmXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSebmnCoEdq2Lvk-NX0TGA" annotatedElement="_SSebl3CoEdq2Lvk-NX0TGA">
        <body>The optional template signature specifying the formal template parameters.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSebm3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSebnHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SSebnXCoEdq2Lvk-NX0TGA" name="parameterableElements" type="_SSnlMHCoEdq2Lvk-NX0TGA" isQuery="true" bodyCondition="_SSebn3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSebnnCoEdq2Lvk-NX0TGA" annotatedElement="_SSebnXCoEdq2Lvk-NX0TGA">
        <body>The query parameterableElements() returns the set of elements that may be used as the parametered elements for a template parameter of this templateable element. By default, this set includes all the owned elements. Subclasses may override this operation if they choose to restrict the set of parameterable elements.</body>
      </ownedComment>
      <ownedRule xmi:id="_SSebn3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SSebnXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSeboHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = allOwnedElements->select(oclIsKindOf(ParameterableElement))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SSeboXCoEdq2Lvk-NX0TGA" type="_SSnlMHCoEdq2Lvk-NX0TGA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSebonCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSebo3CoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_SSebpHCoEdq2Lvk-NX0TGA" name="isTemplate" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SSebpnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSebpXCoEdq2Lvk-NX0TGA" annotatedElement="_SSebpHCoEdq2Lvk-NX0TGA">
        <body>The query isTemplate() returns whether this templateable element is actually a template.</body>
      </ownedComment>
      <ownedRule xmi:id="_SSebpnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SSebpHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSebp3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = ownedSignature->notEmpty()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SSebqHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SSnlMHCoEdq2Lvk-NX0TGA" name="ParameterableElement" isAbstract="true">
    <ownedComment xmi:id="_SSnlMXCoEdq2Lvk-NX0TGA" annotatedElement="_SSnlMHCoEdq2Lvk-NX0TGA">
      <body>A ParameterableElement can be referenced by a TemplateParameter when defining a formal template parameter for a template. A ParameterableElement can be referenced by a TemplateParameterSubstitution when used as an actual parameter in a binding of a template.

ParameterableElement is an abstract metaclass.

</body>
    </ownedComment>
    <generalization xmi:id="_SSnlMnCoEdq2Lvk-NX0TGA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SSnlM3CoEdq2Lvk-NX0TGA" name="templateParameter" type="_KxRzgGvuEdqG6fBIPwe-mw" association="_STg9FHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSnlNHCoEdq2Lvk-NX0TGA" annotatedElement="_SSnlM3CoEdq2Lvk-NX0TGA">
        <body>The template parameter that exposes this element as a formal parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSnlNXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSnlNnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSnlN3CoEdq2Lvk-NX0TGA" name="owningTemplateParameter" type="_KxRzgGvuEdqG6fBIPwe-mw" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA _SSnlM3CoEdq2Lvk-NX0TGA" association="_STg9GXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SSnlOHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSnlOXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSnlOnCoEdq2Lvk-NX0TGA" annotatedElement="_SSnlN3CoEdq2Lvk-NX0TGA">
        <body>The formal template parameter that owns this element.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSnlO3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSnlPHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SSnlPXCoEdq2Lvk-NX0TGA" name="isCompatibleWith" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SSnlP3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSnlPnCoEdq2Lvk-NX0TGA" annotatedElement="_SSnlPXCoEdq2Lvk-NX0TGA">
        <body>The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. Subclasses should override this operation to specify different compatibility constraints.</body>
      </ownedComment>
      <ownedRule xmi:id="_SSnlP3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SSnlPXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSnlQHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = p->oclIsKindOf(self.oclType)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SSnlQXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SSnlQnCoEdq2Lvk-NX0TGA" name="p" type="_SSnlMHCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SSnlQ3CoEdq2Lvk-NX0TGA" name="isTemplateParameter" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SSnlRXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSnlRHCoEdq2Lvk-NX0TGA" annotatedElement="_SSnlQ3CoEdq2Lvk-NX0TGA">
        <body>The query isTemplateParameter() determines if this parameterable element is exposed as a formal template parameter.</body>
      </ownedComment>
      <ownedRule xmi:id="_SSnlRXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SSnlQ3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSnlRnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = templateParameter->notEmpty()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SSnlR3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_Jp_1oGveEdq4DLWZOhbdEA" name="Property">
    <ownedComment xmi:id="_RzeyIHCoEdq2Lvk-NX0TGA" annotatedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <body>Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association.



Property is indirectly a subclass of Constructs::TypedElement. The range of valid values represented by the property can be controlled by setting the property's type.</body>
    </ownedComment>
    <ownedComment xmi:id="_R83XoHCoEdq2Lvk-NX0TGA" annotatedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <body>A property is a structural feature.

A property related to a classifier by ownedAttribute represents an attribute, and it may also represent an association end. It relates an instance of the class to a value or collection of values of the type of the attribute.

A property related to an Association by memberEnd or its specializations represents an end of the association. The type of property is the type of the end of the association.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SDuNqnCoEdq2Lvk-NX0TGA" annotatedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <body>A property represents a set of instances that are owned by a containing classifier instance.</body>
    </ownedComment>
    <ownedComment xmi:id="_SQO_mXCoEdq2Lvk-NX0TGA" annotatedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <body>In the metamodel, Property is a specialization of DeploymentTarget.</body>
    </ownedComment>
    <ownedComment xmi:id="_SSBvbHCoEdq2Lvk-NX0TGA" annotatedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <body>Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association. Property is indirectly a subclass of Constructs::TypedElement. The range of valid values represented by the property can be controlled by setting the property's type.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SSnlSHCoEdq2Lvk-NX0TGA" annotatedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <body>Property specializes ParameterableElement to specify that a property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.</body>
    </ownedComment>
    <ownedRule xmi:id="_RzeyIXCoEdq2Lvk-NX0TGA" name="multiplicity_of_composite" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_RzeyInCoEdq2Lvk-NX0TGA" annotatedElement="_RzeyIXCoEdq2Lvk-NX0TGA">
        <body>A multiplicity of a composite aggregation must not have an upper bound greater than 1.</body>
      </ownedComment>
      <ownedComment xmi:id="_R83XoXCoEdq2Lvk-NX0TGA" annotatedElement="_RzeyIXCoEdq2Lvk-NX0TGA">
        <body>A multiplicity on an aggregate end of a composite aggregation must not have an upper bound greater than 1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R83XonCoEdq2Lvk-NX0TGA" language="OCL">
        <body>isComposite implies (upperBound()->isEmpty() or upperBound() &lt;= 1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_RzeyJHCoEdq2Lvk-NX0TGA" name="subsetting_context_conforms" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_RzeyJXCoEdq2Lvk-NX0TGA" annotatedElement="_RzeyJHCoEdq2Lvk-NX0TGA">
        <body>Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R83Xo3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.subsettedProperty->notEmpty() implies
  (self.subsettingContext()->notEmpty() and self.subsettingContext()->forAll (sc |
    self.subsettedProperty->forAll(sp |
      sp.subsettingContext()->exists(c | sc.conformsTo(c)))))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_RzeyJ3CoEdq2Lvk-NX0TGA" name="redefined_property_inherited" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_RzeyKHCoEdq2Lvk-NX0TGA" annotatedElement="_RzeyJ3CoEdq2Lvk-NX0TGA">
        <body>A redefined property must be inherited from a more general classifier containing the redefining property.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R83XpHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>if (redefinedProperty->notEmpty()) then

  (redefinitionContext->notEmpty() and

      redefinedProperty->forAll(rp|

        ((redefinitionContext->collect(fc|

          fc.allParents()))->asSet())->collect(c| c.allFeatures())->asSet()->includes(rp))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_RzeyKnCoEdq2Lvk-NX0TGA" name="subsetting_rules" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_RzeyK3CoEdq2Lvk-NX0TGA" annotatedElement="_RzeyKnCoEdq2Lvk-NX0TGA">
        <body>A subsetting property may strengthen the type of the subsetted property, and its upper bound may be less.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R83XpXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.subsettedProperty->forAll(sp |
  self.type.conformsTo(sp.type) and
    ((self.upperBound()->notEmpty() and sp.upperBound()->notEmpty()) implies
      self.upperBound()&lt;=sp.upperBound() ))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_RzeyLXCoEdq2Lvk-NX0TGA" name="navigable_readonly" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_RzeyLnCoEdq2Lvk-NX0TGA" annotatedElement="_RzeyLXCoEdq2Lvk-NX0TGA">
        <body>Only a navigable property can be marked as readOnly.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R83XpnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>isReadOnly implies isNavigable()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_RzeyMHCoEdq2Lvk-NX0TGA" name="derived_union_is_derived" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_RzeyMXCoEdq2Lvk-NX0TGA" annotatedElement="_RzeyMHCoEdq2Lvk-NX0TGA">
        <body>A derived union is derived.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R83Xp3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>isDerivedUnion implies isDerived</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R9BIoHCoEdq2Lvk-NX0TGA" name="derived_union_is_read_only" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_R9BIoXCoEdq2Lvk-NX0TGA" annotatedElement="_R9BIoHCoEdq2Lvk-NX0TGA">
        <body>A derived union is read only.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R9BIonCoEdq2Lvk-NX0TGA" language="OCL">
        <body>isDerivedUnion implies isReadOnly</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_RzeyM3CoEdq2Lvk-NX0TGA" name="subsetted_property_names" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_RzeyNHCoEdq2Lvk-NX0TGA" annotatedElement="_RzeyM3CoEdq2Lvk-NX0TGA">
        <body>A property may not subset a property with the same name.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R9BIo3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SQO_mnCoEdq2Lvk-NX0TGA" name="deployment_target" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SQO_m3CoEdq2Lvk-NX0TGA" annotatedElement="_SQO_mnCoEdq2Lvk-NX0TGA">
        <body>A Property can be a DeploymentTarget if it is a kind of Node and functions as a part in the internal structure of an encompassing Node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SQO_nHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SSnlSXCoEdq2Lvk-NX0TGA" name="binding_to_attribute" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SSnlSnCoEdq2Lvk-NX0TGA" annotatedElement="_SSnlSXCoEdq2Lvk-NX0TGA">
        <body>A binding of a property template parameter representing an attribute must be to an attribute.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSnlS3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>(isAttribute(self) and (templateParameterSubstitution->notEmpty())

  implies (templateParameterSubstitution->forAll(ts | isAttribute(ts.formal)))</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SDuNq3CoEdq2Lvk-NX0TGA" general="_SD3XnHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SQO_nXCoEdq2Lvk-NX0TGA" general="_SQF1xXCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_Rzn8EHCoEdq2Lvk-NX0TGA" general="_RzCGWnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SSnlTXCoEdq2Lvk-NX0TGA" general="_SSebjnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_Rzn8HXCoEdq2Lvk-NX0TGA" name="isDerived" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_Rzn8HnCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8HXCoEdq2Lvk-NX0TGA">
        <body>If isDerived is true, the value of the attribute is derived from information elsewhere.</body>
      </ownedComment>
      <ownedComment xmi:id="_R9BIpHCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8HXCoEdq2Lvk-NX0TGA">
        <body>Specifies whether the Property is derived, i.e., whether its value or values can be computed from other information.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R9BIpXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rzn8EXCoEdq2Lvk-NX0TGA" name="isReadOnly" type="_UdivYGvsEdqG6fBIPwe-mw" redefinedProperty="_R7OY43CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_Rzn8EnCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8EXCoEdq2Lvk-NX0TGA">
        <body>This redefines the corresponding attribute in Basic::Property and Abstractions::StructuralFeature.</body>
      </ownedComment>
      <ownedComment xmi:id="_R9BIpnCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8EXCoEdq2Lvk-NX0TGA">
        <body>If true, the attribute may only be read, and not written.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R9BIp3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rzn8IHCoEdq2Lvk-NX0TGA" name="isDerivedUnion" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_Rzn8IXCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8IHCoEdq2Lvk-NX0TGA">
        <body>Specifies whether the property is derived as the union of all of the properties that are constrained to subset it.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R9BIqHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rzn8FHCoEdq2Lvk-NX0TGA" name="default" type="_aAyVgGvsEdqG6fBIPwe-mw" isDerived="true">
      <eAnnotations xmi:id="_Rzn8FXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_Rzn8FnCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rzn8F3CoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8FHCoEdq2Lvk-NX0TGA">
        <body>Specifies a String that represents a value to be used when no argument is supplied for the Property.</body>
      </ownedComment>
      <ownedComment xmi:id="_R9KSkHCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8FHCoEdq2Lvk-NX0TGA">
        <body>A String that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9KSkXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R9KSknCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R9KSk3CoEdq2Lvk-NX0TGA" name="aggregation" type="_B3q9cGwNEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R9KSlHCoEdq2Lvk-NX0TGA" annotatedElement="_R9KSk3CoEdq2Lvk-NX0TGA">
        <body>Specifies the kind of aggregation that applies to the Property.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_R9KSlXCoEdq2Lvk-NX0TGA" instance="_R_spN3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rzn8GnCoEdq2Lvk-NX0TGA" name="isComposite" type="_UdivYGvsEdqG6fBIPwe-mw" isDerived="true">
      <eAnnotations xmi:id="_R9KSlnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R9KSl3CoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rzn8G3CoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8GnCoEdq2Lvk-NX0TGA">
        <body>If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute.</body>
      </ownedComment>
      <ownedComment xmi:id="_R9KSmHCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8GnCoEdq2Lvk-NX0TGA">
        <body>This is a derived value, indicating whether the aggregation of the Property is composite or not.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Rzn8HHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rzn8I3CoEdq2Lvk-NX0TGA" name="class" type="_00owUGvdEdq4DLWZOhbdEA" subsettedProperty="_R2KSxHCoEdq2Lvk-NX0TGA _R13XzHCoEdq2Lvk-NX0TGA _RyIuU3CoEdq2Lvk-NX0TGA" association="_R2KStnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_Rzn8JHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rzn8JXCoEdq2Lvk-NX0TGA" referenceName="class_" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rzn8JnCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8I3CoEdq2Lvk-NX0TGA">
        <body>References the Class that owns the Property.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9KSmXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R9KSmnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rzn8L3CoEdq2Lvk-NX0TGA" name="redefinedProperty" type="_Jp_1oGveEdq4DLWZOhbdEA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_R2TcoHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_Rzn8MHCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8L3CoEdq2Lvk-NX0TGA">
        <body>References the properties that are redefined by this property.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9KSm3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R9KSnHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rzn8KXCoEdq2Lvk-NX0TGA" name="owningAssociation" type="_AwvxoGwNEdq7X4sGURiZYA" subsettedProperty="_RzxtEHCoEdq2Lvk-NX0TGA _R13XzHCoEdq2Lvk-NX0TGA _RyIuU3CoEdq2Lvk-NX0TGA" association="_R2KSvXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_Rzn8KnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rzn8K3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rzn8LHCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8KXCoEdq2Lvk-NX0TGA">
        <body>References the owning association of this property, if any.</body>
      </ownedComment>
      <ownedComment xmi:id="_R9KSnXCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8KXCoEdq2Lvk-NX0TGA">
        <body>References the owning association of this property.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9KSnnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R9KSn3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rzn8PXCoEdq2Lvk-NX0TGA" name="datatype" type="_Rz63AHCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA _RyIuU3CoEdq2Lvk-NX0TGA _R2KSxHCoEdq2Lvk-NX0TGA" association="_R2Tcr3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_Rzn8PnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rzn8P3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rzn8QHCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8PXCoEdq2Lvk-NX0TGA">
        <body>The DataType that owns this Operation.</body>
      </ownedComment>
      <ownedComment xmi:id="_R9UDkHCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8PXCoEdq2Lvk-NX0TGA">
        <body>The DataType that owns this Property.

</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9UDkXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R9UDknCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R9UDk3CoEdq2Lvk-NX0TGA" name="defaultValue" type="_RzLQJ3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SAvLCnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R9UDlHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R9UDlXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R9UDlnCoEdq2Lvk-NX0TGA" annotatedElement="_R9UDk3CoEdq2Lvk-NX0TGA">
        <body>A ValueSpecification that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9UDl3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R9UDmHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rzn8N3CoEdq2Lvk-NX0TGA" name="opposite" type="_Jp_1oGveEdq4DLWZOhbdEA" isDerived="true" association="_R2TcpXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_Rzn8OHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rzn8OXCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rzn8OnCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8N3CoEdq2Lvk-NX0TGA">
        <body>In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9UDmXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R9UDmnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rzn8M3CoEdq2Lvk-NX0TGA" name="subsettedProperty" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_R2Tco3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_Rzn8NHCoEdq2Lvk-NX0TGA" annotatedElement="_Rzn8M3CoEdq2Lvk-NX0TGA">
        <body>References the properties of which this property is constrained to be a subset.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9UDm3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R9UDnHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RzxtEHCoEdq2Lvk-NX0TGA" name="association" type="_AwvxoGwNEdq7X4sGURiZYA" association="_R2dNuHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzxtEXCoEdq2Lvk-NX0TGA" annotatedElement="_RzxtEHCoEdq2Lvk-NX0TGA">
        <body>References the association of which this property is a member, if any.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9UDnXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R9UDnnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSK5QHCoEdq2Lvk-NX0TGA" name="qualifier" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SSK5THCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SSK5QXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSK5QnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSK5Q3CoEdq2Lvk-NX0TGA" annotatedElement="_SSK5QHCoEdq2Lvk-NX0TGA">
        <body>An optional list of ordered qualifier attributes for the end. If the list is empty, then the Association is not qualified.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSK5RHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSK5RXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSK5RnCoEdq2Lvk-NX0TGA" name="associationEnd" type="_Jp_1oGveEdq4DLWZOhbdEA" subsettedProperty="_Rx-9bHCoEdq2Lvk-NX0TGA" association="_SSK5THCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SSK5R3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SSK5SHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SSK5SXCoEdq2Lvk-NX0TGA" annotatedElement="_SSK5RnCoEdq2Lvk-NX0TGA">
        <body>Designates the optional association end that owns a qualifier attribute.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSK5SnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSK5S3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_oLamMFYJEdqrn7iZ0eqieg" name="getDefault" visibility="protected" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_vkrSwFYJEdqrn7iZ0eqieg" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uJsjsVYjEdqB6vblk3tuMA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uJsjsFYjEdqB6vblk3tuMA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_f-9wMGXCEdqEJs8umHJc9g" name="isSetDefault" visibility="protected" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_iAwBwGXCEdqEJs8umHJc9g" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_vbp60FYjEdqB6vblk3tuMA" name="setDefault" visibility="protected">
      <ownedParameter xmi:id="_xXxpQFYjEdqB6vblk3tuMA" name="newDefault" visibility="protected" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_d8dDkFYkEdqB6vblk3tuMA" name="setIsComposite" visibility="protected">
      <ownedParameter xmi:id="_gOfXoFYkEdqB6vblk3tuMA" name="newIsComposite" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_sJdfYFYlEdqB6vblk3tuMA" name="setOpposite" visibility="protected">
      <ownedParameter xmi:id="_tesM8FYlEdqB6vblk3tuMA" name="newOpposite" visibility="protected" type="_Jp_1oGveEdq4DLWZOhbdEA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_kGtosGXCEdqEJs8umHJc9g" name="unsetDefault" visibility="protected"/>
    <ownedOperation xmi:id="_RzxtL3CoEdq2Lvk-NX0TGA" name="isAttribute" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RzxtMXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzxtMHCoEdq2Lvk-NX0TGA" annotatedElement="_RzxtL3CoEdq2Lvk-NX0TGA">
        <body>The query isAttribute() is true if the Property is defined as an attribute of some classifier.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzxtMXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzxtL3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R9UDn3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = Classifier.allInstances->exists(c | c.attribute->includes(p))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzxtM3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_RzxtNHCoEdq2Lvk-NX0TGA" name="p" type="_Jp_1oGveEdq4DLWZOhbdEA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RzxtFHCoEdq2Lvk-NX0TGA" name="opposite" type="_Jp_1oGveEdq4DLWZOhbdEA" isQuery="true" bodyCondition="_RzxtGHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RzxtFXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_RzxtFnCoEdq2Lvk-NX0TGA" operationName="getOpposite"/>
      </eAnnotations>
      <ownedComment xmi:id="_RzxtF3CoEdq2Lvk-NX0TGA" annotatedElement="_RzxtFHCoEdq2Lvk-NX0TGA">
        <body>If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzxtGHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzxtFHCoEdq2Lvk-NX0TGA _Rzn8N3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R9dNgHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if owningAssociation->isEmpty() and association.memberEnd->size() = 2
  then
    let otherEnd = (association.memberEnd - self)->any() in
      if otherEnd.owningAssociation->isEmpty() then otherEnd else Set{} endif
    else Set {}
    endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzxtGnCoEdq2Lvk-NX0TGA" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R9dNgXCoEdq2Lvk-NX0TGA" name="isComposite" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R9dNg3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R9dNgnCoEdq2Lvk-NX0TGA" annotatedElement="_R9dNgXCoEdq2Lvk-NX0TGA">
        <body>The value of isComposite is true only if aggregation is composite.</body>
      </ownedComment>
      <ownedRule xmi:id="_R9dNg3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R9dNgXCoEdq2Lvk-NX0TGA _Rzn8GnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R9dNhHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = (self.aggregation = #composite)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R9dNhXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RzxtG3CoEdq2Lvk-NX0TGA" name="isConsistentWith" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_RzxtHXCoEdq2Lvk-NX0TGA" redefinedOperation="_RzCGRXCoEdq2Lvk-NX0TGA" bodyCondition="_RzxtH3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzxtHHCoEdq2Lvk-NX0TGA" annotatedElement="_RzxtG3CoEdq2Lvk-NX0TGA">
        <body>The query isConsistentWith() specifies, for any two Properties in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining property is consistent with a redefined property if the type of the redefining property conforms to the type of the redefined property, the multiplicity of the redefining property (if specified) is contained in the multiplicity of the redefined property, and the redefining property is derived if the redefined property is derived.</body>
      </ownedComment>
      <ownedComment xmi:id="_R9dNhnCoEdq2Lvk-NX0TGA" annotatedElement="_RzxtG3CoEdq2Lvk-NX0TGA">
        <body>The query isConsistentWith() specifies, for any two Properties in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining property is consistent with a redefined property if the type of the redefining property conforms to the type of the redefined property, the multiplicity of the redefining property (if specified) is contained in the multiplicity of the redefined property, and the redefining property is derived if the redefined attribute is property.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzxtHXCoEdq2Lvk-NX0TGA" constrainedElement="_RzxtG3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R9dNh3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>redefinee.isRedefinitionContextValid(self)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_RzxtH3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzxtG3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R9dNiHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = redefinee.oclIsKindOf(Property) and 
  let prop : Property = redefinee.oclAsType(Property) in 
  (prop.type.conformsTo(self.type) and 
  ((prop.lowerBound()->notEmpty() and self.lowerBound()->notEmpty()) implies prop.lowerBound() >= self.lowerBound()) and 
  ((prop.upperBound()->notEmpty() and self.upperBound()->notEmpty()) implies prop.lowerBound() &lt;= self.lowerBound()) and 
  (self.isDerived implies prop.isDerived) and
  (self.isComposite implies prop.isComposite))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzxtIXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_RzxtInCoEdq2Lvk-NX0TGA" name="redefinee" type="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RzxtI3CoEdq2Lvk-NX0TGA" name="subsettingContext" type="_ynRtoGvtEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RzxtJXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzxtJHCoEdq2Lvk-NX0TGA" annotatedElement="_RzxtI3CoEdq2Lvk-NX0TGA">
        <body>The query subsettingContext() gives the context for subsetting a property. It consists, in the case of an attribute, of the corresponding classifier, and in the case of an association end, all of the classifiers at the other ends.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzxtJXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzxtI3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R9dNiXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if association->notEmpty()
then association.endType-type
else if classifier->notEmpty() then Set{classifier} else Set{} endif
endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzxtJ3CoEdq2Lvk-NX0TGA" type="_ynRtoGvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9dNinCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R9dNi3CoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_RzxtKnCoEdq2Lvk-NX0TGA" name="isNavigable" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RzxtLHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzxtK3CoEdq2Lvk-NX0TGA" annotatedElement="_RzxtKnCoEdq2Lvk-NX0TGA">
        <body>The query isNavigable indicates whether it is possible to navigate across the property.</body>
      </ownedComment>
      <ownedComment xmi:id="_R9dNjHCoEdq2Lvk-NX0TGA" annotatedElement="_RzxtKnCoEdq2Lvk-NX0TGA">
        <body>The query isNavigable() indicates whether it is possible to navigate across the property.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzxtLHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzxtKnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R9dNjXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = not classifier->isEmpty() or association.owningAssociation.navigableOwnedEnd->includes(self)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzxtLnCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SSnlTnCoEdq2Lvk-NX0TGA" name="isCompatibleWith" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_SSnlPXCoEdq2Lvk-NX0TGA" bodyCondition="_SSnlUHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSnlT3CoEdq2Lvk-NX0TGA" annotatedElement="_SSnlTnCoEdq2Lvk-NX0TGA">
        <body>The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. In addition, for properties, the type must be conformant with the type of the specified parameterable element.

</body>
      </ownedComment>
      <ownedRule xmi:id="_SSnlUHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SSnlTnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSnlUXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = p->oclIsKindOf(self.oclType) and self.type.conformsTo(p.oclAsType(TypedElement).type)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SSnlUnCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SSnlU3CoEdq2Lvk-NX0TGA" name="p" type="_SSnlMHCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_RzLQJ3CoEdq2Lvk-NX0TGA" name="ValueSpecification" isAbstract="true">
    <ownedComment xmi:id="_RzLQKHCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQJ3CoEdq2Lvk-NX0TGA">
      <body>ValueSpecification is an abstract metaclass used to identify a value or values in a model. It may reference an instance or it may be an expression denoting an instance or instances when evaluated. It adds a specialization to Constructs::TypedElement.</body>
    </ownedComment>
    <ownedComment xmi:id="_R_i4MXCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQJ3CoEdq2Lvk-NX0TGA">
      <body>ValueSpecification is an abstract metaclass used to identify a value or values in a model. It may reference an instance or it may be an expression denoting an instance or instances when evaluated.</body>
    </ownedComment>
    <ownedComment xmi:id="_SSxWMHCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQJ3CoEdq2Lvk-NX0TGA">
      <body>ValueSpecification specializes ParameterableElement to specify that a value specification can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.</body>
    </ownedComment>
    <generalization xmi:id="_RzLQKXCoEdq2Lvk-NX0TGA" general="_RzLQIHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_RzLQKnCoEdq2Lvk-NX0TGA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
    <ownedOperation xmi:id="_RzLQK3CoEdq2Lvk-NX0TGA" name="isComputable" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RzLQLXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzLQLHCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQK3CoEdq2Lvk-NX0TGA">
        <body>The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzLQLXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzLQK3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_i4MnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = false</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzLQL3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RzLQMHCoEdq2Lvk-NX0TGA" name="integerValue" type="_XqvEIGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RzLQMnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzLQMXCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQMHCoEdq2Lvk-NX0TGA">
        <body>The query integerValue() gives a single Integer value when one can be computed.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzLQMnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzLQMHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_i4M3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = Set{}</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzLQNHCoEdq2Lvk-NX0TGA" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RzLQNXCoEdq2Lvk-NX0TGA" name="booleanValue" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RzLQN3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzLQNnCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQNXCoEdq2Lvk-NX0TGA">
        <body>The query booleanValue() gives a single Boolean value when one can be computed.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzLQN3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzLQNXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_i4NHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = Set{}</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzLQOXCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RzLQOnCoEdq2Lvk-NX0TGA" name="stringValue" type="_aAyVgGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RzLQPHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzLQO3CoEdq2Lvk-NX0TGA" annotatedElement="_RzLQOnCoEdq2Lvk-NX0TGA">
        <body>The query stringValue() gives a single String value when one can be computed.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzLQPHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzLQOnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_i4NXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = Set{}</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzLQPnCoEdq2Lvk-NX0TGA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RzLQP3CoEdq2Lvk-NX0TGA" name="unlimitedValue" type="_dRZxsGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RzLQQXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzLQQHCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQP3CoEdq2Lvk-NX0TGA">
        <body>The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzLQQXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzLQP3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_i4NnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = Set{}</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzLQQ3CoEdq2Lvk-NX0TGA" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RzLQRHCoEdq2Lvk-NX0TGA" name="isNull" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RzLQRnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzLQRXCoEdq2Lvk-NX0TGA" annotatedElement="_RzLQRHCoEdq2Lvk-NX0TGA">
        <body>The query isNull() returns true when it can be computed that the value is null.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzLQRnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzLQRHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R_i4N3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = false</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzLQSHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SSxWMnCoEdq2Lvk-NX0TGA" name="isCompatibleWith" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_SSnlPXCoEdq2Lvk-NX0TGA" bodyCondition="_SSxWNHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSxWM3CoEdq2Lvk-NX0TGA" annotatedElement="_SSxWMnCoEdq2Lvk-NX0TGA">
        <body>The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. In addition, for ValueSpecification, the type must be conformant with the type of the specified parameterable element.

</body>
      </ownedComment>
      <ownedRule xmi:id="_SSxWNHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SSxWMnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SSxWNXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = p->oclIsKindOf(self.oclType) and self.type.conformsTo(p.oclAsType(TypedElement).type)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SSxWNnCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_SSxWN3CoEdq2Lvk-NX0TGA" name="p" type="_SSnlMHCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_M4X2IGveEdq4DLWZOhbdEA" name="Operation">
    <ownedComment xmi:id="_R0OZLHCoEdq2Lvk-NX0TGA" annotatedElement="_M4X2IGveEdq4DLWZOhbdEA">
      <body>An operation is owned by a class and may be invoked in the context of objects that are instances of that class. It is a typed element and a multiplicity element.</body>
    </ownedComment>
    <ownedComment xmi:id="_R9m-gHCoEdq2Lvk-NX0TGA" annotatedElement="_M4X2IGveEdq4DLWZOhbdEA">
      <body>An expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages.

One predefined language for specifying expressions is OCL. Natural language or programming languages may also be used.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SDarkHCoEdq2Lvk-NX0TGA" annotatedElement="_M4X2IGveEdq4DLWZOhbdEA">
      <body>An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior.</body>
    </ownedComment>
    <ownedComment xmi:id="_SGZuKXCoEdq2Lvk-NX0TGA" annotatedElement="_M4X2IGveEdq4DLWZOhbdEA">
      <body>An operation may invoke both the execution of method behaviors as well as other behavioral responses.</body>
    </ownedComment>
    <ownedComment xmi:id="_SSxWOHCoEdq2Lvk-NX0TGA" annotatedElement="_M4X2IGveEdq4DLWZOhbdEA">
      <body>Operation specializes TemplateableElement in order to support specification of template operations and bound operations.</body>
    </ownedComment>
    <ownedRule xmi:id="_R0Xi83CoEdq2Lvk-NX0TGA" name="at_most_one_return" constrainedElement="_M4X2IGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_R0Xi9HCoEdq2Lvk-NX0TGA" annotatedElement="_R0Xi83CoEdq2Lvk-NX0TGA">
        <body>An operation can have at most one return parameter; i.e., an owned parameter with the direction set to 'return'</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R9m-gXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.ownedParameter->select(par | par.direction = #return)->size() &lt;= 1</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R0Xi8HCoEdq2Lvk-NX0TGA" name="only_body_for_query" constrainedElement="_M4X2IGveEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_R0Xi8XCoEdq2Lvk-NX0TGA" annotatedElement="_R0Xi8HCoEdq2Lvk-NX0TGA">
        <body>A bodyCondition can only be specified for a query operation.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R9m-gnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>bodyCondition->notEmpty() implies isQuery</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_R0Xi9nCoEdq2Lvk-NX0TGA" general="_R00O8nCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SSxWOXCoEdq2Lvk-NX0TGA" general="_SSnlMHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_SSxWOnCoEdq2Lvk-NX0TGA" general="_SSebjnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R0Xi93CoEdq2Lvk-NX0TGA" name="isQuery" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_R0Xi-HCoEdq2Lvk-NX0TGA" annotatedElement="_R0Xi93CoEdq2Lvk-NX0TGA">
        <body>Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false).</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R9wvgHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0Xi-nCoEdq2Lvk-NX0TGA" name="isOrdered" type="_UdivYGvsEdqG6fBIPwe-mw" isDerived="true">
      <eAnnotations xmi:id="_R0Xi-3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R0Xi_HCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0Xi_XCoEdq2Lvk-NX0TGA" annotatedElement="_R0Xi-nCoEdq2Lvk-NX0TGA">
        <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
      </ownedComment>
      <ownedComment xmi:id="_R9wvgXCoEdq2Lvk-NX0TGA" annotatedElement="_R0Xi-nCoEdq2Lvk-NX0TGA">
        <body>Specifies whether the return parameter is ordered or not, if present.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R9wvgnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0Xi_3CoEdq2Lvk-NX0TGA" name="isUnique" type="_UdivYGvsEdqG6fBIPwe-mw" isDerived="true">
      <eAnnotations xmi:id="_R0XjAHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R0XjAXCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0XjAnCoEdq2Lvk-NX0TGA" annotatedElement="_R0Xi_3CoEdq2Lvk-NX0TGA">
        <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
      </ownedComment>
      <ownedComment xmi:id="_R9wvg3CoEdq2Lvk-NX0TGA" annotatedElement="_R0Xi_3CoEdq2Lvk-NX0TGA">
        <body>Specifies whether the return parameter is unique or not, if present.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R9wvhHCoEdq2Lvk-NX0TGA" value="true"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0XjBHCoEdq2Lvk-NX0TGA" name="lower" type="_XqvEIGvsEdqG6fBIPwe-mw" isDerived="true">
      <eAnnotations xmi:id="_R0XjBXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R0XjBnCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0XjB3CoEdq2Lvk-NX0TGA" annotatedElement="_R0XjBHCoEdq2Lvk-NX0TGA">
        <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
      </ownedComment>
      <ownedComment xmi:id="_R955cHCoEdq2Lvk-NX0TGA" annotatedElement="_R0XjBHCoEdq2Lvk-NX0TGA">
        <body>Specifies the lower multiplicity of the return parameter, if present.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R955cXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R955cnCoEdq2Lvk-NX0TGA"/>
      <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_R955c3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0XjC3CoEdq2Lvk-NX0TGA" name="upper" type="_dRZxsGvsEdqG6fBIPwe-mw" isDerived="true">
      <eAnnotations xmi:id="_R0XjDHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_R0XjDXCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0XjDnCoEdq2Lvk-NX0TGA" annotatedElement="_R0XjC3CoEdq2Lvk-NX0TGA">
        <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
      </ownedComment>
      <ownedComment xmi:id="_R955dHCoEdq2Lvk-NX0TGA" annotatedElement="_R0XjC3CoEdq2Lvk-NX0TGA">
        <body>Specifies the upper multiplicity of the return parameter, if present.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R955dXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R955dnCoEdq2Lvk-NX0TGA"/>
      <defaultValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R955d3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0XjEnCoEdq2Lvk-NX0TGA" name="class" type="_00owUGvdEdq4DLWZOhbdEA" subsettedProperty="_RzCGOXCoEdq2Lvk-NX0TGA _R13XzHCoEdq2Lvk-NX0TGA _RyIuU3CoEdq2Lvk-NX0TGA" association="_R2KSuXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R0XjE3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R0XjFHCoEdq2Lvk-NX0TGA" referenceName="class_" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0XjFXCoEdq2Lvk-NX0TGA" annotatedElement="_R0XjEnCoEdq2Lvk-NX0TGA">
        <body>The class that owns the operation.</body>
      </ownedComment>
      <ownedComment xmi:id="_R955eHCoEdq2Lvk-NX0TGA" annotatedElement="_R0XjEnCoEdq2Lvk-NX0TGA">
        <body>The class that owns this operation.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R955eXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R955enCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0hUBHCoEdq2Lvk-NX0TGA" name="precondition" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaWHCoEdq2Lvk-NX0TGA" association="_R255nHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R0hUBXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R0hUBnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R955e3CoEdq2Lvk-NX0TGA" annotatedElement="_R0hUBHCoEdq2Lvk-NX0TGA">
        <body>An optional set of Constraints on the state of the system when the Operation is invoked.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R955fHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R955fXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0hUCXCoEdq2Lvk-NX0TGA" name="postcondition" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaWHCoEdq2Lvk-NX0TGA" association="_R255oXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R0hUCnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R0hUC3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R955fnCoEdq2Lvk-NX0TGA" annotatedElement="_R0hUCXCoEdq2Lvk-NX0TGA">
        <body>An optional set of Constraints specifying the state of the system when the Operation is completed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R955f3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R955gHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0hT9HCoEdq2Lvk-NX0TGA" name="redefinedOperation" type="_M4X2IGveEdq4DLWZOhbdEA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_R2TcuXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R0hT9XCoEdq2Lvk-NX0TGA" annotatedElement="_R0hT9HCoEdq2Lvk-NX0TGA">
        <body>References the Operations that are redefined by this Operation.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R955gXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R955gnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0XjGHCoEdq2Lvk-NX0TGA" name="datatype" type="_Rz63AHCoEdq2Lvk-NX0TGA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA _RzCGOXCoEdq2Lvk-NX0TGA _RyIuU3CoEdq2Lvk-NX0TGA" association="_R2TcsnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R0XjGXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R0XjGnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0XjG3CoEdq2Lvk-NX0TGA" annotatedElement="_R0XjGHCoEdq2Lvk-NX0TGA">
        <body>The DataType that owns this Operation.</body>
      </ownedComment>
      <ownedComment xmi:id="_R-DqcHCoEdq2Lvk-NX0TGA" annotatedElement="_R0XjGHCoEdq2Lvk-NX0TGA">
        <body>The DataType that owns this Property.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-DqcXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-DqcnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0hUDnCoEdq2Lvk-NX0TGA" name="bodyCondition" type="_R0OZAHCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaWHCoEdq2Lvk-NX0TGA" association="_R255pnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R0hUD3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R0hUEHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R-Dqc3CoEdq2Lvk-NX0TGA" annotatedElement="_R0hUDnCoEdq2Lvk-NX0TGA">
        <body>An optional Constraint on the result values of an invocation of this Operation.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-DqdHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-DqdXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0hT-HCoEdq2Lvk-NX0TGA" name="type" type="_ynRtoGvtEdqG6fBIPwe-mw" isDerived="true" association="_R2m-onCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R0hT-XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R0hT-nCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0hT-3CoEdq2Lvk-NX0TGA" annotatedElement="_R0hT-HCoEdq2Lvk-NX0TGA">
        <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
      </ownedComment>
      <ownedComment xmi:id="_R-DqdnCoEdq2Lvk-NX0TGA" annotatedElement="_R0hT-HCoEdq2Lvk-NX0TGA">
        <body>Specifies the return result of the operation, if present.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-Dqd3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-DqeHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0hT_nCoEdq2Lvk-NX0TGA" name="ownedParameter" type="_KyaPMGveEdq4DLWZOhbdEA" redefinedProperty="_R00O9nCoEdq2Lvk-NX0TGA" association="_R2wIrHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R0hT_3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R0hUAHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0hUAXCoEdq2Lvk-NX0TGA" annotatedElement="_R0hT_nCoEdq2Lvk-NX0TGA">
        <body>Specifies the ordered set of formal parameters of this BehavioralFeature.</body>
      </ownedComment>
      <ownedComment xmi:id="_R-DqeXCoEdq2Lvk-NX0TGA" annotatedElement="_R0hT_nCoEdq2Lvk-NX0TGA">
        <body>Specifies the parameters owned by this Operation.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-DqenCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-Dqe3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R0hT8HCoEdq2Lvk-NX0TGA" name="raisedException" type="_ynRtoGvtEdqG6fBIPwe-mw" redefinedProperty="_R00O_HCoEdq2Lvk-NX0TGA" association="_R2TctnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R0hT8XCoEdq2Lvk-NX0TGA" annotatedElement="_R0hT8HCoEdq2Lvk-NX0TGA">
        <body>References the Types representing exceptions that may be raised during an invocation of this operation.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-DqfHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-DqfXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SDarkXCoEdq2Lvk-NX0TGA" name="interface" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_RzCGOXCoEdq2Lvk-NX0TGA" association="_SDarnXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SDarknCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SDark3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SDarlHCoEdq2Lvk-NX0TGA" annotatedElement="_SDarkXCoEdq2Lvk-NX0TGA">
        <body>The Interface that owns this Operation.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SDarlXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SDarlnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SSxWO3CoEdq2Lvk-NX0TGA" name="templateParameter" type="_SS6gIHCoEdq2Lvk-NX0TGA" redefinedProperty="_SSnlM3CoEdq2Lvk-NX0TGA" association="_STquLnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SSxWPHCoEdq2Lvk-NX0TGA" annotatedElement="_SSxWO3CoEdq2Lvk-NX0TGA">
        <body>The template parameter that exposes this element as a formal parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SSxWPXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SSxWPnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_ho5pgFYLEdqrn7iZ0eqieg" name="getLower" visibility="protected" type="_XqvEIGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_jukVgFYLEdqrn7iZ0eqieg" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_ljsEEFYLEdqrn7iZ0eqieg" name="getUpper" visibility="protected" type="_dRZxsGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_pAh-YFYLEdqrn7iZ0eqieg" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_LgBIAFYlEdqB6vblk3tuMA" name="setIsOrdered" visibility="protected">
      <ownedParameter xmi:id="_NIoEkFYlEdqB6vblk3tuMA" name="newIsOrdered" visibility="protected" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_QTIRsFYlEdqB6vblk3tuMA" name="setIsUnique" visibility="protected">
      <ownedParameter xmi:id="_SFRkwFYlEdqB6vblk3tuMA" name="newIsUnique" visibility="protected" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_VrpOgFYlEdqB6vblk3tuMA" name="setLower" visibility="protected">
      <ownedParameter xmi:id="_XdMrsFYlEdqB6vblk3tuMA" name="newLower" visibility="protected" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_kqFjwFYlEdqB6vblk3tuMA" name="setType" visibility="protected">
      <ownedParameter xmi:id="_l2PN0FYlEdqB6vblk3tuMA" name="newType" visibility="protected" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_arIAQFYlEdqB6vblk3tuMA" name="setUpper" visibility="protected">
      <ownedParameter xmi:id="_b-4HIFYlEdqB6vblk3tuMA" name="newUpper" visibility="protected" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R0hUE3CoEdq2Lvk-NX0TGA" name="isOrdered" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R0hUFXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R0hUFHCoEdq2Lvk-NX0TGA" annotatedElement="_R0hUE3CoEdq2Lvk-NX0TGA">
        <body>If this operation has a return parameter, isOrdered equals the value of isOrdered for that parameter. Otherwise isOrdered is false.</body>
      </ownedComment>
      <ownedRule xmi:id="_R0hUFXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R0hUE3CoEdq2Lvk-NX0TGA _R0Xi-nCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-DqfnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if returnResult()->notEmpty() then returnResult()->any().isOrdered else false endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R0hUF3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R0hUGHCoEdq2Lvk-NX0TGA" name="isUnique" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R0hUGnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R0hUGXCoEdq2Lvk-NX0TGA" annotatedElement="_R0hUGHCoEdq2Lvk-NX0TGA">
        <body>If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.</body>
      </ownedComment>
      <ownedComment xmi:id="_R-NbcHCoEdq2Lvk-NX0TGA" annotatedElement="_R0hUGHCoEdq2Lvk-NX0TGA">
        <body>If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.

</body>
      </ownedComment>
      <ownedRule xmi:id="_R0hUGnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R0hUGHCoEdq2Lvk-NX0TGA _R0Xi_3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-NbcXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if returnResult()->notEmpty() then returnResult()->any().isUnique else true endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R0hUHHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R0hUHXCoEdq2Lvk-NX0TGA" name="lower" type="_XqvEIGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R0hUIXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R0hUHnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_R0hUH3CoEdq2Lvk-NX0TGA" operationName="lowerBound"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0hUIHCoEdq2Lvk-NX0TGA" annotatedElement="_R0hUHXCoEdq2Lvk-NX0TGA">
        <body>If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.</body>
      </ownedComment>
      <ownedComment xmi:id="_R-NbcnCoEdq2Lvk-NX0TGA" annotatedElement="_R0hUHXCoEdq2Lvk-NX0TGA">
        <body>If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.

</body>
      </ownedComment>
      <ownedRule xmi:id="_R0hUIXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R0hUHXCoEdq2Lvk-NX0TGA _R0XjBHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-Nbc3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if returnResult()->notEmpty() then returnResult()->any().lower else Set{} endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R0hUI3CoEdq2Lvk-NX0TGA" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R0rE8HCoEdq2Lvk-NX0TGA" name="upper" type="_dRZxsGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R0rE9HCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R0rE8XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_R0rE8nCoEdq2Lvk-NX0TGA" operationName="upperBound"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0rE83CoEdq2Lvk-NX0TGA" annotatedElement="_R0rE8HCoEdq2Lvk-NX0TGA">
        <body>If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.</body>
      </ownedComment>
      <ownedComment xmi:id="_R-NbdHCoEdq2Lvk-NX0TGA" annotatedElement="_R0rE8HCoEdq2Lvk-NX0TGA">
        <body>If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.

</body>
      </ownedComment>
      <ownedRule xmi:id="_R0rE9HCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R0rE8HCoEdq2Lvk-NX0TGA _R0XjC3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-NbdXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if returnResult()->notEmpty() then returnResult()->any().upper else Set{} endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R0rE9nCoEdq2Lvk-NX0TGA" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R0rE93CoEdq2Lvk-NX0TGA" name="type" type="_ynRtoGvtEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_R0rE-3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R0rE-HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_R0rE-XCoEdq2Lvk-NX0TGA" operationName="getType"/>
      </eAnnotations>
      <ownedComment xmi:id="_R0rE-nCoEdq2Lvk-NX0TGA" annotatedElement="_R0rE93CoEdq2Lvk-NX0TGA">
        <body>If this operation has a return parameter, type equals the value of type for that parameter. Otherwise type is not defined.</body>
      </ownedComment>
      <ownedRule xmi:id="_R0rE-3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R0rE93CoEdq2Lvk-NX0TGA _R0hT-HCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-NbdnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if returnResult()->notEmpty() then returnResult()->any().type else Set{} endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R0rE_XCoEdq2Lvk-NX0TGA" type="_ynRtoGvtEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R0rE_nCoEdq2Lvk-NX0TGA" name="isConsistentWith" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_R0rFAHCoEdq2Lvk-NX0TGA" redefinedOperation="_RzCGRXCoEdq2Lvk-NX0TGA" bodyCondition="_R0rFAnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R0rE_3CoEdq2Lvk-NX0TGA" annotatedElement="_R0rE_nCoEdq2Lvk-NX0TGA">
        <body>The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be consistent in the sense of maintaining type covariance. Other senses of consistency may be required, for example to determine consistency in the sense of contravariance. Users may define alternative queries under names different from 'isConsistentWith()', as for example, users may define a query named 'isContravariantWith()'.</body>
      </ownedComment>
      <ownedComment xmi:id="_R-Nbd3CoEdq2Lvk-NX0TGA" annotatedElement="_R0rE_nCoEdq2Lvk-NX0TGA">
        <body>The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining operation is consistent with a redefined operation if it has the same number of owned parameters, and the type of each owned parameter conforms to the type of the corresponding redefined parameter. </body>
      </ownedComment>
      <ownedRule xmi:id="_R0rFAHCoEdq2Lvk-NX0TGA" constrainedElement="_R0rE_nCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-NbeHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>redefinee.isRedefinitionContextValid(self)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_R0rFAnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R0rE_nCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-NbeXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = (redefinee.oclIsKindOf(Operation) and
let op: Operation = redefinee.oclAsType(Operation) in
self.ownedParameter.size() = op.ownedParameter.size() and
forAll(i | op.ownedParameter[i].type.conformsTo(self.ownedParameter[i].type))
)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R0rFBHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_R0rFBXCoEdq2Lvk-NX0TGA" name="redefinee" type="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R0rFBnCoEdq2Lvk-NX0TGA" name="returnResult" type="_KyaPMGveEdq4DLWZOhbdEA" isQuery="true" bodyCondition="_R0rFB3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R-NbenCoEdq2Lvk-NX0TGA" annotatedElement="_R0rFBnCoEdq2Lvk-NX0TGA">
        <body>The query returnResult() returns the set containing the return parameter of the Operation if one exists, otherwise, it returns an empty set</body>
      </ownedComment>
      <ownedRule xmi:id="_R0rFB3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R0rFBnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R-Nbe3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = ownedParameter->select (par | par.direction = #return)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R0rFCXCoEdq2Lvk-NX0TGA" type="_KyaPMGveEdq4DLWZOhbdEA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-WlYHCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R-WlYXCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SS6gIHCoEdq2Lvk-NX0TGA" name="OperationTemplateParameter">
    <ownedComment xmi:id="_SS6gIXCoEdq2Lvk-NX0TGA" annotatedElement="_SS6gIHCoEdq2Lvk-NX0TGA">
      <body>OperationTemplateParameter is a template parameter where the parametered element is an Operation.</body>
    </ownedComment>
    <generalization xmi:id="_SS6gInCoEdq2Lvk-NX0TGA" general="_KxRzgGvuEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_SS6gI3CoEdq2Lvk-NX0TGA" name="parameteredElement" type="_M4X2IGveEdq4DLWZOhbdEA" redefinedProperty="_SSUqUXCoEdq2Lvk-NX0TGA" association="_STquLnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SS6gJHCoEdq2Lvk-NX0TGA" annotatedElement="_SS6gI3CoEdq2Lvk-NX0TGA">
        <body>The operation for this template parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SS6gJXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SS6gJnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_jKxnwGwLEdq7X4sGURiZYA" name="PackageableElement" isAbstract="true">
    <ownedComment xmi:id="_RyukUXCoEdq2Lvk-NX0TGA" annotatedElement="_jKxnwGwLEdq7X4sGURiZYA">
      <body>A packageable element indicates a named element that may be owned directly by a package.</body>
    </ownedComment>
    <ownedComment xmi:id="_SS6gJ3CoEdq2Lvk-NX0TGA" annotatedElement="_jKxnwGwLEdq7X4sGURiZYA">
      <body>PackageableElements are extended to enable any such element to serve as a template parameter.</body>
    </ownedComment>
    <generalization xmi:id="_Ry4VMHCoEdq2Lvk-NX0TGA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    <generalization xmi:id="_SS6gKHCoEdq2Lvk-NX0TGA" general="_SSnlMHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_R4GMYHCoEdq2Lvk-NX0TGA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA" redefinedProperty="_R13XxnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R4GMYXCoEdq2Lvk-NX0TGA" annotatedElement="_R4GMYHCoEdq2Lvk-NX0TGA">
        <body>Indicates that packageable elements must always have a visibility, i.e., visibility is not optional.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_R4GMYnCoEdq2Lvk-NX0TGA" type="_AyM_oGwMEdq7X4sGURiZYA" instance="_R2Ah2XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_6UV2QGwJEdq7X4sGURiZYA" name="Classifier" isAbstract="true">
    <ownedComment xmi:id="_RwDDoHCoEdq2Lvk-NX0TGA" annotatedElement="_6UV2QGwJEdq7X4sGURiZYA">
      <body>A classifier is a type. It can specify a generalization hierarchy by referencing its general classifiers.  A classifier is also a namespace whose members can include features. Classifier is an abstract metaclass.</body>
    </ownedComment>
    <ownedComment xmi:id="_SCOYzHCoEdq2Lvk-NX0TGA" annotatedElement="_6UV2QGwJEdq7X4sGURiZYA">
      <body>Extends a classifier with the capability to own use cases. Although the owning classifier typically represents the subject to which the owned use cases apply, this is not necessarily the case. In principle, the same use case can be applied to multiple subjects, as identified by the subject association role of a UseCase.</body>
    </ownedComment>
    <ownedComment xmi:id="_SD3Xo3CoEdq2Lvk-NX0TGA" annotatedElement="_6UV2QGwJEdq7X4sGURiZYA">
      <body>Classifier is extended with the capability to own collaboration uses. These collaboration uses link a collaboration with the classifier to give a description of the workings of the classifier.</body>
    </ownedComment>
    <ownedComment xmi:id="_R54VEHCoEdq2Lvk-NX0TGA" annotatedElement="_6UV2QGwJEdq7X4sGURiZYA">
      <body>A classifier is a namespace whose members can include features. Classifier is an abstract metaclass.

A classifier is a type and can own generalizations, thereby making it possible to define generalization relationships to other classifiers. A classifier can specify a generalization hierarchy by referencing its general classifiers.

A classifier is a redefinable element, meaning that it is possible to redefine nested classifiers.

</body>
    </ownedComment>
    <ownedComment xmi:id="_SS6gKXCoEdq2Lvk-NX0TGA" annotatedElement="_6UV2QGwJEdq7X4sGURiZYA">
      <body>A classifier can be parameterized, exposed as a formal template parameter, and specified as an actual parameter in a binding of a template.</body>
    </ownedComment>
    <ownedRule xmi:id="_RwyqgHCoEdq2Lvk-NX0TGA" name="no_cycles_in_generalization" constrainedElement="_6UV2QGwJEdq7X4sGURiZYA">
      <ownedComment xmi:id="_Rw8bgHCoEdq2Lvk-NX0TGA" annotatedElement="_RwyqgHCoEdq2Lvk-NX0TGA">
        <body>Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_Rw8bgXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>not self.allParents()->includes(self)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_R54VEXCoEdq2Lvk-NX0TGA" name="generalization_hierarchies" constrainedElement="_6UV2QGwJEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R54VEnCoEdq2Lvk-NX0TGA" annotatedElement="_R54VEXCoEdq2Lvk-NX0TGA">
        <body>Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R54VE3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>not self.allParents()->includes(self)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_Rw8bgnCoEdq2Lvk-NX0TGA" name="specialize_type" constrainedElement="_6UV2QGwJEdq7X4sGURiZYA">
      <ownedComment xmi:id="_Rw8bg3CoEdq2Lvk-NX0TGA" annotatedElement="_Rw8bgnCoEdq2Lvk-NX0TGA">
        <body>A classifier may only specialize classifiers of a valid type.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R54VFHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.parents()->forAll(c | self.maySpecializeType(c))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SJ01r3CoEdq2Lvk-NX0TGA" name="maps_to_generalization_set" constrainedElement="_6UV2QGwJEdq7X4sGURiZYA">
      <ownedComment xmi:id="_SJ01sHCoEdq2Lvk-NX0TGA" annotatedElement="_SJ01r3CoEdq2Lvk-NX0TGA">
        <body>The Classifier that maps to a GeneralizationSet may neither be a specific nor a general Classifier in any of the Generalization relationships defined for that GeneralizationSet. In other words, a power type may not be an instance of itself nor may its instances also be its subclasses.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SJ01sXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_R54VFXCoEdq2Lvk-NX0TGA" general="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_RxGMgXCoEdq2Lvk-NX0TGA" general="_ynRtoGvtEdqG6fBIPwe-mw"/>
    <generalization xmi:id="_SS6gKnCoEdq2Lvk-NX0TGA" general="_SSebjnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_RxGMgHCoEdq2Lvk-NX0TGA" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_R6CGEHCoEdq2Lvk-NX0TGA" name="isAbstract" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_R6CGEXCoEdq2Lvk-NX0TGA" annotatedElement="_R6CGEHCoEdq2Lvk-NX0TGA">
        <body>If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.

</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R6CGEnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R6CGE3CoEdq2Lvk-NX0TGA" name="generalization" type="_C7AF4GwREdq14q0ETb1t3g" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SAJVIHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R6CGFHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R6CGFXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R6CGFnCoEdq2Lvk-NX0TGA" annotatedElement="_R6CGE3CoEdq2Lvk-NX0TGA">
        <body>Specifies the Generalization relationships for this Classifier. These Generalizations navigaten to more general classifiers in the generalization hierarchy.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6CGF3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6CGGHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RxPWdnCoEdq2Lvk-NX0TGA" name="feature" type="_RyIuUHCoEdq2Lvk-NX0TGA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_RylaUnCoEdq2Lvk-NX0TGA" association="_R2wIlHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RxPWd3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RxPWeHCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RxPWeXCoEdq2Lvk-NX0TGA" annotatedElement="_RxPWdnCoEdq2Lvk-NX0TGA">
        <body>Redefines the corresponding association in Abstractions.  Note that there may be members of the Classifier that are of the type Feature but are not included in this association, e.g. inherited features.</body>
      </ownedComment>
      <ownedComment xmi:id="_R6CGGXCoEdq2Lvk-NX0TGA" annotatedElement="_RxPWdnCoEdq2Lvk-NX0TGA">
        <body>Specifies each feature defined in the classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6CGGnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6CGG3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RxPWgHCoEdq2Lvk-NX0TGA" name="inheritedMember" type="_csVgUGvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" subsettedProperty="_RylaUnCoEdq2Lvk-NX0TGA" association="_R255mXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RxPWgXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RxPWgnCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RxPWg3CoEdq2Lvk-NX0TGA" annotatedElement="_RxPWgHCoEdq2Lvk-NX0TGA">
        <body>Specifies all elements inherited by this classifier from the general classifiers.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6CGHHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6CGHXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R6L3EnCoEdq2Lvk-NX0TGA" name="redefinedClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_SAvLAHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R6L3E3CoEdq2Lvk-NX0TGA" annotatedElement="_R6L3EnCoEdq2Lvk-NX0TGA">
        <body>References the Classifiers that are redefined by this Classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6L3FHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6L3FXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RxPWfHCoEdq2Lvk-NX0TGA" name="general" type="_6UV2QGwJEdq7X4sGURiZYA" isDerived="true" association="_R2wInXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R6L3FnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R6L3F3CoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RxPWfXCoEdq2Lvk-NX0TGA" annotatedElement="_RxPWfHCoEdq2Lvk-NX0TGA">
        <body>References the general classifier in the Generalization relationship.</body>
      </ownedComment>
      <ownedComment xmi:id="_R6L3GHCoEdq2Lvk-NX0TGA" annotatedElement="_RxPWfHCoEdq2Lvk-NX0TGA">
        <body>Specifies the general Classifiers for this Classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6L3GXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6L3GnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCOYzXCoEdq2Lvk-NX0TGA" name="ownedUseCase" type="_SCFPC3CoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SCYJ23CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SCOYznCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SCOYz3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SCOY0HCoEdq2Lvk-NX0TGA" annotatedElement="_SCOYzXCoEdq2Lvk-NX0TGA">
        <body>References the use cases owned by this classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCOY0XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCOY0nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCOY03CoEdq2Lvk-NX0TGA" name="useCase" type="_SCFPC3CoEdq2Lvk-NX0TGA" association="_SCYJ4HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SCOY1HCoEdq2Lvk-NX0TGA" annotatedElement="_SCOY03CoEdq2Lvk-NX0TGA">
        <body>The set of use cases for which this Classifier is the subject.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCOY1XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCOY1nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SCrEsXCoEdq2Lvk-NX0TGA" name="substitution" type="_SCh613CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA _SC01sHCoEdq2Lvk-NX0TGA" association="_SDHwpXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SCrEsnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SCrEs3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SCrEtHCoEdq2Lvk-NX0TGA" annotatedElement="_SCrEsXCoEdq2Lvk-NX0TGA">
        <body>References the substitutions that are owned by this Classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SCrEtXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SCrEtnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RxPWcHCoEdq2Lvk-NX0TGA" name="attribute" type="_Jp_1oGveEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_RxPWdnCoEdq2Lvk-NX0TGA" association="_R2KSwXCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RxPWcXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RxPWcnCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RxPWc3CoEdq2Lvk-NX0TGA" annotatedElement="_RxPWcHCoEdq2Lvk-NX0TGA">
        <body>Refers to all of the Properties that are direct (i.e. not inherited or imported) attributes of the classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SEBIgHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SEBIgXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHTGAHCoEdq2Lvk-NX0TGA" name="representation" type="_SHJVAHCoEdq2Lvk-NX0TGA" subsettedProperty="_SHTGBHCoEdq2Lvk-NX0TGA" association="_SHcP-XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SHTGAXCoEdq2Lvk-NX0TGA" annotatedElement="_SHTGAHCoEdq2Lvk-NX0TGA">
        <body>References a collaboration use which indicates the collaboration that represents this classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHTGAnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHTGA3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SHTGBHCoEdq2Lvk-NX0TGA" name="collaborationUse" type="_SHJVAHCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SHcP_nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SHTGBXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SHTGBnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SHTGB3CoEdq2Lvk-NX0TGA" annotatedElement="_SHTGBHCoEdq2Lvk-NX0TGA">
        <body>References the collaboration uses owned by the classifier.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SHTGCHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SHTGCXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SJ01snCoEdq2Lvk-NX0TGA" name="powertypeExtent" type="_SJ01mHCoEdq2Lvk-NX0TGA" association="_SJ-mmHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SJ01s3CoEdq2Lvk-NX0TGA" annotatedElement="_SJ01snCoEdq2Lvk-NX0TGA">
        <body>Designates the GeneralizationSet of which the associated Classifier is a power type.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SJ01tHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SJ01tXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_STERIHCoEdq2Lvk-NX0TGA" name="ownedSignature" type="_9keOQGvdEdq4DLWZOhbdEA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_STquHHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_STERIXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_STERInCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_STERI3CoEdq2Lvk-NX0TGA" annotatedElement="_STERIHCoEdq2Lvk-NX0TGA">
        <body>The optional template signature specifying the formal template parameters.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STERJHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STERJXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_STERJnCoEdq2Lvk-NX0TGA" name="templateParameter" type="_STERL3CoEdq2Lvk-NX0TGA" redefinedProperty="_SSnlM3CoEdq2Lvk-NX0TGA" association="_STquJ3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_STERJ3CoEdq2Lvk-NX0TGA" annotatedElement="_STERJnCoEdq2Lvk-NX0TGA">
        <body>The template parameter that exposes this element as a formal parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STERKHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STERKXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_AUaeIGwREdq14q0ETb1t3g" name="createGeneralization" type="_C7AF4GwREdq14q0ETb1t3g">
      <returnResult xmi:id="_FEilQGwREdq14q0ETb1t3g" type="_C7AF4GwREdq14q0ETb1t3g" direction="return"/>
      <ownedParameter xmi:id="_GLxTEGwREdq14q0ETb1t3g" name="general" type="_6UV2QGwJEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_KjT7EGwREdq14q0ETb1t3g" name="getAllAttributes" type="_Jp_1oGveEdq4DLWZOhbdEA">
      <returnResult xmi:id="_OXZQsGwREdq14q0ETb1t3g" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q1zM0WwREdq14q0ETb1t3g" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q1zM0GwREdq14q0ETb1t3g"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_XVsBYGwREdq14q0ETb1t3g" name="getOperations" type="_M4X2IGveEdq4DLWZOhbdEA">
      <returnResult xmi:id="_ZvULMGwREdq14q0ETb1t3g" type="_M4X2IGveEdq4DLWZOhbdEA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cOT9MWwREdq14q0ETb1t3g" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_cOT9MGwREdq14q0ETb1t3g"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_d5JuYGwREdq14q0ETb1t3g" name="getAllOperations" type="_M4X2IGveEdq4DLWZOhbdEA">
      <returnResult xmi:id="_d5JuYWwREdq14q0ETb1t3g" type="_M4X2IGveEdq4DLWZOhbdEA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_d5JuYmwREdq14q0ETb1t3g" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_d5JuY2wREdq14q0ETb1t3g"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_RxiRYHCoEdq2Lvk-NX0TGA" name="general" type="_6UV2QGwJEdq7X4sGURiZYA" isQuery="true" bodyCondition="_RxiRZHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RxiRYXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_RxiRYnCoEdq2Lvk-NX0TGA" operationName="getGenerals"/>
      </eAnnotations>
      <ownedComment xmi:id="_RxiRY3CoEdq2Lvk-NX0TGA" annotatedElement="_RxiRYHCoEdq2Lvk-NX0TGA">
        <body>The general classifiers are the classifiers referenced by the generalization relationships.</body>
      </ownedComment>
      <ownedRule xmi:id="_RxiRZHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RxiRYHCoEdq2Lvk-NX0TGA _RxPWfHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6L3G3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.parents()</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RxiRZnCoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6L3HHCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6L3HXCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_RxiRcHCoEdq2Lvk-NX0TGA" name="inheritedMember" type="_csVgUGvtEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RxiRdHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_RxiRcXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_RxiRcnCoEdq2Lvk-NX0TGA" operationName="getInheritedMembers"/>
      </eAnnotations>
      <ownedComment xmi:id="_RxiRc3CoEdq2Lvk-NX0TGA" annotatedElement="_RxiRcHCoEdq2Lvk-NX0TGA">
        <body>The inheritedMember association is derived by inheriting the inheritable members of the parents.</body>
      </ownedComment>
      <ownedRule xmi:id="_RxiRdHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RxiRcHCoEdq2Lvk-NX0TGA _RxPWgHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6L3HnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.inherit(self.parents()->collect(p | p.inheritableMembers(self))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RxiRdnCoEdq2Lvk-NX0TGA" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6L3H3CoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6L3IHCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_RxZHdnCoEdq2Lvk-NX0TGA" name="allFeatures" type="_RyIuUHCoEdq2Lvk-NX0TGA" isQuery="true" bodyCondition="_RxZHeHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RxZHd3CoEdq2Lvk-NX0TGA" annotatedElement="_RxZHdnCoEdq2Lvk-NX0TGA">
        <body>The query allFeatures() gives all of the features in the namespace of the classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature.</body>
      </ownedComment>
      <ownedRule xmi:id="_RxZHeHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RxZHdnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6L3IXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = member->select(oclIsKindOf(Feature))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RxZHenCoEdq2Lvk-NX0TGA" type="_RyIuUHCoEdq2Lvk-NX0TGA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6L3InCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6L3I3CoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_RxiRaXCoEdq2Lvk-NX0TGA" name="parents" type="_6UV2QGwJEdq7X4sGURiZYA" isQuery="true" bodyCondition="_RxiRa3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RxiRanCoEdq2Lvk-NX0TGA" annotatedElement="_RxiRaXCoEdq2Lvk-NX0TGA">
        <body>The query parents() gives all of the immediate ancestors of a generalized Classifier.</body>
      </ownedComment>
      <ownedRule xmi:id="_RxiRa3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RxiRaXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6VBAHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = generalization.general</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RxiRbXCoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6VBAXCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6VBAnCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_RxsCYHCoEdq2Lvk-NX0TGA" name="inheritableMembers" type="_csVgUGvtEdqG6fBIPwe-mw" isQuery="true" precondition="_RxsCYnCoEdq2Lvk-NX0TGA" postcondition="_RxsCYnCoEdq2Lvk-NX0TGA" bodyCondition="_RxsCZHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RxsCYXCoEdq2Lvk-NX0TGA" annotatedElement="_RxsCYHCoEdq2Lvk-NX0TGA">
        <body>The query inheritableMembers() gives all of the members of a classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply.</body>
      </ownedComment>
      <ownedRule xmi:id="_RxsCYnCoEdq2Lvk-NX0TGA" constrainedElement="_RxsCYHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6VBBHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>c.allParents()->includes(self)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_RxsCZHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RxsCYHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6VBBXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = member->select(m | c.hasVisibilityOf(m))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RxsCZnCoEdq2Lvk-NX0TGA" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6VBBnCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6VBB3CoEdq2Lvk-NX0TGA"/>
      </returnResult>
      <ownedParameter xmi:id="_RxsCaXCoEdq2Lvk-NX0TGA" name="c" type="_6UV2QGwJEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RxsCanCoEdq2Lvk-NX0TGA" name="hasVisibilityOf" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_RxsCbHCoEdq2Lvk-NX0TGA" bodyCondition="_RxsCbnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RxsCa3CoEdq2Lvk-NX0TGA" annotatedElement="_RxsCanCoEdq2Lvk-NX0TGA">
        <body>The query hasVisibilityOf() determines whether a named element is visible in the classifier. By default all are visible. It is only called when the argument is something owned by a parent.</body>
      </ownedComment>
      <ownedRule xmi:id="_RxsCbHCoEdq2Lvk-NX0TGA" constrainedElement="_RxsCanCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6eyAHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>self.allParents()->collect(c | c.member)->includes(n)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_RxsCbnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RxsCanCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6eyAXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = if (self.inheritedMember->includes(n)) then (n.visibility &lt;> #private) else true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RxsCcHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_RxsCcXCoEdq2Lvk-NX0TGA" name="n" type="_csVgUGvtEdqG6fBIPwe-mw"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RxZHcHCoEdq2Lvk-NX0TGA" name="conformsTo" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_R1tmxnCoEdq2Lvk-NX0TGA" bodyCondition="_RxZHcnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RxZHcXCoEdq2Lvk-NX0TGA" annotatedElement="_RxZHcHCoEdq2Lvk-NX0TGA">
        <body>The query conformsTo() gives true for a classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations.</body>
      </ownedComment>
      <ownedRule xmi:id="_RxZHcnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RxZHcHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6eyAnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = (self=other) or (self.allParents()->includes(other))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RxZHdHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_RxZHdXCoEdq2Lvk-NX0TGA" name="other" type="_6UV2QGwJEdq7X4sGURiZYA"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RxsCcnCoEdq2Lvk-NX0TGA" name="inherit" type="_csVgUGvtEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RxsCdHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RxsCc3CoEdq2Lvk-NX0TGA" annotatedElement="_RxsCcnCoEdq2Lvk-NX0TGA">
        <body>The inherit operation is overridden to exclude redefined properties.</body>
      </ownedComment>
      <ownedComment xmi:id="_R6eyA3CoEdq2Lvk-NX0TGA" annotatedElement="_RxsCcnCoEdq2Lvk-NX0TGA">
        <body>The query inherit() defines how to inherit a set of elements. Here the operation is defined to inherit them all. It is intended to be redefined in circumstances where inheritance is affected by redefinition.</body>
      </ownedComment>
      <ownedRule xmi:id="_RxsCdHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RxsCcnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6eyBHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = inhs</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RxsCdnCoEdq2Lvk-NX0TGA" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6eyB3CoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6eyCHCoEdq2Lvk-NX0TGA"/>
      </returnResult>
      <ownedParameter xmi:id="_RxsCeXCoEdq2Lvk-NX0TGA" name="inhs" type="_csVgUGvtEdqG6fBIPwe-mw">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6eyCXCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6eyCnCoEdq2Lvk-NX0TGA"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_RxsCfHCoEdq2Lvk-NX0TGA" name="maySpecializeType" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_RxsCfnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RxsCfXCoEdq2Lvk-NX0TGA" annotatedElement="_RxsCfHCoEdq2Lvk-NX0TGA">
        <body>The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints.</body>
      </ownedComment>
      <ownedRule xmi:id="_RxsCfnCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RxsCfHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6eyC3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.oclIsKindOf(c.oclType)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RxsCgHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_RxsCgXCoEdq2Lvk-NX0TGA" name="c" type="_6UV2QGwJEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RxiReXCoEdq2Lvk-NX0TGA" name="allParents" type="_6UV2QGwJEdq7X4sGURiZYA" isQuery="true" bodyCondition="_RxiRe3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RxiRenCoEdq2Lvk-NX0TGA" annotatedElement="_RxiReXCoEdq2Lvk-NX0TGA">
        <body>The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier.</body>
      </ownedComment>
      <ownedRule xmi:id="_RxiRe3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RxiReXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R6eyDHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.parents()->union(self.parents()->collect(p | p.allParents())</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RxiRfXCoEdq2Lvk-NX0TGA" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6eyDXCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R6eyDnCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_STERKnCoEdq2Lvk-NX0TGA" name="isTemplate" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_SSebpHCoEdq2Lvk-NX0TGA" bodyCondition="_STERLHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_STERK3CoEdq2Lvk-NX0TGA" annotatedElement="_STERKnCoEdq2Lvk-NX0TGA">
        <body>The query isTemplate() returns whether this templateable element is actually a template.</body>
      </ownedComment>
      <ownedRule xmi:id="_STERLHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_STERKnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_STERLXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = oclAsType(TemplatableElement).isTemplate() or general->exists(g | g.isTemplate())</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_STERLnCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_STERL3CoEdq2Lvk-NX0TGA" name="ClassifierTemplateParameter">
    <ownedComment xmi:id="_STERMHCoEdq2Lvk-NX0TGA" annotatedElement="_STERL3CoEdq2Lvk-NX0TGA">
      <body>ClassifierTemplateParameter is a template parameter where the parametered element is a Classifier in its capacity of being a kind of ParameterableElement.</body>
    </ownedComment>
    <ownedRule xmi:id="_STERMXCoEdq2Lvk-NX0TGA" name="has_constraining_classifier" constrainedElement="_STERL3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_STERMnCoEdq2Lvk-NX0TGA" annotatedElement="_STERMXCoEdq2Lvk-NX0TGA">
        <body>If &quot;allowSubstitutable&quot; is true, then there must be a constrainingClassifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_STERM3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>allowSubstitutable implies constrainingClassifier->notEmpty()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_STERNHCoEdq2Lvk-NX0TGA" general="_KxRzgGvuEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_STERNXCoEdq2Lvk-NX0TGA" name="allowSubstitutable" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_STERNnCoEdq2Lvk-NX0TGA" annotatedElement="_STERNXCoEdq2Lvk-NX0TGA">
        <body>Constrains the required relationship between an actual parameter and the parameteredElement for this formal parameter.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_STERN3CoEdq2Lvk-NX0TGA" value="true"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_STEROHCoEdq2Lvk-NX0TGA" name="parameteredElement" type="_6UV2QGwJEdq7X4sGURiZYA" redefinedProperty="_SSUqUXCoEdq2Lvk-NX0TGA" association="_STquJ3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_STEROXCoEdq2Lvk-NX0TGA" annotatedElement="_STEROHCoEdq2Lvk-NX0TGA">
        <body>The parameterable classifier for this template parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STEROnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STERO3CoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_STERPHCoEdq2Lvk-NX0TGA" name="defaultClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_STz4AnCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_STERPXCoEdq2Lvk-NX0TGA" annotatedElement="_STERPHCoEdq2Lvk-NX0TGA">
        <body>The classifier that is used by default if no argument is provided during template binding. If this property is empty, then there is no default.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STERPnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STERP3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_STERQHCoEdq2Lvk-NX0TGA" name="constrainingClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_STz4BHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_STERQXCoEdq2Lvk-NX0TGA" annotatedElement="_STERQHCoEdq2Lvk-NX0TGA">
        <body>The classifier that constrains the argument that can be used for the parameter. If the allowSubstitutable attribute is true, then any classifier that is compatible with this constraining classifier can be substituted, otherwise it must be either this classifier or one of its subclasses. If this property is empty, there are no constraints on the classifier that can be used as an argument.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STERQnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STERQ3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_9keOQGvdEdq4DLWZOhbdEA" name="RedefinableTemplateSignature">
    <ownedComment xmi:id="_STERRHCoEdq2Lvk-NX0TGA" annotatedElement="_9keOQGvdEdq4DLWZOhbdEA">
      <body>RedefinableTemplateSignature specializes both TemplateSignature and RedefinableElement in order to allow the addition of new formal template parameters in the context of a specializing template Classifier.</body>
    </ownedComment>
    <ownedRule xmi:id="_STERRXCoEdq2Lvk-NX0TGA" name="inherited_parameters" constrainedElement="_9keOQGvdEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_STERRnCoEdq2Lvk-NX0TGA" annotatedElement="_STERRXCoEdq2Lvk-NX0TGA">
        <body>The inherited parameters are the parameters of the extended template signature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_STERR3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>if extendedSignature->isEmpty() then Set{} else extendedSignature.parameter endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_STERSHCoEdq2Lvk-NX0TGA" general="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_STOCIHCoEdq2Lvk-NX0TGA" general="_SSK5TnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_STOCIXCoEdq2Lvk-NX0TGA" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_RzCGOXCoEdq2Lvk-NX0TGA" association="_STquHHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_STOCInCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_STOCI3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_STOCJHCoEdq2Lvk-NX0TGA" annotatedElement="_STOCIXCoEdq2Lvk-NX0TGA">
        <body>The classifier that owns this template signature.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STOCJXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STOCJnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_STOCJ3CoEdq2Lvk-NX0TGA" name="extendedSignature" type="_9keOQGvdEdq4DLWZOhbdEA" subsettedProperty="_RzCGP3CoEdq2Lvk-NX0TGA" association="_STquH3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_STOCKHCoEdq2Lvk-NX0TGA" annotatedElement="_STOCJ3CoEdq2Lvk-NX0TGA">
        <body>The template signature that is extended by this template signature.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STOCKXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STOCKnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_STOCK3CoEdq2Lvk-NX0TGA" name="inheritedParameter" type="_KxRzgGvuEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" subsettedProperty="_SSK5VHCoEdq2Lvk-NX0TGA" association="_STquJHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_STOCLHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_STOCLXCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_STOCLnCoEdq2Lvk-NX0TGA" annotatedElement="_STOCK3CoEdq2Lvk-NX0TGA">
        <body>The formal template parameters of the extendedSignature.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STOCL3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STOCMHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_FvJUYFYLEdqrn7iZ0eqieg" name="getInheritedParameters" visibility="protected" type="_KxRzgGvuEdqG6fBIPwe-mw">
      <returnResult xmi:id="_Jbx-MFYLEdqrn7iZ0eqieg" type="_KxRzgGvuEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LQdA0VYLEdqrn7iZ0eqieg" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LQdA0FYLEdqrn7iZ0eqieg"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_STOCMXCoEdq2Lvk-NX0TGA" name="isConsistentWith" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_STOCM3CoEdq2Lvk-NX0TGA" redefinedOperation="_RzCGRXCoEdq2Lvk-NX0TGA" bodyCondition="_STOCNXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_STOCMnCoEdq2Lvk-NX0TGA" annotatedElement="_STOCMXCoEdq2Lvk-NX0TGA">
        <body>The query isConsistentWith() specifies, for any two RedefinableTemplateSignatures in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining template signature is always consistent with a redefined template signature, since redefinition only adds new formal parameters.</body>
      </ownedComment>
      <ownedRule xmi:id="_STOCM3CoEdq2Lvk-NX0TGA" constrainedElement="_STOCMXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_STOCNHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>redefinee.isRedefinitionContextValid(self)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_STOCNXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_STOCMXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_STOCNnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = redefinee.oclIsKindOf(RedefineableTemplateSignature)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_STOCN3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_STOCOHCoEdq2Lvk-NX0TGA" name="redefinee" type="_RzCGMHCoEdq2Lvk-NX0TGA"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_SD3XnHCoEdq2Lvk-NX0TGA" name="ConnectableElement" isAbstract="true">
    <ownedComment xmi:id="_SD3XnXCoEdq2Lvk-NX0TGA" annotatedElement="_SD3XnHCoEdq2Lvk-NX0TGA">
      <body>A ConnectableElement is an abstract metaclass representing a set of instances that play roles of a classifier. Connectable elements may be joined by attached connectors and specify configurations of linked instances to be created within an instance of the containing classifier.</body>
    </ownedComment>
    <ownedComment xmi:id="_STOCOXCoEdq2Lvk-NX0TGA" annotatedElement="_SD3XnHCoEdq2Lvk-NX0TGA">
      <body>ConnectableElement is the connectable element of a ConnectableElementTemplateParameter.

The ConnectableElements attached as role to each ConnectorEnd owned by a Connector must be roles of the classifier that owned the Connector, or they must be ports of such roles. 

</body>
    </ownedComment>
    <generalization xmi:id="_SD3XnnCoEdq2Lvk-NX0TGA" general="_RzLQIHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_STOCOnCoEdq2Lvk-NX0TGA" general="_SSnlMHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SD3Xn3CoEdq2Lvk-NX0TGA" name="end" type="_aOgw0GveEdq4DLWZOhbdEA" isOrdered="true" association="_SEK5hHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SD3XoHCoEdq2Lvk-NX0TGA" annotatedElement="_SD3Xn3CoEdq2Lvk-NX0TGA">
        <body>Denotes a connector that attaches to this connectable element.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SD3XoXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SD3XonCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_STOCO3CoEdq2Lvk-NX0TGA" name="templateParameter" type="_STOCP3CoEdq2Lvk-NX0TGA" redefinedProperty="_SSnlM3CoEdq2Lvk-NX0TGA" association="_STz4AHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_STOCPHCoEdq2Lvk-NX0TGA" annotatedElement="_STOCO3CoEdq2Lvk-NX0TGA">
        <body>The ConnectableElementTemplateParameter for this ConnectableElement parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STOCPXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STOCPnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_STOCP3CoEdq2Lvk-NX0TGA" name="ConnectableElementTemplateParameter">
    <ownedComment xmi:id="_STOCQHCoEdq2Lvk-NX0TGA" annotatedElement="_STOCP3CoEdq2Lvk-NX0TGA">
      <body>ConnectableElementTemplateParameter is a template parameter where the parametered element is a ConnectableElement.</body>
    </ownedComment>
    <generalization xmi:id="_STOCQXCoEdq2Lvk-NX0TGA" general="_KxRzgGvuEdqG6fBIPwe-mw"/>
    <ownedAttribute xmi:id="_STOCQnCoEdq2Lvk-NX0TGA" name="parameteredElement" type="_SD3XnHCoEdq2Lvk-NX0TGA" redefinedProperty="_SSUqUXCoEdq2Lvk-NX0TGA" association="_STz4AHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_STOCQ3CoEdq2Lvk-NX0TGA" annotatedElement="_STOCQnCoEdq2Lvk-NX0TGA">
        <body>The ConnectableElement for this template parameter.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STOCRHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STOCRXCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STXMEXCoEdq2Lvk-NX0TGA" name="A_parameter_templateSignature" memberEnd="_SSK5VHCoEdq2Lvk-NX0TGA _STXMEnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_STXMEnCoEdq2Lvk-NX0TGA" type="_SSK5TnCoEdq2Lvk-NX0TGA" association="_STXMEXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STXME3CoEdq2Lvk-NX0TGA" name="A_ownedParameter_signature" memberEnd="_SSUqS3CoEdq2Lvk-NX0TGA _SSK5WHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STXMFHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_STXMFXCoEdq2Lvk-NX0TGA" general="_STXMEXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STXMFnCoEdq2Lvk-NX0TGA" name="A_boundElement_templateBinding" memberEnd="_SSebZHCoEdq2Lvk-NX0TGA _SSebkXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STXMF3CoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_STXMGHCoEdq2Lvk-NX0TGA" general="_R2m-r3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STXMGXCoEdq2Lvk-NX0TGA" name="A_formal_templateParameterSubstitution" memberEnd="_SSebenCoEdq2Lvk-NX0TGA _STXMGnCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_STXMGnCoEdq2Lvk-NX0TGA" type="_SSebdHCoEdq2Lvk-NX0TGA" association="_STXMGXCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STXMG3CoEdq2Lvk-NX0TGA" name="A_signature_templateBinding" memberEnd="_SSebanCoEdq2Lvk-NX0TGA _STXMHXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STXMHHCoEdq2Lvk-NX0TGA" general="_R2m-snCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_STXMHXCoEdq2Lvk-NX0TGA" type="_SSebW3CoEdq2Lvk-NX0TGA" redefinedProperty="_R2m-tHCoEdq2Lvk-NX0TGA" association="_STXMG3CoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STg9EHCoEdq2Lvk-NX0TGA" name="A_parameterSubstitution_templateBinding" memberEnd="_SSebbnCoEdq2Lvk-NX0TGA _SSebfnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STg9EXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STg9EnCoEdq2Lvk-NX0TGA" name="A_actual_templateParameterSubstitution" memberEnd="_SSebhHCoEdq2Lvk-NX0TGA _STg9E3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_STg9E3CoEdq2Lvk-NX0TGA" type="_SSebdHCoEdq2Lvk-NX0TGA" association="_STg9EnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STg9FHCoEdq2Lvk-NX0TGA" name="A_parameteredElement_templateParameter" memberEnd="_SSUqUXCoEdq2Lvk-NX0TGA _SSnlM3CoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_STg9FXCoEdq2Lvk-NX0TGA" name="A_subExpression_owningExpression" memberEnd="_SSebSnCoEdq2Lvk-NX0TGA _SSebUHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STg9FnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STg9F3CoEdq2Lvk-NX0TGA" name="A_ownedTemplateSignature_template" memberEnd="_SSK5XnCoEdq2Lvk-NX0TGA _SSebl3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STg9GHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STg9GXCoEdq2Lvk-NX0TGA" name="A_ownedParameteredElement_owningTemplateParameter" memberEnd="_SSUqVXCoEdq2Lvk-NX0TGA _SSnlN3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STg9GnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_STg9G3CoEdq2Lvk-NX0TGA" general="_STg9FHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STg9HHCoEdq2Lvk-NX0TGA" name="A_default_templateParameter" memberEnd="_SSUqW3CoEdq2Lvk-NX0TGA _STg9HXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_STg9HXCoEdq2Lvk-NX0TGA" type="_KxRzgGvuEdqG6fBIPwe-mw" association="_STg9HHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STquEHCoEdq2Lvk-NX0TGA" name="A_ownedDefault_templateParameter" memberEnd="_SSUqX3CoEdq2Lvk-NX0TGA _STquE3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STquEXCoEdq2Lvk-NX0TGA" general="_STg9HHCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_STquEnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_STquE3CoEdq2Lvk-NX0TGA" type="_KxRzgGvuEdqG6fBIPwe-mw" association="_STquEHCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STquFHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STquFXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STquFnCoEdq2Lvk-NX0TGA" name="A_ownedActual_templateParameterSubstitution" memberEnd="_STquGXCoEdq2Lvk-NX0TGA _SSebiHCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STquF3CoEdq2Lvk-NX0TGA" general="_STg9EnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_STquGHCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_STquGXCoEdq2Lvk-NX0TGA" type="_SSebdHCoEdq2Lvk-NX0TGA" association="_STquFnCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STquGnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STquG3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STquHHCoEdq2Lvk-NX0TGA" name="A_ownedSignature_classifier" memberEnd="_STERIHCoEdq2Lvk-NX0TGA _STOCIXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STquHXCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_STquHnCoEdq2Lvk-NX0TGA" general="_R2wIkHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STquH3CoEdq2Lvk-NX0TGA" name="A_extendedSignature_redefinableTemplateSignature" memberEnd="_STOCJ3CoEdq2Lvk-NX0TGA _STquIXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STquIHCoEdq2Lvk-NX0TGA" general="_R2wIknCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_STquIXCoEdq2Lvk-NX0TGA" type="_9keOQGvdEdq4DLWZOhbdEA" association="_STquH3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STquInCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STquI3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STquJHCoEdq2Lvk-NX0TGA" name="A_inheritedParameter_redefinableTemplateSignature" memberEnd="_STOCK3CoEdq2Lvk-NX0TGA _STquJnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STquJXCoEdq2Lvk-NX0TGA" general="_STXMEXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_STquJnCoEdq2Lvk-NX0TGA" type="_9keOQGvdEdq4DLWZOhbdEA" redefinedProperty="_STXMEnCoEdq2Lvk-NX0TGA" association="_STquJHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STquJ3CoEdq2Lvk-NX0TGA" name="A_templateParameter_parameteredElement" memberEnd="_STEROHCoEdq2Lvk-NX0TGA _STERJnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STquKHCoEdq2Lvk-NX0TGA" general="_STg9FHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STquKXCoEdq2Lvk-NX0TGA" name="A_nameExpression_namedElement" memberEnd="_SSUqQHCoEdq2Lvk-NX0TGA _STquK3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STquKnCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_STquK3CoEdq2Lvk-NX0TGA" type="_csVgUGvtEdqG6fBIPwe-mw" association="_STquKXCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STquLHCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STquLXCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STquLnCoEdq2Lvk-NX0TGA" name="A_templateParameter_parameteredElement" memberEnd="_SSxWO3CoEdq2Lvk-NX0TGA _SS6gI3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STquL3CoEdq2Lvk-NX0TGA" general="_STg9FHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STz4AHCoEdq2Lvk-NX0TGA" name="A_templateParameter_parameteredElement" memberEnd="_STOCO3CoEdq2Lvk-NX0TGA _STOCQnCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_STz4AXCoEdq2Lvk-NX0TGA" general="_STg9FHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STz4AnCoEdq2Lvk-NX0TGA" name="A_defaultClassifier_classifierTemplateParameter" memberEnd="_STERPHCoEdq2Lvk-NX0TGA _STz4A3CoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_STz4A3CoEdq2Lvk-NX0TGA" type="_STERL3CoEdq2Lvk-NX0TGA" association="_STz4AnCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_STz4BHCoEdq2Lvk-NX0TGA" name="A_constrainingClassifier_classifierTemplateParameter" memberEnd="_STERQHCoEdq2Lvk-NX0TGA _STz4BXCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_STz4BXCoEdq2Lvk-NX0TGA" type="_STERL3CoEdq2Lvk-NX0TGA" association="_STz4BHCoEdq2Lvk-NX0TGA"/>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_A7vDAGv0Edq7X4sGURiZYA" name="Stereotype">
    <ownedComment xmi:id="_STz4BnCoEdq2Lvk-NX0TGA" annotatedElement="_A7vDAGv0Edq7X4sGURiZYA">
      <body>Stereotype is a kind of Class that extends Classes through Extensions. Just like a class, a stereotype may have properties, which may be referred to as tag definitions. When a stereotype is applied to a model element, the values of the properties may be referred to as tagged values. Also, stereotype names should not clash with keyword names for the extended model element.</body>
    </ownedComment>
    <ownedRule xmi:id="_STz4B3CoEdq2Lvk-NX0TGA" name="name_not_clash" constrainedElement="_A7vDAGv0Edq7X4sGURiZYA">
      <ownedComment xmi:id="_STz4CHCoEdq2Lvk-NX0TGA" annotatedElement="_STz4B3CoEdq2Lvk-NX0TGA">
        <body>Stereotype names should not clash with keyword names for the extended model element.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_STz4CXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_STz4CnCoEdq2Lvk-NX0TGA" name="generalize" constrainedElement="_A7vDAGv0Edq7X4sGURiZYA">
      <ownedComment xmi:id="_STz4C3CoEdq2Lvk-NX0TGA" annotatedElement="_STz4CnCoEdq2Lvk-NX0TGA">
        <body>A Stereotype may only generalize or specialize another Stereotype.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_STz4DHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>generalization.general->forAll(e |e.oclIsKindOf(Stereotype)) and generalization.specific->forAll(e | e.oclIsKindOf(Stereotype)) </body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_STz4DXCoEdq2Lvk-NX0TGA" general="_00owUGvdEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_STz4DnCoEdq2Lvk-NX0TGA" name="icon" type="_0VlHsGvbEdq4DLWZOhbdEA" association="_SU3A4HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_STz4D3CoEdq2Lvk-NX0TGA" annotatedElement="_STz4DnCoEdq2Lvk-NX0TGA">
        <body>Stereotype can change the graphical appearance of the extended model element by using attached icons. When this association is not null, it references the location of the icon content to be displayed within diagrams presenting the extended model elements.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_STz4EHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_STz4EXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_FJce8GwHEdq7X4sGURiZYA" name="createExtension" type="_skHGwGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_IziyIGwHEdq7X4sGURiZYA" type="_skHGwGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_cQPbYGwHEdq7X4sGURiZYA" name="metaclass" type="_00owUGvdEdq4DLWZOhbdEA" effect="read"/>
      <ownedParameter xmi:id="_Jc0YoGwHEdq7X4sGURiZYA" name="isRequired" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_X7-EcGv0Edq7X4sGURiZYA" name="getProfile" type="__pew8GvzEdq7X4sGURiZYA">
      <returnResult xmi:id="_Z7OmcGv0Edq7X4sGURiZYA" type="__pew8GvzEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_D7gsMWwHEdq7X4sGURiZYA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_D7gsMGwHEdq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_im40YGwHEdq7X4sGURiZYA" name="getKeyword" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_lZHEYGwHEdq7X4sGURiZYA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_n7YM0GwHEdq7X4sGURiZYA" name="getKeyword" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_n7YM0WwHEdq7X4sGURiZYA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_rn3FoGwHEdq7X4sGURiZYA" name="isLocalized" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_02jCwGwHEdq7X4sGURiZYA" name="getExtendedMetaclasses" type="_00owUGvdEdq4DLWZOhbdEA">
      <returnResult xmi:id="_25hnIGwHEdq7X4sGURiZYA" type="_00owUGvdEdq4DLWZOhbdEA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5lVtIWwHEdq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5lVtIGwHEdq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_7T5gsGwHEdq7X4sGURiZYA" name="getAllExtendedMetaclasses" type="_00owUGvdEdq4DLWZOhbdEA">
      <returnResult xmi:id="_7T5gsWwHEdq7X4sGURiZYA" type="_00owUGvdEdq4DLWZOhbdEA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7T5gsmwHEdq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7T5gs2wHEdq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="__pew8GvzEdq7X4sGURiZYA" name="Profile">
    <ownedComment xmi:id="_STz4EnCoEdq2Lvk-NX0TGA" annotatedElement="__pew8GvzEdq7X4sGURiZYA">
      <body>A Profile is a kind of Package that extends a reference metamodel. The primary extension construct is the Stereotype, which are defined as part of Profiles.



A profile introduces several constraints, or restrictions, on ordinary metamodeling through the use of the metaclasses defined in this package.



A profile is a restricted form of a metamodel that must always be related to a reference metamodel, such as UML, as described below. A profile cannot be used without its reference metamodel, and defines a limited capability to extendmetaclasses of the reference metamodel. The extensions are defined as stereotypes that apply to existing metaclasses.</body>
    </ownedComment>
    <ownedRule xmi:id="_ST9pAHCoEdq2Lvk-NX0TGA" name="metaclass_reference_not_specialized" constrainedElement="__pew8GvzEdq7X4sGURiZYA">
      <ownedComment xmi:id="_ST9pAXCoEdq2Lvk-NX0TGA" annotatedElement="_ST9pAHCoEdq2Lvk-NX0TGA">
        <body>An element imported as a metaclassReference is not specialized or generalized in a Profile.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_ST9pAnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.metaclassReference.importedElement->

  select(c | c.oclIsKindOf(Classifier) and

    (c.generalization.namespace = self or

      (c.specialization.namespace = self) )->isEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_ST9pA3CoEdq2Lvk-NX0TGA" name="references_same_metamodel" constrainedElement="__pew8GvzEdq7X4sGURiZYA">
      <ownedComment xmi:id="_ST9pBHCoEdq2Lvk-NX0TGA" annotatedElement="_ST9pA3CoEdq2Lvk-NX0TGA">
        <body>All elements imported either as metaclassReferences or through metamodelReferences are members of the same base reference metamodel.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_ST9pBXCoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.metamodelReference.importedPackage.elementImport.importedElement.allOwningPackages())->

  union(self.metaclassReference.importedElement.allOwningPackages() )->notEmpty()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_ST9pBnCoEdq2Lvk-NX0TGA" general="_-cvRAGvzEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_ST9pB3CoEdq2Lvk-NX0TGA" name="ownedStereotype" type="_A7vDAGv0Edq7X4sGURiZYA" isDerived="true" subsettedProperty="_R1HJ23CoEdq2Lvk-NX0TGA" association="_SUtP5XCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_ST9pCHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_ST9pCXCoEdq2Lvk-NX0TGA"/>
      </eAnnotations>
      <ownedComment xmi:id="_ST9pCnCoEdq2Lvk-NX0TGA" annotatedElement="_ST9pB3CoEdq2Lvk-NX0TGA">
        <body>References the Stereotypes that are owned by the Profile.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ST9pC3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ST9pDHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_ST9pDXCoEdq2Lvk-NX0TGA" name="metaclassReference" type="_RPl78GwIEdq7X4sGURiZYA" subsettedProperty="_RylaQHCoEdq2Lvk-NX0TGA" association="_SUtP-nCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_ST9pDnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_ST9pD3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_ST9pEHCoEdq2Lvk-NX0TGA" annotatedElement="_ST9pDXCoEdq2Lvk-NX0TGA">
        <body>References a metaclass that may be extended.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ST9pEXCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ST9pEnCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_ST9pE3CoEdq2Lvk-NX0TGA" name="metamodelReference" type="_SnNPIGwIEdq7X4sGURiZYA" subsettedProperty="_RylaRnCoEdq2Lvk-NX0TGA" association="_SUtP_3CoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_ST9pFHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_ST9pFXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_ST9pFnCoEdq2Lvk-NX0TGA" annotatedElement="_ST9pE3CoEdq2Lvk-NX0TGA">
        <body>References a package containing (directly or indirectly) metaclasses that may be extended.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ST9pF3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ST9pGHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_2QKPIGwJEdq7X4sGURiZYA" name="create">
      <returnResult xmi:id="_9o-PwGwJEdq7X4sGURiZYA" direction="return">
        <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
      </returnResult>
      <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
      <ownedParameter xmi:id="_-se7MGwJEdq7X4sGURiZYA" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_QZ-tIGwJEdq7X4sGURiZYA" name="createMetaclassReference" type="_RPl78GwIEdq7X4sGURiZYA">
      <returnResult xmi:id="_TdCOcGwJEdq7X4sGURiZYA" type="_RPl78GwIEdq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_WJJPYGwJEdq7X4sGURiZYA" name="metaclass" type="_00owUGvdEdq4DLWZOhbdEA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_enGTIGwJEdq7X4sGURiZYA" name="createMetamodelReference" type="_SnNPIGwIEdq7X4sGURiZYA">
      <returnResult xmi:id="_hN_c4GwJEdq7X4sGURiZYA" type="_SnNPIGwIEdq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_lRa2EGwJEdq7X4sGURiZYA" name="metamodel" type="_NVhqMGv0Edq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_senckGwJEdq7X4sGURiZYA" name="createOwnedStereotype" type="_A7vDAGv0Edq7X4sGURiZYA">
      <returnResult xmi:id="_upCswGwJEdq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_xOvjsGwJEdq7X4sGURiZYA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_vJOosGwJEdq7X4sGURiZYA" name="isAbstract" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_8ACYgGwIEdq7X4sGURiZYA" name="isDefined" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_E3LYUGwJEdq7X4sGURiZYA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_GdjgQGwJEdq7X4sGURiZYA" name="define">
      <returnResult xmi:id="_JO2EsGwgEdqHKKVoxc0dlA" direction="return">
        <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53905C3F7000A"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_bctjUWwgEdqHKKVoxc0dlA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_bctjUGwgEdqHKKVoxc0dlA"/>
      </returnResult>
      <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53905C3F7000A"/>
    </ownedOperation>
    <ownedOperation xmi:id="_LLkQEGwgEdqHKKVoxc0dlA" name="getDefinition">
      <returnResult xmi:id="_P0QScGwgEdqHKKVoxc0dlA" direction="return">
        <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53905C3F7000A"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dKYmEWwgEdqHKKVoxc0dlA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_dKYmEGwgEdqHKKVoxc0dlA"/>
      </returnResult>
      <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53905C3F7000A"/>
    </ownedOperation>
    <ownedOperation xmi:id="_nFBqQGwgEdqHKKVoxc0dlA" name="getDefinition">
      <returnResult xmi:id="_nFBqQWwgEdqHKKVoxc0dlA" direction="return">
        <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53B65CCC600FE"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nFBqQmwgEdqHKKVoxc0dlA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nFBqQ2wgEdqHKKVoxc0dlA"/>
      </returnResult>
      <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53B65CCC600FE"/>
      <ownedParameter xmi:id="_pPTwgGwgEdqHKKVoxc0dlA" name="namedElement" type="_csVgUGvtEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_LBK1YGwJEdq7X4sGURiZYA" name="getReferencedMetaclasses" type="_00owUGvdEdq4DLWZOhbdEA">
      <returnResult xmi:id="_Ns-UUGwJEdq7X4sGURiZYA" type="_00owUGvdEdq4DLWZOhbdEA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_PU_bAWwJEdq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_PU_bAGwJEdq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_Y9mUAGwJEdq7X4sGURiZYA" name="getReferencedMetamodels" type="_NVhqMGv0Edq7X4sGURiZYA">
      <returnResult xmi:id="_berJoGwJEdq7X4sGURiZYA" type="_NVhqMGv0Edq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dSdbcWwJEdq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_dSdbcGwJEdq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_ST9pGXCoEdq2Lvk-NX0TGA" name="allOwningPackages" type="_-cvRAGvzEdq7X4sGURiZYA" isQuery="true" bodyCondition="_ST9pG3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_ST9pGnCoEdq2Lvk-NX0TGA" annotatedElement="_ST9pGXCoEdq2Lvk-NX0TGA">
        <body>The query allOwningPackages() returns all the directly or indirectly owning packages.</body>
      </ownedComment>
      <ownedRule xmi:id="_ST9pG3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_ST9pGXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ST9pHHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = self.namespace->select(p | p.oclIsKindOf(Package))->union(p.allOwningPackages())</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_ST9pHXCoEdq2Lvk-NX0TGA" type="_-cvRAGvzEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ST9pHnCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ST9pH3CoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_-cvRAGvzEdq7X4sGURiZYA" name="Package">
    <ownedComment xmi:id="_R1HJ1XCoEdq2Lvk-NX0TGA" annotatedElement="_-cvRAGvzEdq7X4sGURiZYA">
      <body>A package is a namespace for its members, and may contain other packages. Only packageable elements can be owned members of a package. By virtue of being a namespace, a package can import either individual members of other packages, or all the members of other packages. In addition a package can be merged with other packages.</body>
    </ownedComment>
    <ownedComment xmi:id="_R7OZEnCoEdq2Lvk-NX0TGA" annotatedElement="_-cvRAGvzEdq7X4sGURiZYA">
      <body>A package is a namespace for its members, and may contain other packages. Only packageable elements can be owned members of a package. By virtue of being a namespace, a package can import either individual members of other packages, or all the members of other packages.

In addition a package can be merged with other packages.

</body>
    </ownedComment>
    <ownedComment xmi:id="_STOCRnCoEdq2Lvk-NX0TGA" annotatedElement="_-cvRAGvzEdq7X4sGURiZYA">
      <body>Package specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter.</body>
    </ownedComment>
    <ownedComment xmi:id="_ST9pIHCoEdq2Lvk-NX0TGA" annotatedElement="_-cvRAGvzEdq7X4sGURiZYA">
      <body>A Package can have one or more ProfileApplications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.</body>
    </ownedComment>
    <ownedRule xmi:id="_R1HJ1nCoEdq2Lvk-NX0TGA" name="elements_public_or_private" constrainedElement="_-cvRAGvzEdq7X4sGURiZYA">
      <ownedComment xmi:id="_R1HJ13CoEdq2Lvk-NX0TGA" annotatedElement="_R1HJ1nCoEdq2Lvk-NX0TGA">
        <body>If an element that is owned by a package has visibility, it is public or private.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R7OZE3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.ownedElements->forAll(e | e.visibility->notEmpty() implies e.visbility = #public or e.visibility = #private)</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_R1HJ2XCoEdq2Lvk-NX0TGA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
    <generalization xmi:id="_STXMEHCoEdq2Lvk-NX0TGA" general="_SSebjnCoEdq2Lvk-NX0TGA"/>
    <generalization xmi:id="_R1HJ2nCoEdq2Lvk-NX0TGA" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_R1Q64nCoEdq2Lvk-NX0TGA" name="packageMerge" type="_R1ar4nCoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_R2m-pHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R1Q643CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R1Q65HCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R1Q65XCoEdq2Lvk-NX0TGA" annotatedElement="_R1Q64nCoEdq2Lvk-NX0TGA">
        <body>References the PackageMerges that are owned by this Package.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7YJ4HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7YJ4XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R1HJ23CoEdq2Lvk-NX0TGA" name="packagedElement" type="_jKxnwGwLEdq7X4sGURiZYA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_R2dNsXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R1HJ3HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R1HJ3XCoEdq2Lvk-NX0TGA"/>
      </eAnnotations>
      <ownedComment xmi:id="_R1HJ3nCoEdq2Lvk-NX0TGA" annotatedElement="_R1HJ23CoEdq2Lvk-NX0TGA">
        <body>Specifies the packageable elements that are owned by this Package.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7YJ4nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7YJ43CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R1Q60HCoEdq2Lvk-NX0TGA" name="ownedType" type="_ynRtoGvtEdqG6fBIPwe-mw" isDerived="true" subsettedProperty="_R1HJ23CoEdq2Lvk-NX0TGA" association="_R2dNtnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R1Q60XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R1Q60nCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R1Q603CoEdq2Lvk-NX0TGA" annotatedElement="_R1Q60HCoEdq2Lvk-NX0TGA">
        <body>References the packaged elements that are Types.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7YJ5HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7hT0HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R1Q61nCoEdq2Lvk-NX0TGA" name="nestedPackage" type="_-cvRAGvzEdq7X4sGURiZYA" isDerived="true" subsettedProperty="_R1HJ23CoEdq2Lvk-NX0TGA" association="_R2m-oHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R1Q613CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R1Q62HCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_R1Q62XCoEdq2Lvk-NX0TGA" annotatedElement="_R1Q61nCoEdq2Lvk-NX0TGA">
        <body>References the packaged elements that are Packages.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7hT0XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7hT0nCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R1Q63HCoEdq2Lvk-NX0TGA" name="nestingPackage" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_R13XzHCoEdq2Lvk-NX0TGA" association="_R2m-oHCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R1Q63XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R1Q63nCoEdq2Lvk-NX0TGA"/>
      </eAnnotations>
      <ownedComment xmi:id="_R1Q633CoEdq2Lvk-NX0TGA" annotatedElement="_R1Q63HCoEdq2Lvk-NX0TGA">
        <body>References the owning package of a package.</body>
      </ownedComment>
      <ownedComment xmi:id="_R7hT03CoEdq2Lvk-NX0TGA" annotatedElement="_R1Q63HCoEdq2Lvk-NX0TGA">
        <body>References the Package that owns this Package.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7hT1HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7hT1XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SUGy8HCoEdq2Lvk-NX0TGA" name="profileApplication" type="_uY5yQGv5Edq7X4sGURiZYA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_SUtP4HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SUGy8XCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SUGy8nCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SUGy83CoEdq2Lvk-NX0TGA" annotatedElement="_SUGy8HCoEdq2Lvk-NX0TGA">
        <body>References the ProfileApplications that indicate which profiles have been applied to the Package.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUGy9HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUGy9XCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_sUplEGwFEdq7X4sGURiZYA" name="createNestedPackage" type="_-cvRAGvzEdq7X4sGURiZYA">
      <returnResult xmi:id="_vRvoUGwFEdq7X4sGURiZYA" type="_-cvRAGvzEdq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_v6lJ8GwFEdq7X4sGURiZYA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_4JyAAGwFEdq7X4sGURiZYA" name="createOwnedClass" type="_00owUGvdEdq4DLWZOhbdEA">
      <returnResult xmi:id="_94M7YGwFEdq7X4sGURiZYA" type="_00owUGvdEdq4DLWZOhbdEA" direction="return"/>
      <ownedParameter xmi:id="_BGSA8GwGEdq7X4sGURiZYA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_-i0lsGwFEdq7X4sGURiZYA" name="isAbstract" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_Fqo88GwGEdq7X4sGURiZYA" name="createOwnedEnumeration" type="_I6N3UGwGEdq7X4sGURiZYA">
      <returnResult xmi:id="_MMBmUGwGEdq7X4sGURiZYA" type="_I6N3UGwGEdq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_Mz9wEGwGEdq7X4sGURiZYA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SSSZ8GwGEdq7X4sGURiZYA" name="createOwnedPrimitiveType" type="_V6vuYGwGEdq7X4sGURiZYA">
      <returnResult xmi:id="_Y8BHAGwGEdq7X4sGURiZYA" type="_V6vuYGwGEdq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_ZY7FcGwGEdq7X4sGURiZYA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_z4Q98Gv5Edq7X4sGURiZYA" name="isProfileApplied" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_19CSEGv5Edq7X4sGURiZYA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_2TitkGv5Edq7X4sGURiZYA" name="profile" type="__pew8GvzEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_r--GcGv5Edq7X4sGURiZYA" name="applyProfile" type="_uY5yQGv5Edq7X4sGURiZYA">
      <returnResult xmi:id="_w2ZvcGv5Edq7X4sGURiZYA" type="_uY5yQGv5Edq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_xMwZ8Gv5Edq7X4sGURiZYA" name="profile" type="__pew8GvzEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_448CgGv5Edq7X4sGURiZYA" name="unapplyProfile" type="_uY5yQGv5Edq7X4sGURiZYA">
      <returnResult xmi:id="_6yryYGv5Edq7X4sGURiZYA" type="_uY5yQGv5Edq7X4sGURiZYA" direction="return"/>
      <ownedParameter xmi:id="_7KhqoGv5Edq7X4sGURiZYA" name="profile" type="__pew8GvzEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_ZCKeMGv5Edq7X4sGURiZYA" name="getAppliedProfiles" type="__pew8GvzEdq7X4sGURiZYA">
      <returnResult xmi:id="_cExTkGv5Edq7X4sGURiZYA" type="__pew8GvzEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_eExccWv5Edq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eExccGv5Edq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_kCeTgGwFEdq7X4sGURiZYA" name="getAllAppliedProfiles" type="__pew8GvzEdq7X4sGURiZYA">
      <returnResult xmi:id="_kCeTgWwFEdq7X4sGURiZYA" type="__pew8GvzEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kCeTgmwFEdq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kCeTg2wFEdq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_tasT4G11EdqniMBnIUw7ig" name="getAppliedProfile" type="__pew8GvzEdq7X4sGURiZYA">
      <returnResult xmi:id="_wSH0AG11EdqniMBnIUw7ig" type="__pew8GvzEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yo7TUW11EdqniMBnIUw7ig" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yo7TUG11EdqniMBnIUw7ig"/>
      </returnResult>
      <ownedParameter xmi:id="_2bXqMG11EdqniMBnIUw7ig" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_7MPYMG11EdqniMBnIUw7ig" name="getAppliedProfile" type="__pew8GvzEdq7X4sGURiZYA">
      <returnResult xmi:id="_7MPYMW11EdqniMBnIUw7ig" type="__pew8GvzEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7MPYMm11EdqniMBnIUw7ig" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7MPYM211EdqniMBnIUw7ig"/>
      </returnResult>
      <ownedParameter xmi:id="_7MPYNG11EdqniMBnIUw7ig" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_8HGd8G11EdqniMBnIUw7ig" name="isRecursive" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_kxh7IG10EdqniMBnIUw7ig" name="getAllProfileApplications" type="_uY5yQGv5Edq7X4sGURiZYA">
      <returnResult xmi:id="_pW8AAG10EdqniMBnIUw7ig" type="_uY5yQGv5Edq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rvqx8W10EdqniMBnIUw7ig" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rvqx8G10EdqniMBnIUw7ig"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_I-D-wG11EdqniMBnIUw7ig" name="getProfileApplication" type="_uY5yQGv5Edq7X4sGURiZYA">
      <returnResult xmi:id="_M2nksG11EdqniMBnIUw7ig" type="_uY5yQGv5Edq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O3geYW11EdqniMBnIUw7ig" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O3geYG11EdqniMBnIUw7ig"/>
      </returnResult>
      <ownedParameter xmi:id="_n7zSMG2JEdq0sOo3CGeQEg" name="profile" type="__pew8GvzEdq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_QaTt4G11EdqniMBnIUw7ig" name="getProfileApplication" type="_uY5yQGv5Edq7X4sGURiZYA">
      <returnResult xmi:id="_QaTt4W11EdqniMBnIUw7ig" type="_uY5yQGv5Edq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QaTt4m11EdqniMBnIUw7ig" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_QaTt4211EdqniMBnIUw7ig"/>
      </returnResult>
      <ownedParameter xmi:id="_rYVqgG2JEdq0sOo3CGeQEg" name="profile" type="__pew8GvzEdq7X4sGURiZYA" effect="read"/>
      <ownedParameter xmi:id="_RiuHcG11EdqniMBnIUw7ig" name="isRecursive" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R1Q66HCoEdq2Lvk-NX0TGA" name="mustBeOwned" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_Rx-9f3CoEdq2Lvk-NX0TGA" bodyCondition="_R1Q66nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R1Q66XCoEdq2Lvk-NX0TGA" annotatedElement="_R1Q66HCoEdq2Lvk-NX0TGA">
        <body>The query mustBeOwned() indicates whether elements of this type must have an owner.</body>
      </ownedComment>
      <ownedRule xmi:id="_R1Q66nCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R1Q66HCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R7hT1nCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = false</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R1Q67HCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_R1Q67XCoEdq2Lvk-NX0TGA" name="visibleMembers" type="_jKxnwGwLEdq7X4sGURiZYA" isQuery="true" bodyCondition="_R1Q673CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R1Q67nCoEdq2Lvk-NX0TGA" annotatedElement="_R1Q67XCoEdq2Lvk-NX0TGA">
        <body>The query visibleMembers() defines which members of a Package can be accessed outside it.</body>
      </ownedComment>
      <ownedRule xmi:id="_R1Q673CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R1Q67XCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R7hT13CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = member->select( m | self.makesVisible(m))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R1Q68XCoEdq2Lvk-NX0TGA" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7hT2HCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R7hT2XCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_R1Q69HCoEdq2Lvk-NX0TGA" name="makesVisible" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" precondition="_R1Q69nCoEdq2Lvk-NX0TGA" bodyCondition="_R1Q6-HCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_R1Q69XCoEdq2Lvk-NX0TGA" annotatedElement="_R1Q69HCoEdq2Lvk-NX0TGA">
        <body>The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible.</body>
      </ownedComment>
      <ownedRule xmi:id="_R1Q69nCoEdq2Lvk-NX0TGA" constrainedElement="_R1Q69HCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R7rE0HCoEdq2Lvk-NX0TGA" language="OCL">
          <body>self.member->includes(el)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_R1Q6-HCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_R1Q69HCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R7rE0XCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = (ownedMember->includes(el)) or
(elementImport->select(ei|ei.importedElement = #public)->collect(ei|ei.importedElement)->includes(el)) or
(packageImport->select(pi|pi.visibility = #public)->collect(pi|pi.importedPackage.member->includes(el))->notEmpty())</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_R1Q6-nCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_R1Q6-3CoEdq2Lvk-NX0TGA" name="el" type="_csVgUGvtEdqG6fBIPwe-mw"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_00owUGvdEdq4DLWZOhbdEA" name="Class">
    <ownedComment xmi:id="_RzVBKHCoEdq2Lvk-NX0TGA" annotatedElement="_00owUGvdEdq4DLWZOhbdEA">
      <body>Class is a kind of classifier whose features are attributes and operations. Attributes of a class are represented by instances of Property that are owned by the class. Some of these attributes may represent the navigable ends of binary associations.</body>
    </ownedComment>
    <ownedComment xmi:id="_SF9CQHCoEdq2Lvk-NX0TGA" annotatedElement="_00owUGvdEdq4DLWZOhbdEA">
      <body>A class may be designated as active, i.e., each of its instances having its own thread of control, or passive, i.e., each of its instance executing within the context of some other object. A class may also specify which signals the instances of this class handle.</body>
    </ownedComment>
    <ownedComment xmi:id="_SG_kFXCoEdq2Lvk-NX0TGA" annotatedElement="_00owUGvdEdq4DLWZOhbdEA">
      <body>Extends the metaclass Class with the capability to have an internal structure and ports.</body>
    </ownedComment>
    <ownedComment xmi:id="_SUGy9nCoEdq2Lvk-NX0TGA" annotatedElement="_00owUGvdEdq4DLWZOhbdEA">
      <body>Class has derived association that indicates how it may be extended through one or more stereotypes.</body>
    </ownedComment>
    <ownedRule xmi:id="_SF9CQXCoEdq2Lvk-NX0TGA" name="passive_class" constrainedElement="_00owUGvdEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SF9CQnCoEdq2Lvk-NX0TGA" annotatedElement="_SF9CQXCoEdq2Lvk-NX0TGA">
        <body>A passive class may not own receptions.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SF9CQ3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>not self.isActive implies self.ownedReception.isEmpty()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SF9CRHCoEdq2Lvk-NX0TGA" general="_iY7sMGvsEdqG6fBIPwe-mw"/>
    <generalization xmi:id="_SG_kFnCoEdq2Lvk-NX0TGA" general="_SG2aFnCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_RzVBKnCoEdq2Lvk-NX0TGA" name="isAbstract" type="_UdivYGvsEdqG6fBIPwe-mw" redefinedProperty="_R6CGEHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzVBK3CoEdq2Lvk-NX0TGA" annotatedElement="_RzVBKnCoEdq2Lvk-NX0TGA">
        <body>True when a class is abstract.</body>
      </ownedComment>
      <ownedComment xmi:id="_R8kcsHCoEdq2Lvk-NX0TGA" annotatedElement="_RzVBKnCoEdq2Lvk-NX0TGA">
        <body>If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_R8kcsXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R8tmoHCoEdq2Lvk-NX0TGA" name="nestedClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" isOrdered="true" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA" association="_SASfFHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_R8tmoXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R8tmonCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_R8tmo3CoEdq2Lvk-NX0TGA" annotatedElement="_R8tmoHCoEdq2Lvk-NX0TGA">
        <body>References all the Classifiers that are defined (nested) within the Class.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R8tmpHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R8tmpXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RzVBLXCoEdq2Lvk-NX0TGA" name="ownedAttribute" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" redefinedProperty="_SD3XhHCoEdq2Lvk-NX0TGA" subsettedProperty="_RxPWcHCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_R2KStnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_RzVBLnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RzVBL3CoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_RzVBMHCoEdq2Lvk-NX0TGA" annotatedElement="_RzVBLXCoEdq2Lvk-NX0TGA">
        <body>The attributes (i.e. the properties) owned by the class.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R8tmpnCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R8tmp3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RzVBM3CoEdq2Lvk-NX0TGA" name="ownedOperation" type="_M4X2IGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_RxPWdnCoEdq2Lvk-NX0TGA _RylaTHCoEdq2Lvk-NX0TGA" association="_R2KSuXCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_RzVBNHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_RzVBNXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_RzVBNnCoEdq2Lvk-NX0TGA" annotatedElement="_RzVBM3CoEdq2Lvk-NX0TGA">
        <body>The operations owned by the class.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R8tmqHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R8tmqXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_RzVBOXCoEdq2Lvk-NX0TGA" name="superClass" type="_00owUGvdEdq4DLWZOhbdEA" isDerived="true" redefinedProperty="_RxPWfHCoEdq2Lvk-NX0TGA" association="_R2Tcp3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_R8tmqnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_R8tmq3CoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_RzVBOnCoEdq2Lvk-NX0TGA" annotatedElement="_RzVBOXCoEdq2Lvk-NX0TGA">
        <body>This gives the superclasses of a class.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R8tmrHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R8tmrXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SF9CRXCoEdq2Lvk-NX0TGA" name="isActive" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SF9CRnCoEdq2Lvk-NX0TGA" annotatedElement="_SF9CRXCoEdq2Lvk-NX0TGA">
        <body>Determines whether an object specified by this class is active or not. If true, then the owning class is referred to as an active class. If false, then such a class is referred to as a passive class.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SF9CR3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SF9CSHCoEdq2Lvk-NX0TGA" name="ownedReception" type="_SGP9IHCoEdq2Lvk-NX0TGA" subsettedProperty="_RylaTHCoEdq2Lvk-NX0TGA _RxPWdnCoEdq2Lvk-NX0TGA" association="_SGjfLnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SF9CSXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SF9CSnCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SF9CS3CoEdq2Lvk-NX0TGA" annotatedElement="_SF9CSHCoEdq2Lvk-NX0TGA">
        <body>Receptions that objects of this class are willing to accept.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SF9CTHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SF9CTXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SUGy93CoEdq2Lvk-NX0TGA" name="extension" type="_skHGwGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_SUtP73CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SUGy-HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SUGy-XCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SUGy-nCoEdq2Lvk-NX0TGA" annotatedElement="_SUGy93CoEdq2Lvk-NX0TGA">
        <body>References the Extensions that specify additional properties of the metaclass. The property is derived from the extensions whose memberEnds are typed by the Class.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUGy-3CoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUGy_HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_4xcu4FYKEdqrn7iZ0eqieg" name="getExtensions" visibility="protected" type="_skHGwGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_8-RUoFYKEdqrn7iZ0eqieg" type="_skHGwGvsEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-3Q2kVYKEdqrn7iZ0eqieg" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-3Q2kFYKEdqrn7iZ0eqieg"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_W2coAGwOEdq7X4sGURiZYA" name="createOwnedAttribute" type="_Jp_1oGveEdq4DLWZOhbdEA">
      <returnResult xmi:id="_Zk8OkGwOEdq7X4sGURiZYA" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
      <ownedParameter xmi:id="_rHJhEGwOEdq7X4sGURiZYA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_oK81sGwOEdq7X4sGURiZYA" name="type" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_lxK64GwOEdq7X4sGURiZYA" name="lower" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_j-IP8GwOEdq7X4sGURiZYA" name="upper" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_EpigwGwQEdq14q0ETb1t3g" name="createOwnedOperation" type="_M4X2IGveEdq4DLWZOhbdEA">
      <returnResult xmi:id="_IMMIIGwQEdq14q0ETb1t3g" type="_M4X2IGveEdq4DLWZOhbdEA" direction="return"/>
      <ownedParameter xmi:id="_bWQJQGwQEdq14q0ETb1t3g" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_WoD70GwQEdq14q0ETb1t3g" name="returnType" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_LLEUEGwQEdq14q0ETb1t3g" name="parameterNames" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mIoGsWwQEdq14q0ETb1t3g" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mIoGsGwQEdq14q0ETb1t3g"/>
      </ownedParameter>
      <ownedParameter xmi:id="_RCurAGwQEdq14q0ETb1t3g" name="parameterTypes" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jYfhYWwQEdq14q0ETb1t3g" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jYfhYGwQEdq14q0ETb1t3g"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_shXKYGwQEdq14q0ETb1t3g" name="isMetaclass" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_urWVsGwQEdq14q0ETb1t3g" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RzVBPXCoEdq2Lvk-NX0TGA" name="inherit" type="_csVgUGvtEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RxsCcnCoEdq2Lvk-NX0TGA" bodyCondition="_RzVBP3CoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_RzVBPnCoEdq2Lvk-NX0TGA" annotatedElement="_RzVBPXCoEdq2Lvk-NX0TGA">
        <body>The inherit operation is overridden to exclude redefined properties.</body>
      </ownedComment>
      <ownedRule xmi:id="_RzVBP3CoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_RzVBPXCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R8tmrnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_RzVBQXCoEdq2Lvk-NX0TGA" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R8tmsXCoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R8tmsnCoEdq2Lvk-NX0TGA"/>
      </returnResult>
      <ownedParameter xmi:id="_RzVBRHCoEdq2Lvk-NX0TGA" name="inhs" type="_csVgUGvtEdqG6fBIPwe-mw">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R8tms3CoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R8tmtHCoEdq2Lvk-NX0TGA"/>
      </ownedParameter>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_uY5yQGv5Edq7X4sGURiZYA" name="ProfileApplication">
    <ownedComment xmi:id="_SUGy_XCoEdq2Lvk-NX0TGA" annotatedElement="_uY5yQGv5Edq7X4sGURiZYA">
      <body>ProfileApplication is a kind of PackageImport that adds the capability to state that a Profile is applied to a Package.</body>
    </ownedComment>
    <generalization xmi:id="_SUQj8HCoEdq2Lvk-NX0TGA" general="_Rx-9UHCoEdq2Lvk-NX0TGA"/>
    <ownedAttribute xmi:id="_SUQj8XCoEdq2Lvk-NX0TGA" name="appliedProfile" type="__pew8GvzEdq7X4sGURiZYA" subsettedProperty="_Rx-9WXCoEdq2Lvk-NX0TGA" association="_SUtP6nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SUQj8nCoEdq2Lvk-NX0TGA" annotatedElement="_SUQj8XCoEdq2Lvk-NX0TGA">
        <body>References the Profiles that are applied to a Package through this ProfileApplication.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUQj83CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUQj9HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SUQj9XCoEdq2Lvk-NX0TGA" name="isStrict" type="_UdivYGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SUQj9nCoEdq2Lvk-NX0TGA" annotatedElement="_SUQj9XCoEdq2Lvk-NX0TGA">
        <body>Specifies that the Profile filtering rules for the metaclasses of the referenced metamodel shall be strictly applied.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SUQj93CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_GXI1QW10EdqniMBnIUw7ig" name="getProfileDefinition">
      <returnResult xmi:id="_LJ9EAG10EdqniMBnIUw7ig" direction="return">
        <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53905C3F7000A"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OTQ-UW10EdqniMBnIUw7ig" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OTQ-UG10EdqniMBnIUw7ig"/>
      </returnResult>
      <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53905C3F7000A"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_skHGwGvsEdqG6fBIPwe-mw" name="Extension">
    <ownedComment xmi:id="_SUQj-HCoEdq2Lvk-NX0TGA" annotatedElement="_skHGwGvsEdqG6fBIPwe-mw">
      <body>Extension is a kind of Association. One end of the Extension is an ordinary Property and the other end is an ExtensionEnd. The former ties the Extension to a Class, while the latter ties the Extension to a Stereotype that extends the Class.</body>
    </ownedComment>
    <ownedRule xmi:id="_SUQj-XCoEdq2Lvk-NX0TGA" name="non_owned_end" constrainedElement="_skHGwGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SUQj-nCoEdq2Lvk-NX0TGA" annotatedElement="_SUQj-XCoEdq2Lvk-NX0TGA">
        <body>The non-owned end of an Extension is typed by a Class.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SUQj-3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>metaclassEnd()->notEmpty() and metaclass()->oclIsKindOf(Class)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SUQj_HCoEdq2Lvk-NX0TGA" name="is_binary" constrainedElement="_skHGwGvsEdqG6fBIPwe-mw">
      <ownedComment xmi:id="_SUQj_XCoEdq2Lvk-NX0TGA" annotatedElement="_SUQj_HCoEdq2Lvk-NX0TGA">
        <body>An Extension is binary, i.e., it has only two memberEnds.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SUQj_nCoEdq2Lvk-NX0TGA" language="OCL">
        <body>memberEnd->size() = 2</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SUQj_3CoEdq2Lvk-NX0TGA" general="_AwvxoGwNEdq7X4sGURiZYA"/>
    <ownedAttribute xmi:id="_SUQkAHCoEdq2Lvk-NX0TGA" name="isRequired" type="_UdivYGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
      <eAnnotations xmi:id="_SUQkAXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SUQkAnCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SUQkA3CoEdq2Lvk-NX0TGA" annotatedElement="_SUQkAHCoEdq2Lvk-NX0TGA">
        <body>Indicates whether an instance of the extending stereotype must be created when an instance of the extended class is created. The attribute value is derived from the multiplicity of the Property referenced by Extension::ownedEnd; a multiplicity of 1 means that isRequired is true, but otherwise it is false. Since the default multiplicity of an ExtensionEnd is 0..1, the default value of isRequired is false.</body>
      </ownedComment>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SUQkBHCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SUQkBXCoEdq2Lvk-NX0TGA" name="metaclass" type="_00owUGvdEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" association="_SUtP73CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SUQkBnCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SUQkB3CoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SUQkCHCoEdq2Lvk-NX0TGA" annotatedElement="_SUQkBXCoEdq2Lvk-NX0TGA">
        <body>References the Class that is extended through an Extension. The property is derived from the type of the memberEnd that is not the ownedEnd.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUQkCXCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUQkCnCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SUQkC3CoEdq2Lvk-NX0TGA" name="ownedEnd" type="_2QuT0GvdEdq4DLWZOhbdEA" redefinedProperty="_RzLQUnCoEdq2Lvk-NX0TGA" association="_SUtP8HCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_SUQkDHCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_SUQkDXCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_SUQkDnCoEdq2Lvk-NX0TGA" annotatedElement="_SUQkC3CoEdq2Lvk-NX0TGA">
        <body>References the end of the extension that is typed by a Stereotype.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUQkD3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUQkEHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_SUaU8HCoEdq2Lvk-NX0TGA" name="metaclassEnd" type="_Jp_1oGveEdq4DLWZOhbdEA" isQuery="true" bodyCondition="_SUaU8nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SUaU8XCoEdq2Lvk-NX0TGA" annotatedElement="_SUaU8HCoEdq2Lvk-NX0TGA">
        <body>The query metaclassEnd() returns the Property that is typed by a metaclass (as opposed to a stereotype).</body>
      </ownedComment>
      <ownedRule xmi:id="_SUaU8nCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SUaU8HCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SUaU83CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = memberEnd->reject(ownedEnd)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SUaU9HCoEdq2Lvk-NX0TGA" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SUaU9XCoEdq2Lvk-NX0TGA" name="metaclass" type="_00owUGvdEdq4DLWZOhbdEA" isQuery="true" bodyCondition="_SUaU-XCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SUaU9nCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EOperation" xmi:id="_SUaU93CoEdq2Lvk-NX0TGA" operationName="getMetaclass"/>
      </eAnnotations>
      <ownedComment xmi:id="_SUaU-HCoEdq2Lvk-NX0TGA" annotatedElement="_SUaU9XCoEdq2Lvk-NX0TGA">
        <body>The query metaclass() returns the metaclass that is being extended (as opposed to the extending stereotype).</body>
      </ownedComment>
      <ownedRule xmi:id="_SUaU-XCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SUaU9XCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SUaU-nCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = metaclassEnd().type</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SUaU-3CoEdq2Lvk-NX0TGA" type="_00owUGvdEdq4DLWZOhbdEA" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_SUaU_HCoEdq2Lvk-NX0TGA" name="isRequired" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_SUaU_nCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SUaU_XCoEdq2Lvk-NX0TGA" annotatedElement="_SUaU_HCoEdq2Lvk-NX0TGA">
        <body>The query isRequired() is true if the owned end has a multiplicity with the lower bound of 1.</body>
      </ownedComment>
      <ownedRule xmi:id="_SUaU_nCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SUaU_HCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SUaU_3CoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = (ownedEnd->lowerBound() = 1)</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SUaVAHCoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_0VlHsGvbEdq4DLWZOhbdEA" name="Image" isAbstract="true">
    <ownedComment xmi:id="_SUje4HCoEdq2Lvk-NX0TGA" annotatedElement="_0VlHsGvbEdq4DLWZOhbdEA">
      <body>The Image class provides the necessary information to display an Image in a diagram. Icons are typically handled through the Image class.</body>
    </ownedComment>
    <generalization xmi:id="_6QN6IGvbEdq4DLWZOhbdEA">
      <general xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
    </generalization>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_kl90MGvbEdq4DLWZOhbdEA" name="Element" isAbstract="true">
    <ownedComment xmi:id="_Rx-9X3CoEdq2Lvk-NX0TGA" annotatedElement="_kl90MGvbEdq4DLWZOhbdEA">
      <body>An element can own comments.</body>
    </ownedComment>
    <ownedComment xmi:id="_R3M0gXCoEdq2Lvk-NX0TGA" annotatedElement="_kl90MGvbEdq4DLWZOhbdEA">
      <body>Element is an abstract metaclass with no superclass. It is used as the common superclass for all metaclasses in the infrastructure library. Element has a derived composition association to itself to support the general capability for elements to own other elements.</body>
    </ownedComment>
    <ownedComment xmi:id="_SUje4XCoEdq2Lvk-NX0TGA" annotatedElement="_kl90MGvbEdq4DLWZOhbdEA">
      <body> An element is a constituent of a model. An element can own comments.</body>
    </ownedComment>
    <ownedRule xmi:id="_Rx-9YHCoEdq2Lvk-NX0TGA" name="not_own_self" constrainedElement="_kl90MGvbEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_Rx-9YXCoEdq2Lvk-NX0TGA" annotatedElement="_Rx-9YHCoEdq2Lvk-NX0TGA">
        <body>An element may not directly or indirectly own itself.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R3M0gnCoEdq2Lvk-NX0TGA" language="OCL">
        <body>not self.allOwnedElements()->includes(self)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_Rx-9Y3CoEdq2Lvk-NX0TGA" name="has_owner" constrainedElement="_kl90MGvbEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_Rx-9ZHCoEdq2Lvk-NX0TGA" annotatedElement="_Rx-9Y3CoEdq2Lvk-NX0TGA">
        <body>Elements that must be owned must have an owner.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_R3M0g3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.mustBeOwned() implies owner->notEmpty()</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_qzYYsGvbEdq4DLWZOhbdEA">
      <eAnnotations xmi:id="_ZLhloGvlEdqRFtUp8wmbQQ" source="keywords">
        <details xmi:id="_dZroIGvlEdqRFtUp8wmbQQ" key="extend"/>
      </eAnnotations>
      <general xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
    </generalization>
    <generalization xmi:id="_rcp_MGvbEdq4DLWZOhbdEA">
      <general xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53903D4E40050"/>
    </generalization>
    <ownedAttribute xmi:id="_Rx-9ZnCoEdq2Lvk-NX0TGA" name="ownedElement" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_R2m-qnCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_Rx-9Z3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rx-9aHCoEdq2Lvk-NX0TGA" isTransient="true" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rx-9aXCoEdq2Lvk-NX0TGA" annotatedElement="_Rx-9ZnCoEdq2Lvk-NX0TGA">
        <body>The Elements owned by this element.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3WlgHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R3WlgXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rx-9bHCoEdq2Lvk-NX0TGA" name="owner" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_R2m-qnCoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_Rx-9bXCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rx-9bnCoEdq2Lvk-NX0TGA" isTransient="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rx-9b3CoEdq2Lvk-NX0TGA" annotatedElement="_Rx-9bHCoEdq2Lvk-NX0TGA">
        <body>The Element that owns this element.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3WlgnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R3Wlg3CoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Rx-9cnCoEdq2Lvk-NX0TGA" name="ownedComment" type="_R2Ahw3CoEdq2Lvk-NX0TGA" subsettedProperty="_Rx-9ZnCoEdq2Lvk-NX0TGA" association="_R255kHCoEdq2Lvk-NX0TGA" aggregation="composite">
      <eAnnotations xmi:id="_Rx-9c3CoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EReference" xmi:id="_Rx-9dHCoEdq2Lvk-NX0TGA" isResolveProxies="false"/>
      </eAnnotations>
      <ownedComment xmi:id="_Rx-9dXCoEdq2Lvk-NX0TGA" annotatedElement="_Rx-9cnCoEdq2Lvk-NX0TGA">
        <body>The Comments owned by this element.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3WlhHCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R3WlhXCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_XebbkGvuEdqG6fBIPwe-mw" name="destroy"/>
    <ownedOperation xmi:id="_7f8qYGvgEdq4DLWZOhbdEA" name="hasKeyword" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_9mECUGvgEdq4DLWZOhbdEA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="__FRyUGvgEdq4DLWZOhbdEA" name="keyword" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_bx0EsGvgEdq4DLWZOhbdEA" name="getKeywords" type="_aAyVgGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_fZ0tMGvgEdq4DLWZOhbdEA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hyHaQWvgEdq4DLWZOhbdEA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hyHaQGvgEdq4DLWZOhbdEA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_jlv7EGvgEdq4DLWZOhbdEA" name="addKeyword" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_y6GO4GvgEdq4DLWZOhbdEA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_mQqpMGvgEdq4DLWZOhbdEA" name="keyword" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_qB6tQGvgEdq4DLWZOhbdEA" name="removeKeyword" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_1_Pa4GvgEdq4DLWZOhbdEA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_3u_hQGvgEdq4DLWZOhbdEA" name="keyword" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_674ZYGvzEdq7X4sGURiZYA" name="getNearestPackage" type="_-cvRAGvzEdq7X4sGURiZYA">
      <returnResult xmi:id="_DyktQGv0Edq7X4sGURiZYA" type="_-cvRAGvzEdq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1aQnEWv3Edq7X4sGURiZYA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1aQnEGv3Edq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_Gv0hgGv0Edq7X4sGURiZYA" name="getModel" type="_NVhqMGv0Edq7X4sGURiZYA">
      <returnResult xmi:id="_Pj1U0Gv0Edq7X4sGURiZYA" type="_NVhqMGv0Edq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zCjv4Wv3Edq7X4sGURiZYA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zCjv4Gv3Edq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_nd4TIGv0Edq7X4sGURiZYA" name="isStereotypeRequired" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_A-TZYGv1Edq7X4sGURiZYA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_0weVIGv1Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_hDDkwGv0Edq7X4sGURiZYA" name="isStereotypeApplied" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_izQ-IGv0Edq7X4sGURiZYA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_jenoQGv0Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_DkmGMGv1Edq7X4sGURiZYA" name="applyStereotype">
      <returnResult xmi:id="_GGbJwGv1Edq7X4sGURiZYA" direction="return">
        <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
      </returnResult>
      <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
      <ownedParameter xmi:id="_GmnFsGv1Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_LUETUGv1Edq7X4sGURiZYA" name="unapplyStereotype">
      <returnResult xmi:id="_NqRVsGv1Edq7X4sGURiZYA" direction="return">
        <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
      </returnResult>
      <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
      <ownedParameter xmi:id="_OI9c0Gv1Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_7oNB8Gv1Edq7X4sGURiZYA" name="getApplicableStereotypes" type="_A7vDAGv0Edq7X4sGURiZYA">
      <returnResult xmi:id="_-J4UgGv1Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ah4GoWv2Edq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ah4GoGv2Edq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_CQI_QGv2Edq7X4sGURiZYA" name="getApplicableStereotype" type="_A7vDAGv0Edq7X4sGURiZYA">
      <returnResult xmi:id="_FC9FIGv2Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i-hrkWv3Edq7X4sGURiZYA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_i-hrkGv3Edq7X4sGURiZYA"/>
      </returnResult>
      <ownedParameter xmi:id="_FX9r0Gv2Edq7X4sGURiZYA" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_IFUr8GvgEdq4DLWZOhbdEA" name="getStereotypeApplications">
      <returnResult xmi:id="_PAVWQGvgEdq4DLWZOhbdEA" direction="return">
        <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJqQgWvzEdq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJqQgGvzEdq7X4sGURiZYA"/>
      </returnResult>
      <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
    </ownedOperation>
    <ownedOperation xmi:id="_Rw07YGv1Edq7X4sGURiZYA" name="getStereotypeApplication">
      <returnResult xmi:id="_Uw5aIGv1Edq7X4sGURiZYA" direction="return">
        <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4QyvUWv3Edq7X4sGURiZYA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4QyvUGv3Edq7X4sGURiZYA"/>
      </returnResult>
      <type xmi:type="uml:Class" href="Ecore.uml2#_439EC3AE03B53C4F1C860123"/>
      <ownedParameter xmi:id="_VtGjsGv1Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_ZR1OsGv1Edq7X4sGURiZYA" name="getAppliedStereotypes" type="_A7vDAGv0Edq7X4sGURiZYA">
      <returnResult xmi:id="_cNu_IGv1Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_eHU-AWv1Edq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eHU-AGv1Edq7X4sGURiZYA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_pCV6EGv1Edq7X4sGURiZYA" name="getAppliedStereotype" type="_A7vDAGv0Edq7X4sGURiZYA">
      <returnResult xmi:id="_rLbtgGv1Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mO2M0Wv3Edq7X4sGURiZYA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mO2M0Gv3Edq7X4sGURiZYA"/>
      </returnResult>
      <ownedParameter xmi:id="_r4SMcGv1Edq7X4sGURiZYA" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="__s2tsGv2Edq7X4sGURiZYA" name="getAppliedSubstereotypes" type="_A7vDAGv0Edq7X4sGURiZYA">
      <returnResult xmi:id="__s2tsWv2Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__s2tsmv2Edq7X4sGURiZYA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="__s2ts2v2Edq7X4sGURiZYA"/>
      </returnResult>
      <ownedParameter xmi:id="_DJsA8Gv3Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_KpgogGv3Edq7X4sGURiZYA" name="getAppliedSubstereotype" type="_A7vDAGv0Edq7X4sGURiZYA">
      <returnResult xmi:id="_KpgogWv3Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qg4pwWv3Edq7X4sGURiZYA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qg4pwGv3Edq7X4sGURiZYA"/>
      </returnResult>
      <ownedParameter xmi:id="_NcK9YGv3Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
      <ownedParameter xmi:id="_Kpgogmv3Edq7X4sGURiZYA" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_JbZFAGv2Edq7X4sGURiZYA" name="hasValue" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_L6F8EGv2Edq7X4sGURiZYA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      <ownedParameter xmi:id="_MqEngGv2Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
      <ownedParameter xmi:id="_RaWfoGv2Edq7X4sGURiZYA" name="propertyName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_WGA9gGv2Edq7X4sGURiZYA" name="getValue">
      <returnResult xmi:id="_dYH5MGv2Edq7X4sGURiZYA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="Ecore.uml2#_439EC3AE03B53ACDF8200182"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8gS1oWv3Edq7X4sGURiZYA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_8gS1oGv3Edq7X4sGURiZYA"/>
      </returnResult>
      <type xmi:type="uml:PrimitiveType" href="Ecore.uml2#_439EC3AE03B53ACDF8200182"/>
      <ownedParameter xmi:id="_g41m4Gv2Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
      <ownedParameter xmi:id="_eZGOAGv2Edq7X4sGURiZYA" name="propertyName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_nMWzYGv2Edq7X4sGURiZYA" name="setValue">
      <returnResult xmi:id="_RE_zMG2BEdqniMBnIUw7ig" name="ReturnResultParameter1" direction="return">
        <type xmi:type="uml:PrimitiveType" href="Ecore.uml2#_439EC3AE03B53ACDF8200182"/>
      </returnResult>
      <type xmi:type="uml:PrimitiveType" href="Ecore.uml2#_439EC3AE03B53ACDF8200182"/>
      <ownedParameter xmi:id="_resLQGv2Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
      <ownedParameter xmi:id="_o6B2IGv2Edq7X4sGURiZYA" name="propertyName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      <ownedParameter xmi:id="_m5bH4GzIEdqNr-AKm4G4QQ" name="newValue" effect="read">
        <type xmi:type="uml:PrimitiveType" href="Ecore.uml2#_439EC3AE03B53ACDF8200182"/>
      </ownedParameter>
    </ownedOperation>
    <ownedOperation xmi:id="_Rx-9eHCoEdq2Lvk-NX0TGA" name="allOwnedElements" type="_kl90MGvbEdq4DLWZOhbdEA" isQuery="true" bodyCondition="_Rx-9enCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_Rx-9eXCoEdq2Lvk-NX0TGA" annotatedElement="_Rx-9eHCoEdq2Lvk-NX0TGA">
        <body>The query allOwnedElements() gives all of the direct and indirect owned elements of an element.</body>
      </ownedComment>
      <ownedRule xmi:id="_Rx-9enCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_Rx-9eHCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R3WlhnCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_Rx-9fHCoEdq2Lvk-NX0TGA" type="_kl90MGvbEdq4DLWZOhbdEA" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3Wlh3CoEdq2Lvk-NX0TGA" value="-1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R3WliHCoEdq2Lvk-NX0TGA"/>
      </returnResult>
    </ownedOperation>
    <ownedOperation xmi:id="_Rx-9f3CoEdq2Lvk-NX0TGA" name="mustBeOwned" type="_UdivYGvsEdqG6fBIPwe-mw" isQuery="true" bodyCondition="_Rx-9gXCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_Rx-9gHCoEdq2Lvk-NX0TGA" annotatedElement="_Rx-9f3CoEdq2Lvk-NX0TGA">
        <body>The query mustBeOwned() indicates whether elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation.</body>
      </ownedComment>
      <ownedRule xmi:id="_Rx-9gXCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_Rx-9f3CoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_R3fvcHCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = true</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_Rx-9g3CoEdq2Lvk-NX0TGA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SUtP4HCoEdq2Lvk-NX0TGA" name="A_profileApplication_package" memberEnd="_SUGy8HCoEdq2Lvk-NX0TGA _SUtP4nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SUtP4XCoEdq2Lvk-NX0TGA" general="_R2m-qnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SUtP4nCoEdq2Lvk-NX0TGA" type="_-cvRAGvzEdq7X4sGURiZYA" association="_SUtP4HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUtP43CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUtP5HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SUtP5XCoEdq2Lvk-NX0TGA" name="A_ownedStereotype_profile" memberEnd="_SUtP53CoEdq2Lvk-NX0TGA _ST9pB3CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SUtP5nCoEdq2Lvk-NX0TGA" general="_R2dNsXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SUtP53CoEdq2Lvk-NX0TGA" type="__pew8GvzEdq7X4sGURiZYA" redefinedProperty="_R2wIo3CoEdq2Lvk-NX0TGA" association="_SUtP5XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUtP6HCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUtP6XCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SUtP6nCoEdq2Lvk-NX0TGA" name="A_appliedProfile_profileApplication" memberEnd="_SUQj8XCoEdq2Lvk-NX0TGA _SUtP7HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SUtP63CoEdq2Lvk-NX0TGA" general="_R2m-snCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SUtP7HCoEdq2Lvk-NX0TGA" type="_uY5yQGv5Edq7X4sGURiZYA" association="_SUtP6nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUtP7XCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUtP7nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SUtP73CoEdq2Lvk-NX0TGA" name="A_extension_metaclass" isDerived="true" memberEnd="_SUQkBXCoEdq2Lvk-NX0TGA _SUGy93CoEdq2Lvk-NX0TGA"/>
  <ownedMember xmi:type="uml:Association" xmi:id="_SUtP8HCoEdq2Lvk-NX0TGA" name="A_ownedEnd_extension" memberEnd="_SUQkC3CoEdq2Lvk-NX0TGA _SUtP8nCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SUtP8XCoEdq2Lvk-NX0TGA" general="_R2KSvXCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SUtP8nCoEdq2Lvk-NX0TGA" type="_skHGwGvsEdqG6fBIPwe-mw" redefinedProperty="_R2wIo3CoEdq2Lvk-NX0TGA" association="_SUtP8HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUtP83CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUtP9HCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SUtP9XCoEdq2Lvk-NX0TGA" name="A_type_extensionEnd" memberEnd="_SUaVCXCoEdq2Lvk-NX0TGA _SUtP93CoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SUtP9nCoEdq2Lvk-NX0TGA" general="_R2KStHCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SUtP93CoEdq2Lvk-NX0TGA" type="_2QuT0GvdEdq4DLWZOhbdEA" association="_SUtP9XCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUtP-HCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUtP-XCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SUtP-nCoEdq2Lvk-NX0TGA" name="A_metaclassReference_profile" memberEnd="_ST9pDXCoEdq2Lvk-NX0TGA _SUtP_HCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SUtP-3CoEdq2Lvk-NX0TGA" general="_R2dNq3CoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SUtP_HCoEdq2Lvk-NX0TGA" type="__pew8GvzEdq7X4sGURiZYA" association="_SUtP-nCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUtP_XCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUtP_nCoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SUtP_3CoEdq2Lvk-NX0TGA" name="A_metamodelReference_profile" memberEnd="_ST9pE3CoEdq2Lvk-NX0TGA _SUtQAXCoEdq2Lvk-NX0TGA">
    <generalization xmi:id="_SUtQAHCoEdq2Lvk-NX0TGA" general="_R2dNrnCoEdq2Lvk-NX0TGA"/>
    <ownedEnd xmi:id="_SUtQAXCoEdq2Lvk-NX0TGA" type="__pew8GvzEdq7X4sGURiZYA" association="_SUtP_3CoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUtQAnCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUtQA3CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Association" xmi:id="_SU3A4HCoEdq2Lvk-NX0TGA" name="A_icon_stereotype" memberEnd="_STz4DnCoEdq2Lvk-NX0TGA _SU3A4XCoEdq2Lvk-NX0TGA">
    <ownedEnd xmi:id="_SU3A4XCoEdq2Lvk-NX0TGA" type="_A7vDAGv0Edq7X4sGURiZYA" association="_SU3A4HCoEdq2Lvk-NX0TGA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SU3A4nCoEdq2Lvk-NX0TGA" value="-1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SU3A43CoEdq2Lvk-NX0TGA"/>
    </ownedEnd>
  </ownedMember>
  <ownedMember xmi:type="uml:Class" xmi:id="_2QuT0GvdEdq4DLWZOhbdEA" name="ExtensionEnd">
    <ownedComment xmi:id="_SUaVAXCoEdq2Lvk-NX0TGA" annotatedElement="_2QuT0GvdEdq4DLWZOhbdEA">
      <body>ExtensionEnd is a kind of Property that is always typed by a Stereotype. An ExtensionEnd is never navigable. If it was navigable, it would be a property of the extended classifier. Since a profile is not allowed to change the referenced metamodel, it is not possible to add properties to the extended classifier. As a consequence, an ExtensionEnd can only be owned by an Extension. The aggregation of an ExtensionEnd is always composite. The default multiplicity of an ExtensionEnd is 0..1.</body>
    </ownedComment>
    <ownedRule xmi:id="_SUaVAnCoEdq2Lvk-NX0TGA" name="multiplicity" constrainedElement="_2QuT0GvdEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SUaVA3CoEdq2Lvk-NX0TGA" annotatedElement="_SUaVAnCoEdq2Lvk-NX0TGA">
        <body>The multiplicity of ExtensionEnd is 0..1 or 1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SUaVBHCoEdq2Lvk-NX0TGA" language="OCL">
        <body>(self->lowerBound() = 0 or self->lowerBound() = 1) and self->upperBound() = 1</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_SUaVBXCoEdq2Lvk-NX0TGA" name="aggregation" constrainedElement="_2QuT0GvdEdq4DLWZOhbdEA">
      <ownedComment xmi:id="_SUaVBnCoEdq2Lvk-NX0TGA" annotatedElement="_SUaVBXCoEdq2Lvk-NX0TGA">
        <body>The aggregation of an ExtensionEnd is composite.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_SUaVB3CoEdq2Lvk-NX0TGA" language="OCL">
        <body>self.aggregation = #composite</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_SUaVCHCoEdq2Lvk-NX0TGA" general="_Jp_1oGveEdq4DLWZOhbdEA"/>
    <ownedAttribute xmi:id="_SUaVCXCoEdq2Lvk-NX0TGA" name="type" type="_A7vDAGv0Edq7X4sGURiZYA" redefinedProperty="_RzLQI3CoEdq2Lvk-NX0TGA" association="_SUtP9XCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SUaVCnCoEdq2Lvk-NX0TGA" annotatedElement="_SUaVCXCoEdq2Lvk-NX0TGA">
        <body>References the type of the ExtensionEnd. Note that this association restricts the possible types of an ExtensionEnd to only be Stereotypes.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SUaVC3CoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SUaVDHCoEdq2Lvk-NX0TGA" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_SUaVDXCoEdq2Lvk-NX0TGA" name="lower" type="_XqvEIGvsEdqG6fBIPwe-mw" isDerived="true" redefinedProperty="_RySfV3CoEdq2Lvk-NX0TGA">
      <eAnnotations xmi:id="_SU3A5HCoEdq2Lvk-NX0TGA" source="appliedStereotypes">
        <contents xmi:type="Ecore_2:Ecore__EAttribute" xmi:id="_SU3A5XCoEdq2Lvk-NX0TGA" isUnsettable="true"/>
      </eAnnotations>
      <ownedComment xmi:id="_SUaVDnCoEdq2Lvk-NX0TGA" annotatedElement="_SUaVDXCoEdq2Lvk-NX0TGA">
        <body>This redefinition changes the default multiplicity of association ends, since model elements are usually extended by 0 or 1 instance of the extension stereotype.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SU3A5nCoEdq2Lvk-NX0TGA" value="1"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SU3A53CoEdq2Lvk-NX0TGA"/>
      <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_SU3A6HCoEdq2Lvk-NX0TGA"/>
    </ownedAttribute>
    <ownedOperation xmi:id="_WLw30FYLEdqrn7iZ0eqieg" name="getLower" visibility="protected" type="_XqvEIGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_ZNVLYFYLEdqrn7iZ0eqieg" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_RBRvIGJwEdqjztwYO37Abg" name="isSetLower" visibility="protected" type="_UdivYGvsEdqG6fBIPwe-mw">
      <returnResult xmi:id="_UaZAAGJwEdqjztwYO37Abg" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
    <ownedOperation xmi:id="_3FVzkFYkEdqB6vblk3tuMA" name="setLower" visibility="protected">
      <ownedParameter xmi:id="_4dG3wFYkEdqB6vblk3tuMA" name="newLower" visibility="protected" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
    </ownedOperation>
    <ownedOperation xmi:id="_OIFfAGJxEdqjztwYO37Abg" name="unsetLower" visibility="protected"/>
    <ownedOperation xmi:id="_SUaVEnCoEdq2Lvk-NX0TGA" name="lowerBound" type="_XqvEIGvsEdqG6fBIPwe-mw" isQuery="true" redefinedOperation="_RySfeHCoEdq2Lvk-NX0TGA" bodyCondition="_SUaVFHCoEdq2Lvk-NX0TGA">
      <ownedComment xmi:id="_SUaVE3CoEdq2Lvk-NX0TGA" annotatedElement="_SUaVEnCoEdq2Lvk-NX0TGA">
        <body>The query lowerBound() returns the lower bound of the multiplicity as an Integer. This is a redefinition of the default

lower bound, which normally, for MultiplicityElements, evaluates to 1 if empty.</body>
      </ownedComment>
      <ownedRule xmi:id="_SUaVFHCoEdq2Lvk-NX0TGA" name="spec" constrainedElement="_SUaVEnCoEdq2Lvk-NX0TGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SUaVFXCoEdq2Lvk-NX0TGA" language="OCL">
          <body>result = lowerBound = if lowerValue->isEmpty() then 0 else lowerValue->IntegerValue() endif</body>
        </specification>
      </ownedRule>
      <returnResult xmi:id="_SUaVFnCoEdq2Lvk-NX0TGA" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
    </ownedOperation>
  </ownedMember>
</uml:Model>
