<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/3" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/2.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/3 pathmap://UML_PROFILES/Ecore.profile.uml#_vy-HUYinEdqtvbnfB2L_5w">
  <uml:Model xmi:id="_o8I_sGvaEdq4DLWZOhbdEA" name="UML">
    <eAnnotations xmi:id="_ok12IPWnEdqea89UKW2qFQ" source="capabilities">
      <eAnnotations xmi:id="_ok12IfWnEdqea89UKW2qFQ" source="UML::Activities::IntermediateActivities" references="_oNTgBvWnEdqea89UKW2qFQ _oNTgFfWnEdqea89UKW2qFQ _oNJu8_WnEdqea89UKW2qFQ _oNcp5fWnEdqea89UKW2qFQ _oNTf8PWnEdqea89UKW2qFQ _oNma2fWnEdqea89UKW2qFQ _oKxJZfWnEdqea89UKW2qFQ _oNTf9vWnEdqea89UKW2qFQ _oNma4_WnEdqea89UKW2qFQ _oNTgDvWnEdqea89UKW2qFQ _oNma1PWnEdqea89UKW2qFQ _oNma0vWnEdqea89UKW2qFQ _oI-ZjvWnEdqea89UKW2qFQ _oKxJevWnEdqea89UKW2qFQ _oI-ZsPWnEdqea89UKW2qFQ _oI-ZgPWnEdqea89UKW2qFQ _oNTf_vWnEdqea89UKW2qFQ _oNma1vWnEdqea89UKW2qFQ _oNJu5_WnEdqea89UKW2qFQ _oNTf8_WnEdqea89UKW2qFQ _oNma2PWnEdqea89UKW2qFQ _oI-ZlfWnEdqea89UKW2qFQ _oI-ZkfWnEdqea89UKW2qFQ _oK66W_WnEdqea89UKW2qFQ _oI-Zo_WnEdqea89UKW2qFQ _oNTf4PWnEdqea89UKW2qFQ _oI-ZsfWnEdqea89UKW2qFQ _oNcp9_WnEdqea89UKW2qFQ _oNcp0PWnEdqea89UKW2qFQ _oNTf-vWnEdqea89UKW2qFQ _oNma3_WnEdqea89UKW2qFQ _oNJu8PWnEdqea89UKW2qFQ _oNma5fWnEdqea89UKW2qFQ _oI-ZivWnEdqea89UKW2qFQ _oNTgAvWnEdqea89UKW2qFQ _oNcp8PWnEdqea89UKW2qFQ _oNma3vWnEdqea89UKW2qFQ _oNcp6fWnEdqea89UKW2qFQ _oNTgCvWnEdqea89UKW2qFQ _oI-ZqvWnEdqea89UKW2qFQ _oNcp2fWnEdqea89UKW2qFQ _oK66Z_WnEdqea89UKW2qFQ _oLEEUvWnEdqea89UKW2qFQ _oNma4PWnEdqea89UKW2qFQ _oNma3PWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12IvWnEdqea89UKW2qFQ" source="UML::Classes::Kernel" references="_oDxJZfWnEdqea89UKW2qFQ _oEEEUPWnEdqea89UKW2qFQ _oHo8xfWnEdqea89UKW2qFQ _oBrevvWnEdqea89UKW2qFQ _oBrewfWnEdqea89UKW2qFQ _oBFB9_WnEdqea89UKW2qFQ _00owUGvdEdq4DLWZOhbdEA _oHo8wPWnEdqea89UKW2qFQ _oCuApfWnEdqea89UKW2qFQ _oBFB3fWnEdqea89UKW2qFQ _RPl78GwIEdq7X4sGURiZYA _oHWB1_WnEdqea89UKW2qFQ _oBre9vWnEdqea89UKW2qFQ _oAoV-fWnEdqea89UKW2qFQ _V6vuYGwGEdq7X4sGURiZYA _oEp6PvWnEdqea89UKW2qFQ _oCuAtfWnEdqea89UKW2qFQ _oAfL9fWnEdqea89UKW2qFQ _oG5V7vWnEdqea89UKW2qFQ _oCuAp_WnEdqea89UKW2qFQ _oCRUyvWnEdqea89UKW2qFQ _oBYj5fWnEdqea89UKW2qFQ _oF_-D_WnEdqea89UKW2qFQ _oEEEXPWnEdqea89UKW2qFQ _oA735_WnEdqea89UKW2qFQ _oAoV7fWnEdqea89UKW2qFQ _oCuAmfWnEdqea89UKW2qFQ _oBOyxfWnEdqea89UKW2qFQ _oEW_XPWnEdqea89UKW2qFQ _oCIKy_WnEdqea89UKW2qFQ _oBYj8fWnEdqea89UKW2qFQ _oD6TWPWnEdqea89UKW2qFQ _oCuAkPWnEdqea89UKW2qFQ _oC3xhPWnEdqea89UKW2qFQ _oCRU0fWnEdqea89UKW2qFQ _oCk2sPWnEdqea89UKW2qFQ _oAyG-_WnEdqea89UKW2qFQ _oGlz9_WnEdqea89UKW2qFQ _oC3xg_WnEdqea89UKW2qFQ _oCuArPWnEdqea89UKW2qFQ _oAVbH_WnEdqea89UKW2qFQ _oHMQ1vWnEdqea89UKW2qFQ _oAyG2fWnEdqea89UKW2qFQ _oC3xqfWnEdqea89UKW2qFQ _oCk2rPWnEdqea89UKW2qFQ _oCuAqfWnEdqea89UKW2qFQ _AyM_oGwMEdq7X4sGURiZYA _oBre7PWnEdqea89UKW2qFQ _oCuAhPWnEdqea89UKW2qFQ _oAoV5fWnEdqea89UKW2qFQ _oBOy_PWnEdqea89UKW2qFQ _oACf8vWnEdqea89UKW2qFQ _oEp6M_WnEdqea89UKW2qFQ _oAoV6PWnEdqea89UKW2qFQ _oCk2oPWnEdqea89UKW2qFQ _oCRUufWnEdqea89UKW2qFQ _oC3xifWnEdqea89UKW2qFQ _oBYj2PWnEdqea89UKW2qFQ _oC3xkPWnEdqea89UKW2qFQ _oCIK1vWnEdqea89UKW2qFQ _oBFBxPWnEdqea89UKW2qFQ _oAMQ-PWnEdqea89UKW2qFQ _oCIKufWnEdqea89UKW2qFQ _oAMQ_PWnEdqea89UKW2qFQ _oCuAivWnEdqea89UKW2qFQ _oE9cOPWnEdqea89UKW2qFQ _oBre6fWnEdqea89UKW2qFQ _oHCf0vWnEdqea89UKW2qFQ _oHo8yvWnEdqea89UKW2qFQ _oC3xlfWnEdqea89UKW2qFQ _oEEEV_WnEdqea89UKW2qFQ _oCuAq_WnEdqea89UKW2qFQ _oBYj0PWnEdqea89UKW2qFQ _oB0ov_WnEdqea89UKW2qFQ _oC3xhfWnEdqea89UKW2qFQ _oBYjwPWnEdqea89UKW2qFQ _oAVa9fWnEdqea89UKW2qFQ _oF2NAPWnEdqea89UKW2qFQ _oCuAsPWnEdqea89UKW2qFQ _oHCf5fWnEdqea89UKW2qFQ _oD6TXfWnEdqea89UKW2qFQ _oBYjxPWnEdqea89UKW2qFQ _oAyG8_WnEdqea89UKW2qFQ _oC3xlvWnEdqea89UKW2qFQ _oBrexvWnEdqea89UKW2qFQ _oFQXOfWnEdqea89UKW2qFQ _oC3xl_WnEdqea89UKW2qFQ _oCuArfWnEdqea89UKW2qFQ _oCIK0vWnEdqea89UKW2qFQ _rHT3YKOsEdqi_5gqUMOQtA _oBYjzPWnEdqea89UKW2qFQ _B3q9cGwNEdq7X4sGURiZYA _kl90MGvbEdq4DLWZOhbdEA _oBYj7PWnEdqea89UKW2qFQ _oA739fWnEdqea89UKW2qFQ _oCk2lfWnEdqea89UKW2qFQ _oE9cMPWnEdqea89UKW2qFQ _oAoWAfWnEdqea89UKW2qFQ _oHWB3fWnEdqea89UKW2qFQ _oBhtxPWnEdqea89UKW2qFQ _oF_-AfWnEdqea89UKW2qFQ _oBht2fWnEdqea89UKW2qFQ _PyCx8GveEdq4DLWZOhbdEA _oAfL8fWnEdqea89UKW2qFQ _oCk2kfWnEdqea89UKW2qFQ _SnNPIGwIEdq7X4sGURiZYA _oCk2rfWnEdqea89UKW2qFQ _oAfL5vWnEdqea89UKW2qFQ _oB-Zt_WnEdqea89UKW2qFQ _oA74AfWnEdqea89UKW2qFQ _oEEEa_WnEdqea89UKW2qFQ _oC3xq_WnEdqea89UKW2qFQ _oAoWDvWnEdqea89UKW2qFQ _oAMQ9PWnEdqea89UKW2qFQ _oC3xkvWnEdqea89UKW2qFQ _oBYj3fWnEdqea89UKW2qFQ _oCk2qvWnEdqea89UKW2qFQ _oCRUxvWnEdqea89UKW2qFQ _oB0ox_WnEdqea89UKW2qFQ _oCRUn_WnEdqea89UKW2qFQ _oBre5vWnEdqea89UKW2qFQ _oAoV8vWnEdqea89UKW2qFQ _oCRUq_WnEdqea89UKW2qFQ _oFQXPPWnEdqea89UKW2qFQ _DH62EKPAEdqi_5gqUMOQtA _oB0otfWnEdqea89UKW2qFQ _oBre-_WnEdqea89UKW2qFQ _6UV2QGwJEdq7X4sGURiZYA _oCIKoPWnEdqea89UKW2qFQ _oCuAgPWnEdqea89UKW2qFQ _oCuAoPWnEdqea89UKW2qFQ _oEEEY_WnEdqea89UKW2qFQ _oCIKxPWnEdqea89UKW2qFQ _oFQXNfWnEdqea89UKW2qFQ _oB-Zr_WnEdqea89UKW2qFQ _oB0osfWnEdqea89UKW2qFQ _oC3xofWnEdqea89UKW2qFQ _oEp6MPWnEdqea89UKW2qFQ _oCIKvPWnEdqea89UKW2qFQ _oEEEc_WnEdqea89UKW2qFQ _oCuAifWnEdqea89UKW2qFQ _oCuAlPWnEdqea89UKW2qFQ _oC3xgPWnEdqea89UKW2qFQ _oHWB0vWnEdqea89UKW2qFQ _oCk2mfWnEdqea89UKW2qFQ _oCk2o_WnEdqea89UKW2qFQ _oBOy__WnEdqea89UKW2qFQ _oCRUw_WnEdqea89UKW2qFQ _oBhttPWnEdqea89UKW2qFQ _oAfMBPWnEdqea89UKW2qFQ _oEW_WPWnEdqea89UKW2qFQ _oHCf2vWnEdqea89UKW2qFQ _oBOy9fWnEdqea89UKW2qFQ _oBht0PWnEdqea89UKW2qFQ _oBhtsPWnEdqea89UKW2qFQ _oC3xo_WnEdqea89UKW2qFQ _oC3xi_WnEdqea89UKW2qFQ _oBYj1PWnEdqea89UKW2qFQ _oAoV0PWnEdqea89UKW2qFQ _oFGmJvWnEdqea89UKW2qFQ _oFGmIvWnEdqea89UKW2qFQ _oFGmN_WnEdqea89UKW2qFQ _oB0ooPWnEdqea89UKW2qFQ _oA737fWnEdqea89UKW2qFQ _oB0ow_WnEdqea89UKW2qFQ _oFQXRPWnEdqea89UKW2qFQ _oAVbA_WnEdqea89UKW2qFQ _oCuAjPWnEdqea89UKW2qFQ _oBFB0_WnEdqea89UKW2qFQ _oCuAh_WnEdqea89UKW2qFQ _oCuAk_WnEdqea89UKW2qFQ _oAVbFfWnEdqea89UKW2qFQ _oBre1_WnEdqea89UKW2qFQ _oCk2nfWnEdqea89UKW2qFQ _oD6TUPWnEdqea89UKW2qFQ _oCuAj_WnEdqea89UKW2qFQ _oCuAlvWnEdqea89UKW2qFQ _oCk2kvWnEdqea89UKW2qFQ _oBht7fWnEdqea89UKW2qFQ _oD6TbPWnEdqea89UKW2qFQ _oCIKrPWnEdqea89UKW2qFQ _oAyHBfWnEdqea89UKW2qFQ _oCRUm_WnEdqea89UKW2qFQ _oBhtyvWnEdqea89UKW2qFQ _ZiwkoGwLEdq7X4sGURiZYA _oC3xkfWnEdqea89UKW2qFQ _Q-yR4GveEdq4DLWZOhbdEA _oBre4_WnEdqea89UKW2qFQ _oB-ZwvWnEdqea89UKW2qFQ _oAyG3fWnEdqea89UKW2qFQ _oAoV4vWnEdqea89UKW2qFQ _M4X2IGveEdq4DLWZOhbdEA _oAMQ8PWnEdqea89UKW2qFQ _oC3xn_WnEdqea89UKW2qFQ __1ap4HLzEdqziYxiZo0YtA _oC3xpvWnEdqea89UKW2qFQ _oBOy0fWnEdqea89UKW2qFQ _oC3xnvWnEdqea89UKW2qFQ _oBrez_WnEdqea89UKW2qFQ _ynRtoGvtEdqG6fBIPwe-mw _oBrey_WnEdqea89UKW2qFQ _oHo80fWnEdqea89UKW2qFQ _oCuAovWnEdqea89UKW2qFQ _oD6TZfWnEdqea89UKW2qFQ _oCRUp_WnEdqea89UKW2qFQ _oCRUzfWnEdqea89UKW2qFQ _jKxnwGwLEdq7X4sGURiZYA _oA73_vWnEdqea89UKW2qFQ _oFQXIfWnEdqea89UKW2qFQ _oBOy8vWnEdqea89UKW2qFQ _oFQXMfWnEdqea89UKW2qFQ _oHWB1vWnEdqea89UKW2qFQ _oBFByfWnEdqea89UKW2qFQ _oC3xh_WnEdqea89UKW2qFQ _oCuAuvWnEdqea89UKW2qFQ _oBOy-fWnEdqea89UKW2qFQ _oBre8fWnEdqea89UKW2qFQ _oBht3fWnEdqea89UKW2qFQ _oCuAsvWnEdqea89UKW2qFQ _oBFBzvWnEdqea89UKW2qFQ _oC3xsPWnEdqea89UKW2qFQ _oBFBwPWnEdqea89UKW2qFQ _oB-ZyvWnEdqea89UKW2qFQ _oCk2pvWnEdqea89UKW2qFQ _ChRfcGveEdq4DLWZOhbdEA _oC3xhvWnEdqea89UKW2qFQ _oC3xivWnEdqea89UKW2qFQ _AwvxoGwNEdq7X4sGURiZYA _oD6TefWnEdqea89UKW2qFQ _oHfLwPWnEdqea89UKW2qFQ _oHfLx_WnEdqea89UKW2qFQ _oAVa_PWnEdqea89UKW2qFQ _oBFB7_WnEdqea89UKW2qFQ _oHWB0PWnEdqea89UKW2qFQ _oB-ZqPWnEdqea89UKW2qFQ _oB-Zq_WnEdqea89UKW2qFQ _KyaPMGveEdq4DLWZOhbdEA _oBYjyPWnEdqea89UKW2qFQ _oAfL-fWnEdqea89UKW2qFQ _oC3xtfWnEdqea89UKW2qFQ _oAoV0_WnEdqea89UKW2qFQ _Dy77oGveEdq4DLWZOhbdEA _oAyG4fWnEdqea89UKW2qFQ _oCuAtvWnEdqea89UKW2qFQ _oHo8y_WnEdqea89UKW2qFQ _FFMNsGveEdq4DLWZOhbdEA _oAVa5_WnEdqea89UKW2qFQ _oCRUsvWnEdqea89UKW2qFQ _oHfLwvWnEdqea89UKW2qFQ _oBre3_WnEdqea89UKW2qFQ _oCIKx_WnEdqea89UKW2qFQ _oFQXQPWnEdqea89UKW2qFQ _oCuAtPWnEdqea89UKW2qFQ _oHfLzPWnEdqea89UKW2qFQ _oEEEcPWnEdqea89UKW2qFQ _oC3xs_WnEdqea89UKW2qFQ _oAfL_fWnEdqea89UKW2qFQ _oB0oqPWnEdqea89UKW2qFQ _oCuAuPWnEdqea89UKW2qFQ _oEEEePWnEdqea89UKW2qFQ _oBOzAvWnEdqea89UKW2qFQ _oCuAl_WnEdqea89UKW2qFQ _oCuAkfWnEdqea89UKW2qFQ _oCRUo_WnEdqea89UKW2qFQ _oC3xuPWnEdqea89UKW2qFQ _oHfLxfWnEdqea89UKW2qFQ _oEEEZvWnEdqea89UKW2qFQ _oBht6fWnEdqea89UKW2qFQ _oHo8zvWnEdqea89UKW2qFQ _oFGmKvWnEdqea89UKW2qFQ _oB-ZxvWnEdqea89UKW2qFQ _OQcbgGwOEdq7X4sGURiZYA _oHCf1fWnEdqea89UKW2qFQ _oD6TdPWnEdqea89UKW2qFQ _oA734_WnEdqea89UKW2qFQ _oEW_VPWnEdqea89UKW2qFQ _csVgUGvtEdqG6fBIPwe-mw _oCk2r_WnEdqea89UKW2qFQ _oHo8zPWnEdqea89UKW2qFQ _oBht4fWnEdqea89UKW2qFQ _oA73-fWnEdqea89UKW2qFQ _oB-Z0vWnEdqea89UKW2qFQ _oCk2svWnEdqea89UKW2qFQ _oBFB6_WnEdqea89UKW2qFQ _oB-ZzvWnEdqea89UKW2qFQ _oBFB2PWnEdqea89UKW2qFQ _oBre0_WnEdqea89UKW2qFQ _oCuAhvWnEdqea89UKW2qFQ _oBFB6PWnEdqea89UKW2qFQ _oBreuPWnEdqea89UKW2qFQ _oF_-G_WnEdqea89UKW2qFQ _oCuAt_WnEdqea89UKW2qFQ _oAVbDfWnEdqea89UKW2qFQ _oCuAmvWnEdqea89UKW2qFQ _oHWB1fWnEdqea89UKW2qFQ _oFQXJPWnEdqea89UKW2qFQ _oCk2p_WnEdqea89UKW2qFQ _oCuAnfWnEdqea89UKW2qFQ _oEEEU_WnEdqea89UKW2qFQ _oHWB2vWnEdqea89UKW2qFQ _oCk2pfWnEdqea89UKW2qFQ _oCbFkPWnEdqea89UKW2qFQ _oC3xjfWnEdqea89UKW2qFQ _oB0ouPWnEdqea89UKW2qFQ _oA733_WnEdqea89UKW2qFQ _oCIKpfWnEdqea89UKW2qFQ _oBOywvWnEdqea89UKW2qFQ _oBFB8_WnEdqea89UKW2qFQ _oAyG1fWnEdqea89UKW2qFQ _oC3xgvWnEdqea89UKW2qFQ _JBgfoKPAEdqi_5gqUMOQtA _oHWB4PWnEdqea89UKW2qFQ _I6N3UGwGEdq7X4sGURiZYA _oAyG7PWnEdqea89UKW2qFQ _oCIKwPWnEdqea89UKW2qFQ _oAVa4PWnEdqea89UKW2qFQ _-cvRAGvzEdq7X4sGURiZYA _oBOyyfWnEdqea89UKW2qFQ _oC3xmfWnEdqea89UKW2qFQ _Gjgl0GveEdq4DLWZOhbdEA _oBre2_WnEdqea89UKW2qFQ _oHWB2fWnEdqea89UKW2qFQ _oHfLyvWnEdqea89UKW2qFQ _oAVa7vWnEdqea89UKW2qFQ _oCk2qPWnEdqea89UKW2qFQ _oHo8x_WnEdqea89UKW2qFQ _oCbFm_WnEdqea89UKW2qFQ _oAyHD_WnEdqea89UKW2qFQ _oAfL4vWnEdqea89UKW2qFQ _oA731vWnEdqea89UKW2qFQ _oCuAs_WnEdqea89UKW2qFQ _C7AF4GwREdq14q0ETb1t3g _oHo8wvWnEdqea89UKW2qFQ _oAyG5fWnEdqea89UKW2qFQ _oC3xrvWnEdqea89UKW2qFQ _oC3xnPWnEdqea89UKW2qFQ _oBreu_WnEdqea89UKW2qFQ _oBOyzfWnEdqea89UKW2qFQ _oC3xqPWnEdqea89UKW2qFQ _oHo80_WnEdqea89UKW2qFQ _oAyG6fWnEdqea89UKW2qFQ _Jp_1oGveEdq4DLWZOhbdEA _oD6TcfWnEdqea89UKW2qFQ _oBrfAPWnEdqea89UKW2qFQ _oB-Zs_WnEdqea89UKW2qFQ _oCk2qfWnEdqea89UKW2qFQ _oEW_YfWnEdqea89UKW2qFQ _oFQXLfWnEdqea89UKW2qFQ _oAoWCfWnEdqea89UKW2qFQ _oCk2kPWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12I_WnEdqea89UKW2qFQ" source="UML::CommonBehaviors::Communications" references="_oM20D_WnEdqea89UKW2qFQ _00owUGvdEdq4DLWZOhbdEA _oM_-C_WnEdqea89UKW2qFQ _oMtC-vWnEdqea89UKW2qFQ _oMtDDfWnEdqea89UKW2qFQ _oM20BfWnEdqea89UKW2qFQ _oCuAkPWnEdqea89UKW2qFQ _oM_-APWnEdqea89UKW2qFQ _oM20C_WnEdqea89UKW2qFQ _oMtDCvWnEdqea89UKW2qFQ _oM20GfWnEdqea89UKW2qFQ _oM2z9vWnEdqea89UKW2qFQ _oNJu4PWnEdqea89UKW2qFQ _rHT3YKOsEdqi_5gqUMOQtA _oM_98fWnEdqea89UKW2qFQ _oM_94PWnEdqea89UKW2qFQ _oM_96PWnEdqea89UKW2qFQ _oNJu5vWnEdqea89UKW2qFQ _oMtDBvWnEdqea89UKW2qFQ _oM2z_PWnEdqea89UKW2qFQ _oM_97fWnEdqea89UKW2qFQ _oM_96fWnEdqea89UKW2qFQ _oMtDA_WnEdqea89UKW2qFQ _oM_-A_WnEdqea89UKW2qFQ _oB0ow_WnEdqea89UKW2qFQ _Pu3O0HL0EdqziYxiZo0YtA _oCuAj_WnEdqea89UKW2qFQ _M4X2IGveEdq4DLWZOhbdEA _oM20EvWnEdqea89UKW2qFQ _oM_97PWnEdqea89UKW2qFQ _oMtC8_WnEdqea89UKW2qFQ _oM_-CPWnEdqea89UKW2qFQ _oM_-BfWnEdqea89UKW2qFQ _oM_-AvWnEdqea89UKW2qFQ _oM20CPWnEdqea89UKW2qFQ _oM20APWnEdqea89UKW2qFQ _oNJu4vWnEdqea89UKW2qFQ _oM20FfWnEdqea89UKW2qFQ _8Ugn8GvtEdqG6fBIPwe-mw _oM_9_fWnEdqea89UKW2qFQ _oNJu5fWnEdqea89UKW2qFQ _oM_99_WnEdqea89UKW2qFQ _oM2z8PWnEdqea89UKW2qFQ _oM_98PWnEdqea89UKW2qFQ _oM20A_WnEdqea89UKW2qFQ _oMtC9_WnEdqea89UKW2qFQ _oMtDEvWnEdqea89UKW2qFQ _oM_99PWnEdqea89UKW2qFQ _iY7sMGvsEdqG6fBIPwe-mw _oMjSDvWnEdqea89UKW2qFQ _oMtC8PWnEdqea89UKW2qFQ _oM_9-vWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12JPWnEdqea89UKW2qFQ" source="UML::Actions::CompleteActions" references="_oWFof_WnEdqea89UKW2qFQ _oWiUYPWnEdqea89UKW2qFQ _oWsFbPWnEdqea89UKW2qFQ _oXldQvWnEdqea89UKW2qFQ _oXbsUfWnEdqea89UKW2qFQ _oW_AcPWnEdqea89UKW2qFQ _oXldQPWnEdqea89UKW2qFQ _oXR7UPWnEdqea89UKW2qFQ _oWZKiPWnEdqea89UKW2qFQ _oV8ek_WnEdqea89UKW2qFQ _oXIxXvWnEdqea89UKW2qFQ _oXbsQfWnEdqea89UKW2qFQ _oXIxYfWnEdqea89UKW2qFQ _oWsFgfWnEdqea89UKW2qFQ _oVytnPWnEdqea89UKW2qFQ _oWFogvWnEdqea89UKW2qFQ _oXIxUPWnEdqea89UKW2qFQ _oWiUcPWnEdqea89UKW2qFQ _oXIxbPWnEdqea89UKW2qFQ _oXR7WPWnEdqea89UKW2qFQ _oXIxVfWnEdqea89UKW2qFQ _oWZKr_WnEdqea89UKW2qFQ _oXldRvWnEdqea89UKW2qFQ _oV8el_WnEdqea89UKW2qFQ _oXldQ_WnEdqea89UKW2qFQ _oW12ePWnEdqea89UKW2qFQ _oWPZcPWnEdqea89UKW2qFQ _oXIxUvWnEdqea89UKW2qFQ _oWFojvWnEdqea89UKW2qFQ _oV8ejPWnEdqea89UKW2qFQ _oXR7VvWnEdqea89UKW2qFQ _oV8egPWnEdqea89UKW2qFQ _oWiUgvWnEdqea89UKW2qFQ _oWFoivWnEdqea89UKW2qFQ _oW_AgPWnEdqea89UKW2qFQ _oXldR_WnEdqea89UKW2qFQ _oV8ej_WnEdqea89UKW2qFQ _oW_AXPWnEdqea89UKW2qFQ _oW_AhfWnEdqea89UKW2qFQ _oWZKt_WnEdqea89UKW2qFQ _oQIKYPWnEdqea89UKW2qFQ _oVytoPWnEdqea89UKW2qFQ _oXIxY_WnEdqea89UKW2qFQ _oXR7W_WnEdqea89UKW2qFQ _oWPZfPWnEdqea89UKW2qFQ _oW12YPWnEdqea89UKW2qFQ _oW_AZPWnEdqea89UKW2qFQ _oXR7U_WnEdqea89UKW2qFQ _oW_AdfWnEdqea89UKW2qFQ _oWsFcPWnEdqea89UKW2qFQ _oW_AePWnEdqea89UKW2qFQ _oXR7TvWnEdqea89UKW2qFQ _oWiUbPWnEdqea89UKW2qFQ _oXIxWvWnEdqea89UKW2qFQ _oW12gPWnEdqea89UKW2qFQ _oXIxWfWnEdqea89UKW2qFQ _oXbsR_WnEdqea89UKW2qFQ _oWZKlPWnEdqea89UKW2qFQ _oW_AefWnEdqea89UKW2qFQ _oXR7QPWnEdqea89UKW2qFQ _oWPZivWnEdqea89UKW2qFQ _oXbsWfWnEdqea89UKW2qFQ _oW_AYPWnEdqea89UKW2qFQ _oW_AcfWnEdqea89UKW2qFQ _oXIxXfWnEdqea89UKW2qFQ _oW_AdPWnEdqea89UKW2qFQ _oW_AUPWnEdqea89UKW2qFQ _oXbsT_WnEdqea89UKW2qFQ _oXbsVvWnEdqea89UKW2qFQ _oXbsRvWnEdqea89UKW2qFQ _oXR7QvWnEdqea89UKW2qFQ _oXR7VfWnEdqea89UKW2qFQ _oXbsQPWnEdqea89UKW2qFQ _oXIxZvWnEdqea89UKW2qFQ _oWZKkPWnEdqea89UKW2qFQ _oWsFYPWnEdqea89UKW2qFQ _oXR7S_WnEdqea89UKW2qFQ _oXbsTPWnEdqea89UKW2qFQ _oW_Ag_WnEdqea89UKW2qFQ _oXbsSvWnEdqea89UKW2qFQ _oW_AffWnEdqea89UKW2qFQ _oW12fPWnEdqea89UKW2qFQ _oWZKs_WnEdqea89UKW2qFQ _oWiUf_WnEdqea89UKW2qFQ _oW_AfPWnEdqea89UKW2qFQ _oWPZgPWnEdqea89UKW2qFQ _oXR7XPWnEdqea89UKW2qFQ _oWZKcPWnEdqea89UKW2qFQ _oW_AaPWnEdqea89UKW2qFQ _oVytk_WnEdqea89UKW2qFQ _oWiUhvWnEdqea89UKW2qFQ _oXIxZ_WnEdqea89UKW2qFQ _oXbsWvWnEdqea89UKW2qFQ _oW_AbfWnEdqea89UKW2qFQ _oXR7SvWnEdqea89UKW2qFQ _oXIxVvWnEdqea89UKW2qFQ _oWsFefWnEdqea89UKW2qFQ _oWFocPWnEdqea89UKW2qFQ _oXbsVPWnEdqea89UKW2qFQ _oWFohvWnEdqea89UKW2qFQ _oXR7R_WnEdqea89UKW2qFQ _oWsFffWnEdqea89UKW2qFQ _oW_Aa_WnEdqea89UKW2qFQ _oWZKjPWnEdqea89UKW2qFQ _oXR7WfWnEdqea89UKW2qFQ _oW_AfvWnEdqea89UKW2qFQ _oXR7RfWnEdqea89UKW2qFQ _oWFol_WnEdqea89UKW2qFQ _oXIxavWnEdqea89UKW2qFQ _oXldRfWnEdqea89UKW2qFQ _oXbsQ_WnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12JfWnEdqea89UKW2qFQ" source="UML::AuxiliaryConstructs::Templates" references="_oa2zvvWnEdqea89UKW2qFQ _obwLlfWnEdqea89UKW2qFQ _oatpwPWnEdqea89UKW2qFQ _obnBsfWnEdqea89UKW2qFQ _obnBsvWnEdqea89UKW2qFQ _obAks_WnEdqea89UKW2qFQ _obdQsfWnEdqea89UKW2qFQ _oaau2PWnEdqea89UKW2qFQ _obwLkPWnEdqea89UKW2qFQ _obnBpfWnEdqea89UKW2qFQ _obnBqPWnEdqea89UKW2qFQ _oa2zxvWnEdqea89UKW2qFQ _obnBoPWnEdqea89UKW2qFQ _ob58n_WnEdqea89UKW2qFQ _oaj46_WnEdqea89UKW2qFQ _obdQw_WnEdqea89UKW2qFQ _obnBr_WnEdqea89UKW2qFQ _ob58lfWnEdqea89UKW2qFQ _obwLoPWnEdqea89UKW2qFQ _ob58oPWnEdqea89UKW2qFQ _obwLkvWnEdqea89UKW2qFQ _obTfqvWnEdqea89UKW2qFQ _obdQpvWnEdqea89UKW2qFQ _obdQx_WnEdqea89UKW2qFQ _oa2zzfWnEdqea89UKW2qFQ _obnBqfWnEdqea89UKW2qFQ _oKUdZfWnEdqea89UKW2qFQ _6UV2QGwJEdq7X4sGURiZYA _ob58ofWnEdqea89UKW2qFQ _obKVu_WnEdqea89UKW2qFQ _oa2zyfWnEdqea89UKW2qFQ _oa2zsPWnEdqea89UKW2qFQ _obwLl_WnEdqea89UKW2qFQ _oaau5fWnEdqea89UKW2qFQ _obAkzPWnEdqea89UKW2qFQ _obnBqvWnEdqea89UKW2qFQ _ob58mvWnEdqea89UKW2qFQ _obwLlvWnEdqea89UKW2qFQ _KxRzgGvuEdqG6fBIPwe-mw _obKVwvWnEdqea89UKW2qFQ _oaau4PWnEdqea89UKW2qFQ _oatpyfWnEdqea89UKW2qFQ _M4X2IGveEdq4DLWZOhbdEA _obAkwfWnEdqea89UKW2qFQ _oa2zwvWnEdqea89UKW2qFQ _obwLqfWnEdqea89UKW2qFQ _obAkt_WnEdqea89UKW2qFQ _jKxnwGwLEdq7X4sGURiZYA _obdQ2PWnEdqea89UKW2qFQ _obdQu_WnEdqea89UKW2qFQ _9keOQGvdEdq4DLWZOhbdEA _oa2zuvWnEdqea89UKW2qFQ _oaau0vWnEdqea89UKW2qFQ _oaj4xfWnEdqea89UKW2qFQ _oBFBwPWnEdqea89UKW2qFQ _oa2z2PWnEdqea89UKW2qFQ _obnBrPWnEdqea89UKW2qFQ _oa2ztvWnEdqea89UKW2qFQ _obTfovWnEdqea89UKW2qFQ _oatp0fWnEdqea89UKW2qFQ _obdQrfWnEdqea89UKW2qFQ _oatpzfWnEdqea89UKW2qFQ _ob58l_WnEdqea89UKW2qFQ _oa2z0fWnEdqea89UKW2qFQ _ob58kvWnEdqea89UKW2qFQ _obdQ0fWnEdqea89UKW2qFQ _obdQqfWnEdqea89UKW2qFQ _oaj4zfWnEdqea89UKW2qFQ _oaj41fWnEdqea89UKW2qFQ _obdQ1fWnEdqea89UKW2qFQ _obTfpvWnEdqea89UKW2qFQ _obnBrfWnEdqea89UKW2qFQ _obwLp_WnEdqea89UKW2qFQ _obwLnfWnEdqea89UKW2qFQ _ob58kPWnEdqea89UKW2qFQ _obnBsPWnEdqea89UKW2qFQ _obnBofWnEdqea89UKW2qFQ _oaj45_WnEdqea89UKW2qFQ _obAku_WnEdqea89UKW2qFQ _csVgUGvtEdqG6fBIPwe-mw _oaj40fWnEdqea89UKW2qFQ _obdQoPWnEdqea89UKW2qFQ _obKVv_WnEdqea89UKW2qFQ _obwLmvWnEdqea89UKW2qFQ _ob58k_WnEdqea89UKW2qFQ _ob58nPWnEdqea89UKW2qFQ _oaj4yfWnEdqea89UKW2qFQ _obnBovWnEdqea89UKW2qFQ _-cvRAGvzEdq7X4sGURiZYA _ob58nvWnEdqea89UKW2qFQ _obAksPWnEdqea89UKW2qFQ _oaj42fWnEdqea89UKW2qFQ _obKVsvWnEdqea89UKW2qFQ _Jp_1oGveEdq4DLWZOhbdEA _obwLo_WnEdqea89UKW2qFQ _oaj44_WnEdqea89UKW2qFQ _oaau3PWnEdqea89UKW2qFQ _obdQv_WnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12JvWnEdqea89UKW2qFQ" source="UML::Interactions::BasicInteractions" references="_oLzrIPWnEdqea89UKW2qFQ _oMHNFfWnEdqea89UKW2qFQ _oLN1P_WnEdqea89UKW2qFQ _oLgwIPWnEdqea89UKW2qFQ _oMHNGPWnEdqea89UKW2qFQ _oMHNK_WnEdqea89UKW2qFQ _oLW_K_WnEdqea89UKW2qFQ _oMHNGvWnEdqea89UKW2qFQ _oLW_IPWnEdqea89UKW2qFQ _oL9cF_WnEdqea89UKW2qFQ _oL9cIvWnEdqea89UKW2qFQ _oMHNI_WnEdqea89UKW2qFQ _oL9cEfWnEdqea89UKW2qFQ _oMHNHvWnEdqea89UKW2qFQ _oMHNJ_WnEdqea89UKW2qFQ _oLW_TPWnEdqea89UKW2qFQ _oLgwTPWnEdqea89UKW2qFQ _oLqhKfWnEdqea89UKW2qFQ _oLW_UPWnEdqea89UKW2qFQ _oLN1O_WnEdqea89UKW2qFQ _oL9cHfWnEdqea89UKW2qFQ _oLW_YPWnEdqea89UKW2qFQ _oLzrOPWnEdqea89UKW2qFQ _oLzrM_WnEdqea89UKW2qFQ _gfgNwGveEdq4DLWZOhbdEA _oL9cLPWnEdqea89UKW2qFQ _oLzrN_WnEdqea89UKW2qFQ _oLW_XPWnEdqea89UKW2qFQ _oLqhU_WnEdqea89UKW2qFQ _oLzrQvWnEdqea89UKW2qFQ _oLN1X_WnEdqea89UKW2qFQ _oLzrLvWnEdqea89UKW2qFQ _oL9cL_WnEdqea89UKW2qFQ _oLN1N_WnEdqea89UKW2qFQ _oLN1Y_WnEdqea89UKW2qFQ _oLqhTPWnEdqea89UKW2qFQ _oLqhSPWnEdqea89UKW2qFQ _oLgwWvWnEdqea89UKW2qFQ _oLgwSPWnEdqea89UKW2qFQ _oLN1V_WnEdqea89UKW2qFQ _oMHNJvWnEdqea89UKW2qFQ _oMHNEfWnEdqea89UKW2qFQ _oLqhOfWnEdqea89UKW2qFQ _oLgwK_WnEdqea89UKW2qFQ _oLgwXvWnEdqea89UKW2qFQ _oLgwNfWnEdqea89UKW2qFQ _oLgwZPWnEdqea89UKW2qFQ _oL9cLfWnEdqea89UKW2qFQ _oLzrLPWnEdqea89UKW2qFQ _oLqhNvWnEdqea89UKW2qFQ _oLqhMvWnEdqea89UKW2qFQ _oLqhVvWnEdqea89UKW2qFQ _oLzrJ_WnEdqea89UKW2qFQ _oLqhI_WnEdqea89UKW2qFQ _oLzrPfWnEdqea89UKW2qFQ _oLW_RvWnEdqea89UKW2qFQ _oLqhPfWnEdqea89UKW2qFQ _oLqhT_WnEdqea89UKW2qFQ _oL9cKvWnEdqea89UKW2qFQ _oLzrO_WnEdqea89UKW2qFQ _oMHNFPWnEdqea89UKW2qFQ _oL9cNPWnEdqea89UKW2qFQ _oMHNHfWnEdqea89UKW2qFQ _oLqhL_WnEdqea89UKW2qFQ _oLN1S_WnEdqea89UKW2qFQ _oL9cGvWnEdqea89UKW2qFQ _oLgwU_WnEdqea89UKW2qFQ _oLgwMfWnEdqea89UKW2qFQ _oL9cMvWnEdqea89UKW2qFQ _oL9cNfWnEdqea89UKW2qFQ _Y_jskGvtEdqG6fBIPwe-mw _oLgwI_WnEdqea89UKW2qFQ _oLzrJPWnEdqea89UKW2qFQ _oLN1Q_WnEdqea89UKW2qFQ _oLW_J_WnEdqea89UKW2qFQ _oL9cIPWnEdqea89UKW2qFQ _oMHNEPWnEdqea89UKW2qFQ _oMHNIfWnEdqea89UKW2qFQ _oLgwQPWnEdqea89UKW2qFQ _oL9cJfWnEdqea89UKW2qFQ _oLgwOfWnEdqea89UKW2qFQ _oL9cGPWnEdqea89UKW2qFQ _oLgwaPWnEdqea89UKW2qFQ _oLqhIPWnEdqea89UKW2qFQ _oLW_VPWnEdqea89UKW2qFQ _oMHNKvWnEdqea89UKW2qFQ _oLqhRPWnEdqea89UKW2qFQ _oL9cFPWnEdqea89UKW2qFQ _oLzrNPWnEdqea89UKW2qFQ _oL9cOPWnEdqea89UKW2qFQ _oLgwa_WnEdqea89UKW2qFQ _oLzrKfWnEdqea89UKW2qFQ _oLzrIvWnEdqea89UKW2qFQ _oL9cLvWnEdqea89UKW2qFQ _oLW_SfWnEdqea89UKW2qFQ _oLgwPPWnEdqea89UKW2qFQ _oL9cM_WnEdqea89UKW2qFQ _oLW_I_WnEdqea89UKW2qFQ _oLgwJ_WnEdqea89UKW2qFQ _oL9cH_WnEdqea89UKW2qFQ _oLqhQfWnEdqea89UKW2qFQ _oLzrMfWnEdqea89UKW2qFQ _oL9cJ_WnEdqea89UKW2qFQ _oLN1W_WnEdqea89UKW2qFQ _oLW_WPWnEdqea89UKW2qFQ _oL9cEPWnEdqea89UKW2qFQ _oLgwT_WnEdqea89UKW2qFQ _oL9cOfWnEdqea89UKW2qFQ _oLN1R_WnEdqea89UKW2qFQ _oLzrQPWnEdqea89UKW2qFQ _oLzrEvWnEdqea89UKW2qFQ _oLgwVvWnEdqea89UKW2qFQ _oL9cFvWnEdqea89UKW2qFQ _oLgwRPWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12J_WnEdqea89UKW2qFQ" source="InfrastructureLibrary::Core::Constructs" references="_oBrevvWnEdqea89UKW2qFQ _oBrewfWnEdqea89UKW2qFQ _oBFB9_WnEdqea89UKW2qFQ _00owUGvdEdq4DLWZOhbdEA _oCuApfWnEdqea89UKW2qFQ _oBFB3fWnEdqea89UKW2qFQ _RPl78GwIEdq7X4sGURiZYA _oBre9vWnEdqea89UKW2qFQ _oAoV-fWnEdqea89UKW2qFQ _V6vuYGwGEdq7X4sGURiZYA _oCuAtfWnEdqea89UKW2qFQ _oAfL9fWnEdqea89UKW2qFQ _oCuAp_WnEdqea89UKW2qFQ _oCRUyvWnEdqea89UKW2qFQ _oBYj5fWnEdqea89UKW2qFQ _oA735_WnEdqea89UKW2qFQ _oAoV7fWnEdqea89UKW2qFQ _oCuAmfWnEdqea89UKW2qFQ _oBOyxfWnEdqea89UKW2qFQ _oCIKy_WnEdqea89UKW2qFQ _oBYj8fWnEdqea89UKW2qFQ _oCuAkPWnEdqea89UKW2qFQ _oC3xhPWnEdqea89UKW2qFQ _oCRU0fWnEdqea89UKW2qFQ _oCk2sPWnEdqea89UKW2qFQ _oAyG-_WnEdqea89UKW2qFQ _oC3xg_WnEdqea89UKW2qFQ _oCuArPWnEdqea89UKW2qFQ _oAVbH_WnEdqea89UKW2qFQ _oAyG2fWnEdqea89UKW2qFQ _oC3xqfWnEdqea89UKW2qFQ _oCk2rPWnEdqea89UKW2qFQ _oCuAqfWnEdqea89UKW2qFQ _AyM_oGwMEdq7X4sGURiZYA _oBre7PWnEdqea89UKW2qFQ _oCuAhPWnEdqea89UKW2qFQ _oAoV5fWnEdqea89UKW2qFQ _oBOy_PWnEdqea89UKW2qFQ _oACf8vWnEdqea89UKW2qFQ _oAoV6PWnEdqea89UKW2qFQ _oCk2oPWnEdqea89UKW2qFQ _oCRUufWnEdqea89UKW2qFQ _oC3xifWnEdqea89UKW2qFQ _oBYj2PWnEdqea89UKW2qFQ _oC3xkPWnEdqea89UKW2qFQ _oCIK1vWnEdqea89UKW2qFQ _oBFBxPWnEdqea89UKW2qFQ _oAMQ-PWnEdqea89UKW2qFQ _oCIKufWnEdqea89UKW2qFQ _oAMQ_PWnEdqea89UKW2qFQ _oCuAivWnEdqea89UKW2qFQ _oBre6fWnEdqea89UKW2qFQ _oC3xlfWnEdqea89UKW2qFQ _oCuAq_WnEdqea89UKW2qFQ _oBYj0PWnEdqea89UKW2qFQ _oB0ov_WnEdqea89UKW2qFQ _oC3xhfWnEdqea89UKW2qFQ _oBYjwPWnEdqea89UKW2qFQ _oAVa9fWnEdqea89UKW2qFQ _oCuAsPWnEdqea89UKW2qFQ _oBYjxPWnEdqea89UKW2qFQ _oAyG8_WnEdqea89UKW2qFQ _oC3xlvWnEdqea89UKW2qFQ _oBrexvWnEdqea89UKW2qFQ _oC3xl_WnEdqea89UKW2qFQ _oCuArfWnEdqea89UKW2qFQ _oCIK0vWnEdqea89UKW2qFQ _rHT3YKOsEdqi_5gqUMOQtA _oBYjzPWnEdqea89UKW2qFQ _kl90MGvbEdq4DLWZOhbdEA _oBYj7PWnEdqea89UKW2qFQ _oA739fWnEdqea89UKW2qFQ _oCk2lfWnEdqea89UKW2qFQ _oAoWAfWnEdqea89UKW2qFQ _oBhtxPWnEdqea89UKW2qFQ _oBht2fWnEdqea89UKW2qFQ _oAfL8fWnEdqea89UKW2qFQ _oCk2kfWnEdqea89UKW2qFQ _SnNPIGwIEdq7X4sGURiZYA _oCk2rfWnEdqea89UKW2qFQ _oAfL5vWnEdqea89UKW2qFQ _oB-Zt_WnEdqea89UKW2qFQ _oA74AfWnEdqea89UKW2qFQ _oC3xq_WnEdqea89UKW2qFQ _oAoWDvWnEdqea89UKW2qFQ _oAMQ9PWnEdqea89UKW2qFQ _oC3xkvWnEdqea89UKW2qFQ _oBYj3fWnEdqea89UKW2qFQ _oCk2qvWnEdqea89UKW2qFQ _oCRUxvWnEdqea89UKW2qFQ _oB0ox_WnEdqea89UKW2qFQ _oCRUn_WnEdqea89UKW2qFQ _oBre5vWnEdqea89UKW2qFQ _oAoV8vWnEdqea89UKW2qFQ _oCRUq_WnEdqea89UKW2qFQ _DH62EKPAEdqi_5gqUMOQtA _oB0otfWnEdqea89UKW2qFQ _oBre-_WnEdqea89UKW2qFQ _6UV2QGwJEdq7X4sGURiZYA _oCIKoPWnEdqea89UKW2qFQ _oCuAgPWnEdqea89UKW2qFQ _oCuAoPWnEdqea89UKW2qFQ _oCIKxPWnEdqea89UKW2qFQ _oB-Zr_WnEdqea89UKW2qFQ _oB0osfWnEdqea89UKW2qFQ _oC3xofWnEdqea89UKW2qFQ _oCIKvPWnEdqea89UKW2qFQ _oCuAifWnEdqea89UKW2qFQ _oCuAlPWnEdqea89UKW2qFQ _oC3xgPWnEdqea89UKW2qFQ _oCk2mfWnEdqea89UKW2qFQ _oCk2o_WnEdqea89UKW2qFQ _oBOy__WnEdqea89UKW2qFQ _oCRUw_WnEdqea89UKW2qFQ _oBhttPWnEdqea89UKW2qFQ _oAfMBPWnEdqea89UKW2qFQ _oBOy9fWnEdqea89UKW2qFQ _oBht0PWnEdqea89UKW2qFQ _oBhtsPWnEdqea89UKW2qFQ _oC3xo_WnEdqea89UKW2qFQ _oC3xi_WnEdqea89UKW2qFQ _oBYj1PWnEdqea89UKW2qFQ _oAoV0PWnEdqea89UKW2qFQ _oB0ooPWnEdqea89UKW2qFQ _oA737fWnEdqea89UKW2qFQ _oB0ow_WnEdqea89UKW2qFQ _oAVbA_WnEdqea89UKW2qFQ _oCuAjPWnEdqea89UKW2qFQ _oBFB0_WnEdqea89UKW2qFQ _oCuAh_WnEdqea89UKW2qFQ _oCuAk_WnEdqea89UKW2qFQ _oAVbFfWnEdqea89UKW2qFQ _oBre1_WnEdqea89UKW2qFQ _oCk2nfWnEdqea89UKW2qFQ _oCuAj_WnEdqea89UKW2qFQ _oCuAlvWnEdqea89UKW2qFQ _oCk2kvWnEdqea89UKW2qFQ _oBht7fWnEdqea89UKW2qFQ _oCIKrPWnEdqea89UKW2qFQ _oAyHBfWnEdqea89UKW2qFQ _oCRUm_WnEdqea89UKW2qFQ _oBhtyvWnEdqea89UKW2qFQ _ZiwkoGwLEdq7X4sGURiZYA _oC3xkfWnEdqea89UKW2qFQ _oBre4_WnEdqea89UKW2qFQ _oB-ZwvWnEdqea89UKW2qFQ _oAyG3fWnEdqea89UKW2qFQ _oAoV4vWnEdqea89UKW2qFQ _M4X2IGveEdq4DLWZOhbdEA _oAMQ8PWnEdqea89UKW2qFQ _oC3xn_WnEdqea89UKW2qFQ __1ap4HLzEdqziYxiZo0YtA _oC3xpvWnEdqea89UKW2qFQ _oBOy0fWnEdqea89UKW2qFQ _oC3xnvWnEdqea89UKW2qFQ _oBrez_WnEdqea89UKW2qFQ _ynRtoGvtEdqG6fBIPwe-mw _oBrey_WnEdqea89UKW2qFQ _oCuAovWnEdqea89UKW2qFQ _oCRUp_WnEdqea89UKW2qFQ _oCRUzfWnEdqea89UKW2qFQ _jKxnwGwLEdq7X4sGURiZYA _oA73_vWnEdqea89UKW2qFQ _oBOy8vWnEdqea89UKW2qFQ _oBFByfWnEdqea89UKW2qFQ _oC3xh_WnEdqea89UKW2qFQ _oCuAuvWnEdqea89UKW2qFQ _oBOy-fWnEdqea89UKW2qFQ _oBre8fWnEdqea89UKW2qFQ _oBht3fWnEdqea89UKW2qFQ _oCuAsvWnEdqea89UKW2qFQ _oBFBzvWnEdqea89UKW2qFQ _oC3xsPWnEdqea89UKW2qFQ _oBFBwPWnEdqea89UKW2qFQ _oB-ZyvWnEdqea89UKW2qFQ _oCk2pvWnEdqea89UKW2qFQ _ChRfcGveEdq4DLWZOhbdEA _oC3xhvWnEdqea89UKW2qFQ _oC3xivWnEdqea89UKW2qFQ _AwvxoGwNEdq7X4sGURiZYA _oAVa_PWnEdqea89UKW2qFQ _oBFB7_WnEdqea89UKW2qFQ _oB-ZqPWnEdqea89UKW2qFQ _oB-Zq_WnEdqea89UKW2qFQ _KyaPMGveEdq4DLWZOhbdEA _oBYjyPWnEdqea89UKW2qFQ _oAfL-fWnEdqea89UKW2qFQ _oC3xtfWnEdqea89UKW2qFQ _oAoV0_WnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ _oCuAtvWnEdqea89UKW2qFQ _oAVa5_WnEdqea89UKW2qFQ _oCRUsvWnEdqea89UKW2qFQ _oBre3_WnEdqea89UKW2qFQ _oCIKx_WnEdqea89UKW2qFQ _oCuAtPWnEdqea89UKW2qFQ _oC3xs_WnEdqea89UKW2qFQ _oAfL_fWnEdqea89UKW2qFQ _oB0oqPWnEdqea89UKW2qFQ _oCuAuPWnEdqea89UKW2qFQ _oBOzAvWnEdqea89UKW2qFQ _oCuAl_WnEdqea89UKW2qFQ _oCuAkfWnEdqea89UKW2qFQ _oCRUo_WnEdqea89UKW2qFQ _oC3xuPWnEdqea89UKW2qFQ _oBht6fWnEdqea89UKW2qFQ _oB-ZxvWnEdqea89UKW2qFQ _OQcbgGwOEdq7X4sGURiZYA _oA734_WnEdqea89UKW2qFQ _csVgUGvtEdqG6fBIPwe-mw _oCk2r_WnEdqea89UKW2qFQ _oBht4fWnEdqea89UKW2qFQ _oA73-fWnEdqea89UKW2qFQ _oB-Z0vWnEdqea89UKW2qFQ _oCk2svWnEdqea89UKW2qFQ _oBFB6_WnEdqea89UKW2qFQ _oB-ZzvWnEdqea89UKW2qFQ _oBFB2PWnEdqea89UKW2qFQ _oBre0_WnEdqea89UKW2qFQ _oCuAhvWnEdqea89UKW2qFQ _oBFB6PWnEdqea89UKW2qFQ _oBreuPWnEdqea89UKW2qFQ _oCuAt_WnEdqea89UKW2qFQ _oAVbDfWnEdqea89UKW2qFQ _oCuAmvWnEdqea89UKW2qFQ _oCk2p_WnEdqea89UKW2qFQ _oCuAnfWnEdqea89UKW2qFQ _oCk2pfWnEdqea89UKW2qFQ _oCbFkPWnEdqea89UKW2qFQ _oC3xjfWnEdqea89UKW2qFQ _oB0ouPWnEdqea89UKW2qFQ _oA733_WnEdqea89UKW2qFQ _oCIKpfWnEdqea89UKW2qFQ _oBOywvWnEdqea89UKW2qFQ _oBFB8_WnEdqea89UKW2qFQ _oAyG1fWnEdqea89UKW2qFQ _oC3xgvWnEdqea89UKW2qFQ _JBgfoKPAEdqi_5gqUMOQtA _I6N3UGwGEdq7X4sGURiZYA _oAyG7PWnEdqea89UKW2qFQ _oCIKwPWnEdqea89UKW2qFQ _oAVa4PWnEdqea89UKW2qFQ _-cvRAGvzEdq7X4sGURiZYA _oBOyyfWnEdqea89UKW2qFQ _oC3xmfWnEdqea89UKW2qFQ _Gjgl0GveEdq4DLWZOhbdEA _oBre2_WnEdqea89UKW2qFQ _oCRUvvWnEdqea89UKW2qFQ _oAVa7vWnEdqea89UKW2qFQ _oCk2qPWnEdqea89UKW2qFQ _oCbFm_WnEdqea89UKW2qFQ _oAyHD_WnEdqea89UKW2qFQ _oAfL4vWnEdqea89UKW2qFQ _oA731vWnEdqea89UKW2qFQ _oCuAs_WnEdqea89UKW2qFQ _oAyG5fWnEdqea89UKW2qFQ _oC3xrvWnEdqea89UKW2qFQ _oC3xnPWnEdqea89UKW2qFQ _oBreu_WnEdqea89UKW2qFQ _oBOyzfWnEdqea89UKW2qFQ _oBhtuPWnEdqea89UKW2qFQ _oC3xqPWnEdqea89UKW2qFQ _oAyG6fWnEdqea89UKW2qFQ _Jp_1oGveEdq4DLWZOhbdEA _oBrfAPWnEdqea89UKW2qFQ _oB-Zs_WnEdqea89UKW2qFQ _oCk2qfWnEdqea89UKW2qFQ _oAoWCfWnEdqea89UKW2qFQ _oCk2kPWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12KPWnEdqea89UKW2qFQ" source="UML::CommonBehaviors::SimpleTime" references="_oR66OfWnEdqea89UKW2qFQ _oR66PPWnEdqea89UKW2qFQ _oRxJL_WnEdqea89UKW2qFQ _oRn_RPWnEdqea89UKW2qFQ _oRn_S_WnEdqea89UKW2qFQ _oM20BfWnEdqea89UKW2qFQ _oM_-APWnEdqea89UKW2qFQ _oSErNPWnEdqea89UKW2qFQ _oM20C_WnEdqea89UKW2qFQ _oR66RfWnEdqea89UKW2qFQ _oR66MPWnEdqea89UKW2qFQ _oSErKvWnEdqea89UKW2qFQ _oR66QfWnEdqea89UKW2qFQ _oSErMvWnEdqea89UKW2qFQ _oRxJPfWnEdqea89UKW2qFQ _oSErNfWnEdqea89UKW2qFQ _oR66NPWnEdqea89UKW2qFQ _oSErJPWnEdqea89UKW2qFQ _oRxJKvWnEdqea89UKW2qFQ _oSErJfWnEdqea89UKW2qFQ _oSErIPWnEdqea89UKW2qFQ _oRxJRvWnEdqea89UKW2qFQ _oSErLvWnEdqea89UKW2qFQ _oSErKfWnEdqea89UKW2qFQ _oRn_SfWnEdqea89UKW2qFQ _oSErK_WnEdqea89UKW2qFQ _oRxJIPWnEdqea89UKW2qFQ _oSErLPWnEdqea89UKW2qFQ _oSErL_WnEdqea89UKW2qFQ _oRxJJvWnEdqea89UKW2qFQ _oSErJvWnEdqea89UKW2qFQ _oR66P_WnEdqea89UKW2qFQ _oRxJNvWnEdqea89UKW2qFQ _oM_-AvWnEdqea89UKW2qFQ _oR66KvWnEdqea89UKW2qFQ _oRxJMvWnEdqea89UKW2qFQ _oRn_R_WnEdqea89UKW2qFQ _oRn_V_WnEdqea89UKW2qFQ _oSErLfWnEdqea89UKW2qFQ _oSErIvWnEdqea89UKW2qFQ _oRn_PPWnEdqea89UKW2qFQ _oRn_MvWnEdqea89UKW2qFQ _oSErMPWnEdqea89UKW2qFQ _oR66PvWnEdqea89UKW2qFQ _oRxJOfWnEdqea89UKW2qFQ _oSErMfWnEdqea89UKW2qFQ _oR66O_WnEdqea89UKW2qFQ _oRn_XPWnEdqea89UKW2qFQ _oR66I_WnEdqea89UKW2qFQ _oSErM_WnEdqea89UKW2qFQ _DylKEH4YEdq7cMP_l1l5Gg _oRn_QPWnEdqea89UKW2qFQ _oRn_UvWnEdqea89UKW2qFQ _oRn_WvWnEdqea89UKW2qFQ _oRn_TvWnEdqea89UKW2qFQ _oR66RPWnEdqea89UKW2qFQ _oR66QvWnEdqea89UKW2qFQ _oR66J_WnEdqea89UKW2qFQ _oRn_NvWnEdqea89UKW2qFQ _oR66R_WnEdqea89UKW2qFQ _oSErJ_WnEdqea89UKW2qFQ _oR66IPWnEdqea89UKW2qFQ _oSErI_WnEdqea89UKW2qFQ _-Ixo8H4XEdq7cMP_l1l5Gg"/>
      <eAnnotations xmi:id="_ok12KfWnEdqea89UKW2qFQ" source="UML::CompositeStructures::Ports" references="_oNvk8PWnEdqea89UKW2qFQ _oNvk4PWnEdqea89UKW2qFQ _oNvk3PWnEdqea89UKW2qFQ _oNvk1PWnEdqea89UKW2qFQ _oNvk4_WnEdqea89UKW2qFQ _oN5VyfWnEdqea89UKW2qFQ _oN5VwfWnEdqea89UKW2qFQ _oN5VyvWnEdqea89UKW2qFQ _oNvk9_WnEdqea89UKW2qFQ _oNvk9PWnEdqea89UKW2qFQ _oN5VzfWnEdqea89UKW2qFQ _oN5VxPWnEdqea89UKW2qFQ _oNvk0fWnEdqea89UKW2qFQ _oN5VxvWnEdqea89UKW2qFQ _oNvk2PWnEdqea89UKW2qFQ _aOgw0GveEdq4DLWZOhbdEA _oNvkzvWnEdqea89UKW2qFQ _oN5VzvWnEdqea89UKW2qFQ _ZAuvEGveEdq4DLWZOhbdEA _oN5VwPWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12KvWnEdqea89UKW2qFQ" source="UML::Interactions::Fragments" references="_oPFokPWnEdqea89UKW2qFQ _oOytx_WnEdqea89UKW2qFQ _oPYjoPWnEdqea89UKW2qFQ _oO73kPWnEdqea89UKW2qFQ _oPYjnfWnEdqea89UKW2qFQ _oLW_IPWnEdqea89UKW2qFQ _oO73xfWnEdqea89UKW2qFQ _oO73qfWnEdqea89UKW2qFQ _oO73rfWnEdqea89UKW2qFQ _oPYjovWnEdqea89UKW2qFQ _oPFonPWnEdqea89UKW2qFQ _oPYjp_WnEdqea89UKW2qFQ _oLN1N_WnEdqea89UKW2qFQ _oO730PWnEdqea89UKW2qFQ _oO73pfWnEdqea89UKW2qFQ _oPYjkPWnEdqea89UKW2qFQ _oOytoPWnEdqea89UKW2qFQ _oPYjk_WnEdqea89UKW2qFQ _oO731PWnEdqea89UKW2qFQ _oPPZnfWnEdqea89UKW2qFQ _oOytr_WnEdqea89UKW2qFQ _oPPZmfWnEdqea89UKW2qFQ _oO73yPWnEdqea89UKW2qFQ _oPYjh_WnEdqea89UKW2qFQ _oOyts_WnEdqea89UKW2qFQ _oLN1S_WnEdqea89UKW2qFQ _oPYjjvWnEdqea89UKW2qFQ _oPYjn_WnEdqea89UKW2qFQ _oPYji_WnEdqea89UKW2qFQ _oPYjmvWnEdqea89UKW2qFQ _oPYjgPWnEdqea89UKW2qFQ _oPYjhfWnEdqea89UKW2qFQ _oPYjo_WnEdqea89UKW2qFQ _oPYjlfWnEdqea89UKW2qFQ _oPiUgPWnEdqea89UKW2qFQ _oOytt_WnEdqea89UKW2qFQ _oPFon_WnEdqea89UKW2qFQ _oPPZt_WnEdqea89UKW2qFQ _oPPZkPWnEdqea89UKW2qFQ _oPYjivWnEdqea89UKW2qFQ _oPiUgfWnEdqea89UKW2qFQ _oO73tvWnEdqea89UKW2qFQ _oPYjgvWnEdqea89UKW2qFQ _oPPZuPWnEdqea89UKW2qFQ _oPYjmPWnEdqea89UKW2qFQ _oPYjpPWnEdqea89UKW2qFQ _oOyt0fWnEdqea89UKW2qFQ _oO73zPWnEdqea89UKW2qFQ _oOytu_WnEdqea89UKW2qFQ _oOyt1fWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12K_WnEdqea89UKW2qFQ" source="UML::Activities::CompleteStructuredActivities" references="_oYxwM_WnEdqea89UKW2qFQ _oZErBfWnEdqea89UKW2qFQ _oJR7gPWnEdqea89UKW2qFQ _oYxwJfWnEdqea89UKW2qFQ _oJIKqvWnEdqea89UKW2qFQ _oYn_IfWnEdqea89UKW2qFQ _oY66C_WnEdqea89UKW2qFQ _oKxJZfWnEdqea89UKW2qFQ _oY66E_WnEdqea89UKW2qFQ _oY66D_WnEdqea89UKW2qFQ _oI-ZjvWnEdqea89UKW2qFQ _oYxwGfWnEdqea89UKW2qFQ _oYn_KvWnEdqea89UKW2qFQ _oY66APWnEdqea89UKW2qFQ _oKxJevWnEdqea89UKW2qFQ _oY66DvWnEdqea89UKW2qFQ _oJR7lvWnEdqea89UKW2qFQ _oY66EvWnEdqea89UKW2qFQ _oYn_LfWnEdqea89UKW2qFQ _oYxwHfWnEdqea89UKW2qFQ _oYxwIfWnEdqea89UKW2qFQ _oYxwLPWnEdqea89UKW2qFQ _oY66CvWnEdqea89UKW2qFQ _oJIKmfWnEdqea89UKW2qFQ _oY66BfWnEdqea89UKW2qFQ _oZErAPWnEdqea89UKW2qFQ _oY66AvWnEdqea89UKW2qFQ _oZErAvWnEdqea89UKW2qFQ _oK66Z_WnEdqea89UKW2qFQ _oLEEUvWnEdqea89UKW2qFQ _oY66B_WnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12LPWnEdqea89UKW2qFQ" source="UML::Actions::StructuredActions" references="_oVDGyvWnEdqea89UKW2qFQ _oVDGsfWnEdqea89UKW2qFQ _oVDGoPWnEdqea89UKW2qFQ _oUwLtvWnEdqea89UKW2qFQ _oU5VpvWnEdqea89UKW2qFQ _oVDGtvWnEdqea89UKW2qFQ _oVM3ovWnEdqea89UKW2qFQ _oVDGrPWnEdqea89UKW2qFQ _oVDGwPWnEdqea89UKW2qFQ _oU5VoPWnEdqea89UKW2qFQ _oUwLsPWnEdqea89UKW2qFQ _oUwL0PWnEdqea89UKW2qFQ _oUwL1PWnEdqea89UKW2qFQ _oU5VrfWnEdqea89UKW2qFQ _oVDGu_WnEdqea89UKW2qFQ _oU5Vs_WnEdqea89UKW2qFQ _oVDGyPWnEdqea89UKW2qFQ _oU5VvfWnEdqea89UKW2qFQ _oVDGvvWnEdqea89UKW2qFQ _oVDGsPWnEdqea89UKW2qFQ _oVDGufWnEdqea89UKW2qFQ _oVDGtPWnEdqea89UKW2qFQ _oVM3oPWnEdqea89UKW2qFQ _oVDGxfWnEdqea89UKW2qFQ _oU5VtvWnEdqea89UKW2qFQ _oU5VuvWnEdqea89UKW2qFQ _oUwLuvWnEdqea89UKW2qFQ _oU5VqfWnEdqea89UKW2qFQ _oUwLw_WnEdqea89UKW2qFQ _oUwLx_WnEdqea89UKW2qFQ _oVDGw_WnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12LfWnEdqea89UKW2qFQ" source="UML::CompositeStructures::StructuredClasses" references="_00owUGvdEdq4DLWZOhbdEA"/>
      <eAnnotations xmi:id="_ok12LvWnEdqea89UKW2qFQ" source="InfrastructureLibrary::Profiles" references="_00owUGvdEdq4DLWZOhbdEA _oUTf7vWnEdqea89UKW2qFQ _oUJu5_WnEdqea89UKW2qFQ _oUTfyvWnEdqea89UKW2qFQ _oUTf2PWnEdqea89UKW2qFQ _oUmatvWnEdqea89UKW2qFQ _oUTf5fWnEdqea89UKW2qFQ _kl90MGvbEdq4DLWZOhbdEA _A7vDAGv0Edq7X4sGURiZYA _oUdQzvWnEdqea89UKW2qFQ _oUdQzfWnEdqea89UKW2qFQ _oUdQyvWnEdqea89UKW2qFQ _oUTf_fWnEdqea89UKW2qFQ _oUTfzvWnEdqea89UKW2qFQ _oUdQ2PWnEdqea89UKW2qFQ _oUmasPWnEdqea89UKW2qFQ _oUTfw_WnEdqea89UKW2qFQ _oUmasvWnEdqea89UKW2qFQ _oUdQ2vWnEdqea89UKW2qFQ _oUdQw_WnEdqea89UKW2qFQ _oUJu1fWnEdqea89UKW2qFQ _oUTf0_WnEdqea89UKW2qFQ _skHGwGvsEdqG6fBIPwe-mw _oUmatfWnEdqea89UKW2qFQ _oUJu5PWnEdqea89UKW2qFQ _oUdQ0PWnEdqea89UKW2qFQ _oUTgAfWnEdqea89UKW2qFQ _oUdQ1fWnEdqea89UKW2qFQ _oUTf9fWnEdqea89UKW2qFQ _nDq0wJPzEdqpjIDDFZ2Hgw _oUdQxfWnEdqea89UKW2qFQ _oUJu2vWnEdqea89UKW2qFQ _oUJuzPWnEdqea89UKW2qFQ __pew8GvzEdq7X4sGURiZYA _csVgUGvtEdqG6fBIPwe-mw _oUJu4PWnEdqea89UKW2qFQ _oUdQwPWnEdqea89UKW2qFQ _oUTf6fWnEdqea89UKW2qFQ _2QuT0GvdEdq4DLWZOhbdEA _oUJuyPWnEdqea89UKW2qFQ _oUTfxvWnEdqea89UKW2qFQ _uY5yQGv5Edq7X4sGURiZYA _oUAk5_WnEdqea89UKW2qFQ _oUJu0PWnEdqea89UKW2qFQ _oUdQyPWnEdqea89UKW2qFQ _-cvRAGvzEdq7X4sGURiZYA _oUTf-fWnEdqea89UKW2qFQ _oUdQ0_WnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12L_WnEdqea89UKW2qFQ" source="UML::Activities::FundamentalActivities" references="_oI-ZnfWnEdqea89UKW2qFQ _oI-ZmfWnEdqea89UKW2qFQ _oI-ZjvWnEdqea89UKW2qFQ _oI-ZsPWnEdqea89UKW2qFQ _oI-ZgPWnEdqea89UKW2qFQ _oI-Zs_WnEdqea89UKW2qFQ _oIreyPWnEdqea89UKW2qFQ _oI-ZlfWnEdqea89UKW2qFQ _oI-ZkfWnEdqea89UKW2qFQ _oI-Zo_WnEdqea89UKW2qFQ _oI-ZsfWnEdqea89UKW2qFQ _oI-ZhvWnEdqea89UKW2qFQ _oI-ZpvWnEdqea89UKW2qFQ _oI-ZivWnEdqea89UKW2qFQ _oI-ZrvWnEdqea89UKW2qFQ _oI-ZqvWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12MPWnEdqea89UKW2qFQ" source="UML::StateMachines::BehaviorStateMachines" references="_oSXmK_WnEdqea89UKW2qFQ _oSqha_WnEdqea89UKW2qFQ _oS9cLPWnEdqea89UKW2qFQ _oSqhRPWnEdqea89UKW2qFQ _oTaH4PWnEdqea89UKW2qFQ _oTj47vWnEdqea89UKW2qFQ _oTQ-AfWnEdqea89UKW2qFQ _oSqhAPWnEdqea89UKW2qFQ _oS9cHPWnEdqea89UKW2qFQ _oM20BfWnEdqea89UKW2qFQ _oS9cSfWnEdqea89UKW2qFQ _oT2z3PWnEdqea89UKW2qFQ _oTaH9PWnEdqea89UKW2qFQ _oTaH8PWnEdqea89UKW2qFQ _oUAk1PWnEdqea89UKW2qFQ _oSqhKPWnEdqea89UKW2qFQ _oTtC0PWnEdqea89UKW2qFQ _oTaIBPWnEdqea89UKW2qFQ _oT2z0PWnEdqea89UKW2qFQ _oSqhVvWnEdqea89UKW2qFQ _oTj4-fWnEdqea89UKW2qFQ _oTj4-_WnEdqea89UKW2qFQ _oTaIGfWnEdqea89UKW2qFQ _oSqhW_WnEdqea89UKW2qFQ _oTHNGfWnEdqea89UKW2qFQ _oT2z8_WnEdqea89UKW2qFQ _oTaIDfWnEdqea89UKW2qFQ _oSqhJPWnEdqea89UKW2qFQ _oTj49vWnEdqea89UKW2qFQ _oTj44PWnEdqea89UKW2qFQ _oT2z6fWnEdqea89UKW2qFQ _oTtC4fWnEdqea89UKW2qFQ _oTQ9-fWnEdqea89UKW2qFQ _oS9b8PWnEdqea89UKW2qFQ _oT2z1fWnEdqea89UKW2qFQ _oSXmEPWnEdqea89UKW2qFQ _oT2z8PWnEdqea89UKW2qFQ _oTtC1vWnEdqea89UKW2qFQ _oT2z7vWnEdqea89UKW2qFQ _oTtC2PWnEdqea89UKW2qFQ _oTj49fWnEdqea89UKW2qFQ _oTaH-PWnEdqea89UKW2qFQ _oTj48vWnEdqea89UKW2qFQ _oSqhFPWnEdqea89UKW2qFQ _oS9cFPWnEdqea89UKW2qFQ _oSXmPvWnEdqea89UKW2qFQ _oT2z2vWnEdqea89UKW2qFQ _oS9cEPWnEdqea89UKW2qFQ _oTaH_PWnEdqea89UKW2qFQ _oTtC3PWnEdqea89UKW2qFQ _oTaIE_WnEdqea89UKW2qFQ _oSqhUfWnEdqea89UKW2qFQ _oSqhLPWnEdqea89UKW2qFQ _oT2z1_WnEdqea89UKW2qFQ _oSqhZfWnEdqea89UKW2qFQ _oTtC6_WnEdqea89UKW2qFQ _oSXmJ_WnEdqea89UKW2qFQ _oS9cQfWnEdqea89UKW2qFQ _oSqhTPWnEdqea89UKW2qFQ _oTj5APWnEdqea89UKW2qFQ _oT2z4fWnEdqea89UKW2qFQ _oS9cPvWnEdqea89UKW2qFQ _oTaIAPWnEdqea89UKW2qFQ _oTtC3_WnEdqea89UKW2qFQ _oS9cKPWnEdqea89UKW2qFQ _oUAk1fWnEdqea89UKW2qFQ _oT2z0vWnEdqea89UKW2qFQ _oS9cGPWnEdqea89UKW2qFQ _oSqhF_WnEdqea89UKW2qFQ _oTj48_WnEdqea89UKW2qFQ _oTtC5PWnEdqea89UKW2qFQ _oSXmL_WnEdqea89UKW2qFQ _oTtC1PWnEdqea89UKW2qFQ _oUAk0PWnEdqea89UKW2qFQ _oSqhcfWnEdqea89UKW2qFQ _oS9cIPWnEdqea89UKW2qFQ _oS9cCfWnEdqea89UKW2qFQ _oTQ98PWnEdqea89UKW2qFQ _oSqhYPWnEdqea89UKW2qFQ _oS9cTfWnEdqea89UKW2qFQ _oTj48PWnEdqea89UKW2qFQ _oTj49PWnEdqea89UKW2qFQ _oSqhPPWnEdqea89UKW2qFQ _oTHNDvWnEdqea89UKW2qFQ _oTj5AvWnEdqea89UKW2qFQ _oSXmRPWnEdqea89UKW2qFQ _oS9cJPWnEdqea89UKW2qFQ _oTQ9_fWnEdqea89UKW2qFQ _oT2z5PWnEdqea89UKW2qFQ _oSqhSPWnEdqea89UKW2qFQ _oS9cOfWnEdqea89UKW2qFQ _oT2z5vWnEdqea89UKW2qFQ _oSqhIPWnEdqea89UKW2qFQ _oSXmI_WnEdqea89UKW2qFQ _oTtC5vWnEdqea89UKW2qFQ _oTaICPWnEdqea89UKW2qFQ _oSqhOPWnEdqea89UKW2qFQ _oTj4_fWnEdqea89UKW2qFQ _oTtC2vWnEdqea89UKW2qFQ _oSXmH_WnEdqea89UKW2qFQ _oSqhHfWnEdqea89UKW2qFQ _oS9cMfWnEdqea89UKW2qFQ _oS9cRfWnEdqea89UKW2qFQ _oTHNEfWnEdqea89UKW2qFQ _oT2z3_WnEdqea89UKW2qFQ _oUAk0fWnEdqea89UKW2qFQ _oTHNFfWnEdqea89UKW2qFQ _oTaIIvWnEdqea89UKW2qFQ _oS9cDPWnEdqea89UKW2qFQ _oT2z6_WnEdqea89UKW2qFQ _oSXmN_WnEdqea89UKW2qFQ _oSqhMPWnEdqea89UKW2qFQ _oSqhNPWnEdqea89UKW2qFQ _oSqhQPWnEdqea89UKW2qFQ _oSqhGvWnEdqea89UKW2qFQ _oTtC6fWnEdqea89UKW2qFQ _oTHM8PWnEdqea89UKW2qFQ _oTtC0fWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12MfWnEdqea89UKW2qFQ" source="UML::Actions::IntermediateActions" references="_oP_AdvWnEdqea89UKW2qFQ _oQk2b_WnEdqea89UKW2qFQ _oP1Pl_WnEdqea89UKW2qFQ _oQbsgfWnEdqea89UKW2qFQ _oQR7kPWnEdqea89UKW2qFQ _oRBiSfWnEdqea89UKW2qFQ _oQ4YYfWnEdqea89UKW2qFQ _oPsFj_WnEdqea89UKW2qFQ _oQk2aPWnEdqea89UKW2qFQ _oRBiTPWnEdqea89UKW2qFQ _oPiUk_WnEdqea89UKW2qFQ _oQk2ZfWnEdqea89UKW2qFQ _oQunV_WnEdqea89UKW2qFQ _oQk2Y_WnEdqea89UKW2qFQ _oP_AcPWnEdqea89UKW2qFQ _oQIKcPWnEdqea89UKW2qFQ _oPsFp_WnEdqea89UKW2qFQ _oQ4YWPWnEdqea89UKW2qFQ _oQR7dvWnEdqea89UKW2qFQ _oRBiWfWnEdqea89UKW2qFQ _oQbsdPWnEdqea89UKW2qFQ _oRBiVvWnEdqea89UKW2qFQ _oP_AmvWnEdqea89UKW2qFQ _oP_AnvWnEdqea89UKW2qFQ _oQk2cvWnEdqea89UKW2qFQ _oP_AhvWnEdqea89UKW2qFQ _oPsFgPWnEdqea89UKW2qFQ _oP1Pk_WnEdqea89UKW2qFQ _oQunX_WnEdqea89UKW2qFQ _oQ4YVfWnEdqea89UKW2qFQ _oQk2VvWnEdqea89UKW2qFQ _oQbsePWnEdqea89UKW2qFQ _oQk2WfWnEdqea89UKW2qFQ _oP_AefWnEdqea89UKW2qFQ _oQ4Yb_WnEdqea89UKW2qFQ _oQbsiPWnEdqea89UKW2qFQ _oQR7gfWnEdqea89UKW2qFQ _oQunVfWnEdqea89UKW2qFQ _oQbsYPWnEdqea89UKW2qFQ _oQunUvWnEdqea89UKW2qFQ _oQ4YXPWnEdqea89UKW2qFQ _oPsFq_WnEdqea89UKW2qFQ _oP1PhvWnEdqea89UKW2qFQ _oQIKYPWnEdqea89UKW2qFQ _oPsFn_WnEdqea89UKW2qFQ _oPsFk_WnEdqea89UKW2qFQ _oQ4Yc_WnEdqea89UKW2qFQ _oRBiUPWnEdqea89UKW2qFQ _oQ4YZfWnEdqea89UKW2qFQ _oPsFuvWnEdqea89UKW2qFQ _oPsFjPWnEdqea89UKW2qFQ _oPsFifWnEdqea89UKW2qFQ _oRBiQ_WnEdqea89UKW2qFQ _oQ4YdfWnEdqea89UKW2qFQ _oQIKhvWnEdqea89UKW2qFQ _oP1PpPWnEdqea89UKW2qFQ _oRBiW_WnEdqea89UKW2qFQ _oQk2W_WnEdqea89UKW2qFQ _oP_Ag_WnEdqea89UKW2qFQ _oQbsafWnEdqea89UKW2qFQ _oQunWvWnEdqea89UKW2qFQ _oQbslfWnEdqea89UKW2qFQ _oQ4YZ_WnEdqea89UKW2qFQ _oP_AffWnEdqea89UKW2qFQ _oQR7cPWnEdqea89UKW2qFQ _oP1PgvWnEdqea89UKW2qFQ _oQbskfWnEdqea89UKW2qFQ _oQbshPWnEdqea89UKW2qFQ _oQR7bPWnEdqea89UKW2qFQ _oQunYfWnEdqea89UKW2qFQ _oQR7YPWnEdqea89UKW2qFQ _oP1PoPWnEdqea89UKW2qFQ _oQR7evWnEdqea89UKW2qFQ _oQR7ffWnEdqea89UKW2qFQ _oQIKbPWnEdqea89UKW2qFQ _oP1PivWnEdqea89UKW2qFQ _oQ4YbPWnEdqea89UKW2qFQ _oQ4YVPWnEdqea89UKW2qFQ _oQk2avWnEdqea89UKW2qFQ _oQIKdPWnEdqea89UKW2qFQ _oQR7afWnEdqea89UKW2qFQ _oRBiYPWnEdqea89UKW2qFQ _oPsFo_WnEdqea89UKW2qFQ _oQk2UfWnEdqea89UKW2qFQ _oQR7h_WnEdqea89UKW2qFQ _oQ4YUfWnEdqea89UKW2qFQ _oQbscPWnEdqea89UKW2qFQ _oQk2c_WnEdqea89UKW2qFQ _oRBiRPWnEdqea89UKW2qFQ _oRBiUvWnEdqea89UKW2qFQ _oQk2XvWnEdqea89UKW2qFQ _oQunXPWnEdqea89UKW2qFQ _oQk2YPWnEdqea89UKW2qFQ _oQk2VPWnEdqea89UKW2qFQ _oQR7lPWnEdqea89UKW2qFQ _oRBiVfWnEdqea89UKW2qFQ _oRBiR_WnEdqea89UKW2qFQ _oQk2bfWnEdqea89UKW2qFQ _oQ4YXvWnEdqea89UKW2qFQ _oQ4YavWnEdqea89UKW2qFQ _oRBiTfWnEdqea89UKW2qFQ _oQ4YYvWnEdqea89UKW2qFQ _oQunUPWnEdqea89UKW2qFQ _oP_AivWnEdqea89UKW2qFQ _oPiUhPWnEdqea89UKW2qFQ _oQ4YcPWnEdqea89UKW2qFQ _oP1PcPWnEdqea89UKW2qFQ _oRBiQPWnEdqea89UKW2qFQ _oQk2UPWnEdqea89UKW2qFQ _oRBiQvWnEdqea89UKW2qFQ _oRBiXvWnEdqea89UKW2qFQ _oQ4YUPWnEdqea89UKW2qFQ _oQbsbfWnEdqea89UKW2qFQ _oP_AlvWnEdqea89UKW2qFQ _oPiUl_WnEdqea89UKW2qFQ _oQ4YWfWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12MvWnEdqea89UKW2qFQ" source="UML::Deployments::Artifacts" references="_oOMQ0vWnEdqea89UKW2qFQ _-lGRgHLzEdqziYxiZo0YtA _oOMQzvWnEdqea89UKW2qFQ _oOWByPWnEdqea89UKW2qFQ _oOWBwvWnEdqea89UKW2qFQ _oOWBu_WnEdqea89UKW2qFQ _oOWBtfWnEdqea89UKW2qFQ _oOWBsvWnEdqea89UKW2qFQ _oOWBt_WnEdqea89UKW2qFQ _oOMQ2vWnEdqea89UKW2qFQ _oOWBuPWnEdqea89UKW2qFQ _oOWBvvWnEdqea89UKW2qFQ _oOMQxvWnEdqea89UKW2qFQ _oOWBxfWnEdqea89UKW2qFQ _oOWBsPWnEdqea89UKW2qFQ _oOMQ1vWnEdqea89UKW2qFQ _oOMQyvWnEdqea89UKW2qFQ _oOMQ3fWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok12M_WnEdqea89UKW2qFQ" source="UML::Activities::StructuredActivities" references="_oJR7ivWnEdqea89UKW2qFQ _oJR7gPWnEdqea89UKW2qFQ _oJR7nPWnEdqea89UKW2qFQ _oJIKqvWnEdqea89UKW2qFQ _oJk2fvWnEdqea89UKW2qFQ _oJIKnvWnEdqea89UKW2qFQ _oJk2i_WnEdqea89UKW2qFQ _oJk2k_WnEdqea89UKW2qFQ _oIiUxfWnEdqea89UKW2qFQ _oJk2nfWnEdqea89UKW2qFQ _oJIKi_WnEdqea89UKW2qFQ _oI-ZjvWnEdqea89UKW2qFQ _oJk2h_WnEdqea89UKW2qFQ _oJk2m_WnEdqea89UKW2qFQ _oJR7g_WnEdqea89UKW2qFQ _oJR7tPWnEdqea89UKW2qFQ _oJIKhPWnEdqea89UKW2qFQ _oJR7kvWnEdqea89UKW2qFQ _oJIKj_WnEdqea89UKW2qFQ _oJk2j_WnEdqea89UKW2qFQ _oJk2efWnEdqea89UKW2qFQ _oI-ZsPWnEdqea89UKW2qFQ _oI-ZgPWnEdqea89UKW2qFQ _oJR7lvWnEdqea89UKW2qFQ _oJR7qPWnEdqea89UKW2qFQ _oJIKk_WnEdqea89UKW2qFQ _oJR7rPWnEdqea89UKW2qFQ _oJk2jvWnEdqea89UKW2qFQ _oJk2gfWnEdqea89UKW2qFQ _oIiUwvWnEdqea89UKW2qFQ _oJIKovWnEdqea89UKW2qFQ _oJk2dPWnEdqea89UKW2qFQ _oJk2mfWnEdqea89UKW2qFQ _oJR7hvWnEdqea89UKW2qFQ _oJIKpvWnEdqea89UKW2qFQ _oIreyPWnEdqea89UKW2qFQ _oJIKsPWnEdqea89UKW2qFQ _oI-ZlfWnEdqea89UKW2qFQ _oJk2dfWnEdqea89UKW2qFQ _oI-ZkfWnEdqea89UKW2qFQ _oJIKs_WnEdqea89UKW2qFQ _oJk2hfWnEdqea89UKW2qFQ _oJIKmfWnEdqea89UKW2qFQ _oJk2fPWnEdqea89UKW2qFQ _oI-Zo_WnEdqea89UKW2qFQ _oJR7oPWnEdqea89UKW2qFQ _oI-ZsfWnEdqea89UKW2qFQ _oJk2ePWnEdqea89UKW2qFQ _oJR7wPWnEdqea89UKW2qFQ _oI-ZhvWnEdqea89UKW2qFQ _oJbFcPWnEdqea89UKW2qFQ _oJR7pPWnEdqea89UKW2qFQ _oI-ZpvWnEdqea89UKW2qFQ _oI-ZivWnEdqea89UKW2qFQ _oJk2cvWnEdqea89UKW2qFQ _oJk2ivWnEdqea89UKW2qFQ _oJR7sPWnEdqea89UKW2qFQ _oJR7yPWnEdqea89UKW2qFQ _oJR7jvWnEdqea89UKW2qFQ _oI-ZrvWnEdqea89UKW2qFQ _oJk2gvWnEdqea89UKW2qFQ _oJk2lvWnEdqea89UKW2qFQ _oJk2cPWnEdqea89UKW2qFQ _oJbFc_WnEdqea89UKW2qFQ _oI-ZqvWnEdqea89UKW2qFQ _oJk2ffWnEdqea89UKW2qFQ _oJIKrfWnEdqea89UKW2qFQ _oJk2kvWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok_nIPWnEdqea89UKW2qFQ" source="UML::Actions::BasicActions" references="_oI1PrfWnEdqea89UKW2qFQ _oIrexPWnEdqea89UKW2qFQ _oI1Ps_WnEdqea89UKW2qFQ _oI1Pr_WnEdqea89UKW2qFQ _oIrez_WnEdqea89UKW2qFQ _oI1PpPWnEdqea89UKW2qFQ _oI1PsvWnEdqea89UKW2qFQ _oIre0_WnEdqea89UKW2qFQ _oI1PqPWnEdqea89UKW2qFQ _oI1PmfWnEdqea89UKW2qFQ _oIiUrPWnEdqea89UKW2qFQ _oIiUxfWnEdqea89UKW2qFQ _oIremfWnEdqea89UKW2qFQ _oIiUyPWnEdqea89UKW2qFQ _oIiUofWnEdqea89UKW2qFQ _oI1PqvWnEdqea89UKW2qFQ _oI1PnvWnEdqea89UKW2qFQ _oIiUsPWnEdqea89UKW2qFQ _oIre1_WnEdqea89UKW2qFQ _oI1PtvWnEdqea89UKW2qFQ _oIiU2_WnEdqea89UKW2qFQ _oIre5fWnEdqea89UKW2qFQ _oIiUy_WnEdqea89UKW2qFQ _oIrenfWnEdqea89UKW2qFQ _oIiU3vWnEdqea89UKW2qFQ _oIreofWnEdqea89UKW2qFQ _oI1PuvWnEdqea89UKW2qFQ _oIiUwvWnEdqea89UKW2qFQ _oI1PlvWnEdqea89UKW2qFQ _oIiUz_WnEdqea89UKW2qFQ _oIiUqPWnEdqea89UKW2qFQ _oIiUpPWnEdqea89UKW2qFQ _oI1Pp_WnEdqea89UKW2qFQ _oIreyPWnEdqea89UKW2qFQ _oI1PpfWnEdqea89UKW2qFQ _oI1Pt_WnEdqea89UKW2qFQ _oI1Pn_WnEdqea89UKW2qFQ _oI1PlPWnEdqea89UKW2qFQ _oIiUtPWnEdqea89UKW2qFQ _oI1PvfWnEdqea89UKW2qFQ _oI1PovWnEdqea89UKW2qFQ _oIre3fWnEdqea89UKW2qFQ _oI1Pm_WnEdqea89UKW2qFQ _oIresPWnEdqea89UKW2qFQ _oIretPWnEdqea89UKW2qFQ _oIrekPWnEdqea89UKW2qFQ _oIreuPWnEdqea89UKW2qFQ _oIrey_WnEdqea89UKW2qFQ _oIiUvvWnEdqea89UKW2qFQ _oI1PuPWnEdqea89UKW2qFQ _oI1PkfWnEdqea89UKW2qFQ _oI1PkPWnEdqea89UKW2qFQ _oIre5PWnEdqea89UKW2qFQ _oIiUuPWnEdqea89UKW2qFQ _Gjgl0GveEdq4DLWZOhbdEA _oI1Pu_WnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok_nIfWnEdqea89UKW2qFQ" source="UML::UseCases" references="_oMaIF_WnEdqea89UKW2qFQ _oMQXEPWnEdqea89UKW2qFQ _oMaIH_WnEdqea89UKW2qFQ _oMjSAfWnEdqea89UKW2qFQ _oMaIOfWnEdqea89UKW2qFQ _oMjR_fWnEdqea89UKW2qFQ _oMaINfWnEdqea89UKW2qFQ _oMjR8PWnEdqea89UKW2qFQ _6UV2QGwJEdq7X4sGURiZYA _oMjR9_WnEdqea89UKW2qFQ _oMQXGPWnEdqea89UKW2qFQ _oMjSCvWnEdqea89UKW2qFQ _oMjR__WnEdqea89UKW2qFQ _oMQXCfWnEdqea89UKW2qFQ _oMQXFPWnEdqea89UKW2qFQ _oMaIJvWnEdqea89UKW2qFQ _oMjSCPWnEdqea89UKW2qFQ _oMQXJPWnEdqea89UKW2qFQ _oMaIG_WnEdqea89UKW2qFQ _oMjR9fWnEdqea89UKW2qFQ _oMjR-vWnEdqea89UKW2qFQ _oMaIAPWnEdqea89UKW2qFQ _oMaIMfWnEdqea89UKW2qFQ _oMQXAPWnEdqea89UKW2qFQ _oMjSBfWnEdqea89UKW2qFQ _oMaIE_WnEdqea89UKW2qFQ _oMQXIPWnEdqea89UKW2qFQ _oMQXKPWnEdqea89UKW2qFQ _oMQXHPWnEdqea89UKW2qFQ _oMaID_WnEdqea89UKW2qFQ _oMaILPWnEdqea89UKW2qFQ _oMjSBPWnEdqea89UKW2qFQ _oMjR8vWnEdqea89UKW2qFQ _oMjSDfWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok_nIvWnEdqea89UKW2qFQ" source="UML::Activities::CompleteActivities" references="_oYeOFvWnEdqea89UKW2qFQ _oXunNPWnEdqea89UKW2qFQ _oXldT_WnEdqea89UKW2qFQ _oXunMPWnEdqea89UKW2qFQ _oYLTIPWnEdqea89UKW2qFQ _oX4YTfWnEdqea89UKW2qFQ _oX4YMPWnEdqea89UKW2qFQ _oYn_FfWnEdqea89UKW2qFQ _oXunR_WnEdqea89UKW2qFQ _oKxJZfWnEdqea89UKW2qFQ _oYCJWvWnEdqea89UKW2qFQ _oYVEKPWnEdqea89UKW2qFQ _oYVELvWnEdqea89UKW2qFQ _oYeOEPWnEdqea89UKW2qFQ _oKxJWPWnEdqea89UKW2qFQ _oYCJQPWnEdqea89UKW2qFQ _oYCJZ_WnEdqea89UKW2qFQ _oYeOG_WnEdqea89UKW2qFQ _oYn_F_WnEdqea89UKW2qFQ _rHT3YKOsEdqi_5gqUMOQtA _oX4YNPWnEdqea89UKW2qFQ _oYeOJ_WnEdqea89UKW2qFQ _oYLTNfWnEdqea89UKW2qFQ _oYLTQfWnEdqea89UKW2qFQ _oI-ZjvWnEdqea89UKW2qFQ _oYVEMPWnEdqea89UKW2qFQ _oK66RvWnEdqea89UKW2qFQ _oYVENvWnEdqea89UKW2qFQ _oYLTLvWnEdqea89UKW2qFQ _oI-ZsPWnEdqea89UKW2qFQ _oI-ZgPWnEdqea89UKW2qFQ _oX4YP_WnEdqea89UKW2qFQ _oYn_EPWnEdqea89UKW2qFQ _oYCJV_WnEdqea89UKW2qFQ _oYLTOvWnEdqea89UKW2qFQ _oXunTfWnEdqea89UKW2qFQ _oXunUfWnEdqea89UKW2qFQ _oYn_EvWnEdqea89UKW2qFQ _oYLTKvWnEdqea89UKW2qFQ _oYVEOvWnEdqea89UKW2qFQ _oIreyPWnEdqea89UKW2qFQ _TUPtYGveEdq4DLWZOhbdEA _oYCJXvWnEdqea89UKW2qFQ _oYCJMPWnEdqea89UKW2qFQ _oI-ZkfWnEdqea89UKW2qFQ _oYeOF_WnEdqea89UKW2qFQ _oYCJPPWnEdqea89UKW2qFQ _oYeOEfWnEdqea89UKW2qFQ _oYCJVPWnEdqea89UKW2qFQ _KyaPMGveEdq4DLWZOhbdEA _oYn_GvWnEdqea89UKW2qFQ _oIiUtPWnEdqea89UKW2qFQ _oYVEM_WnEdqea89UKW2qFQ _oI-Zo_WnEdqea89UKW2qFQ _oYeOIvWnEdqea89UKW2qFQ _oYeOHvWnEdqea89UKW2qFQ _oYeOIfWnEdqea89UKW2qFQ _oX4YRfWnEdqea89UKW2qFQ _oX4YQvWnEdqea89UKW2qFQ _oYVEMfWnEdqea89UKW2qFQ _oYCJRPWnEdqea89UKW2qFQ _oX4YSfWnEdqea89UKW2qFQ _oNcp8PWnEdqea89UKW2qFQ _oYeOGvWnEdqea89UKW2qFQ _oXunSvWnEdqea89UKW2qFQ _oYn_HPWnEdqea89UKW2qFQ _oYLTJvWnEdqea89UKW2qFQ _oYeOHfWnEdqea89UKW2qFQ _oYeOJfWnEdqea89UKW2qFQ _oYeOGfWnEdqea89UKW2qFQ _oI-ZqvWnEdqea89UKW2qFQ _oYCJY_WnEdqea89UKW2qFQ _oYVEN_WnEdqea89UKW2qFQ _oYVEIvWnEdqea89UKW2qFQ _oYeOFPWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok_nI_WnEdqea89UKW2qFQ" source="UML::Classes::Dependencies" references="_oJ3xZPWnEdqea89UKW2qFQ _oJuncfWnEdqea89UKW2qFQ _oJ3xZ_WnEdqea89UKW2qFQ _rEDGkGwKEdq7X4sGURiZYA _oJ3xafWnEdqea89UKW2qFQ _oC3xkvWnEdqea89UKW2qFQ _oJ3xb_WnEdqea89UKW2qFQ _6UV2QGwJEdq7X4sGURiZYA _oJ3xdfWnEdqea89UKW2qFQ _oJunhvWnEdqea89UKW2qFQ _oJunmfWnEdqea89UKW2qFQ _oJ3xYvWnEdqea89UKW2qFQ _oJ3xcfWnEdqea89UKW2qFQ _ZiwkoGwLEdq7X4sGURiZYA _oJunifWnEdqea89UKW2qFQ _oJund_WnEdqea89UKW2qFQ _jKxnwGwLEdq7X4sGURiZYA _oJ3xbPWnEdqea89UKW2qFQ _oJunlfWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ _oJundPWnEdqea89UKW2qFQ _oJunfvWnEdqea89UKW2qFQ _oCRUo_WnEdqea89UKW2qFQ _csVgUGvtEdqG6fBIPwe-mw _oJungvWnEdqea89UKW2qFQ _oJunjPWnEdqea89UKW2qFQ _oJunkPWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok_nJPWnEdqea89UKW2qFQ" source="UML::CommonBehaviors::BasicBehaviors" references="_oIYjw_WnEdqea89UKW2qFQ _oIFo1PWnEdqea89UKW2qFQ _oIYjs_WnEdqea89UKW2qFQ _oIYjy_WnEdqea89UKW2qFQ _oIOyofWnEdqea89UKW2qFQ _oIYj0vWnEdqea89UKW2qFQ _oIOypPWnEdqea89UKW2qFQ _rHT3YKOsEdqi_5gqUMOQtA _oIFo0fWnEdqea89UKW2qFQ _oIYju_WnEdqea89UKW2qFQ _oIYj0PWnEdqea89UKW2qFQ _oIFoxfWnEdqea89UKW2qFQ _oIFoyfWnEdqea89UKW2qFQ _oIYjuPWnEdqea89UKW2qFQ _oIYjyPWnEdqea89UKW2qFQ _oIOyqPWnEdqea89UKW2qFQ _TUPtYGveEdq4DLWZOhbdEA _oIYjrvWnEdqea89UKW2qFQ _oIFo4PWnEdqea89UKW2qFQ _oIYjsPWnEdqea89UKW2qFQ _oIYjq_WnEdqea89UKW2qFQ _oIYjwvWnEdqea89UKW2qFQ _ChRfcGveEdq4DLWZOhbdEA _oIFo3PWnEdqea89UKW2qFQ _oIFozfWnEdqea89UKW2qFQ _oIYjoPWnEdqea89UKW2qFQ _oIYjtfWnEdqea89UKW2qFQ _oIYjqfWnEdqea89UKW2qFQ _oIYjvvWnEdqea89UKW2qFQ _oIYjv_WnEdqea89UKW2qFQ _oIFowfWnEdqea89UKW2qFQ _oIYjufWnEdqea89UKW2qFQ _oIOyq_WnEdqea89UKW2qFQ _oIOyr_WnEdqea89UKW2qFQ _oIYjzfWnEdqea89UKW2qFQ _oIFo6_WnEdqea89UKW2qFQ _oIFovvWnEdqea89UKW2qFQ _oIFo7_WnEdqea89UKW2qFQ _iY7sMGvsEdqG6fBIPwe-mw _oIYjxvWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok_nJfWnEdqea89UKW2qFQ" source="UML::StateMachines::ProtocolStateMachines" references="_oTaH4PWnEdqea89UKW2qFQ _oSqhAPWnEdqea89UKW2qFQ _oZ0R9PWnEdqea89UKW2qFQ _oZqg-fWnEdqea89UKW2qFQ _oaHM4_WnEdqea89UKW2qFQ _oaQ91PWnEdqea89UKW2qFQ _oaQ90PWnEdqea89UKW2qFQ _oZ0R4PWnEdqea89UKW2qFQ _oZqg_PWnEdqea89UKW2qFQ _oaHM2fWnEdqea89UKW2qFQ _oZqhCvWnEdqea89UKW2qFQ _oaHM3vWnEdqea89UKW2qFQ _oZ0R8PWnEdqea89UKW2qFQ _oZ0R7PWnEdqea89UKW2qFQ _oaQ91vWnEdqea89UKW2qFQ _oZqhBfWnEdqea89UKW2qFQ _8Ugn8GvtEdqG6fBIPwe-mw _oaHM5_WnEdqea89UKW2qFQ _oaHM3PWnEdqea89UKW2qFQ _oaHM0PWnEdqea89UKW2qFQ _oaHM1fWnEdqea89UKW2qFQ _oaHM4fWnEdqea89UKW2qFQ _oaHM6fWnEdqea89UKW2qFQ _oaQ90fWnEdqea89UKW2qFQ _ZAuvEGveEdq4DLWZOhbdEA _oaHM2PWnEdqea89UKW2qFQ _oZqhAPWnEdqea89UKW2qFQ _oZ-C4PWnEdqea89UKW2qFQ _oZ-C8vWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok_nJvWnEdqea89UKW2qFQ" source="UML::CompositeStructures::Collaborations" references="_oKxJTvWnEdqea89UKW2qFQ _oKnYTPWnEdqea89UKW2qFQ _oKnYYfWnEdqea89UKW2qFQ _oKxJSfWnEdqea89UKW2qFQ _oKxJVfWnEdqea89UKW2qFQ _oKxJQPWnEdqea89UKW2qFQ _oKnYVPWnEdqea89UKW2qFQ _oKxJRPWnEdqea89UKW2qFQ _oKxJRvWnEdqea89UKW2qFQ _6UV2QGwJEdq7X4sGURiZYA _oKnYQPWnEdqea89UKW2qFQ _oKnYXfWnEdqea89UKW2qFQ _oKnYWfWnEdqea89UKW2qFQ _oKxJQfWnEdqea89UKW2qFQ _oKxJU_WnEdqea89UKW2qFQ _oKnYUPWnEdqea89UKW2qFQ _KyaPMGveEdq4DLWZOhbdEA _oKxJUPWnEdqea89UKW2qFQ _oKxJS_WnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok_nJ_WnEdqea89UKW2qFQ" source="UML::Activities::BasicActivities" references="_oK66a_WnEdqea89UKW2qFQ _oKxJYvWnEdqea89UKW2qFQ _oKxJZfWnEdqea89UKW2qFQ _oLEER_WnEdqea89UKW2qFQ _oKxJWPWnEdqea89UKW2qFQ _oI-ZjvWnEdqea89UKW2qFQ _oK66RvWnEdqea89UKW2qFQ _oLEETvWnEdqea89UKW2qFQ _oLEEMPWnEdqea89UKW2qFQ _oKxJevWnEdqea89UKW2qFQ _oI-ZgPWnEdqea89UKW2qFQ _oKxJbvWnEdqea89UKW2qFQ _oK66UvWnEdqea89UKW2qFQ _oLEEUfWnEdqea89UKW2qFQ _oKxJdvWnEdqea89UKW2qFQ _oLEEVfWnEdqea89UKW2qFQ _oLN1MvWnEdqea89UKW2qFQ _oKxJfvWnEdqea89UKW2qFQ _oIiUtPWnEdqea89UKW2qFQ _oK66W_WnEdqea89UKW2qFQ _oI-Zo_WnEdqea89UKW2qFQ _oLEENPWnEdqea89UKW2qFQ _oK66ffWnEdqea89UKW2qFQ _oK66QPWnEdqea89UKW2qFQ _oLEEU_WnEdqea89UKW2qFQ _oLEEUPWnEdqea89UKW2qFQ _oLEEOPWnEdqea89UKW2qFQ _oLEEVPWnEdqea89UKW2qFQ _oLEEV_WnEdqea89UKW2qFQ _oIiUuPWnEdqea89UKW2qFQ _oLEERPWnEdqea89UKW2qFQ _oK66Z_WnEdqea89UKW2qFQ _oLN1MPWnEdqea89UKW2qFQ _oKxJcvWnEdqea89UKW2qFQ _oLEEUvWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_ok_nKPWnEdqea89UKW2qFQ" source="UML::Deployments::Nodes" references="_oOWB1_WnEdqea89UKW2qFQ _oOo8qfWnEdqea89UKW2qFQ _oOfyyvWnEdqea89UKW2qFQ _oOfyufWnEdqea89UKW2qFQ _-lGRgHLzEdqziYxiZo0YtA _oOo8rPWnEdqea89UKW2qFQ _oOWBz_WnEdqea89UKW2qFQ _oOWB0_WnEdqea89UKW2qFQ _oOfyx_WnEdqea89UKW2qFQ _oOo8r_WnEdqea89UKW2qFQ _oOWBzPWnEdqea89UKW2qFQ _oOfys_WnEdqea89UKW2qFQ _oOfyvfWnEdqea89UKW2qFQ _oOWB3vWnEdqea89UKW2qFQ _oOfywfWnEdqea89UKW2qFQ _oOo8sPWnEdqea89UKW2qFQ _oOo8pvWnEdqea89UKW2qFQ _oOo8rvWnEdqea89UKW2qFQ _oOo8pPWnEdqea89UKW2qFQ _oFQXJPWnEdqea89UKW2qFQ _oOfysPWnEdqea89UKW2qFQ _oOfytvWnEdqea89UKW2qFQ _Jp_1oGveEdq4DLWZOhbdEA"/>
      <eAnnotations xmi:id="_ok_nKfWnEdqea89UKW2qFQ" source="UML::Activities::ExtraStructuredActivities" references="_oZXmGPWnEdqea89UKW2qFQ _oZErB_WnEdqea89UKW2qFQ _oZXl8PWnEdqea89UKW2qFQ _oZXmHPWnEdqea89UKW2qFQ _oZOcBfWnEdqea89UKW2qFQ _oZErCvWnEdqea89UKW2qFQ _oZXmF_WnEdqea89UKW2qFQ _oZErDvWnEdqea89UKW2qFQ _oZErGPWnEdqea89UKW2qFQ _oZOcCfWnEdqea89UKW2qFQ _oZErEvWnEdqea89UKW2qFQ _oZXmA_WnEdqea89UKW2qFQ _oZOcAfWnEdqea89UKW2qFQ _oZXmHvWnEdqea89UKW2qFQ _oZXmIPWnEdqea89UKW2qFQ _oZXmG_WnEdqea89UKW2qFQ _oZXl__WnEdqea89UKW2qFQ _oZXmHfWnEdqea89UKW2qFQ _oJR7yPWnEdqea89UKW2qFQ _oZXmGfWnEdqea89UKW2qFQ _oZXmB_WnEdqea89UKW2qFQ _oZXmH_WnEdqea89UKW2qFQ _oZXmC_WnEdqea89UKW2qFQ _oZXmD_WnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_olJYIPWnEdqea89UKW2qFQ" source="UML::CompositeStructures::InternalStructures" references="_oKUdVfWnEdqea89UKW2qFQ _oKeOafWnEdqea89UKW2qFQ _FQiVsGwYEdqHKKVoxc0dlA _oKeOZPWnEdqea89UKW2qFQ _oKeOV_WnEdqea89UKW2qFQ _oACf8vWnEdqea89UKW2qFQ _oCk2oPWnEdqea89UKW2qFQ _oKeOVPWnEdqea89UKW2qFQ _oKeOUPWnEdqea89UKW2qFQ _oKeOW_WnEdqea89UKW2qFQ _oKUdZfWnEdqea89UKW2qFQ _6UV2QGwJEdq7X4sGURiZYA _oKKsaPWnEdqea89UKW2qFQ _oKKscPWnEdqea89UKW2qFQ _oKKshPWnEdqea89UKW2qFQ _oKeOcfWnEdqea89UKW2qFQ _oKKsgPWnEdqea89UKW2qFQ _oKeObPWnEdqea89UKW2qFQ _oKeOXfWnEdqea89UKW2qFQ _oCk2nfWnEdqea89UKW2qFQ _oKKsfPWnEdqea89UKW2qFQ _oKUdYfWnEdqea89UKW2qFQ _oKeOcvWnEdqea89UKW2qFQ _aOgw0GveEdq4DLWZOhbdEA _oKUdcPWnEdqea89UKW2qFQ _oKKsbPWnEdqea89UKW2qFQ _oKeOWPWnEdqea89UKW2qFQ _oKUdXfWnEdqea89UKW2qFQ _oKeOZ_WnEdqea89UKW2qFQ _oKeOdfWnEdqea89UKW2qFQ _oKeOYPWnEdqea89UKW2qFQ _oKUdb_WnEdqea89UKW2qFQ _oKUdaPWnEdqea89UKW2qFQ _oKeObvWnEdqea89UKW2qFQ _Jp_1oGveEdq4DLWZOhbdEA _oKUdWfWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_olJYIfWnEdqea89UKW2qFQ" source="UML::Components::PackagingComponents" references="_oZhW9vWnEdqea89UKW2qFQ _oZhW8vWnEdqea89UKW2qFQ _DAbfwa69EdqjppZik4kD8A _oZhW-PWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_olJYIvWnEdqea89UKW2qFQ" source="UML::Components::BasicComponents" references="_oOMQsPWnEdqea89UKW2qFQ _oOMQuvWnEdqea89UKW2qFQ _oOMQs_WnEdqea89UKW2qFQ _oOMQtPWnEdqea89UKW2qFQ _oODG0_WnEdqea89UKW2qFQ _oKKscPWnEdqea89UKW2qFQ _oN5V7vWnEdqea89UKW2qFQ _oODG7_WnEdqea89UKW2qFQ _oODG6_WnEdqea89UKW2qFQ _oOMQsfWnEdqea89UKW2qFQ _oN5V2vWnEdqea89UKW2qFQ _oN5V5vWnEdqea89UKW2qFQ _oODG5_WnEdqea89UKW2qFQ _oODGxvWnEdqea89UKW2qFQ _DAbfwa69EdqjppZik4kD8A _oOMQt_WnEdqea89UKW2qFQ _oN5V3vWnEdqea89UKW2qFQ _oODGwPWnEdqea89UKW2qFQ _oODGzPWnEdqea89UKW2qFQ _oOMQu_WnEdqea89UKW2qFQ _oODGz_WnEdqea89UKW2qFQ _oOMQsvWnEdqea89UKW2qFQ _oN5V1_WnEdqea89UKW2qFQ _oN5V4vWnEdqea89UKW2qFQ _oOMQufWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_olJYI_WnEdqea89UKW2qFQ" source="UML::Classes::Interfaces" references="_oKBidPWnEdqea89UKW2qFQ _oKKsW_WnEdqea89UKW2qFQ _oKBiYvWnEdqea89UKW2qFQ _oKBibvWnEdqea89UKW2qFQ _oKBiePWnEdqea89UKW2qFQ _oKBiifWnEdqea89UKW2qFQ _oKKsYPWnEdqea89UKW2qFQ _M4X2IGveEdq4DLWZOhbdEA _oKBigvWnEdqea89UKW2qFQ _oKKsUPWnEdqea89UKW2qFQ _oKKsWPWnEdqea89UKW2qFQ _oKBiavWnEdqea89UKW2qFQ _oKBifvWnEdqea89UKW2qFQ _oKBijPWnEdqea89UKW2qFQ _8Ugn8GvtEdqG6fBIPwe-mw _oKBihvWnEdqea89UKW2qFQ _oKKsVfWnEdqea89UKW2qFQ _oKKsUvWnEdqea89UKW2qFQ _oKBiZvWnEdqea89UKW2qFQ _l2mXcHLzEdqziYxiZo0YtA _iY7sMGvsEdqG6fBIPwe-mw _oKKsXvWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_olJYJPWnEdqea89UKW2qFQ" source="UML::CompositeStructures::InvocationActions" references="_oMtDCvWnEdqea89UKW2qFQ _oSN1EPWnEdqea89UKW2qFQ _oSN1HfWnEdqea89UKW2qFQ _oIiUyPWnEdqea89UKW2qFQ _oSN1GfWnEdqea89UKW2qFQ _oSN1HvWnEdqea89UKW2qFQ _oSN1FfWnEdqea89UKW2qFQ _oSN1GvWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_olSiEPWnEdqea89UKW2qFQ" source="UML::AuxiliaryConstructs::InformationFlows" references="_oVpjwvWnEdqea89UKW2qFQ _oVytgPWnEdqea89UKW2qFQ _oVpjuvWnEdqea89UKW2qFQ _oVpjwfWnEdqea89UKW2qFQ _oVythPWnEdqea89UKW2qFQ _oVpjvfWnEdqea89UKW2qFQ _oVpjkPWnEdqea89UKW2qFQ _oVpjsfWnEdqea89UKW2qFQ _oVpjx_WnEdqea89UKW2qFQ _oVpjnfWnEdqea89UKW2qFQ _oVpjtfWnEdqea89UKW2qFQ _oVpjrfWnEdqea89UKW2qFQ _oVpjyvWnEdqea89UKW2qFQ _oVpjzPWnEdqea89UKW2qFQ _oVpjufWnEdqea89UKW2qFQ _oVytiPWnEdqea89UKW2qFQ _oVpjxfWnEdqea89UKW2qFQ _oVfynPWnEdqea89UKW2qFQ _oVfykPWnEdqea89UKW2qFQ _oVythfWnEdqea89UKW2qFQ _oVpjpfWnEdqea89UKW2qFQ _oVpjvvWnEdqea89UKW2qFQ _oVpjofWnEdqea89UKW2qFQ _oVytifWnEdqea89UKW2qFQ _oVpjqfWnEdqea89UKW2qFQ _oVytgfWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_olSiEfWnEdqea89UKW2qFQ" source="UML::Classes::AssociationClasses" references="_oaQ94fWnEdqea89UKW2qFQ _oaQ96fWnEdqea89UKW2qFQ _oaQ92vWnEdqea89UKW2qFQ _oaQ97fWnEdqea89UKW2qFQ _oaau0PWnEdqea89UKW2qFQ _Jp_1oGveEdq4DLWZOhbdEA"/>
      <eAnnotations xmi:id="_olSiEvWnEdqea89UKW2qFQ" source="InfrastructureLibrary::Core::PrimitiveTypes" references="_XqvEIGvsEdqG6fBIPwe-mw _dRZxsGvsEdqG6fBIPwe-mw _UdivYGvsEdqG6fBIPwe-mw _aAyVgGvsEdqG6fBIPwe-mw"/>
      <eAnnotations xmi:id="_olcTEPWnEdqea89UKW2qFQ" source="UML::Classes::PowerTypes" references="_oVM3v_WnEdqea89UKW2qFQ _oVWBmPWnEdqea89UKW2qFQ _oVM3rvWnEdqea89UKW2qFQ _6UV2QGwJEdq7X4sGURiZYA _oVWBlPWnEdqea89UKW2qFQ _oVWBmfWnEdqea89UKW2qFQ _oVM3pfWnEdqea89UKW2qFQ _oVM3sfWnEdqea89UKW2qFQ _oVM3uPWnEdqea89UKW2qFQ _oVM3tPWnEdqea89UKW2qFQ _C7AF4GwREdq14q0ETb1t3g"/>
      <eAnnotations xmi:id="_omCI8PWnEdqea89UKW2qFQ" source="UML::Deployments::ComponentDeployments" references="_oZqg9fWnEdqea89UKW2qFQ _oOWBzPWnEdqea89UKW2qFQ _oZqg6fWnEdqea89UKW2qFQ _oZqg8fWnEdqea89UKW2qFQ _oZqg4PWnEdqea89UKW2qFQ _oZhW_PWnEdqea89UKW2qFQ _oZqg7fWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_omCI8fWnEdqea89UKW2qFQ" source="UML::CompositeStructures::StructuredActivities" references="_oJIKhPWnEdqea89UKW2qFQ"/>
      <eAnnotations xmi:id="_omVq8PWnEdqea89UKW2qFQ" source="UML::AuxiliaryConstructs::Models" references="_oVytjvWnEdqea89UKW2qFQ _NVhqMGv0Edq7X4sGURiZYA"/>
      <eAnnotations xmi:id="_onFR0PWnEdqea89UKW2qFQ" source="UML::AuxiliaryConstructs::Profiles" references="_oUTf6fWnEdqea89UKW2qFQ _2QuT0GvdEdq4DLWZOhbdEA"/>
    </eAnnotations>
    <packageImport xmi:id="__as3cGvaEdq4DLWZOhbdEA">
      <importedPackage xmi:type="uml:Model" href="Ecore.uml#439EC3AE03B5"/>
    </packageImport>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_XqvEIGvsEdqG6fBIPwe-mw" name="Integer">
      <ownedComment xmi:id="_oDUdcPWnEdqea89UKW2qFQ" annotatedElement="_XqvEIGvsEdqG6fBIPwe-mw">
        <body>An integer is a primitive type representing integer values.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_UdivYGvsEdqG6fBIPwe-mw" name="Boolean">
      <ownedComment xmi:id="_oDUdcfWnEdqea89UKW2qFQ" annotatedElement="_UdivYGvsEdqG6fBIPwe-mw">
        <body>A Boolean type is used for logical expression, consisting of the predefined values true and false.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_aAyVgGvsEdqG6fBIPwe-mw" name="String">
      <ownedComment xmi:id="_oDUdcvWnEdqea89UKW2qFQ" annotatedElement="_aAyVgGvsEdqG6fBIPwe-mw">
        <body>A string is a sequence of characters in some suitable character set used to display information about the model. Character sets may include non-Roman alphabets and characters.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_dRZxsGvsEdqG6fBIPwe-mw" name="UnlimitedNatural">
      <ownedComment xmi:id="_oDUdc_WnEdqea89UKW2qFQ" annotatedElement="_dRZxsGvsEdqG6fBIPwe-mw">
        <body>An unlimited natural is a primitive type representing unlimited natural values.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oCRUyvWnEdqea89UKW2qFQ" name="Comment">
      <ownedComment xmi:id="_oCRUy_WnEdqea89UKW2qFQ" annotatedElement="_oCRUyvWnEdqea89UKW2qFQ">
        <body>A comment is a textual annotation that can be attached to a set of elements.</body>
      </ownedComment>
      <generalization xmi:id="_oCRUzPWnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oCRUzfWnEdqea89UKW2qFQ" name="body" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oCRUzvWnEdqea89UKW2qFQ" annotatedElement="_oCRUzfWnEdqea89UKW2qFQ">
          <body>Specifies a string that is the comment.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDdnZPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDdnZfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oCRU0fWnEdqea89UKW2qFQ" name="annotatedElement" visibility="public" type="_kl90MGvbEdq4DLWZOhbdEA" association="_oCuAtPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCRU0vWnEdqea89UKW2qFQ" annotatedElement="_oCRU0fWnEdqea89UKW2qFQ">
          <body>References the Element(s) being commented.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDnYYPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDnYYfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JBgfoKPAEdqi_5gqUMOQtA" name="DirectedRelationship" isAbstract="true">
      <ownedComment xmi:id="_oAfL4PWnEdqea89UKW2qFQ" annotatedElement="_JBgfoKPAEdqi_5gqUMOQtA">
        <body>A directed relationship represents a relationship between a collection of source model elements and a collection of target model elements.</body>
      </ownedComment>
      <generalization xmi:id="_oAfL4fWnEdqea89UKW2qFQ" general="_DH62EKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:id="_oAfL4vWnEdqea89UKW2qFQ" name="source" visibility="public" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_oA739fWnEdqea89UKW2qFQ" association="_oCuAuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAfL4_WnEdqea89UKW2qFQ" annotatedElement="_oAfL4vWnEdqea89UKW2qFQ">
          <body>Specifies the sources of the DirectedRelationship.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDnYYvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDnYY_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAfL5vWnEdqea89UKW2qFQ" name="target" visibility="public" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_oA739fWnEdqea89UKW2qFQ" association="_oC3xgPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAfL5_WnEdqea89UKW2qFQ" annotatedElement="_oAfL5vWnEdqea89UKW2qFQ">
          <body>Specifies the targets of the DirectedRelationship.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDnYZPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDnYZfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oD6TbPWnEdqea89UKW2qFQ" name="LiteralSpecification" isAbstract="true">
      <ownedComment xmi:id="_oD6TbfWnEdqea89UKW2qFQ" annotatedElement="_oD6TbPWnEdqea89UKW2qFQ">
        <body>A literal specification identifies a literal constant being modeled.</body>
      </ownedComment>
      <generalization xmi:id="_oD6TbvWnEdqea89UKW2qFQ" general="_oBFBwPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Dy77oGveEdq4DLWZOhbdEA" name="LiteralInteger">
      <ownedComment xmi:id="_oD6Tb_WnEdqea89UKW2qFQ" annotatedElement="_Dy77oGveEdq4DLWZOhbdEA">
        <body>A literal integer is a specification of an integer value.</body>
      </ownedComment>
      <generalization xmi:id="_oD6TcPWnEdqea89UKW2qFQ" general="_oD6TbPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oD6TcfWnEdqea89UKW2qFQ" name="value" type="_XqvEIGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oD6TcvWnEdqea89UKW2qFQ" annotatedElement="_oD6TcfWnEdqea89UKW2qFQ">
          <body>The specified Integer value.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_oD6Tc_WnEdqea89UKW2qFQ" type="_XqvEIGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_e2SLUGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_hAkRkGWKEdq-f4093SZhVA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oD6TdPWnEdqea89UKW2qFQ" name="isComputable" isQuery="true" redefinedOperation="_oBFBxPWnEdqea89UKW2qFQ" bodyCondition="_oD6TdvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oD6TdfWnEdqea89UKW2qFQ" annotatedElement="_oD6TdPWnEdqea89UKW2qFQ">
          <body>The query isComputable() is redefined to be true.</body>
        </ownedComment>
        <ownedRule xmi:id="_oD6TdvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oD6TdPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oD6Td_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oD6TePWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oD6TefWnEdqea89UKW2qFQ" name="integerValue" isQuery="true" redefinedOperation="_oBFByfWnEdqea89UKW2qFQ" bodyCondition="_oD6Te_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oD6TevWnEdqea89UKW2qFQ" annotatedElement="_oD6TefWnEdqea89UKW2qFQ">
          <body>The query integerValue() gives the value.</body>
        </ownedComment>
        <ownedRule xmi:id="_oD6Te_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oD6TefWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oD6TfPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = value</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oD6TffWnEdqea89UKW2qFQ" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oEEEUPWnEdqea89UKW2qFQ" name="LiteralString">
      <ownedComment xmi:id="_oEEEUfWnEdqea89UKW2qFQ" annotatedElement="_oEEEUPWnEdqea89UKW2qFQ">
        <body>A literal string is a specification of a string value.</body>
      </ownedComment>
      <generalization xmi:id="_oEEEUvWnEdqea89UKW2qFQ" general="_oD6TbPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oEEEU_WnEdqea89UKW2qFQ" name="value" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oEEEVPWnEdqea89UKW2qFQ" annotatedElement="_oEEEU_WnEdqea89UKW2qFQ">
          <body>The specified String value.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEEEVfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEEEVvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oEEEV_WnEdqea89UKW2qFQ" name="isComputable" isQuery="true" redefinedOperation="_oBFBxPWnEdqea89UKW2qFQ" bodyCondition="_oEEEWfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEEEWPWnEdqea89UKW2qFQ" annotatedElement="_oEEEV_WnEdqea89UKW2qFQ">
          <body>The query isComputable() is redefined to be true.</body>
        </ownedComment>
        <ownedRule xmi:id="_oEEEWfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oEEEV_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEEEWvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEEEW_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oEEEXPWnEdqea89UKW2qFQ" name="stringValue" isQuery="true" redefinedOperation="_oBFB0_WnEdqea89UKW2qFQ" bodyCondition="_oEEEXvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEEEXfWnEdqea89UKW2qFQ" annotatedElement="_oEEEXPWnEdqea89UKW2qFQ">
          <body>The query stringValue() gives the value.</body>
        </ownedComment>
        <ownedRule xmi:id="_oEEEXvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oEEEXPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEEEX_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = value</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEEEYPWnEdqea89UKW2qFQ" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_FFMNsGveEdq4DLWZOhbdEA" name="LiteralBoolean">
      <ownedComment xmi:id="_oEEEYfWnEdqea89UKW2qFQ" annotatedElement="_FFMNsGveEdq4DLWZOhbdEA">
        <body>A literal Boolean is a specification of a Boolean value.</body>
      </ownedComment>
      <generalization xmi:id="_oEEEYvWnEdqea89UKW2qFQ" general="_oD6TbPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oEEEY_WnEdqea89UKW2qFQ" name="value" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oEEEZPWnEdqea89UKW2qFQ" annotatedElement="_oEEEY_WnEdqea89UKW2qFQ">
          <body>The specified Boolean value.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oEEEZfWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_aXS3gGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_cFthIGWKEdq-f4093SZhVA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oEEEZvWnEdqea89UKW2qFQ" name="isComputable" isQuery="true" redefinedOperation="_oBFBxPWnEdqea89UKW2qFQ" bodyCondition="_oEEEaPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEEEZ_WnEdqea89UKW2qFQ" annotatedElement="_oEEEZvWnEdqea89UKW2qFQ">
          <body>The query isComputable() is redefined to be true.</body>
        </ownedComment>
        <ownedRule xmi:id="_oEEEaPWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oEEEZvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEEEafWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEEEavWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oEEEa_WnEdqea89UKW2qFQ" name="booleanValue" isQuery="true" redefinedOperation="_oBFBzvWnEdqea89UKW2qFQ" bodyCondition="_oEEEbfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEEEbPWnEdqea89UKW2qFQ" annotatedElement="_oEEEa_WnEdqea89UKW2qFQ">
          <body>The query booleanValue() gives the value.</body>
        </ownedComment>
        <ownedRule xmi:id="_oEEEbfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oEEEa_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEEEbvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = value</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEEEb_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oEEEcPWnEdqea89UKW2qFQ" name="LiteralNull">
      <ownedComment xmi:id="_oEEEcfWnEdqea89UKW2qFQ" annotatedElement="_oEEEcPWnEdqea89UKW2qFQ">
        <body>A literal null specifies the lack of a value.</body>
      </ownedComment>
      <generalization xmi:id="_oEEEcvWnEdqea89UKW2qFQ" general="_oD6TbPWnEdqea89UKW2qFQ"/>
      <ownedOperation xmi:id="_oEEEc_WnEdqea89UKW2qFQ" name="isComputable" isQuery="true" redefinedOperation="_oBFBxPWnEdqea89UKW2qFQ" bodyCondition="_oEEEdfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEEEdPWnEdqea89UKW2qFQ" annotatedElement="_oEEEc_WnEdqea89UKW2qFQ">
          <body>The query isComputable() is redefined to be true.</body>
        </ownedComment>
        <ownedRule xmi:id="_oEEEdfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oEEEc_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEEEdvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEEEd_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oEEEePWnEdqea89UKW2qFQ" name="isNull" isQuery="true" redefinedOperation="_oBFB3fWnEdqea89UKW2qFQ" bodyCondition="_oEEEevWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEEEefWnEdqea89UKW2qFQ" annotatedElement="_oEEEePWnEdqea89UKW2qFQ">
          <body>The query isNull() returns true.</body>
        </ownedComment>
        <ownedRule xmi:id="_oEEEevWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oEEEePWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEEEe_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEEEfPWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oBht0PWnEdqea89UKW2qFQ" name="Constraint">
      <ownedComment xmi:id="_oBht0fWnEdqea89UKW2qFQ" annotatedElement="_oBht0PWnEdqea89UKW2qFQ">
        <body>A constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an element.</body>
      </ownedComment>
      <ownedRule xmi:id="_oBht0vWnEdqea89UKW2qFQ" name="not_apply_to_self" constrainedElement="_oBht0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBht0_WnEdqea89UKW2qFQ" annotatedElement="_oBht0vWnEdqea89UKW2qFQ">
          <body>A constraint cannot be applied to itself.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oBht1PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>not constrainedElement->includes(self)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBht1fWnEdqea89UKW2qFQ" name="value_specification_boolean" constrainedElement="_oBht0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBht1vWnEdqea89UKW2qFQ" annotatedElement="_oBht1fWnEdqea89UKW2qFQ">
          <body>The value specification for a constraint must evaluate to a Boolean value.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oBht1_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.specification().booleanValue().isOclKindOf(Boolean)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oEEEffWnEdqea89UKW2qFQ" name="boolean_value" constrainedElement="_oBht0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEEEfvWnEdqea89UKW2qFQ" annotatedElement="_oEEEffWnEdqea89UKW2qFQ">
          <body>The value specification for a constraint must evaluate to a Boolean value.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEEEf_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oEEEgPWnEdqea89UKW2qFQ" name="no_side_effects" constrainedElement="_oBht0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEEEgfWnEdqea89UKW2qFQ" annotatedElement="_oEEEgPWnEdqea89UKW2qFQ">
          <body>Evaluating the value specification for a constraint must not have side effects.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEEEgvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oEEEg_WnEdqea89UKW2qFQ" name="not_applied_to_self" constrainedElement="_oBht0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEEEhPWnEdqea89UKW2qFQ" annotatedElement="_oEEEg_WnEdqea89UKW2qFQ">
          <body>A constraint cannot be applied to itself.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEEEhfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>not constrainedElement->includes(self)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oBht2PWnEdqea89UKW2qFQ" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oBht2fWnEdqea89UKW2qFQ" name="constrainedElement" visibility="public" type="_kl90MGvbEdq4DLWZOhbdEA" isOrdered="true" association="_oC3xifWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBht2vWnEdqea89UKW2qFQ" annotatedElement="_oBht2fWnEdqea89UKW2qFQ">
          <body>The ordered set of Elements referenced by this Constraint.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEEEhvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEEEh_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBht3fWnEdqea89UKW2qFQ" name="specification" visibility="public" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oC3xi_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBht3vWnEdqea89UKW2qFQ" annotatedElement="_oBht3fWnEdqea89UKW2qFQ">
          <body>A condition that must be true when evaluated in order for the constraint to be satisfied.&#xD;
</body>
        </ownedComment>
        <ownedComment xmi:id="_oEEEiPWnEdqea89UKW2qFQ" annotatedElement="_oBht3fWnEdqea89UKW2qFQ">
          <body>A condition that must be true when evaluated in order for the constraint to be satisfied.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEEEifWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEEEivWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBht4fWnEdqea89UKW2qFQ" name="context" visibility="public" type="_ZiwkoGwLEdq7X4sGURiZYA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oC3xuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEEEi_WnEdqea89UKW2qFQ" annotatedElement="_oBht4fWnEdqea89UKW2qFQ">
          <body>Specifies the namespace that owns the NamedElement.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEEEjPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEEEjfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RPl78GwIEdq7X4sGURiZYA" name="ElementImport">
      <ownedComment xmi:id="_oB-ZoPWnEdqea89UKW2qFQ" annotatedElement="_RPl78GwIEdq7X4sGURiZYA">
        <body>An element import identifies an element in another package, and allows the element to be referenced using its name without a qualifier.</body>
      </ownedComment>
      <ownedRule xmi:id="_oB-ZofWnEdqea89UKW2qFQ" name="visibility_public_or_private" constrainedElement="_RPl78GwIEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oB-ZovWnEdqea89UKW2qFQ" annotatedElement="_oB-ZofWnEdqea89UKW2qFQ">
          <body>The visibility of an ElementImport is either public or private.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oENOQPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.visibility = #public or self.visibility = #private</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oB-ZpPWnEdqea89UKW2qFQ" name="imported_element_is_public" constrainedElement="_RPl78GwIEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oB-ZpfWnEdqea89UKW2qFQ" annotatedElement="_oB-ZpPWnEdqea89UKW2qFQ">
          <body>An importedElement has either public visibility or no visibility at all.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oENOQfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.importedElement.visibility.notEmpty() implies self.importedElement.visibility = #public</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oB-Zp_WnEdqea89UKW2qFQ" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:id="_oB-ZqPWnEdqea89UKW2qFQ" name="visibility" visibility="public" type="_AyM_oGwMEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oB-ZqfWnEdqea89UKW2qFQ" annotatedElement="_oB-ZqPWnEdqea89UKW2qFQ">
          <body>Specifies the visibility of the imported PackageableElement within the importing Package. The default visibility is the same as that of the imported element. If the imported element does not have a visibility, it is possible to add visibility to the element import.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oENOQvWnEdqea89UKW2qFQ" type="_AyM_oGwMEdq7X4sGURiZYA" instance="_oCbFo_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oB-Zq_WnEdqea89UKW2qFQ" name="alias" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oB-ZrPWnEdqea89UKW2qFQ" annotatedElement="_oB-Zq_WnEdqea89UKW2qFQ">
          <body>Specifies the name that should be added to the namespace of the importing Package in lieu of the name of the imported PackagableElement. The aliased name must not clash with any other member name in the importing Package. By default, no alias is used.</body>
        </ownedComment>
        <ownedComment xmi:id="_oENOQ_WnEdqea89UKW2qFQ" annotatedElement="_oB-Zq_WnEdqea89UKW2qFQ">
          <body>Specifies the name that should be added to the namespace of the importing Pack-age in lieu of the name of the imported PackagableElement. The aliased name must not clash with any other member name in the importing Package. By default, no alias is used.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oENORPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oENORfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oB-Zr_WnEdqea89UKW2qFQ" name="importedElement" visibility="public" type="_jKxnwGwLEdq7X4sGURiZYA" subsettedProperty="_oAfL5vWnEdqea89UKW2qFQ" association="_oCuAl_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB-ZsPWnEdqea89UKW2qFQ" annotatedElement="_oB-Zr_WnEdqea89UKW2qFQ">
          <body>Specifies the PackageableElement whose name is to be added to a Namespace.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oENORvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oENOR_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oB-Zs_WnEdqea89UKW2qFQ" name="importingNamespace" visibility="public" type="_ZiwkoGwLEdq7X4sGURiZYA" subsettedProperty="_oAfL4vWnEdqea89UKW2qFQ _oAfL9fWnEdqea89UKW2qFQ" association="_oCuAmvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB-ZtPWnEdqea89UKW2qFQ" annotatedElement="_oB-Zs_WnEdqea89UKW2qFQ">
          <body>Specifies the Namespace that imports a PackageableElement from another Package.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oENOSPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oENOSfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oB-Zt_WnEdqea89UKW2qFQ" name="getName" visibility="public" isQuery="true" bodyCondition="_oB-ZufWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB-ZuPWnEdqea89UKW2qFQ" annotatedElement="_oB-Zt_WnEdqea89UKW2qFQ">
          <body>The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.</body>
        </ownedComment>
        <ownedRule xmi:id="_oB-ZufWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oB-Zt_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oENOSvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if self.alias->notEmpty() then&#xA;  self.alias&#xA;else&#xA;  self.importedElement.name&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oB-Zu_WnEdqea89UKW2qFQ" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oA73_vWnEdqea89UKW2qFQ" name="TypedElement" isAbstract="true">
      <ownedComment xmi:id="_oA73__WnEdqea89UKW2qFQ" annotatedElement="_oA73_vWnEdqea89UKW2qFQ">
        <body>A typed element is a kind of named element that represents an element with a type.</body>
      </ownedComment>
      <ownedComment xmi:id="_oEgwSPWnEdqea89UKW2qFQ" annotatedElement="_oA73_vWnEdqea89UKW2qFQ">
        <body>A typed element has a type.</body>
      </ownedComment>
      <generalization xmi:id="_oA74APWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oA74AfWnEdqea89UKW2qFQ" name="type" visibility="public" type="_ynRtoGvtEdqG6fBIPwe-mw" association="_oCk2kPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oA74AvWnEdqea89UKW2qFQ" annotatedElement="_oA74AfWnEdqea89UKW2qFQ">
          <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
        </ownedComment>
        <ownedComment xmi:id="_oEgwSfWnEdqea89UKW2qFQ" annotatedElement="_oA74AfWnEdqea89UKW2qFQ">
          <body>The type of the TypedElement.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEgwSvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEgwS_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oAoV0PWnEdqea89UKW2qFQ" name="Feature" isAbstract="true">
      <ownedComment xmi:id="_oAoV0fWnEdqea89UKW2qFQ" annotatedElement="_oAoV0PWnEdqea89UKW2qFQ">
        <body>A feature declares a behavioral or structural characteristic of instances of classifiers.</body>
      </ownedComment>
      <generalization xmi:id="_oAoV0vWnEdqea89UKW2qFQ" general="_oA731vWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oE9cMPWnEdqea89UKW2qFQ" name="isStatic" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oE9cMfWnEdqea89UKW2qFQ" annotatedElement="_oE9cMPWnEdqea89UKW2qFQ">
          <body>Specifies whether this feature characterizes individual instances classified by the classifier (false) or the classifier itself (true).</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oE9cMvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAoV0_WnEdqea89UKW2qFQ" name="featuringClassifier" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_oC3xh_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAoV1PWnEdqea89UKW2qFQ" annotatedElement="_oAoV0_WnEdqea89UKW2qFQ">
          <body>Redefines the corresponding association in Abstractions.</body>
        </ownedComment>
        <ownedComment xmi:id="_oE9cM_WnEdqea89UKW2qFQ" annotatedElement="_oAoV0_WnEdqea89UKW2qFQ">
          <body>The Classifiers that have this Feature as a feature.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oE9cNPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oE9cNfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oA731vWnEdqea89UKW2qFQ" name="RedefinableElement" isAbstract="true">
      <ownedComment xmi:id="_oA731_WnEdqea89UKW2qFQ" annotatedElement="_oA731vWnEdqea89UKW2qFQ">
        <body>A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier.</body>
      </ownedComment>
      <ownedRule xmi:id="_oA732PWnEdqea89UKW2qFQ" name="redefinition_context_valid" constrainedElement="_oA731vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oA732fWnEdqea89UKW2qFQ" annotatedElement="_oA732PWnEdqea89UKW2qFQ">
          <body>At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oE9cNvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.redefinedElement->forAll(e | self.isRedefinitionContextValid(e))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oA732_WnEdqea89UKW2qFQ" name="redefinition_consistent" constrainedElement="_oA731vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oA733PWnEdqea89UKW2qFQ" annotatedElement="_oA732_WnEdqea89UKW2qFQ">
          <body>A redefining element must be consistent with each redefined element.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oE9cN_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.redefinedElement->forAll(re | re.isConsistentWith(self))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oA733vWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oE9cOPWnEdqea89UKW2qFQ" name="isLeaf" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oE9cOfWnEdqea89UKW2qFQ" annotatedElement="_oE9cOPWnEdqea89UKW2qFQ">
          <body>Indicates whether it is possible to further specialize a RedefinableElement. If the value is true, then it is not possible to further specialize the RedefinableElement.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oE9cOvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oA734_WnEdqea89UKW2qFQ" name="redefinedElement" visibility="public" type="_oA731vWnEdqea89UKW2qFQ" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_oC3xhfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oA735PWnEdqea89UKW2qFQ" annotatedElement="_oA734_WnEdqea89UKW2qFQ">
          <body>The redefinable element that is being redefined by this element.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oE9cO_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oE9cPPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oA733_WnEdqea89UKW2qFQ" name="redefinitionContext" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_oC3xg_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oA734PWnEdqea89UKW2qFQ" annotatedElement="_oA733_WnEdqea89UKW2qFQ">
          <body>References the contexts that this element may be redefined from.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oE9cPfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oE9cPvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oA735_WnEdqea89UKW2qFQ" name="isConsistentWith" visibility="public" isQuery="true" precondition="_oE9cP_WnEdqea89UKW2qFQ" bodyCondition="_oA736fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oA736PWnEdqea89UKW2qFQ" annotatedElement="_oA735_WnEdqea89UKW2qFQ">
          <body>The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions.</body>
        </ownedComment>
        <ownedRule xmi:id="_oE9cP_WnEdqea89UKW2qFQ" constrainedElement="_oA735_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oE9cQPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>redefinee.isRedefinitionContextValid(self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oA736fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oA735_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oE9cQfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = false</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oA736_WnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oA737PWnEdqea89UKW2qFQ" name="redefinee" visibility="public" type="_oA731vWnEdqea89UKW2qFQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oA737fWnEdqea89UKW2qFQ" name="isRedefinitionContextValid" visibility="public" isQuery="true" bodyCondition="_oA737_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oA737vWnEdqea89UKW2qFQ" annotatedElement="_oA737fWnEdqea89UKW2qFQ">
          <body>The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element.</body>
        </ownedComment>
        <ownedRule xmi:id="_oA737_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oA737fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oE9cQvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = redefinitionContext->exists(c | c.allParents()->includes(redefined.redefinitionContext)))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oA738fWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oA738vWnEdqea89UKW2qFQ" name="redefined" visibility="public" type="_oA731vWnEdqea89UKW2qFQ" effect="read"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oA73-fWnEdqea89UKW2qFQ" name="StructuralFeature" isAbstract="true">
      <ownedComment xmi:id="_oA73-vWnEdqea89UKW2qFQ" annotatedElement="_oA73-fWnEdqea89UKW2qFQ">
        <body>A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier.</body>
      </ownedComment>
      <ownedComment xmi:id="_oFQXIPWnEdqea89UKW2qFQ" annotatedElement="_oA73-fWnEdqea89UKW2qFQ">
        <body>By specializing multiplicity element, it supports a multiplicity that specifies valid cardinalities for the collection of values associated with an instantiation of the structural feature.</body>
      </ownedComment>
      <generalization xmi:id="_oA73-_WnEdqea89UKW2qFQ" general="_oAoV0PWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oA73_PWnEdqea89UKW2qFQ" general="_oA73_vWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oA73_fWnEdqea89UKW2qFQ" general="_Gjgl0GveEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oFQXIfWnEdqea89UKW2qFQ" name="isReadOnly" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oFQXIvWnEdqea89UKW2qFQ" annotatedElement="_oFQXIfWnEdqea89UKW2qFQ">
          <body>States whether the feature's value may be modified by a client.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oFQXI_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oFQXOfWnEdqea89UKW2qFQ" name="Slot">
      <ownedComment xmi:id="_oFQXOvWnEdqea89UKW2qFQ" annotatedElement="_oFQXOfWnEdqea89UKW2qFQ">
        <body>A slot specifies that an entity modeled by an instance specification has a value or values for a specific structural feature.</body>
      </ownedComment>
      <generalization xmi:id="_oFQXO_WnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oFQXPPWnEdqea89UKW2qFQ" name="owningInstance" type="_oFQXJPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oHWB1_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oFQXPfWnEdqea89UKW2qFQ" annotatedElement="_oFQXPPWnEdqea89UKW2qFQ">
          <body>The instance specification that owns this slot.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFQXPvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFQXP_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oFQXQPWnEdqea89UKW2qFQ" name="definingFeature" type="_oA73-fWnEdqea89UKW2qFQ" association="_oHWB2fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oFQXQfWnEdqea89UKW2qFQ" annotatedElement="_oFQXQPWnEdqea89UKW2qFQ">
          <body>The structural feature that specifies the values that may be held by the slot.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFQXQvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFQXQ_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oFQXRPWnEdqea89UKW2qFQ" name="value" type="_oBFBwPWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oHo8zPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oFQXRfWnEdqea89UKW2qFQ" annotatedElement="_oFQXRPWnEdqea89UKW2qFQ">
          <body>The value or values corresponding to the defining feature for the owning instance specification.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFQXRvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFQXR_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SnNPIGwIEdq7X4sGURiZYA" name="PackageImport">
      <ownedComment xmi:id="_oCIKtPWnEdqea89UKW2qFQ" annotatedElement="_SnNPIGwIEdq7X4sGURiZYA">
        <body>A package import is a relationship that allows the use of unqualified names to refer to package members from other namespaces.</body>
      </ownedComment>
      <ownedRule xmi:id="_oCIKtfWnEdqea89UKW2qFQ" name="public_or_private" constrainedElement="_SnNPIGwIEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oCIKtvWnEdqea89UKW2qFQ" annotatedElement="_oCIKtfWnEdqea89UKW2qFQ">
          <body>The visibility of a PackageImport is either public or private.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFtDFfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.visibility = #public or self.visibility = #private</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oCIKuPWnEdqea89UKW2qFQ" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:id="_oCIKufWnEdqea89UKW2qFQ" name="visibility" visibility="public" type="_AyM_oGwMEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oCIKuvWnEdqea89UKW2qFQ" annotatedElement="_oCIKufWnEdqea89UKW2qFQ">
          <body>Specifies the visibility of the imported PackageableElements within the importing Namespace, i.e., whether imported elements will in turn be visible to other packages that use that importingPackage as an importedPackage. If the PackageImport is public, the imported elements will be visible outside the package, while if it is private they will not.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oFtDFvWnEdqea89UKW2qFQ" type="_AyM_oGwMEdq7X4sGURiZYA" instance="_oCbFo_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oCIKwPWnEdqea89UKW2qFQ" name="importingNamespace" visibility="public" type="_ZiwkoGwLEdq7X4sGURiZYA" subsettedProperty="_oAfL4vWnEdqea89UKW2qFQ _oAfL9fWnEdqea89UKW2qFQ" association="_oCuAnfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCIKwfWnEdqea89UKW2qFQ" annotatedElement="_oCIKwPWnEdqea89UKW2qFQ">
          <body>Specifies the Namespace that imports the members from a Package.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFtDF_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFtDGPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oCIKvPWnEdqea89UKW2qFQ" name="importedPackage" visibility="public" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_oAfL5vWnEdqea89UKW2qFQ" association="_oCuAlPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCIKvfWnEdqea89UKW2qFQ" annotatedElement="_oCIKvPWnEdqea89UKW2qFQ">
          <body>Specifies the Package whose members are imported into a Namespace.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFtDGfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFtDGvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__1ap4HLzEdqziYxiZo0YtA" name="DataType">
      <ownedComment xmi:id="_oBYj9_WnEdqea89UKW2qFQ" annotatedElement="__1ap4HLzEdqziYxiZo0YtA">
        <body>A data type is a type whose instances are identified only by their value. A data type may contain attributes to support the modeling of structured data types.</body>
      </ownedComment>
      <generalization xmi:id="_oBYj-PWnEdqea89UKW2qFQ" general="_6UV2QGwJEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oBhtsPWnEdqea89UKW2qFQ" name="ownedAttribute" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oACf8vWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oCk2svWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBhtsfWnEdqea89UKW2qFQ" annotatedElement="_oBhtsPWnEdqea89UKW2qFQ">
          <body>The Attributes owned by the DataType.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGcp-PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGcp-fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBhttPWnEdqea89UKW2qFQ" name="ownedOperation" visibility="public" type="_M4X2IGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oAMQ8PWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oCuAgPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBhttfWnEdqea89UKW2qFQ" annotatedElement="_oBhttPWnEdqea89UKW2qFQ">
          <body>The Operations owned by the DataType.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGcp-vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGcp-_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_FDM9YHL0EdqziYxiZo0YtA" name="createOwnedOperation">
        <ownedComment xmi:id="_GrDVwOwmEdqYHf-imTcTdw" annotatedElement="_FDM9YHL0EdqziYxiZo0YtA">
          <body>Creates an operation with the specified name, parameter names, parameter types, and return type (or null) as an owned operation of this data type.</body>
        </ownedComment>
        <ownedParameter xmi:id="_FDM9YXL0EdqziYxiZo0YtA" type="_M4X2IGveEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_FDM9YnL0EdqziYxiZo0YtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wfr4AaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wfr4AKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_FDM9ZHL0EdqziYxiZo0YtA" name="parameterNames" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FDM9ZXL0EdqziYxiZo0YtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FDM9ZnL0EdqziYxiZo0YtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_FDM9Z3L0EdqziYxiZo0YtA" name="parameterTypes" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FDM9aHL0EdqziYxiZo0YtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FDM9aXL0EdqziYxiZo0YtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_FDM9Y3L0EdqziYxiZo0YtA" name="returnType" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yc2vUaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yc2vUKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_WJZCQHL0EdqziYxiZo0YtA" name="createOwnedAttribute">
        <ownedComment xmi:id="_I4T3gOwmEdqYHf-imTcTdw" annotatedElement="_WJZCQHL0EdqziYxiZo0YtA">
          <body>Creates a property with the specified name, type, lower bound, and upper bound as an owned attribute of this data type.</body>
        </ownedComment>
        <ownedParameter xmi:id="_WJZCQXL0EdqziYxiZo0YtA" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_WJZCQnL0EdqziYxiZo0YtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0pOgQaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0pOgQKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_WJZCQ3L0EdqziYxiZo0YtA" name="type" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2bXMQaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2bXMQKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_WJZCRHL0EdqziYxiZo0YtA" name="lower" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_WJZCRXL0EdqziYxiZo0YtA" name="upper" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBhtuPWnEdqea89UKW2qFQ" name="inherit" isQuery="true" redefinedOperation="_oAVbFfWnEdqea89UKW2qFQ" bodyCondition="_oBhtuvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBhtufWnEdqea89UKW2qFQ" annotatedElement="_oBhtuPWnEdqea89UKW2qFQ">
          <body>The inherit operation is overridden to exclude redefined properties.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBhtuvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBhtuPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oBhtu_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBhtvPWnEdqea89UKW2qFQ" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oBhtvfWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oBhtvvWnEdqea89UKW2qFQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oBhtv_WnEdqea89UKW2qFQ" name="inhs" type="_csVgUGvtEdqG6fBIPwe-mw">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oBhtwPWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oBhtwfWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_I6N3UGwGEdq7X4sGURiZYA" name="Enumeration">
      <ownedComment xmi:id="_oBhtwvWnEdqea89UKW2qFQ" annotatedElement="_I6N3UGwGEdq7X4sGURiZYA">
        <body>An enumeration is a data type whose values are enumerated in the model as enumeration literals.</body>
      </ownedComment>
      <generalization xmi:id="_oBhtw_WnEdqea89UKW2qFQ" general="__1ap4HLzEdqziYxiZo0YtA"/>
      <ownedAttribute xmi:id="_oBhtxPWnEdqea89UKW2qFQ" name="ownedLiteral" visibility="public" type="_OQcbgGwOEdq7X4sGURiZYA" isOrdered="true" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oCk2sPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBhtxfWnEdqea89UKW2qFQ" annotatedElement="_oBhtxPWnEdqea89UKW2qFQ">
          <body>The ordered collection of literals for the enumeration.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGcp_PWnEdqea89UKW2qFQ" annotatedElement="_oBhtxPWnEdqea89UKW2qFQ">
          <body>The ordered set of literals for this Enumeration.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGcp_fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGcp_vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_OQcbgGwOEdq7X4sGURiZYA" name="EnumerationLiteral">
      <ownedComment xmi:id="_oBhtyPWnEdqea89UKW2qFQ" annotatedElement="_OQcbgGwOEdq7X4sGURiZYA">
        <body>An enumeration literal is a user-defined data value for an enumeration.</body>
      </ownedComment>
      <generalization xmi:id="_oGcp__WnEdqea89UKW2qFQ" general="_oFQXJPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oBhtyvWnEdqea89UKW2qFQ" name="enumeration" visibility="public" type="_I6N3UGwGEdq7X4sGURiZYA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oCk2sPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBhty_WnEdqea89UKW2qFQ" annotatedElement="_oBhtyvWnEdqea89UKW2qFQ">
          <body>The enumeration that this literal belongs to.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGcqAPWnEdqea89UKW2qFQ" annotatedElement="_oBhtyvWnEdqea89UKW2qFQ">
          <body>The Enumeration that this EnumerationLiteral is a member of.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGlz4PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGlz4fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_V6vuYGwGEdq7X4sGURiZYA" name="PrimitiveType">
      <ownedComment xmi:id="_oBhtzvWnEdqea89UKW2qFQ" annotatedElement="_V6vuYGwGEdq7X4sGURiZYA">
        <body>A primitive type defines a predefined data type, without any relevant substructure (i.e., it has no parts in the context of UML). A primitive datatype may have an algebra and operations defined outside of UML, for example, mathematically.</body>
      </ownedComment>
      <generalization xmi:id="_oBhtz_WnEdqea89UKW2qFQ" general="__1ap4HLzEdqziYxiZo0YtA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_AwvxoGwNEdq7X4sGURiZYA" name="Association">
      <ownedComment xmi:id="_oBFB4vWnEdqea89UKW2qFQ" annotatedElement="_AwvxoGwNEdq7X4sGURiZYA">
        <body>An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link.</body>
      </ownedComment>
      <ownedRule xmi:id="_oGlz4vWnEdqea89UKW2qFQ" name="specialized_end_number" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oGlz4_WnEdqea89UKW2qFQ" annotatedElement="_oGlz4vWnEdqea89UKW2qFQ">
          <body>An association specializing another association has the same number of ends as the other association.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGlz5PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.parents()->forAll(p | p.memberEnd.size() = self.memberEnd.size())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oGlz5fWnEdqea89UKW2qFQ" name="specialized_end_types" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oGlz5vWnEdqea89UKW2qFQ" annotatedElement="_oGlz5fWnEdqea89UKW2qFQ">
          <body>When an association specializes another association, every end of the specific association corresponds to an end of the general association, and the specific end reaches the same type or a subtype of the more general end.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGlz5_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oGlz6PWnEdqea89UKW2qFQ" name="binary_associations" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oGlz6fWnEdqea89UKW2qFQ" annotatedElement="_oGlz6PWnEdqea89UKW2qFQ">
          <body>Only binary associations can be aggregations.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGlz6vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.memberEnd->exists(aggregation &lt;> Aggregation::none) implies self.memberEnd->size() = 2</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBFB4_WnEdqea89UKW2qFQ" name="association_ends" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oBFB5PWnEdqea89UKW2qFQ" annotatedElement="_oBFB4_WnEdqea89UKW2qFQ">
          <body>Association ends of associations with more than two ends must be owned by the association.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGlz6_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oBFB5_WnEdqea89UKW2qFQ" general="_DH62EKPAEdqi_5gqUMOQtA"/>
      <generalization xmi:id="_oBFB5vWnEdqea89UKW2qFQ" general="_6UV2QGwJEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oBFB6PWnEdqea89UKW2qFQ" name="isDerived" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oBFB6fWnEdqea89UKW2qFQ" annotatedElement="_oBFB6PWnEdqea89UKW2qFQ">
          <body>Specifies whether the association is derived from other model elements such as other associations or constraints.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oGlz7PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBFB6_WnEdqea89UKW2qFQ" name="ownedEnd" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oBFB8_WnEdqea89UKW2qFQ _oAMQ8PWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oCk2mfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBFB7PWnEdqea89UKW2qFQ" annotatedElement="_oBFB6_WnEdqea89UKW2qFQ">
          <body>The ends that are owned by the association itself. This is an ordered association.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGlz7fWnEdqea89UKW2qFQ" annotatedElement="_oBFB6_WnEdqea89UKW2qFQ">
          <body>The ends that are owned by the association itself.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGlz7vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGlz7_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBFB7_WnEdqea89UKW2qFQ" name="endType" visibility="public" type="_ynRtoGvtEdqG6fBIPwe-mw" isOrdered="true" isReadOnly="true" isDerived="true" subsettedProperty="_oA739fWnEdqea89UKW2qFQ" association="_oCk2rfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBFB8PWnEdqea89UKW2qFQ" annotatedElement="_oBFB7_WnEdqea89UKW2qFQ">
          <body>References the classifiers that are used as types of the ends of the association.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGlz8PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGlz8fWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBFB8_WnEdqea89UKW2qFQ" name="memberEnd" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" subsettedProperty="_oAyG5fWnEdqea89UKW2qFQ" association="_oCuAp_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBFB9PWnEdqea89UKW2qFQ" annotatedElement="_oBFB8_WnEdqea89UKW2qFQ">
          <body>Each end represents participation of instances of the classifier connected to the end in links of the association. This is an ordered association.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGlz8vWnEdqea89UKW2qFQ" annotatedElement="_oBFB8_WnEdqea89UKW2qFQ">
          <body>Each end represents participation of instances of the classifier connected to the end in links of the association.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGlz8_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGlz9PWnEdqea89UKW2qFQ" value="2"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBFB9_WnEdqea89UKW2qFQ" name="navigableOwnedEnd" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" subsettedProperty="_oBFB6_WnEdqea89UKW2qFQ" association="_oC3xnPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBFB-PWnEdqea89UKW2qFQ" annotatedElement="_oBFB9_WnEdqea89UKW2qFQ">
          <body>The navigable ends that are owned by the association itself.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGlz9fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGlz9vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_WSPusK69EdqjppZik4kD8A" name="isBinary">
        <ownedComment xmi:id="_4TWQYOwlEdqYHf-imTcTdw" annotatedElement="_WSPusK69EdqjppZik4kD8A">
          <body>Determines whether this association is a binary association, i.e. whether it has exactly two member ends.</body>
        </ownedComment>
        <ownedParameter xmi:id="_YmN8cK69EdqjppZik4kD8A" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oGlz9_WnEdqea89UKW2qFQ" name="endType" isQuery="true" bodyCondition="_oGlz-fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oGlz-PWnEdqea89UKW2qFQ" annotatedElement="_oGlz9_WnEdqea89UKW2qFQ">
          <body>endType is derived from the types of the member ends.</body>
        </ownedComment>
        <ownedRule xmi:id="_oGlz-fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oGlz9_WnEdqea89UKW2qFQ _oBFB7_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGlz-vWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = self.memberEnd->collect(e | e.type)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oGlz-_WnEdqea89UKW2qFQ" type="_ynRtoGvtEdqG6fBIPwe-mw" isOrdered="true" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGlz_PWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGlz_fWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DH62EKPAEdqi_5gqUMOQtA" name="Relationship" isAbstract="true">
      <ownedComment xmi:id="_oA738_WnEdqea89UKW2qFQ" annotatedElement="_DH62EKPAEdqi_5gqUMOQtA">
        <body>Relationship is an abstract concept that specifies some kind of relationship between elements.</body>
      </ownedComment>
      <generalization xmi:id="_oA739PWnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oA739fWnEdqea89UKW2qFQ" name="relatedElement" visibility="public" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_oCuAtvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oA739vWnEdqea89UKW2qFQ" annotatedElement="_oA739fWnEdqea89UKW2qFQ">
          <body>Specifies the elements related by the Relationship.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oG5V5vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oG5V5_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oCIKxPWnEdqea89UKW2qFQ" name="PackageMerge">
      <ownedComment xmi:id="_oCIKxfWnEdqea89UKW2qFQ" annotatedElement="_oCIKxPWnEdqea89UKW2qFQ">
        <body>A package merge defines how the contents of one package are extended by the contents of another package.</body>
      </ownedComment>
      <generalization xmi:id="_oCIKxvWnEdqea89UKW2qFQ" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:id="_oCIKx_WnEdqea89UKW2qFQ" name="receivingPackage" visibility="public" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_oAfL4vWnEdqea89UKW2qFQ _oAfL9fWnEdqea89UKW2qFQ" association="_oCuArfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCIKyPWnEdqea89UKW2qFQ" annotatedElement="_oCIKx_WnEdqea89UKW2qFQ">
          <body>References the Package that is being extended with the contents of the merged package of the PackageMerge.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oG5V6PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oG5V6fWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oCIKy_WnEdqea89UKW2qFQ" name="mergedPackage" visibility="public" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_oAfL5vWnEdqea89UKW2qFQ" association="_oCuAsPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCIKzPWnEdqea89UKW2qFQ" annotatedElement="_oCIKy_WnEdqea89UKW2qFQ">
          <body>References the Package that is to be merged with the receiving package of the PackageMerge.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oG5V6vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oG5V6_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_PyCx8GveEdq4DLWZOhbdEA" name="InstanceValue">
      <ownedComment xmi:id="_oG5V7PWnEdqea89UKW2qFQ" annotatedElement="_PyCx8GveEdq4DLWZOhbdEA">
        <body>An instance value is a value specification that identifies an instance.</body>
      </ownedComment>
      <generalization xmi:id="_oG5V7fWnEdqea89UKW2qFQ" general="_oBFBwPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oG5V7vWnEdqea89UKW2qFQ" name="instance" type="_oFQXJPWnEdqea89UKW2qFQ" association="_oHo8yvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oG5V7_WnEdqea89UKW2qFQ" annotatedElement="_oG5V7vWnEdqea89UKW2qFQ">
          <body>The instance that is the specified value.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oG5V8PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oG5V8fWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_QUJ-oWWKEdq-f4093SZhVA" name="stringValue" visibility="protected" isQuery="true">
        <eAnnotations xmi:id="_SQIjIGWKEdq-f4093SZhVA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <ownedParameter xmi:id="_T0RPYGWKEdq-f4093SZhVA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q-yR4GveEdq4DLWZOhbdEA" name="LiteralUnlimitedNatural">
      <ownedComment xmi:id="_oHCf0PWnEdqea89UKW2qFQ" annotatedElement="_Q-yR4GveEdq4DLWZOhbdEA">
        <body>A literal unlimited natural is a specification of an unlimited natural number.</body>
      </ownedComment>
      <generalization xmi:id="_oHCf0fWnEdqea89UKW2qFQ" general="_oD6TbPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oHCf0vWnEdqea89UKW2qFQ" name="value" type="_dRZxsGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oHCf0_WnEdqea89UKW2qFQ" annotatedElement="_oHCf0vWnEdqea89UKW2qFQ">
          <body>The specified UnlimitedNatural value.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHCf1PWnEdqea89UKW2qFQ" type="_dRZxsGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_lSARkGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_nyfRUGWKEdq-f4093SZhVA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oHCf1fWnEdqea89UKW2qFQ" name="isComputable" isQuery="true" redefinedOperation="_oBFBxPWnEdqea89UKW2qFQ" bodyCondition="_oHCf1_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oHCf1vWnEdqea89UKW2qFQ" annotatedElement="_oHCf1fWnEdqea89UKW2qFQ">
          <body>The query isComputable() is redefined to be true.</body>
        </ownedComment>
        <ownedRule xmi:id="_oHCf1_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oHCf1fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oHCf2PWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oHCf2fWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oHCf2vWnEdqea89UKW2qFQ" name="unlimitedValue" isQuery="true" redefinedOperation="_oBFB2PWnEdqea89UKW2qFQ" bodyCondition="_oHCf3PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oHCf2_WnEdqea89UKW2qFQ" annotatedElement="_oHCf2vWnEdqea89UKW2qFQ">
          <body>The query unlimitedValue() gives the value.</body>
        </ownedComment>
        <ownedRule xmi:id="_oHCf3PWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oHCf2vWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oHCf3fWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = value</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oHCf3vWnEdqea89UKW2qFQ" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ynRtoGvtEdqG6fBIPwe-mw" name="Type" isAbstract="true">
      <ownedComment xmi:id="_oCIKz_WnEdqea89UKW2qFQ" annotatedElement="_ynRtoGvtEdqG6fBIPwe-mw">
        <body>A type is a named element that is used as the type for a typed element. A type can be contained in a package.</body>
      </ownedComment>
      <ownedComment xmi:id="_oHCf3_WnEdqea89UKW2qFQ" annotatedElement="_ynRtoGvtEdqG6fBIPwe-mw">
        <body>A type constrains the values represented by a typed element.</body>
      </ownedComment>
      <generalization xmi:id="_oCIK0fWnEdqea89UKW2qFQ" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oCIK0vWnEdqea89UKW2qFQ" name="package" visibility="public" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oCuApfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCIK0_WnEdqea89UKW2qFQ" annotatedElement="_oCIK0vWnEdqea89UKW2qFQ">
          <body>References the owning package of a package.</body>
        </ownedComment>
        <ownedComment xmi:id="_oHCf4PWnEdqea89UKW2qFQ" annotatedElement="_oCIK0vWnEdqea89UKW2qFQ">
          <body>Specifies the owning package of this classifier, if any.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHCf4fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHCf4vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_RNEaIGwNEdq7X4sGURiZYA" name="createAssociation">
        <ownedComment xmi:id="_w29JkOwgEdqYHf-imTcTdw" annotatedElement="_RNEaIGwNEdq7X4sGURiZYA">
          <body>Creates a(n) (binary) association between this type and the specified other type, with the specified navigabilities, aggregations, names, lower bounds, and upper bounds, and owned by this type's nearest package.</body>
        </ownedComment>
        <ownedParameter xmi:id="_URUOQGwNEdq7X4sGURiZYA" type="_AwvxoGwNEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:id="_AEONYGwOEdq7X4sGURiZYA" name="end1IsNavigable" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_7HueMGwNEdq7X4sGURiZYA" name="end1Aggregation" type="_B3q9cGwNEdq7X4sGURiZYA" effect="read"/>
        <ownedParameter xmi:id="_2TaaoGwNEdq7X4sGURiZYA" name="end1Name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_x-QYQGwNEdq7X4sGURiZYA" name="end1Lower" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_uL9yYGwNEdq7X4sGURiZYA" name="end1Upper" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_qFQbsGwNEdq7X4sGURiZYA" name="end1Type" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_mB-McGwNEdq7X4sGURiZYA" name="end2IsNavigable" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_hm2sAGwNEdq7X4sGURiZYA" name="end2Aggregation" type="_B3q9cGwNEdq7X4sGURiZYA" effect="read"/>
        <ownedParameter xmi:id="_eK6JkGwNEdq7X4sGURiZYA" name="end2Name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_auE2UGwNEdq7X4sGURiZYA" name="end2Lower" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_VprIUGwNEdq7X4sGURiZYA" name="end2Upper" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_10fbsKPAEdqi_5gqUMOQtA" name="getAssociations">
        <ownedComment xmi:id="_2pskQOwgEdqYHf-imTcTdw" annotatedElement="_10fbsKPAEdqi_5gqUMOQtA">
          <body>Retrieves the associations in which this type is involved.</body>
        </ownedComment>
        <ownedParameter xmi:id="_5F3F0KPAEdqi_5gqUMOQtA" type="_AwvxoGwNEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7CRvMaPAEdqi_5gqUMOQtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7CRvMKPAEdqi_5gqUMOQtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oCIK1vWnEdqea89UKW2qFQ" name="conformsTo" visibility="public" isQuery="true" bodyCondition="_oCIK2PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCIK1_WnEdqea89UKW2qFQ" annotatedElement="_oCIK1vWnEdqea89UKW2qFQ">
          <body>The query conformsTo() gives true for a type that conforms to another. By default, two types do not conform to each other. This query is intended to be redefined for specific conformance situations.</body>
        </ownedComment>
        <ownedRule xmi:id="_oCIK2PWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oCIK1vWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oHCf4_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = false</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCIK2vWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oCIK2_WnEdqea89UKW2qFQ" name="other" visibility="public" type="_ynRtoGvtEdqG6fBIPwe-mw"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oCRUw_WnEdqea89UKW2qFQ" name="Expression">
      <ownedComment xmi:id="_oCRUxPWnEdqea89UKW2qFQ" annotatedElement="_oCRUw_WnEdqea89UKW2qFQ">
        <body>An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context.</body>
      </ownedComment>
      <ownedComment xmi:id="_oHCf5PWnEdqea89UKW2qFQ" annotatedElement="_oCRUw_WnEdqea89UKW2qFQ">
        <body>An expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands which are value specifications.</body>
      </ownedComment>
      <generalization xmi:id="_oCRUxfWnEdqea89UKW2qFQ" general="_oBFBwPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oHCf5fWnEdqea89UKW2qFQ" name="symbol" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oHCf5vWnEdqea89UKW2qFQ" annotatedElement="_oHCf5fWnEdqea89UKW2qFQ">
          <body>The symbol associated with the node in the expression tree.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHCf5_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHCf6PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oCRUxvWnEdqea89UKW2qFQ" name="operand" visibility="public" type="_oBFBwPWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oC3xl_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCRUx_WnEdqea89UKW2qFQ" annotatedElement="_oCRUxvWnEdqea89UKW2qFQ">
          <body>Specifies a sequence of operands.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHCf6fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHCf6vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_B3q9cGwNEdq7X4sGURiZYA" name="AggregationKind">
      <ownedComment xmi:id="_oHCf6_WnEdqea89UKW2qFQ" annotatedElement="_B3q9cGwNEdq7X4sGURiZYA">
        <body>AggregationKind is an enumeration type that specifies the literals for defining the kind of aggregation of a property.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_oHCf7PWnEdqea89UKW2qFQ" name="none">
        <ownedComment xmi:id="_oHCf7fWnEdqea89UKW2qFQ" annotatedElement="_oHCf7PWnEdqea89UKW2qFQ">
          <body>Indicates that the property has no aggregation.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oHCf7vWnEdqea89UKW2qFQ" name="shared">
        <ownedComment xmi:id="_oHCf7_WnEdqea89UKW2qFQ" annotatedElement="_oHCf7vWnEdqea89UKW2qFQ">
          <body>Indicates that the property has a shared aggregation.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oHCf8PWnEdqea89UKW2qFQ" name="composite">
        <ownedComment xmi:id="_oHCf8fWnEdqea89UKW2qFQ" annotatedElement="_oHCf8PWnEdqea89UKW2qFQ">
          <body>Indicates that the property is aggregated compositely, i.e., the composite object has responsibility for the existence and storage of the composed objects (parts).</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_oCbFkPWnEdqea89UKW2qFQ" name="ParameterDirectionKind">
      <ownedComment xmi:id="_oCbFkfWnEdqea89UKW2qFQ" annotatedElement="_oCbFkPWnEdqea89UKW2qFQ">
        <body>Parameter direction kind is an enumeration type that defines literals used to specify direction of parameters.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_oCbFkvWnEdqea89UKW2qFQ" name="in">
        <ownedComment xmi:id="_oCbFk_WnEdqea89UKW2qFQ" annotatedElement="_oCbFkvWnEdqea89UKW2qFQ">
          <body>Indicates that parameter values are passed into the behavioral element by the caller.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oCbFlPWnEdqea89UKW2qFQ" name="inout">
        <ownedComment xmi:id="_oCbFlfWnEdqea89UKW2qFQ" annotatedElement="_oCbFlPWnEdqea89UKW2qFQ">
          <body>Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oCbFlvWnEdqea89UKW2qFQ" name="out">
        <ownedComment xmi:id="_oCbFl_WnEdqea89UKW2qFQ" annotatedElement="_oCbFlvWnEdqea89UKW2qFQ">
          <body>Indicates that parameter values are passed from a behavioral element out to the caller.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oCbFmPWnEdqea89UKW2qFQ" name="return">
        <ownedComment xmi:id="_oCbFmfWnEdqea89UKW2qFQ" annotatedElement="_oCbFmPWnEdqea89UKW2qFQ">
          <body>Indicates that parameter values are passed as return values from a behavioral element back to the caller.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_AyM_oGwMEdq7X4sGURiZYA" name="VisibilityKind">
      <ownedComment xmi:id="_oCbFmvWnEdqea89UKW2qFQ" annotatedElement="_AyM_oGwMEdq7X4sGURiZYA">
        <body>VisibilityKind is an enumeration type that defines literals to determine the visibility of elements in a model.</body>
      </ownedComment>
      <ownedOperation xmi:id="_oCbFm_WnEdqea89UKW2qFQ" name="bestVisibility" visibility="public" isQuery="true" precondition="_oHMQ0fWnEdqea89UKW2qFQ" bodyCondition="_oCbFnfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCbFnPWnEdqea89UKW2qFQ" annotatedElement="_oCbFm_WnEdqea89UKW2qFQ">
          <body>The query bestVisibility() examines a set of VisibilityKinds, and returns public as the preferred visibility.</body>
        </ownedComment>
        <ownedComment xmi:id="_oHMQ0PWnEdqea89UKW2qFQ" annotatedElement="_oCbFm_WnEdqea89UKW2qFQ">
          <body>The query bestVisibility() examines a set of VisibilityKinds that includes only public and private, and returns public as the preferred visibility.</body>
        </ownedComment>
        <ownedRule xmi:id="_oHMQ0fWnEdqea89UKW2qFQ" constrainedElement="_oCbFm_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oHMQ0vWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>pre: not vis->includes(#protected) and not vis->includes(#package)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oCbFnfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oCbFm_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oHMQ0_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if vis->includes(#public) then #public else #private endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCbFn_WnEdqea89UKW2qFQ" visibility="public" type="_AyM_oGwMEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:id="_oCbFoPWnEdqea89UKW2qFQ" name="vis" visibility="public" type="_AyM_oGwMEdq7X4sGURiZYA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHMQ1PWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHMQ1fWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedLiteral xmi:id="_oCbFo_WnEdqea89UKW2qFQ" name="public">
        <ownedComment xmi:id="_oCbFpPWnEdqea89UKW2qFQ" annotatedElement="_oCbFo_WnEdqea89UKW2qFQ">
          <body>A public element is visible to all elements that can access the contents of the namespace that owns it.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oCbFpfWnEdqea89UKW2qFQ" name="private">
        <ownedComment xmi:id="_oCbFpvWnEdqea89UKW2qFQ" annotatedElement="_oCbFpfWnEdqea89UKW2qFQ">
          <body>A private element is only visible inside the namespace that owns it.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oCbFp_WnEdqea89UKW2qFQ" name="protected">
        <ownedComment xmi:id="_oCbFqPWnEdqea89UKW2qFQ" annotatedElement="_oCbFp_WnEdqea89UKW2qFQ">
          <body>A protected element is visible to elements that have a generalization relationship to the namespace that owns it.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oCbFqfWnEdqea89UKW2qFQ" name="package">
        <ownedComment xmi:id="_oCbFqvWnEdqea89UKW2qFQ" annotatedElement="_oCbFqfWnEdqea89UKW2qFQ">
          <body>A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility.  Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility).  Outside the nearest enclosing package, an element marked as having package visibility is not visible.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAs_WnEdqea89UKW2qFQ" name="A_ownedElement_owner" memberEnd="_oAfL9fWnEdqea89UKW2qFQ _oAfL8fWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAuPWnEdqea89UKW2qFQ" name="A_source_directedRelationship" memberEnd="_oCuAuvWnEdqea89UKW2qFQ _oAfL4vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAufWnEdqea89UKW2qFQ" general="_oCuAtvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCuAuvWnEdqea89UKW2qFQ" visibility="public" type="_JBgfoKPAEdqi_5gqUMOQtA" redefinedProperty="_oCuAt_WnEdqea89UKW2qFQ" association="_oCuAuPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xgPWnEdqea89UKW2qFQ" name="A_target_directedRelationship" memberEnd="_oC3xgvWnEdqea89UKW2qFQ _oAfL5vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xgfWnEdqea89UKW2qFQ" general="_oCuAtvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oC3xgvWnEdqea89UKW2qFQ" visibility="public" type="_JBgfoKPAEdqi_5gqUMOQtA" redefinedProperty="_oCuAt_WnEdqea89UKW2qFQ" association="_oC3xgPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xifWnEdqea89UKW2qFQ" name="A_constrainedElement_constraint" memberEnd="_oC3xivWnEdqea89UKW2qFQ _oBht2fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oC3xivWnEdqea89UKW2qFQ" visibility="public" type="_oBht0PWnEdqea89UKW2qFQ" association="_oC3xifWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2kPWnEdqea89UKW2qFQ" name="A_type_typedElement" memberEnd="_oCk2kfWnEdqea89UKW2qFQ _oA74AfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oCk2kfWnEdqea89UKW2qFQ" visibility="public" type="_oA73_vWnEdqea89UKW2qFQ" association="_oCk2kPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHMQ1vWnEdqea89UKW2qFQ" name="A_generalization_specific" memberEnd="_oFGmJvWnEdqea89UKW2qFQ _oEp6M_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oHMQ1_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oHMQ2PWnEdqea89UKW2qFQ" general="_oCuAuPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHWB0PWnEdqea89UKW2qFQ" name="A_general_generalization" memberEnd="_oFGmKvWnEdqea89UKW2qFQ _oHWB0vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oHWB0fWnEdqea89UKW2qFQ" general="_oC3xgPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oHWB0vWnEdqea89UKW2qFQ" type="_C7AF4GwREdq14q0ETb1t3g" redefinedProperty="_oC3xgvWnEdqea89UKW2qFQ" association="_oHWB0PWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xh_WnEdqea89UKW2qFQ" name="A_feature_featuringClassifier" memberEnd="_oAoV0_WnEdqea89UKW2qFQ _oAMQ8PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xiPWnEdqea89UKW2qFQ" general="_oC3xlfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAivWnEdqea89UKW2qFQ" name="A_ownedParameter_ownerFormalParam" memberEnd="_oCuAjPWnEdqea89UKW2qFQ _oB0ov_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAi_WnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCuAjPWnEdqea89UKW2qFQ" name="ownerFormalParam" visibility="public" type="_rHT3YKOsEdqi_5gqUMOQtA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oCuAivWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHWB0_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHWB1PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHWB1fWnEdqea89UKW2qFQ" name="A_classifier_instanceSpecification" memberEnd="_oFQXLfWnEdqea89UKW2qFQ _oHWB1vWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oHWB1vWnEdqea89UKW2qFQ" type="_oFQXJPWnEdqea89UKW2qFQ" association="_oHWB1fWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHWB1_WnEdqea89UKW2qFQ" name="A_slot_owningInstance" memberEnd="_oFQXMfWnEdqea89UKW2qFQ _oFQXPPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oHWB2PWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHWB2fWnEdqea89UKW2qFQ" name="A_definingFeature_slot" memberEnd="_oFQXQPWnEdqea89UKW2qFQ _oHWB2vWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oHWB2vWnEdqea89UKW2qFQ" type="_oFQXOfWnEdqea89UKW2qFQ" association="_oHWB2fWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAtPWnEdqea89UKW2qFQ" name="A_annotatedElement_comment" memberEnd="_oCuAtfWnEdqea89UKW2qFQ _oCRU0fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oCuAtfWnEdqea89UKW2qFQ" visibility="public" type="_oCRUyvWnEdqea89UKW2qFQ" association="_oCuAtPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xofWnEdqea89UKW2qFQ" name="A_ownedComment_owningElement" memberEnd="_oC3xo_WnEdqea89UKW2qFQ _oAfL-fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xovWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oC3xo_WnEdqea89UKW2qFQ" name="owningElement" visibility="public" type="_kl90MGvbEdq4DLWZOhbdEA" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oC3xofWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHWB2_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHWB3PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAl_WnEdqea89UKW2qFQ" name="A_importedElement_elementImport" memberEnd="_oCuAmfWnEdqea89UKW2qFQ _oB-Zr_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAmPWnEdqea89UKW2qFQ" general="_oC3xgPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCuAmfWnEdqea89UKW2qFQ" visibility="public" type="_RPl78GwIEdq7X4sGURiZYA" redefinedProperty="_oC3xgvWnEdqea89UKW2qFQ" association="_oCuAl_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xpvWnEdqea89UKW2qFQ" name="A_inheritedMember_classifier" memberEnd="_oC3xqPWnEdqea89UKW2qFQ _oAMQ-PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xp_WnEdqea89UKW2qFQ" general="_oC3xlfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oC3xqPWnEdqea89UKW2qFQ" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA" redefinedProperty="_oC3xlvWnEdqea89UKW2qFQ" association="_oC3xpvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHWB3fWnEdqea89UKW2qFQ" name="A_nestedClassifier_class" memberEnd="_oF2NAPWnEdqea89UKW2qFQ _oHWB4PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oHWB3vWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oHWB3_WnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oHWB4PWnEdqea89UKW2qFQ" name="class" type="_00owUGvdEdq4DLWZOhbdEA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ _oA733_WnEdqea89UKW2qFQ" association="_oHWB3fWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHWB4fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHWB4vWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2kvWnEdqea89UKW2qFQ" name="A_ownedAttribute_class" memberEnd="_oBOzAvWnEdqea89UKW2qFQ _oBOyxfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCk2lPWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_okssMPWnEdqea89UKW2qFQ" general="_oKeOUPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2lfWnEdqea89UKW2qFQ" name="A_ownedOperation_class" memberEnd="_oBrey_WnEdqea89UKW2qFQ _oBOyyfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCk2lvWnEdqea89UKW2qFQ" general="_oC3xh_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oCk2l_WnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oCk2mPWnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xqfWnEdqea89UKW2qFQ" name="A_precondition_preContext" memberEnd="_oC3xq_WnEdqea89UKW2qFQ _oBre4_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xqvWnEdqea89UKW2qFQ" general="_oC3xuPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oC3xq_WnEdqea89UKW2qFQ" name="preContext" visibility="public" type="_M4X2IGveEdq4DLWZOhbdEA" subsettedProperty="_oBht4fWnEdqea89UKW2qFQ" association="_oC3xqfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHWB5fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHWB5vWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xrvWnEdqea89UKW2qFQ" name="A_postcondition_postContext" memberEnd="_oC3xsPWnEdqea89UKW2qFQ _oBre5vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xr_WnEdqea89UKW2qFQ" general="_oC3xuPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oC3xsPWnEdqea89UKW2qFQ" name="postContext" visibility="public" type="_M4X2IGveEdq4DLWZOhbdEA" subsettedProperty="_oBht4fWnEdqea89UKW2qFQ" association="_oC3xrvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHWB5_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHWB6PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAh_WnEdqea89UKW2qFQ" name="A_redefinedOperation_operation" memberEnd="_oCuAifWnEdqea89UKW2qFQ _oBre1_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAiPWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCuAifWnEdqea89UKW2qFQ" visibility="public" type="_M4X2IGveEdq4DLWZOhbdEA" redefinedProperty="_oC3xhvWnEdqea89UKW2qFQ" association="_oCuAh_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2o_WnEdqea89UKW2qFQ" name="A_redefinedProperty_property" memberEnd="_oCk2pfWnEdqea89UKW2qFQ _oBYjxPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCk2pPWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCk2pfWnEdqea89UKW2qFQ" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" redefinedProperty="_oC3xhvWnEdqea89UKW2qFQ" association="_oCk2o_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2mfWnEdqea89UKW2qFQ" name="A_ownedEnd_owningAssociation" memberEnd="_oBYjwPWnEdqea89UKW2qFQ _oBFB6_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCk2mvWnEdqea89UKW2qFQ" general="_oCuAp_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oCk2m_WnEdqea89UKW2qFQ" general="_oC3xh_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oCk2nPWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2svWnEdqea89UKW2qFQ" name="A_ownedAttribute_datatype" memberEnd="_oBYj0PWnEdqea89UKW2qFQ _oBhtsPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCk2s_WnEdqea89UKW2qFQ" general="_oCk2nfWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oCk2tPWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAgPWnEdqea89UKW2qFQ" name="A_ownedOperation_datatype" memberEnd="_oBrez_WnEdqea89UKW2qFQ _oBhttPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAgfWnEdqea89UKW2qFQ" general="_oC3xh_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oCuAgvWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oCuAg_WnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2sPWnEdqea89UKW2qFQ" name="A_ownedLiteral_enumeration" memberEnd="_oBhtyvWnEdqea89UKW2qFQ _oBhtxPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCk2sfWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAmvWnEdqea89UKW2qFQ" name="A_elementImport_importingNamespace" memberEnd="_oAyG2fWnEdqea89UKW2qFQ _oB-Zs_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAm_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oCuAnPWnEdqea89UKW2qFQ" general="_oCuAuPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAnfWnEdqea89UKW2qFQ" name="A_packageImport_importingNamespace" memberEnd="_oAyG3fWnEdqea89UKW2qFQ _oCIKwPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAnvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oCuAn_WnEdqea89UKW2qFQ" general="_oCuAuPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAlPWnEdqea89UKW2qFQ" name="A_importedPackage_packageImport" memberEnd="_oCuAlvWnEdqea89UKW2qFQ _oCIKvPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAlfWnEdqea89UKW2qFQ" general="_oC3xgPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCuAlvWnEdqea89UKW2qFQ" visibility="public" type="_SnNPIGwIEdq7X4sGURiZYA" redefinedProperty="_oC3xgvWnEdqea89UKW2qFQ" association="_oCuAlPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHfLwPWnEdqea89UKW2qFQ" name="A_redefinedClassifier_classifier" memberEnd="_oEp6PvWnEdqea89UKW2qFQ _oHfLwvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oHfLwfWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oHfLwvWnEdqea89UKW2qFQ" type="_6UV2QGwJEdq7X4sGURiZYA" redefinedProperty="_oC3xhvWnEdqea89UKW2qFQ" association="_oHfLwPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xi_WnEdqea89UKW2qFQ" name="A_specification_owningConstraint" memberEnd="_oC3xjfWnEdqea89UKW2qFQ _oBht3fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xjPWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oC3xjfWnEdqea89UKW2qFQ" name="owningConstraint" visibility="public" type="_oBht0PWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oC3xi_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHfLw_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHfLxPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHfLxfWnEdqea89UKW2qFQ" name="A_defaultValue_owningParameter" memberEnd="_oFGmN_WnEdqea89UKW2qFQ _oHfLx_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oHfLxvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oHfLx_WnEdqea89UKW2qFQ" name="owningParameter" type="_KyaPMGveEdq4DLWZOhbdEA" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oHfLxfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHfLyPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHfLyfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHfLyvWnEdqea89UKW2qFQ" name="A_defaultValue_owningProperty" memberEnd="_oF_-D_WnEdqea89UKW2qFQ _oHfLzPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oHfLy_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oHfLzPWnEdqea89UKW2qFQ" name="owningProperty" type="_Jp_1oGveEdq4DLWZOhbdEA" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oHfLyvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHfLzfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHfLzvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xuPWnEdqea89UKW2qFQ" name="A_ownedRule_context" memberEnd="_oBht4fWnEdqea89UKW2qFQ _oAyG6fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xufWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xlfWnEdqea89UKW2qFQ" name="A_member_namespace" memberEnd="_oC3xlvWnEdqea89UKW2qFQ _oAyG5fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oC3xlvWnEdqea89UKW2qFQ" visibility="public" type="_ZiwkoGwLEdq7X4sGURiZYA" association="_oC3xlfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAtvWnEdqea89UKW2qFQ" name="A_relatedElement_relationship" memberEnd="_oCuAt_WnEdqea89UKW2qFQ _oA739fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oCuAt_WnEdqea89UKW2qFQ" visibility="public" type="_DH62EKPAEdqi_5gqUMOQtA" association="_oCuAtvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2rfWnEdqea89UKW2qFQ" name="A_endType_association" memberEnd="_oCk2r_WnEdqea89UKW2qFQ _oBFB7_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCk2rvWnEdqea89UKW2qFQ" general="_oCuAtvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCk2r_WnEdqea89UKW2qFQ" visibility="public" type="_AwvxoGwNEdq7X4sGURiZYA" redefinedProperty="_oCuAt_WnEdqea89UKW2qFQ" association="_oCk2rfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHo8wPWnEdqea89UKW2qFQ" name="A_upperValue_owningUpper" memberEnd="_oEW_VPWnEdqea89UKW2qFQ _oHo8wvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oHo8wfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oHo8wvWnEdqea89UKW2qFQ" name="owningUpper" type="_Gjgl0GveEdq4DLWZOhbdEA" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oHo8wPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHo8w_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHo8xPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHo8xfWnEdqea89UKW2qFQ" name="A_lowerValue_owningLower" memberEnd="_oEW_WPWnEdqea89UKW2qFQ _oHo8x_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oHo8xvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oHo8x_WnEdqea89UKW2qFQ" name="owningLower" type="_Gjgl0GveEdq4DLWZOhbdEA" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oHo8xfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHo8yPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHo8yfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuArfWnEdqea89UKW2qFQ" name="A_receivingPackage_packageMerge" memberEnd="_oB-Z0vWnEdqea89UKW2qFQ _oCIKx_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAr_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oCuArvWnEdqea89UKW2qFQ" general="_oCuAuPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAsPWnEdqea89UKW2qFQ" name="A_mergedPackage_packageMerge" memberEnd="_oCuAsvWnEdqea89UKW2qFQ _oCIKy_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAsfWnEdqea89UKW2qFQ" general="_oC3xgPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCuAsvWnEdqea89UKW2qFQ" visibility="public" type="_oCIKxPWnEdqea89UKW2qFQ" redefinedProperty="_oC3xgvWnEdqea89UKW2qFQ" association="_oCuAsPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHo8yvWnEdqea89UKW2qFQ" name="A_instance_instanceValue" memberEnd="_oG5V7vWnEdqea89UKW2qFQ _oHo8y_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oHo8y_WnEdqea89UKW2qFQ" type="_PyCx8GveEdq4DLWZOhbdEA" association="_oHo8yvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHo8zPWnEdqea89UKW2qFQ" name="A_value_owningSlot" memberEnd="_oFQXRPWnEdqea89UKW2qFQ _oHo8zvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oHo8zfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oHo8zvWnEdqea89UKW2qFQ" name="owningSlot" type="_oFQXOfWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oHo8zPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHo8z_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHo80PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oHo80fWnEdqea89UKW2qFQ" name="A_specification_owningInstanceSpec" memberEnd="_oFQXNfWnEdqea89UKW2qFQ _oHo80_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oHo80vWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oHo80_WnEdqea89UKW2qFQ" name="owningInstanceSpec" type="_oFQXJPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oHo80fWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHo81PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHo81fWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAoPWnEdqea89UKW2qFQ" name="A_packagedElement_owningPackage" memberEnd="_oCuAovWnEdqea89UKW2qFQ _oB-ZwvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAofWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCuAovWnEdqea89UKW2qFQ" name="owningPackage" visibility="public" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oCuAoPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHo81vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHo81_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAkfWnEdqea89UKW2qFQ" name="A_importedMember_namespace" memberEnd="_oCuAk_WnEdqea89UKW2qFQ _oAyG1fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAkvWnEdqea89UKW2qFQ" general="_oC3xlfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCuAk_WnEdqea89UKW2qFQ" visibility="public" type="_ZiwkoGwLEdq7X4sGURiZYA" redefinedProperty="_oC3xlvWnEdqea89UKW2qFQ" association="_oCuAkfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2qPWnEdqea89UKW2qFQ" name="A_opposite_property" memberEnd="_oCk2qfWnEdqea89UKW2qFQ _oBYjzPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oCk2qfWnEdqea89UKW2qFQ" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_oCk2qPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2pvWnEdqea89UKW2qFQ" name="A_subsettedProperty_property" memberEnd="_oCk2p_WnEdqea89UKW2qFQ _oBYjyPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oCk2p_WnEdqea89UKW2qFQ" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_oCk2pvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAp_WnEdqea89UKW2qFQ" name="A_memberEnd_association" memberEnd="_oBYj1PWnEdqea89UKW2qFQ _oBFB8_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAqPWnEdqea89UKW2qFQ" general="_oC3xlfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuApfWnEdqea89UKW2qFQ" name="A_ownedType_package" memberEnd="_oCIK0vWnEdqea89UKW2qFQ _oB-ZxvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuApvWnEdqea89UKW2qFQ" general="_oCuAoPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAqfWnEdqea89UKW2qFQ" name="A_nestedPackage_nestingPackage" memberEnd="_oB-ZyvWnEdqea89UKW2qFQ _oB-ZzvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAqvWnEdqea89UKW2qFQ" general="_oCuAoPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xhfWnEdqea89UKW2qFQ" name="A_redefinedElement_redefinableElement" memberEnd="_oC3xhvWnEdqea89UKW2qFQ _oA734_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oC3xhvWnEdqea89UKW2qFQ" visibility="public" type="_oA731vWnEdqea89UKW2qFQ" association="_oC3xhfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHo82PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHo82fWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xg_WnEdqea89UKW2qFQ" name="A_redefinitionContext_redefinableElement" memberEnd="_oC3xhPWnEdqea89UKW2qFQ _oA733_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oC3xhPWnEdqea89UKW2qFQ" visibility="public" type="_oA731vWnEdqea89UKW2qFQ" association="_oC3xg_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xkPWnEdqea89UKW2qFQ" name="A_general_classifier" memberEnd="_oC3xkfWnEdqea89UKW2qFQ _oAMQ9PWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oC3xkfWnEdqea89UKW2qFQ" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oC3xkPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2qvWnEdqea89UKW2qFQ" name="A_superClass_class" memberEnd="_oCk2rPWnEdqea89UKW2qFQ _oBOyzfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCk2q_WnEdqea89UKW2qFQ" general="_oC3xkPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCk2rPWnEdqea89UKW2qFQ" visibility="public" type="_00owUGvdEdq4DLWZOhbdEA" redefinedProperty="_oC3xkfWnEdqea89UKW2qFQ" association="_oCk2qvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xs_WnEdqea89UKW2qFQ" name="A_bodyCondition_bodyContext" memberEnd="_oC3xtfWnEdqea89UKW2qFQ _oBre6fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xtPWnEdqea89UKW2qFQ" general="_oC3xuPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oC3xtfWnEdqea89UKW2qFQ" name="bodyContext" visibility="public" type="_M4X2IGveEdq4DLWZOhbdEA" subsettedProperty="_oBht4fWnEdqea89UKW2qFQ" association="_oC3xs_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHo82vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHo82_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAq_WnEdqea89UKW2qFQ" name="A_type_operation" memberEnd="_oCuArPWnEdqea89UKW2qFQ _oBre2_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oCuArPWnEdqea89UKW2qFQ" visibility="public" type="_M4X2IGveEdq4DLWZOhbdEA" association="_oCuAq_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xn_WnEdqea89UKW2qFQ" name="A_ownedParameter_operation" memberEnd="_oBre3_WnEdqea89UKW2qFQ _oB0ouPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xoPWnEdqea89UKW2qFQ" general="_oCuAivWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xl_WnEdqea89UKW2qFQ" name="A_operand_expression" memberEnd="_oC3xmfWnEdqea89UKW2qFQ _oCRUxvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xmPWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oC3xmfWnEdqea89UKW2qFQ" name="expression" visibility="public" type="_oCRUw_WnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oC3xl_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHyGsPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oHyGsfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAhPWnEdqea89UKW2qFQ" name="A_raisedException_operation" memberEnd="_oCuAhvWnEdqea89UKW2qFQ _oBre0_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCuAhfWnEdqea89UKW2qFQ" general="_oCuAj_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCuAhvWnEdqea89UKW2qFQ" visibility="public" type="_M4X2IGveEdq4DLWZOhbdEA" redefinedProperty="_oCuAkPWnEdqea89UKW2qFQ" association="_oCuAhPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xnPWnEdqea89UKW2qFQ" name="A_navigableOwnedEnd_association" memberEnd="_oC3xnvWnEdqea89UKW2qFQ _oBFB9_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xnfWnEdqea89UKW2qFQ" general="_oCk2mfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oC3xnvWnEdqea89UKW2qFQ" visibility="public" type="_AwvxoGwNEdq7X4sGURiZYA" redefinedProperty="_oC3xlvWnEdqea89UKW2qFQ" association="_oC3xnPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ChRfcGveEdq4DLWZOhbdEA" name="OpaqueExpression">
      <ownedComment xmi:id="_oBht5PWnEdqea89UKW2qFQ" annotatedElement="_ChRfcGveEdq4DLWZOhbdEA">
        <body>An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context.</body>
      </ownedComment>
      <ownedComment xmi:id="_oIFo5PWnEdqea89UKW2qFQ" annotatedElement="_ChRfcGveEdq4DLWZOhbdEA">
        <body>Provides a mechanism for precisely defining the behavior of an opaque expression. An opaque expression is defined by a behavior restricted to return one result.</body>
      </ownedComment>
      <ownedRule xmi:id="_oBht5fWnEdqea89UKW2qFQ" name="language_body_size" constrainedElement="_ChRfcGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oBht5vWnEdqea89UKW2qFQ" annotatedElement="_oBht5fWnEdqea89UKW2qFQ">
          <body>If the language attribute is not empty, then the size of the body and language arrays must be the same.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDxJaPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>language->notEmpty() implies (body->size() = language->size())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIFo5fWnEdqea89UKW2qFQ" name="only_return_result_parameters" constrainedElement="_ChRfcGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oIFo5vWnEdqea89UKW2qFQ" annotatedElement="_oIFo5fWnEdqea89UKW2qFQ">
          <body>The behavior may only have return result parameters.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIFo5_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.behavior.notEmpty() implies&#xD;&#xA;  self.behavior.ownedParameters->select(p | p.direction&lt;>#return)->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIFo6PWnEdqea89UKW2qFQ" name="one_return_result_parameter" constrainedElement="_ChRfcGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oIFo6fWnEdqea89UKW2qFQ" annotatedElement="_oIFo6PWnEdqea89UKW2qFQ">
          <body>The behavior must have exactly one return result parameter.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIFo6vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.behavior.notEmpty() implies&#xD;&#xA;  self.behavior.ownedParameter->select(p | p.direction=#return)->size() = 1</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oBht6PWnEdqea89UKW2qFQ" general="_oBFBwPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oBht6fWnEdqea89UKW2qFQ" name="body" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" aggregation="composite">
        <ownedComment xmi:id="_oBht6vWnEdqea89UKW2qFQ" annotatedElement="_oBht6fWnEdqea89UKW2qFQ">
          <body>The text of the expression, possibly in multiple languages.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDxJafWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDxJavWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBht7fWnEdqea89UKW2qFQ" name="language" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" aggregation="composite">
        <ownedComment xmi:id="_oBht7vWnEdqea89UKW2qFQ" annotatedElement="_oBht7fWnEdqea89UKW2qFQ">
          <body>Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the language. If languages are unspecified, it might be implicit from the expression body or the context. Languages are matched to body strings by order.</body>
        </ownedComment>
        <ownedComment xmi:id="_oDxJa_WnEdqea89UKW2qFQ" annotatedElement="_oBht7fWnEdqea89UKW2qFQ">
          <body>Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDxJbPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDxJbfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIFo6_WnEdqea89UKW2qFQ" name="result" type="_KyaPMGveEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" association="_oIYjvvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIFo7PWnEdqea89UKW2qFQ" annotatedElement="_oIFo6_WnEdqea89UKW2qFQ">
          <body>Restricts an opaque expression to return exactly one return result. When the invocation of the opaque expression completes, a single set of values is returned to its owner. This association is derived from the single return result parameter of the associated behavior.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIFo7fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIFo7vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIFo7_WnEdqea89UKW2qFQ" name="behavior" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oIYjwvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIFo8PWnEdqea89UKW2qFQ" annotatedElement="_oIFo7_WnEdqea89UKW2qFQ">
          <body>Specifies the behavior of the opaque expression.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIFo8fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIFo8vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_mv9LcFYiEdqB6vblk3tuMA" name="getResult" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_vXTbwFYiEdqB6vblk3tuMA" type="_KyaPMGveEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0JhNkVYiEdqB6vblk3tuMA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0JhNkFYiEdqB6vblk3tuMA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_qQchgGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_sRo9MGWKEdq-f4093SZhVA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oD6TUPWnEdqea89UKW2qFQ" name="value" isQuery="true" precondition="_oD6TU_WnEdqea89UKW2qFQ" bodyCondition="_oD6TVfWnEdqea89UKW2qFQ">
        <eAnnotations xmi:id="_oD6TUfWnEdqea89UKW2qFQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <ownedComment xmi:id="_oD6TUvWnEdqea89UKW2qFQ" annotatedElement="_oD6TUPWnEdqea89UKW2qFQ">
          <body>The query value() gives an integer value for an expression intended to produce one.</body>
        </ownedComment>
        <ownedRule xmi:id="_oD6TU_WnEdqea89UKW2qFQ" constrainedElement="_oD6TUPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oD6TVPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>self.isIntegral()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oD6TVfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oD6TUPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oD6TVvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oD6TV_WnEdqea89UKW2qFQ" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oD6TWPWnEdqea89UKW2qFQ" name="isIntegral" isQuery="true" bodyCondition="_oD6TWvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oD6TWfWnEdqea89UKW2qFQ" annotatedElement="_oD6TWPWnEdqea89UKW2qFQ">
          <body>The query isIntegral() tells whether an expression is intended to produce an integer.</body>
        </ownedComment>
        <ownedRule xmi:id="_oD6TWvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oD6TWPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oD6TW_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = false</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oD6TXPWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oD6TXfWnEdqea89UKW2qFQ" name="isPositive" isQuery="true" precondition="_oD6TYPWnEdqea89UKW2qFQ" bodyCondition="_oD6TYvWnEdqea89UKW2qFQ">
        <eAnnotations xmi:id="_oD6TXvWnEdqea89UKW2qFQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <ownedComment xmi:id="_oD6TX_WnEdqea89UKW2qFQ" annotatedElement="_oD6TXfWnEdqea89UKW2qFQ">
          <body>The query isPositive() tells whether an integer expression has a positive value.</body>
        </ownedComment>
        <ownedRule xmi:id="_oD6TYPWnEdqea89UKW2qFQ" constrainedElement="_oD6TXfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oD6TYfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>self.isIntegral()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oD6TYvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oD6TXfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oD6TY_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = false</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oD6TZPWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oD6TZfWnEdqea89UKW2qFQ" name="isNonNegative" isQuery="true" precondition="_oD6TZ_WnEdqea89UKW2qFQ" bodyCondition="_oD6TafWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oD6TZvWnEdqea89UKW2qFQ" annotatedElement="_oD6TZfWnEdqea89UKW2qFQ">
          <body>The query isNonNegative() tells whether an integer expression has a non-negative value.</body>
        </ownedComment>
        <ownedRule xmi:id="_oD6TZ_WnEdqea89UKW2qFQ" constrainedElement="_oD6TZfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oD6TaPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>self.isIntegral()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oD6TafWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oD6TZfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oD6TavWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = false</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oD6Ta_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIOyqPWnEdqea89UKW2qFQ" name="OpaqueBehavior">
      <ownedComment xmi:id="_oIOyqfWnEdqea89UKW2qFQ" annotatedElement="_oIOyqPWnEdqea89UKW2qFQ">
        <body>An behavior with implementation-specific semantics.</body>
      </ownedComment>
      <generalization xmi:id="_oIOyqvWnEdqea89UKW2qFQ" general="_TUPtYGveEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oIOyq_WnEdqea89UKW2qFQ" name="body" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" aggregation="composite">
        <ownedComment xmi:id="_oIOyrPWnEdqea89UKW2qFQ" annotatedElement="_oIOyq_WnEdqea89UKW2qFQ">
          <body>Specifies the behavior in one or more languages.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIOyrfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIOyrvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIOyr_WnEdqea89UKW2qFQ" name="language" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" aggregation="composite">
        <ownedComment xmi:id="_oIOysPWnEdqea89UKW2qFQ" annotatedElement="_oIOyr_WnEdqea89UKW2qFQ">
          <body>Languages the body strings use in the same order as the body strings.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIOysfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIOysvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIYjoPWnEdqea89UKW2qFQ" name="FunctionBehavior">
      <ownedComment xmi:id="_oIYjofWnEdqea89UKW2qFQ" annotatedElement="_oIYjoPWnEdqea89UKW2qFQ">
        <body>A function behavior is an opaque behavior that does not access or modify any objects or other external data.</body>
      </ownedComment>
      <ownedRule xmi:id="_oIYjovWnEdqea89UKW2qFQ" name="one_output_parameter" constrainedElement="_oIYjoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIYjo_WnEdqea89UKW2qFQ" annotatedElement="_oIYjovWnEdqea89UKW2qFQ">
          <body>A function behavior has at least one output parameter.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIYjpPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.ownedParameters->&#xD;&#xA;  select(p | p.direction=#out or p.direction=#inout or p.direction=#return)->size() >= 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIYjpfWnEdqea89UKW2qFQ" name="types_of_parameters" constrainedElement="_oIYjoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIYjpvWnEdqea89UKW2qFQ" annotatedElement="_oIYjpfWnEdqea89UKW2qFQ">
          <body>The types of parameters are all data types, which may not nest anything but other datatypes.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIYjp_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>def: hasAllDataTypeAttributes(d : DataType) : Boolean =&#xD;&#xA;  d.ownedAttribute->forAll(a |&#xD;&#xA;    a.type.oclIsTypeOf(DataType) and&#xD;&#xA;      hasAllDataTypeAttributes(a.type))&#xD;&#xA;self.ownedParameters->forAll(p | p.type.notEmpty() and&#xD;&#xA;  p.oclIsTypeOf(DataType) and hasAllDataTypeAttributes(p))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIYjqPWnEdqea89UKW2qFQ" general="_oIOyqPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oIYjqfWnEdqea89UKW2qFQ" name="A_behavioredClassifier_ownedBehavior" memberEnd="_oIFo3PWnEdqea89UKW2qFQ _oIYjq_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oIYjqvWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oIYjq_WnEdqea89UKW2qFQ" type="_iY7sMGvsEdqG6fBIPwe-mw" association="_oIYjqfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIYjrPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIYjrfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oIYjrvWnEdqea89UKW2qFQ" name="A_classifierBehavior_behavioredClassifier" memberEnd="_oIFo4PWnEdqea89UKW2qFQ _oIYjsPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oIYjr_WnEdqea89UKW2qFQ" general="_oIYjqfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oIYjsPWnEdqea89UKW2qFQ" type="_iY7sMGvsEdqG6fBIPwe-mw" redefinedProperty="_oIYjq_WnEdqea89UKW2qFQ" association="_oIYjrvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIYjsfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIYjsvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oIYjs_WnEdqea89UKW2qFQ" name="A_redefinedBehavior_behavior" memberEnd="_oIFowfWnEdqea89UKW2qFQ _oIYjtfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oIYjtPWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oIYjtfWnEdqea89UKW2qFQ" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oIYjs_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIYjtvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIYjt_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oIYjuPWnEdqea89UKW2qFQ" name="A_method_specification" memberEnd="_oIOypPWnEdqea89UKW2qFQ _oIFoxfWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oIYjufWnEdqea89UKW2qFQ" name="A_behavior_ownedParameter" memberEnd="_oIFoyfWnEdqea89UKW2qFQ _oIYju_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oIYjuvWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oIYju_WnEdqea89UKW2qFQ" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oIYjufWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIYjvPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIYjvfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oIYjvvWnEdqea89UKW2qFQ" name="A_result_opaqueExpression" memberEnd="_oIFo6_WnEdqea89UKW2qFQ _oIYjv_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oIYjv_WnEdqea89UKW2qFQ" type="_ChRfcGveEdq4DLWZOhbdEA" association="_oIYjvvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIYjwPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIYjwfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oIYjwvWnEdqea89UKW2qFQ" name="A_behavior_opaqueExpression" memberEnd="_oIFo7_WnEdqea89UKW2qFQ _oIYjw_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oIYjw_WnEdqea89UKW2qFQ" type="_ChRfcGveEdq4DLWZOhbdEA" association="_oIYjwvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIYjxPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIYjxfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oIYjxvWnEdqea89UKW2qFQ" name="A_context_behavior" memberEnd="_oIFozfWnEdqea89UKW2qFQ _oIYjyPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oIYjx_WnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oIYjyPWnEdqea89UKW2qFQ" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oIYjxvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIYjyfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIYjyvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oIYjy_WnEdqea89UKW2qFQ" name="A_precondition_behavior" memberEnd="_oIFo0fWnEdqea89UKW2qFQ _oIYjzfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oIYjzPWnEdqea89UKW2qFQ" general="_oC3xuPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oIYjzfWnEdqea89UKW2qFQ" type="_TUPtYGveEdq4DLWZOhbdEA" subsettedProperty="_oBht4fWnEdqea89UKW2qFQ" association="_oIYjy_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIYjzvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIYjz_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oIYj0PWnEdqea89UKW2qFQ" name="A_postcondition_behavior" memberEnd="_oIFo1PWnEdqea89UKW2qFQ _oIYj0vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oIYj0fWnEdqea89UKW2qFQ" general="_oC3xuPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oIYj0vWnEdqea89UKW2qFQ" type="_TUPtYGveEdq4DLWZOhbdEA" subsettedProperty="_oBht4fWnEdqea89UKW2qFQ" association="_oIYj0PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIYj0_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIYj1PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIiUofWnEdqea89UKW2qFQ" name="OpaqueAction">
      <ownedComment xmi:id="_oIiUovWnEdqea89UKW2qFQ" annotatedElement="_oIiUofWnEdqea89UKW2qFQ">
        <body>An action with implementation-specific semantics.</body>
      </ownedComment>
      <generalization xmi:id="_oIiUo_WnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oIiUpPWnEdqea89UKW2qFQ" name="body" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" aggregation="composite">
        <ownedComment xmi:id="_oIiUpfWnEdqea89UKW2qFQ" annotatedElement="_oIiUpPWnEdqea89UKW2qFQ">
          <body>Specifies the action in one or more languages.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIiUpvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIiUp_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIiUqPWnEdqea89UKW2qFQ" name="language" type="_aAyVgGvsEdqG6fBIPwe-mw" isOrdered="true" aggregation="composite">
        <ownedComment xmi:id="_oIiUqfWnEdqea89UKW2qFQ" annotatedElement="_oIiUqPWnEdqea89UKW2qFQ">
          <body>Languages the body strings use, in the same order as the body strings</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIiUqvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIiUq_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIiUrPWnEdqea89UKW2qFQ" name="inputValue" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oI1PuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIiUrfWnEdqea89UKW2qFQ" annotatedElement="_oIiUrPWnEdqea89UKW2qFQ">
          <body>Provides input to the action.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIiUrvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIiUr_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIiUsPWnEdqea89UKW2qFQ" name="outputValue" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oI1Pu_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIiUsfWnEdqea89UKW2qFQ" annotatedElement="_oIiUsPWnEdqea89UKW2qFQ">
          <body>Takes output from the action.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIiUsvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIiUs_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIiUz_WnEdqea89UKW2qFQ" name="CallAction" isAbstract="true">
      <ownedComment xmi:id="_oIiU0PWnEdqea89UKW2qFQ" annotatedElement="_oIiUz_WnEdqea89UKW2qFQ">
        <body>CallAction is an abstract class for actions that invoke behavior and receive return values.</body>
      </ownedComment>
      <ownedRule xmi:id="_oIiU0fWnEdqea89UKW2qFQ" name="synchronous_call" constrainedElement="_oIiUz_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIiU0vWnEdqea89UKW2qFQ" annotatedElement="_oIiU0fWnEdqea89UKW2qFQ">
          <body>Only synchronous call actions can have result pins.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIiU0_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIiU1PWnEdqea89UKW2qFQ" name="number_and_order" constrainedElement="_oIiUz_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIiU1fWnEdqea89UKW2qFQ" annotatedElement="_oIiU1PWnEdqea89UKW2qFQ">
          <body>The number and order of argument pins must be the same as the number and order of parameters of the invoked behavior or behavioral feature. Pins are matched to parameters by order.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIiU1vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIiU1_WnEdqea89UKW2qFQ" name="type_ordering_multiplicity" constrainedElement="_oIiUz_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIiU2PWnEdqea89UKW2qFQ" annotatedElement="_oIiU1_WnEdqea89UKW2qFQ">
          <body>The type, ordering, and multiplicity of an argument pin must be the same as the corresponding parameter of the behavior or behavioral feature.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIiU2fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIiU2vWnEdqea89UKW2qFQ" general="_oIiUyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oIiU2_WnEdqea89UKW2qFQ" name="isSynchronous" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oIiU3PWnEdqea89UKW2qFQ" annotatedElement="_oIiU2_WnEdqea89UKW2qFQ">
          <body>If true, the call is synchronous and the caller waits for completion of the invoked behavior.&#xD;
If false, the call is asynchronous and the caller proceeds immediately and does not expect a return values.&#xD;
</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oIiU3fWnEdqea89UKW2qFQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIiU3vWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oI1PovWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIiU3_WnEdqea89UKW2qFQ" annotatedElement="_oIiU3vWnEdqea89UKW2qFQ">
          <body>A list of output pins where the results of performing the invocation are placed.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIiU4PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIiU4fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIrekPWnEdqea89UKW2qFQ" name="SendSignalAction">
      <ownedComment xmi:id="_oIrekfWnEdqea89UKW2qFQ" annotatedElement="_oIrekPWnEdqea89UKW2qFQ">
        <body>A send signal action is an action that creates a signal instance from its inputs, and transmits it to the target object, where it may cause the firing of a state machine transition or the execution of an activity. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor. If the input is already a signal instance, use a send object action.</body>
      </ownedComment>
      <ownedRule xmi:id="_oIrekvWnEdqea89UKW2qFQ" name="number_order" constrainedElement="_oIrekPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIrek_WnEdqea89UKW2qFQ" annotatedElement="_oIrekvWnEdqea89UKW2qFQ">
          <body>The number and order of argument pins must be the same as the number and order of attributes in the signal.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIrelPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIrelfWnEdqea89UKW2qFQ" name="type_ordering_multiplicity" constrainedElement="_oIrekPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIrelvWnEdqea89UKW2qFQ" annotatedElement="_oIrelfWnEdqea89UKW2qFQ">
          <body>The type, ordering, and multiplicity of an argument pin must be the same as the corresponding attribute of the signal.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIrel_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIremPWnEdqea89UKW2qFQ" general="_oIiUyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oIremfWnEdqea89UKW2qFQ" name="target" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oI1PmfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIremvWnEdqea89UKW2qFQ" annotatedElement="_oIremfWnEdqea89UKW2qFQ">
          <body>The target object to which the signal is sent.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIrem_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIrenPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIrenfWnEdqea89UKW2qFQ" name="signal" type="_Pu3O0HL0EdqziYxiZo0YtA" association="_oI1PnvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIrenvWnEdqea89UKW2qFQ" annotatedElement="_oIrenfWnEdqea89UKW2qFQ">
          <body>The type of signal transmitted to the target object.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIren_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIreoPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIreofWnEdqea89UKW2qFQ" name="CallOperationAction">
      <ownedComment xmi:id="_oIreovWnEdqea89UKW2qFQ" annotatedElement="_oIreofWnEdqea89UKW2qFQ">
        <body>A call operation action is an action that transmits an operation call request to the target object, where it may cause the invocation of associated behavior. The argument values of the action are available to the execution of the invoked behavior. If the action is marked synchronous, the execution of the call operation action waits until the execution of the invoked behavior completes and a reply transmission is returned to the caller; otherwise execution of the action is complete when the invocation of the operation is established and the execution of the invoked operation proceeds concurrently with the execution of the calling behavior. Any values returned as part of the reply transmission are put on the result output pins of the call operation action. Upon receipt of the reply transmission, execution of the call operation action is complete.</body>
      </ownedComment>
      <ownedRule xmi:id="_oIreo_WnEdqea89UKW2qFQ" name="argument_pin_equal_parameter" constrainedElement="_oIreofWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIrepPWnEdqea89UKW2qFQ" annotatedElement="_oIreo_WnEdqea89UKW2qFQ">
          <body>The number of argument pins and the number of owned parameters of the operation of type in and in-out must be equal.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIrepfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIrepvWnEdqea89UKW2qFQ" name="result_pin_equal_parameter" constrainedElement="_oIreofWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIrep_WnEdqea89UKW2qFQ" annotatedElement="_oIrepvWnEdqea89UKW2qFQ">
          <body>The number of result pins and the number of owned parameters of the operation of type return, out, and in-out must be equal.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIreqPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIreqfWnEdqea89UKW2qFQ" name="type_ordering_multiplicity" constrainedElement="_oIreofWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIreqvWnEdqea89UKW2qFQ" annotatedElement="_oIreqfWnEdqea89UKW2qFQ">
          <body>The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding owned parameter of the operation.&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIreq_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIrerPWnEdqea89UKW2qFQ" name="type_target_pin" constrainedElement="_oIreofWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIrerfWnEdqea89UKW2qFQ" annotatedElement="_oIrerPWnEdqea89UKW2qFQ">
          <body>The type of the target pin must be the same as the type that owns the operation.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIrervWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIrer_WnEdqea89UKW2qFQ" general="_oIiUz_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oIresPWnEdqea89UKW2qFQ" name="operation" type="_M4X2IGveEdq4DLWZOhbdEA" association="_oI1PkPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIresfWnEdqea89UKW2qFQ" annotatedElement="_oIresPWnEdqea89UKW2qFQ">
          <body>The operation to be invoked by the action execution.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIresvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIres_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIretPWnEdqea89UKW2qFQ" name="target" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oI1PlPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIretfWnEdqea89UKW2qFQ" annotatedElement="_oIretPWnEdqea89UKW2qFQ">
          <body>The target object to which the request is sent. The classifier of the target object is used to dynamically determine a behavior to invoke. This object constitutes the context of the execution of the operation.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIretvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIret_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIreuPWnEdqea89UKW2qFQ" name="CallBehaviorAction">
      <ownedComment xmi:id="_oIreufWnEdqea89UKW2qFQ" annotatedElement="_oIreuPWnEdqea89UKW2qFQ">
        <body>A call behavior action is a call action that invokes a behavior directly rather than invoking a behavioral feature that, in turn, results in the invocation of that behavior. The argument values of the action are available to the execution of the invoked behavior. For synchronous calls the execution of the call behavior action waits until the execution of the invoked behavior completes and a result is returned on its output pin. The action completes immediately without a result, if the call is asynchronous. In particular, the invoked behavior may be an activity.</body>
      </ownedComment>
      <ownedRule xmi:id="_oIreuvWnEdqea89UKW2qFQ" name="argument_pin_equal_parameter" constrainedElement="_oIreuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIreu_WnEdqea89UKW2qFQ" annotatedElement="_oIreuvWnEdqea89UKW2qFQ">
          <body>The number of argument pins and the number of parameters of the behavior of type in and in-out must be equal.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIrevPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIrevfWnEdqea89UKW2qFQ" name="result_pin_equal_parameter" constrainedElement="_oIreuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIrevvWnEdqea89UKW2qFQ" annotatedElement="_oIrevfWnEdqea89UKW2qFQ">
          <body>The number of result pins and the number of parameters of the behavior of type return, out, and in-out must be equal.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIrev_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIrewPWnEdqea89UKW2qFQ" name="type_ordering_multiplicity" constrainedElement="_oIreuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIrewfWnEdqea89UKW2qFQ" annotatedElement="_oIrewPWnEdqea89UKW2qFQ">
          <body>The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding parameter of the behavior.&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIrewvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIrew_WnEdqea89UKW2qFQ" general="_oIiUz_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oIrexPWnEdqea89UKW2qFQ" name="behavior" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oIre5PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIrexfWnEdqea89UKW2qFQ" annotatedElement="_oIrexPWnEdqea89UKW2qFQ">
          <body>The invoked behavior. It must be capable of accepting and returning control.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIrexvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIrex_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Gjgl0GveEdq4DLWZOhbdEA" name="MultiplicityElement" isAbstract="true">
      <ownedComment xmi:id="_oAoV1_WnEdqea89UKW2qFQ" annotatedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <body>A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element.</body>
      </ownedComment>
      <ownedRule xmi:id="_oAoV2PWnEdqea89UKW2qFQ" name="upper_gt_0" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oAoV2fWnEdqea89UKW2qFQ" annotatedElement="_oAoV2PWnEdqea89UKW2qFQ">
          <body>A multiplicity must define at least one valid cardinality that is greater than zero.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEW_QPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>upperBound()->notEmpty() implies upperBound() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oAoV3vWnEdqea89UKW2qFQ" name="lower_ge_0" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oAoV3_WnEdqea89UKW2qFQ" annotatedElement="_oAoV3vWnEdqea89UKW2qFQ">
          <body>The lower bound must be a non-negative integer literal.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEW_QfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>lowerBound()->notEmpty() implies lowerBound() >= 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oAoV2_WnEdqea89UKW2qFQ" name="upper_ge_lower" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oAoV3PWnEdqea89UKW2qFQ" annotatedElement="_oAoV2_WnEdqea89UKW2qFQ">
          <body>The upper bound must be greater than or equal to the lower bound.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEW_QvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oEW_Q_WnEdqea89UKW2qFQ" name="value_specification_no_side_effects" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oEW_RPWnEdqea89UKW2qFQ" annotatedElement="_oEW_Q_WnEdqea89UKW2qFQ">
          <body>If a non-literal ValueSpecification is used for the lower or upper bound, then evaluating that specification must not have side effects.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEW_RfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oEW_RvWnEdqea89UKW2qFQ" name="value_specification_constant" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oEW_R_WnEdqea89UKW2qFQ" annotatedElement="_oEW_RvWnEdqea89UKW2qFQ">
          <body>If a non-literal ValueSpecification is used for the lower or upper bound, then that specification must be a constant expression.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEW_SPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oAoV4fWnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oAoV4vWnEdqea89UKW2qFQ" name="isOrdered" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oAoV4_WnEdqea89UKW2qFQ" annotatedElement="_oAoV4vWnEdqea89UKW2qFQ">
          <body>For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered..</body>
        </ownedComment>
        <ownedComment xmi:id="_oEW_SfWnEdqea89UKW2qFQ" annotatedElement="_oAoV4vWnEdqea89UKW2qFQ">
          <body>For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oEW_SvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAoV5fWnEdqea89UKW2qFQ" name="isUnique" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oAoV5vWnEdqea89UKW2qFQ" annotatedElement="_oAoV5fWnEdqea89UKW2qFQ">
          <body>For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oEW_S_WnEdqea89UKW2qFQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAoV7fWnEdqea89UKW2qFQ" name="upper" visibility="public" type="_dRZxsGvsEdqG6fBIPwe-mw" isDerived="true">
        <ownedComment xmi:id="_oAoV7vWnEdqea89UKW2qFQ" annotatedElement="_oAoV7fWnEdqea89UKW2qFQ">
          <body>Specifies the upper bound of the multiplicity interval.</body>
        </ownedComment>
        <ownedComment xmi:id="_oEW_TPWnEdqea89UKW2qFQ" annotatedElement="_oAoV7fWnEdqea89UKW2qFQ">
          <body>Specifies the upper bound of the multiplicity interval, if it is expressed as an unlimited natural.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEW_TfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEW_TvWnEdqea89UKW2qFQ"/>
        <defaultValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEW_T_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAoV6PWnEdqea89UKW2qFQ" name="lower" visibility="public" type="_XqvEIGvsEdqG6fBIPwe-mw" isDerived="true">
        <ownedComment xmi:id="_oAoV6fWnEdqea89UKW2qFQ" annotatedElement="_oAoV6PWnEdqea89UKW2qFQ">
          <body>Specifies the lower bound of the multiplicity interval.</body>
        </ownedComment>
        <ownedComment xmi:id="_oEW_UPWnEdqea89UKW2qFQ" annotatedElement="_oAoV6PWnEdqea89UKW2qFQ">
          <body>Specifies the lower bound of the multiplicity interval, if it is expressed as an integer.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEW_UfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEW_UvWnEdqea89UKW2qFQ"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_oEW_U_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oEW_VPWnEdqea89UKW2qFQ" name="upperValue" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oHo8wPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEW_VfWnEdqea89UKW2qFQ" annotatedElement="_oEW_VPWnEdqea89UKW2qFQ">
          <body>The specification of the upper bound for this multiplicity.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEW_VvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEW_V_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oEW_WPWnEdqea89UKW2qFQ" name="lowerValue" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oHo8xfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEW_WfWnEdqea89UKW2qFQ" annotatedElement="_oEW_WPWnEdqea89UKW2qFQ">
          <body>The specification of the lower bound for this multiplicity.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEW_WvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEW_W_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_qtCaIFYkEdqB6vblk3tuMA" name="setLower" visibility="protected">
        <ownedParameter xmi:id="_scWboFYkEdqB6vblk3tuMA" name="newLower" visibility="protected" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_vlEgEFYkEdqB6vblk3tuMA" name="setUpper" visibility="protected">
        <ownedParameter xmi:id="_xJp4QFYkEdqB6vblk3tuMA" name="newUpper" visibility="protected" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oEW_XPWnEdqea89UKW2qFQ" name="lower" isQuery="true" bodyCondition="_oEW_XvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEW_XfWnEdqea89UKW2qFQ" annotatedElement="_oEW_XPWnEdqea89UKW2qFQ">
          <body>The derived lower attribute must equal the lowerBound.</body>
        </ownedComment>
        <ownedRule xmi:id="_oEW_XvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oEW_XPWnEdqea89UKW2qFQ _oAoV6PWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEW_X_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = lowerBound()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEW_YPWnEdqea89UKW2qFQ" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oEW_YfWnEdqea89UKW2qFQ" name="upper" isQuery="true" bodyCondition="_oEW_Y_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEW_YvWnEdqea89UKW2qFQ" annotatedElement="_oEW_YfWnEdqea89UKW2qFQ">
          <body>The derived upper attribute must equal the upperBound.</body>
        </ownedComment>
        <ownedRule xmi:id="_oEW_Y_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oEW_YfWnEdqea89UKW2qFQ _oAoV7fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEW_ZPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = upperBound()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEW_ZfWnEdqea89UKW2qFQ" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oAoV8vWnEdqea89UKW2qFQ" name="isMultivalued" visibility="public" isQuery="true" precondition="_oAoV9PWnEdqea89UKW2qFQ" bodyCondition="_oAoV9vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAoV8_WnEdqea89UKW2qFQ" annotatedElement="_oAoV8vWnEdqea89UKW2qFQ">
          <body>The query isMultivalued() checks whether this multiplicity has an upper bound greater than one.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAoV9PWnEdqea89UKW2qFQ" constrainedElement="_oAoV8vWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEgwQPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>upperBound()->notEmpty()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oAoV9vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAoV8vWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEgwQfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = upperBound() > 1</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAoV-PWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oAoWAfWnEdqea89UKW2qFQ" name="includesCardinality" visibility="public" isQuery="true" precondition="_oAoWA_WnEdqea89UKW2qFQ" bodyCondition="_oAoWBfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAoWAvWnEdqea89UKW2qFQ" annotatedElement="_oAoWAfWnEdqea89UKW2qFQ">
          <body>The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAoWA_WnEdqea89UKW2qFQ" constrainedElement="_oAoWAfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEgwQvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>upperBound()->notEmpty() and lowerBound()->notEmpty()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oAoWBfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAoWAfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEgwQ_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (lowerBound() &lt;= C) and (upperBound() >= C)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAoWB_WnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oAoWCPWnEdqea89UKW2qFQ" name="C" visibility="public" type="_XqvEIGvsEdqG6fBIPwe-mw"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oAoV-fWnEdqea89UKW2qFQ" name="includesMultiplicity" visibility="public" isQuery="true" precondition="_oAoV-_WnEdqea89UKW2qFQ" bodyCondition="_oAoV_fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAoV-vWnEdqea89UKW2qFQ" annotatedElement="_oAoV-fWnEdqea89UKW2qFQ">
          <body>The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAoV-_WnEdqea89UKW2qFQ" constrainedElement="_oAoV-fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEgwRPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>self.upperBound()->notEmpty() and self.lowerBound()->notEmpty() and M.upperBound()->notEmpty() and M.lowerBound()->notEmpty()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oAoV_fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAoV-fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEgwRfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAoV__WnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oAoWAPWnEdqea89UKW2qFQ" name="M" visibility="public" type="_Gjgl0GveEdq4DLWZOhbdEA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oAoWCfWnEdqea89UKW2qFQ" name="lowerBound" visibility="public" isQuery="true" bodyCondition="_oAoWC_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAoWCvWnEdqea89UKW2qFQ" annotatedElement="_oAoWCfWnEdqea89UKW2qFQ">
          <body>The query lowerBound() returns the lower bound of the multiplicity as an integer.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAoWC_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAoWCfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEgwRvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if lowerValue->isEmpty() then 1 else lowerValue.integerValue() endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAoWDfWnEdqea89UKW2qFQ" visibility="public" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oAoWDvWnEdqea89UKW2qFQ" name="upperBound" visibility="public" isQuery="true" bodyCondition="_oAoWEPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAoWD_WnEdqea89UKW2qFQ" annotatedElement="_oAoWDvWnEdqea89UKW2qFQ">
          <body>The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAoWEPWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAoWDvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEgwR_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if upperValue->isEmpty() then 1 else upperValue.unlimitedValue() endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAoWEvWnEdqea89UKW2qFQ" visibility="public" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oIre1_WnEdqea89UKW2qFQ" name="compatibleWith" isQuery="true" bodyCondition="_oIre2fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIre2PWnEdqea89UKW2qFQ" annotatedElement="_oIre1_WnEdqea89UKW2qFQ">
          <body>The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.</body>
        </ownedComment>
        <ownedRule xmi:id="_oIre2fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oIre1_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIre2vWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = Integer.allInstances()->forAll(i : Integer | self.includesCardinality(i) implies other.includesCardinality(i))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oIre2_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oIre3PWnEdqea89UKW2qFQ" name="other" type="_Gjgl0GveEdq4DLWZOhbdEA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oIre3fWnEdqea89UKW2qFQ" name="is" isQuery="true" bodyCondition="_oIre3_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIre3vWnEdqea89UKW2qFQ" annotatedElement="_oIre3fWnEdqea89UKW2qFQ">
          <body>The operation is determines if the upper and lower bound of the ranges are the ones given.</body>
        </ownedComment>
        <ownedRule xmi:id="_oIre3_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oIre3fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIre4PWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (lowerbound = self.lowerbound and upperbound = self.upperbound)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oIre4fWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oIre4vWnEdqea89UKW2qFQ" name="lowerbound" type="_XqvEIGvsEdqG6fBIPwe-mw"/>
        <ownedParameter xmi:id="_oIre4_WnEdqea89UKW2qFQ" name="upperbound" type="_XqvEIGvsEdqG6fBIPwe-mw"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oIre5PWnEdqea89UKW2qFQ" name="A_behavior_callBehaviorAction" memberEnd="_oIrexPWnEdqea89UKW2qFQ _oIre5fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oIre5fWnEdqea89UKW2qFQ" type="_oIreuPWnEdqea89UKW2qFQ" association="_oIre5PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIre5vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIre5_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1PkPWnEdqea89UKW2qFQ" name="A_operation_callOperationAction" memberEnd="_oIresPWnEdqea89UKW2qFQ _oI1PkfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oI1PkfWnEdqea89UKW2qFQ" type="_oIreofWnEdqea89UKW2qFQ" association="_oI1PkPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oI1PkvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oI1Pk_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1PlPWnEdqea89UKW2qFQ" name="A_target_callOperationAction" memberEnd="_oIretPWnEdqea89UKW2qFQ _oI1PlvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oI1PlfWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oI1PlvWnEdqea89UKW2qFQ" type="_oIreofWnEdqea89UKW2qFQ" association="_oI1PlPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oI1Pl_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oI1PmPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1PmfWnEdqea89UKW2qFQ" name="A_target_sendSignalAction" memberEnd="_oIremfWnEdqea89UKW2qFQ _oI1Pm_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oI1PmvWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oI1Pm_WnEdqea89UKW2qFQ" type="_oIrekPWnEdqea89UKW2qFQ" association="_oI1PmfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oI1PnPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oI1PnfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1PnvWnEdqea89UKW2qFQ" name="A_signal_sendSignalAction" memberEnd="_oIrenfWnEdqea89UKW2qFQ _oI1Pn_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oI1Pn_WnEdqea89UKW2qFQ" type="_oIrekPWnEdqea89UKW2qFQ" association="_oI1PnvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oI1PoPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oI1PofWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1PovWnEdqea89UKW2qFQ" name="A_result_callAction" memberEnd="_oIiU3vWnEdqea89UKW2qFQ _oI1PpPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oI1Po_WnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oI1PpPWnEdqea89UKW2qFQ" type="_oIiUz_WnEdqea89UKW2qFQ" redefinedProperty="_oI1PqvWnEdqea89UKW2qFQ" association="_oI1PovWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1PpfWnEdqea89UKW2qFQ" name="A_argument_invocationAction" memberEnd="_oIiUy_WnEdqea89UKW2qFQ _oI1Pp_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oI1PpvWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oI1Pp_WnEdqea89UKW2qFQ" type="_oIiUyPWnEdqea89UKW2qFQ" redefinedProperty="_oI1Pr_WnEdqea89UKW2qFQ" association="_oI1PpfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1PqPWnEdqea89UKW2qFQ" name="A_action_output" memberEnd="_oIrey_WnEdqea89UKW2qFQ _oI1PqvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oI1PqfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oI1PqvWnEdqea89UKW2qFQ" type="_oIreyPWnEdqea89UKW2qFQ" association="_oI1PqPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oI1Pq_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oI1PrPWnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1PrfWnEdqea89UKW2qFQ" name="A_action_input" memberEnd="_oIrez_WnEdqea89UKW2qFQ _oI1Pr_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oI1PrvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oI1Pr_WnEdqea89UKW2qFQ" type="_oIreyPWnEdqea89UKW2qFQ" association="_oI1PrfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oI1PsPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oI1PsfWnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1PsvWnEdqea89UKW2qFQ" name="A_value_valuePin" memberEnd="_oIiUvvWnEdqea89UKW2qFQ _oI1Ps_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oI1Ps_WnEdqea89UKW2qFQ" type="_oIiUuPWnEdqea89UKW2qFQ" association="_oI1PsvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oI1PtPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oI1PtfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1PtvWnEdqea89UKW2qFQ" name="A_context_action" memberEnd="_oIre0_WnEdqea89UKW2qFQ _oI1Pt_WnEdqea89UKW2qFQ" isDerived="true">
      <ownedEnd xmi:id="_oI1Pt_WnEdqea89UKW2qFQ" type="_oIreyPWnEdqea89UKW2qFQ" association="_oI1PtvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1PuPWnEdqea89UKW2qFQ" name="A_inputValue_opaqueAction" memberEnd="_oIiUrPWnEdqea89UKW2qFQ _oI1PuvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oI1PufWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oI1PuvWnEdqea89UKW2qFQ" type="_oIiUofWnEdqea89UKW2qFQ" redefinedProperty="_oI1Pr_WnEdqea89UKW2qFQ" association="_oI1PuPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI1Pu_WnEdqea89UKW2qFQ" name="A_outputValue_opaqueAction" memberEnd="_oIiUsPWnEdqea89UKW2qFQ _oI1PvfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oI1PvPWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oI1PvfWnEdqea89UKW2qFQ" type="_oIiUofWnEdqea89UKW2qFQ" redefinedProperty="_oI1PqvWnEdqea89UKW2qFQ" association="_oI1Pu_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI-Zs_WnEdqea89UKW2qFQ" name="A_subgroup_superGroup" memberEnd="_oI-ZmfWnEdqea89UKW2qFQ _oI-ZnfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oI-ZtPWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJbFcPWnEdqea89UKW2qFQ" name="SequenceNode">
      <ownedComment xmi:id="_oJbFcfWnEdqea89UKW2qFQ" annotatedElement="_oJbFcPWnEdqea89UKW2qFQ">
        <body>A sequence node is a structured activity node that executes its actions in order.</body>
      </ownedComment>
      <generalization xmi:id="_oJbFcvWnEdqea89UKW2qFQ" general="_oJIKmfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oJbFc_WnEdqea89UKW2qFQ" name="executableNode" type="_oJR7yPWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" redefinedProperty="_oJIKovWnEdqea89UKW2qFQ" association="_oJk2m_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJbFdPWnEdqea89UKW2qFQ" annotatedElement="_oJbFc_WnEdqea89UKW2qFQ">
          <body>An ordered set of executable nodes.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJbFdfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJbFdvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIiUxfWnEdqea89UKW2qFQ" name="InputPin">
      <ownedComment xmi:id="_oIiUxvWnEdqea89UKW2qFQ" annotatedElement="_oIiUxfWnEdqea89UKW2qFQ">
        <body>An input pin is a pin that holds input values to be consumed by an action.</body>
      </ownedComment>
      <ownedRule xmi:id="_oJbFfPWnEdqea89UKW2qFQ" name="outgoing_edges_structured_only" constrainedElement="_oIiUxfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJbFffWnEdqea89UKW2qFQ" annotatedElement="_oJbFfPWnEdqea89UKW2qFQ">
          <body>Input pins may have outgoing edges only when they are on actions that are structured nodes, and these edges must target a node contained by the structured node.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oJbFfvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIiUx_WnEdqea89UKW2qFQ" general="_oIiUtPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIiUwvWnEdqea89UKW2qFQ" name="OutputPin">
      <ownedComment xmi:id="_oIiUw_WnEdqea89UKW2qFQ" annotatedElement="_oIiUwvWnEdqea89UKW2qFQ">
        <body>An output pin is a pin that holds output values produced by an action.</body>
      </ownedComment>
      <ownedRule xmi:id="_oJbFf_WnEdqea89UKW2qFQ" name="incoming_edges_structured_only" constrainedElement="_oIiUwvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJbFgPWnEdqea89UKW2qFQ" annotatedElement="_oJbFf_WnEdqea89UKW2qFQ">
          <body>Output pins may have incoming edges only when they are on actions that are structured nodes, and these edges may not target a node contained by the structured node.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oJbFgfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIiUxPWnEdqea89UKW2qFQ" general="_oIiUtPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2cPWnEdqea89UKW2qFQ" name="A_scope_variable" memberEnd="_oJIKi_WnEdqea89UKW2qFQ _oJIKnvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oJk2cfWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2cvWnEdqea89UKW2qFQ" name="A_node_inStructuredNode" memberEnd="_oJIKovWnEdqea89UKW2qFQ _oJR7wPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oJk2c_WnEdqea89UKW2qFQ" general="_oI-ZsPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2dPWnEdqea89UKW2qFQ" name="A_clause_test" memberEnd="_oJR7nPWnEdqea89UKW2qFQ _oJk2dfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oJk2dfWnEdqea89UKW2qFQ" type="_oJR7lvWnEdqea89UKW2qFQ" association="_oJk2dPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJk2dvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJk2d_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2ePWnEdqea89UKW2qFQ" name="A_clause_body" memberEnd="_oJR7oPWnEdqea89UKW2qFQ _oJk2efWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oJk2efWnEdqea89UKW2qFQ" type="_oJR7lvWnEdqea89UKW2qFQ" association="_oJk2ePWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJk2evWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJk2e_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2fPWnEdqea89UKW2qFQ" name="A_predecessorClause_successorClause" memberEnd="_oJR7qPWnEdqea89UKW2qFQ _oJR7pPWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2ffWnEdqea89UKW2qFQ" name="A_loopNode_bodyPart" memberEnd="_oJR7hvWnEdqea89UKW2qFQ _oJk2fvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oJk2fvWnEdqea89UKW2qFQ" type="_oJR7gPWnEdqea89UKW2qFQ" association="_oJk2ffWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJk2f_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJk2gPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2gfWnEdqea89UKW2qFQ" name="A_loopNode_setupPart" memberEnd="_oJR7ivWnEdqea89UKW2qFQ _oJk2gvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oJk2gvWnEdqea89UKW2qFQ" type="_oJR7gPWnEdqea89UKW2qFQ" association="_oJk2gfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJk2g_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJk2hPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2hfWnEdqea89UKW2qFQ" name="A_clause_conditionalNode" memberEnd="_oJIKs_WnEdqea89UKW2qFQ _oJk2h_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oJk2hvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oJk2h_WnEdqea89UKW2qFQ" type="_oJIKqvWnEdqea89UKW2qFQ" association="_oJk2hfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJk2iPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJk2ifWnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2ivWnEdqea89UKW2qFQ" name="A_decider_clause" memberEnd="_oJR7rPWnEdqea89UKW2qFQ _oJk2i_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oJk2i_WnEdqea89UKW2qFQ" type="_oJR7lvWnEdqea89UKW2qFQ" association="_oJk2ivWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJk2jPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJk2jfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2jvWnEdqea89UKW2qFQ" name="A_decider_loopNode" memberEnd="_oJR7jvWnEdqea89UKW2qFQ _oJk2j_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oJk2j_WnEdqea89UKW2qFQ" type="_oJR7gPWnEdqea89UKW2qFQ" association="_oJk2jvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJk2kPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJk2kfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2kvWnEdqea89UKW2qFQ" name="A_test_loopNode" memberEnd="_oJR7kvWnEdqea89UKW2qFQ _oJk2k_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oJk2k_WnEdqea89UKW2qFQ" type="_oJR7gPWnEdqea89UKW2qFQ" association="_oJk2kvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJk2lPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJk2lfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2lvWnEdqea89UKW2qFQ" name="A_activity_structuredNode" memberEnd="_oJR7sPWnEdqea89UKW2qFQ _oJIKpvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oJk2l_WnEdqea89UKW2qFQ" general="_oI-ZrvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oJk2mPWnEdqea89UKW2qFQ" general="_oI-ZsfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2mfWnEdqea89UKW2qFQ" name="A_variable_activityScope" memberEnd="_oJR7tPWnEdqea89UKW2qFQ _oJIKj_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oJk2mvWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJk2m_WnEdqea89UKW2qFQ" name="A_executableNode_sequenceNode" memberEnd="_oJbFc_WnEdqea89UKW2qFQ _oJk2nfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oJk2nPWnEdqea89UKW2qFQ" general="_oJk2cvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oJk2nfWnEdqea89UKW2qFQ" type="_oJbFcPWnEdqea89UKW2qFQ" association="_oJk2m_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJk2nvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJk2n_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI-ZrvWnEdqea89UKW2qFQ" name="A_node_activity" memberEnd="_oI-ZpvWnEdqea89UKW2qFQ _oI-ZhvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oI-Zr_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJuncfWnEdqea89UKW2qFQ" name="Usage">
      <ownedComment xmi:id="_oJuncvWnEdqea89UKW2qFQ" annotatedElement="_oJuncfWnEdqea89UKW2qFQ">
        <body>A usage is a relationship in which one element requires another element (or set of elements) for its full implementation or operation. A usage is a dependency in which the client requires the presence of the supplier.</body>
      </ownedComment>
      <generalization xmi:id="_oJunc_WnEdqea89UKW2qFQ" general="_rEDGkGwKEdq7X4sGURiZYA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJundPWnEdqea89UKW2qFQ" name="Abstraction">
      <ownedComment xmi:id="_oJundfWnEdqea89UKW2qFQ" annotatedElement="_oJundPWnEdqea89UKW2qFQ">
        <body>An abstraction is a relationship that relates two elements or sets of elements that represent the same concept at different levels of abstraction or from different viewpoints.</body>
      </ownedComment>
      <generalization xmi:id="_oJundvWnEdqea89UKW2qFQ" general="_rEDGkGwKEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oJund_WnEdqea89UKW2qFQ" name="mapping" type="_ChRfcGveEdq4DLWZOhbdEA" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oJ3xYvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJunePWnEdqea89UKW2qFQ" annotatedElement="_oJund_WnEdqea89UKW2qFQ">
          <body>An composition of an Expression that states the abstraction relationship between the supplier and the client. In some cases, such as Derivation, it is usually formal and unidirectional; in other cases, such as Trace, it is usually informal and bidirectional. The mapping expression is optional and may be omitted if the precise relationship between the elements is not specified.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJunefWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJunevWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rEDGkGwKEdq7X4sGURiZYA" name="Dependency">
      <ownedComment xmi:id="_oJune_WnEdqea89UKW2qFQ" annotatedElement="_rEDGkGwKEdq7X4sGURiZYA">
        <body>A dependency is a relationship that signifies that a single or a set of model elements requires other model elements for their specification or implementation. This means that the complete semantics of the depending elements is either semantically or structurally dependent on the definition of the supplier element(s).</body>
      </ownedComment>
      <generalization xmi:id="_oJunfPWnEdqea89UKW2qFQ" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <generalization xmi:id="_oJunffWnEdqea89UKW2qFQ" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oJunfvWnEdqea89UKW2qFQ" name="supplier" type="_csVgUGvtEdqG6fBIPwe-mw" subsettedProperty="_oAfL5vWnEdqea89UKW2qFQ" association="_oJ3xb_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJunf_WnEdqea89UKW2qFQ" annotatedElement="_oJunfvWnEdqea89UKW2qFQ">
          <body>The element(s) independent of the client element(s), in the same respect and the same dependency relationship. In some directed dependency relationships (such as Refinement Abstractions), a common convention in the domain of class-based OO software is to put the more abstract element in this role. Despite this convention, users of UML may stipulate a sense of dependency suitable for their domain, which makes a more abstract element dependent on that which is more specific.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJungPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJungfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJungvWnEdqea89UKW2qFQ" name="client" type="_csVgUGvtEdqG6fBIPwe-mw" subsettedProperty="_oAfL4vWnEdqea89UKW2qFQ" association="_oJ3xdfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJung_WnEdqea89UKW2qFQ" annotatedElement="_oJungvWnEdqea89UKW2qFQ">
          <body>The element(s) dependent on the supplier element(s). In some cases (such as a Trace Abstraction) the assignment of direction (that is, the designation of the client element) is at the discretion of the modeler, and is a stipulation.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJunhPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJunhfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJunhvWnEdqea89UKW2qFQ" name="Realization">
      <ownedComment xmi:id="_oJunh_WnEdqea89UKW2qFQ" annotatedElement="_oJunhvWnEdqea89UKW2qFQ">
        <body>Realization is a specialized abstraction relationship between two sets of model elements, one representing a specification (the supplier) and the other represents an implementation of the latter (the client). Realization can be used to model stepwise refinement, optimizations, transformations, templates, model synthesis, framework composition, etc.</body>
      </ownedComment>
      <generalization xmi:id="_oJuniPWnEdqea89UKW2qFQ" general="_oJundPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJunifWnEdqea89UKW2qFQ" name="Substitution">
      <ownedComment xmi:id="_oJunivWnEdqea89UKW2qFQ" annotatedElement="_oJunifWnEdqea89UKW2qFQ">
        <body>A substitution is a relationship between two classifiers signifies that the substituting classifier complies with the contract specified by the contract classifier. This implies that instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected.</body>
      </ownedComment>
      <generalization xmi:id="_oJuni_WnEdqea89UKW2qFQ" general="_oJunhvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oJunjPWnEdqea89UKW2qFQ" name="contract" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_oJunfvWnEdqea89UKW2qFQ" association="_oJ3xZ_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJunjfWnEdqea89UKW2qFQ" annotatedElement="_oJunjPWnEdqea89UKW2qFQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJunjvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJunj_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJunkPWnEdqea89UKW2qFQ" name="substitutingClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_oJungvWnEdqea89UKW2qFQ" association="_oJ3xbPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJunkfWnEdqea89UKW2qFQ" annotatedElement="_oJunkPWnEdqea89UKW2qFQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJunkvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJunk_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZiwkoGwLEdq7X4sGURiZYA" name="Namespace" isAbstract="true">
      <ownedComment xmi:id="_oAyG0PWnEdqea89UKW2qFQ" annotatedElement="_ZiwkoGwLEdq7X4sGURiZYA">
        <body>A namespace is an element in a model that contains a set of named elements that can be identified by name.</body>
      </ownedComment>
      <ownedRule xmi:id="_oAyG0fWnEdqea89UKW2qFQ" name="members_distinguishable" constrainedElement="_ZiwkoGwLEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oAyG0vWnEdqea89UKW2qFQ" annotatedElement="_oAyG0fWnEdqea89UKW2qFQ">
          <body>All the members of a Namespace are distinguishable within it.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGlz_vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>membersAreDistinguishable()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oAyG1PWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oAyG2fWnEdqea89UKW2qFQ" name="elementImport" visibility="public" type="_RPl78GwIEdq7X4sGURiZYA" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oCuAmvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAyG2vWnEdqea89UKW2qFQ" annotatedElement="_oAyG2fWnEdqea89UKW2qFQ">
          <body>References the ElementImports owned by the Namespace.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGlz__WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGl0APWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAyG3fWnEdqea89UKW2qFQ" name="packageImport" visibility="public" type="_SnNPIGwIEdq7X4sGURiZYA" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oCuAnfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAyG3vWnEdqea89UKW2qFQ" annotatedElement="_oAyG3fWnEdqea89UKW2qFQ">
          <body>References the PackageImports owned by the Namespace.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGvk4PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGvk4fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAyG6fWnEdqea89UKW2qFQ" name="ownedRule" visibility="public" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oC3xuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oGvk4vWnEdqea89UKW2qFQ" annotatedElement="_oAyG6fWnEdqea89UKW2qFQ">
          <body>Specifies a set of Constraints owned by this Namespace.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGvk4_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGvk5PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAyG5fWnEdqea89UKW2qFQ" name="member" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_oC3xlfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAyG5vWnEdqea89UKW2qFQ" annotatedElement="_oAyG5fWnEdqea89UKW2qFQ">
          <body>Redefines the corresponding property of Abstractions::Namespaces::Namespace.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGvk6PWnEdqea89UKW2qFQ" annotatedElement="_oAyG5fWnEdqea89UKW2qFQ">
          <body>A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGvk6fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGvk6vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAyG1fWnEdqea89UKW2qFQ" name="importedMember" visibility="public" type="_jKxnwGwLEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" subsettedProperty="_oAyG5fWnEdqea89UKW2qFQ" association="_oCuAkfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAyG1vWnEdqea89UKW2qFQ" annotatedElement="_oAyG1fWnEdqea89UKW2qFQ">
          <body>References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGvk6_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGvk7PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAyG4fWnEdqea89UKW2qFQ" name="ownedMember" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" subsettedProperty="_oAyG5fWnEdqea89UKW2qFQ _oAfL8fWnEdqea89UKW2qFQ" association="_oC3xkvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAyG4vWnEdqea89UKW2qFQ" annotatedElement="_oAyG4fWnEdqea89UKW2qFQ">
          <body>Redefines the corresponding property of Abstractions::Namespaces::Namespace.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGvk5fWnEdqea89UKW2qFQ" annotatedElement="_oAyG4fWnEdqea89UKW2qFQ">
          <body>A collection of NamedElements owned by the Namespace.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJ3xYPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJ3xYfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_vI18QGwLEdq7X4sGURiZYA" name="createElementImport">
        <ownedComment xmi:id="_sdLToOwlEdqYHf-imTcTdw" annotatedElement="_vI18QGwLEdq7X4sGURiZYA">
          <body>Creates an import of the specified element into this namespace with the specified visibility.</body>
        </ownedComment>
        <ownedParameter xmi:id="_xwes4GwLEdq7X4sGURiZYA" type="_RPl78GwIEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:id="_yOllMGwLEdq7X4sGURiZYA" name="element" type="_jKxnwGwLEdq7X4sGURiZYA" effect="read"/>
        <ownedParameter xmi:id="_9mppoGwLEdq7X4sGURiZYA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_FRpmcGwMEdq7X4sGURiZYA" name="createPackageImport">
        <ownedComment xmi:id="_t-ofUOwlEdqYHf-imTcTdw" annotatedElement="_FRpmcGwMEdq7X4sGURiZYA">
          <body>Creates an import of the specified package into this namespace with the specified visibility.</body>
        </ownedComment>
        <ownedParameter xmi:id="_IdWGYGwMEdq7X4sGURiZYA" type="_SnNPIGwIEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:id="_RsevcGwMEdq7X4sGURiZYA" name="package_" type="_-cvRAGvzEdq7X4sGURiZYA" effect="read"/>
        <ownedParameter xmi:id="_OxwqwGwMEdq7X4sGURiZYA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_aoDYwGwLEdq7X4sGURiZYA" name="getImportedElements" isQuery="true">
        <ownedComment xmi:id="_zNDPgOwmEdqYHf-imTcTdw" annotatedElement="_aoDYwGwLEdq7X4sGURiZYA">
          <body>Retrieves the elements imported by this namespace.</body>
        </ownedComment>
        <ownedParameter xmi:id="_mL5PYGwLEdq7X4sGURiZYA" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-CicWwLEdq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_n-CicGwLEdq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2OvA4GwLEdq7X4sGURiZYA" name="getImportedPackages" isQuery="true">
        <ownedComment xmi:id="_0UuCMOwmEdqYHf-imTcTdw" annotatedElement="_2OvA4GwLEdq7X4sGURiZYA">
          <body>Retrieves the packages imported by this namespace.</body>
        </ownedComment>
        <ownedParameter xmi:id="_40lo0GwLEdq7X4sGURiZYA" type="_-cvRAGvzEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6sF9AWwLEdq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6sF9AGwLEdq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAyG7PWnEdqea89UKW2qFQ" name="importedMember" visibility="public" isQuery="true" bodyCondition="_oAyG7vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAyG7fWnEdqea89UKW2qFQ" annotatedElement="_oAyG7PWnEdqea89UKW2qFQ">
          <body>The importedMember property is derived from the ElementImports and the PackageImports. References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGvk7fWnEdqea89UKW2qFQ" annotatedElement="_oAyG7PWnEdqea89UKW2qFQ">
          <body>The importedMember property is derived from the ElementImports and the PackageImports.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAyG7vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAyG7PWnEdqea89UKW2qFQ _oAyG1fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGvk7vWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = self.importMembers(self.elementImport.importedElement.asSet()-&#xA;>union(self.packageImport.importedPackage->collect(p | p.visibleMembers())))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAyG8PWnEdqea89UKW2qFQ" visibility="public" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGvk7_WnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGvk8PWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAyG8_WnEdqea89UKW2qFQ" name="getNamesOfMember" visibility="public" isQuery="true" bodyCondition="_oAyG9fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAyG9PWnEdqea89UKW2qFQ" annotatedElement="_oAyG8_WnEdqea89UKW2qFQ">
          <body>The query getNamesOfMember() is overridden to take account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGvk8fWnEdqea89UKW2qFQ" annotatedElement="_oAyG8_WnEdqea89UKW2qFQ">
          <body>The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases. The query takes account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAyG9fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAyG8_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGvk8vWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if self.ownedMember ->includes(element)&#xA;then Set{}->include(element.name)&#xA;else let elementImports: ElementImport = self.elementImport->select(ei | ei.importedElement = element) in&#xA;  if elementImports->notEmpty()&#xA;  then elementImports->collect(el | el.getName())&#xA;  else self.packageImport->select(pi | pi.importedPackage.visibleMembers()->includes(element))-> collect(pi | pi.importedPackage.getNamesOfMember(element))&#xA;  endif&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAyG9_WnEdqea89UKW2qFQ" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGvk8_WnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGvk9PWnEdqea89UKW2qFQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oAyG-vWnEdqea89UKW2qFQ" name="element" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oAyHD_WnEdqea89UKW2qFQ" name="membersAreDistinguishable" visibility="public" isQuery="true" bodyCondition="_oA730fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oA730PWnEdqea89UKW2qFQ" annotatedElement="_oAyHD_WnEdqea89UKW2qFQ">
          <body>The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.</body>
        </ownedComment>
        <ownedRule xmi:id="_oA730fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAyHD_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGvk9fWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = self.member->forAll( memb |&#xA;self.member->excluding(memb)->forAll(other |&#xA;memb.isDistinguishableFrom(other, self)))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oA730_WnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oAyG-_WnEdqea89UKW2qFQ" name="importMembers" visibility="public" isQuery="true" bodyCondition="_oAyG_fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAyG_PWnEdqea89UKW2qFQ" annotatedElement="_oAyG-_WnEdqea89UKW2qFQ">
          <body>The query importMembers() defines which of a set of PackageableElements are actually imported into the namespace. This excludes hidden ones, i.e., those which have names that conflict with names of owned members, and also excludes elements which would have the same name when imported.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAyG_fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAyG-_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGvk9vWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = self.excludeCollisions(imps)->select(imp | self.ownedMember->forAll(mem |&#xA;mem.imp.isDistinguishableFrom(mem, self)))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAyG__WnEdqea89UKW2qFQ" visibility="public" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGvk9_WnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGvk-PWnEdqea89UKW2qFQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oAyHAvWnEdqea89UKW2qFQ" name="imps" visibility="public" type="_jKxnwGwLEdq7X4sGURiZYA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oAyHA_WnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oAyHBPWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAyHBfWnEdqea89UKW2qFQ" name="excludeCollisions" visibility="public" isQuery="true" bodyCondition="_oAyHB_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAyHBvWnEdqea89UKW2qFQ" annotatedElement="_oAyHBfWnEdqea89UKW2qFQ">
          <body>The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this namespace.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAyHB_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAyHBfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGvk-fWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = imps->reject(imp1 | imps.exists(imp2 | not imp1.isDistinguishableFrom(imp2, self)))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAyHCfWnEdqea89UKW2qFQ" visibility="public" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGvk-vWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGvk-_WnEdqea89UKW2qFQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oAyHDPWnEdqea89UKW2qFQ" name="imps" visibility="public" type="_jKxnwGwLEdq7X4sGURiZYA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oAyHDfWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oAyHDvWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJ3xYvWnEdqea89UKW2qFQ" name="A_mapping_abstraction" memberEnd="_oJund_WnEdqea89UKW2qFQ _oJ3xZPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oJ3xY_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oJ3xZPWnEdqea89UKW2qFQ" type="_oJundPWnEdqea89UKW2qFQ" association="_oJ3xYvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJ3xZfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJ3xZvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJ3xZ_WnEdqea89UKW2qFQ" name="A_contract_substitution" memberEnd="_oJunjPWnEdqea89UKW2qFQ _oJ3xafWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oJ3xaPWnEdqea89UKW2qFQ" general="_oJ3xb_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oJ3xafWnEdqea89UKW2qFQ" type="_oJunifWnEdqea89UKW2qFQ" association="_oJ3xZ_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJ3xavWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJ3xa_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJ3xbPWnEdqea89UKW2qFQ" name="A_substitution_substitutingClassifier" memberEnd="_oJunlfWnEdqea89UKW2qFQ _oJunkPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oJ3xbfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oJ3xbvWnEdqea89UKW2qFQ" general="_oJ3xdfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJ3xb_WnEdqea89UKW2qFQ" name="A_supplierDependency_supplier" memberEnd="_oJunfvWnEdqea89UKW2qFQ _oJ3xcfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oJ3xcPWnEdqea89UKW2qFQ" general="_oC3xgPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oJ3xcfWnEdqea89UKW2qFQ" name="supplierDependency" type="_rEDGkGwKEdq7X4sGURiZYA" association="_oJ3xb_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJ3xcvWnEdqea89UKW2qFQ" annotatedElement="_oJ3xcfWnEdqea89UKW2qFQ">
          <body>Indicates the dependencies that reference the supplier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJ3xc_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJ3xdPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oJ3xdfWnEdqea89UKW2qFQ" name="A_clientDependency_client" memberEnd="_oJunmfWnEdqea89UKW2qFQ _oJungvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oJ3xdvWnEdqea89UKW2qFQ" general="_oCuAuPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oC3xkvWnEdqea89UKW2qFQ" name="A_ownedMember_namespace" memberEnd="_oAyG4fWnEdqea89UKW2qFQ _oCRUo_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oC3xk_WnEdqea89UKW2qFQ" general="_oC3xlfWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oC3xlPWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_l2mXcHLzEdqziYxiZo0YtA" name="InterfaceRealization">
      <ownedComment xmi:id="_oKBicvWnEdqea89UKW2qFQ" annotatedElement="_l2mXcHLzEdqziYxiZo0YtA">
        <body>An interface realization is a specialized realization relationship between a classifier and an interface. This relationship signifies that the realizing classifier conforms to the contract specified by the interface.</body>
      </ownedComment>
      <generalization xmi:id="_oKBic_WnEdqea89UKW2qFQ" general="_oJunhvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oKBidPWnEdqea89UKW2qFQ" name="contract" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_oJunfvWnEdqea89UKW2qFQ" association="_oKKsUPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKBidfWnEdqea89UKW2qFQ" annotatedElement="_oKBidPWnEdqea89UKW2qFQ">
          <body>References the Interface specifying the conformance contract.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKBidvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKBid_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKBiePWnEdqea89UKW2qFQ" name="implementingClassifier" type="_iY7sMGvsEdqG6fBIPwe-mw" subsettedProperty="_oJungvWnEdqea89UKW2qFQ" association="_oKKsVfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKBiefWnEdqea89UKW2qFQ" annotatedElement="_oKBiePWnEdqea89UKW2qFQ">
          <body>References the BehavioredClassifier that owns this Interfacerealization (i.e., the classifier that realizes the Interface to which it points).</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKBievWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKBie_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKBihvWnEdqea89UKW2qFQ" name="A_interface_ownedAttribute" memberEnd="_oKBiYvWnEdqea89UKW2qFQ _oKBiifWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKBih_WnEdqea89UKW2qFQ" general="_oCk2nfWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oKBiiPWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKBiifWnEdqea89UKW2qFQ" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_oCk2oPWnEdqea89UKW2qFQ _oCRUo_WnEdqea89UKW2qFQ _oAoV0_WnEdqea89UKW2qFQ" association="_oKBihvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKBiivWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKBii_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKBijPWnEdqea89UKW2qFQ" name="A_interface_ownedOperation" memberEnd="_oKBigvWnEdqea89UKW2qFQ _oKBiZvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKBijfWnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oKBijvWnEdqea89UKW2qFQ" general="_oC3xh_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oKBij_WnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKKsUPWnEdqea89UKW2qFQ" name="A_contract_interfaceRealization" memberEnd="_oKBidPWnEdqea89UKW2qFQ _oKKsUvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKKsUfWnEdqea89UKW2qFQ" general="_oJ3xb_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKKsUvWnEdqea89UKW2qFQ" type="_l2mXcHLzEdqziYxiZo0YtA" association="_oKKsUPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKKsU_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKKsVPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKKsVfWnEdqea89UKW2qFQ" name="A_interfaceRealization_implementingClassifier" memberEnd="_oKBifvWnEdqea89UKW2qFQ _oKBiePWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKKsVvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oKKsV_WnEdqea89UKW2qFQ" general="_oJ3xdfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKKsWPWnEdqea89UKW2qFQ" name="A_nestedClassifier_interface" memberEnd="_oKBiavWnEdqea89UKW2qFQ _oKKsW_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKKsWfWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oKKsWvWnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKKsW_WnEdqea89UKW2qFQ" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ _oA733_WnEdqea89UKW2qFQ" association="_oKKsWPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKKsXPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKKsXfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKKsXvWnEdqea89UKW2qFQ" name="A_interface_redefinedInterface" memberEnd="_oKBibvWnEdqea89UKW2qFQ _oKKsYPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKKsX_WnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKKsYPWnEdqea89UKW2qFQ" type="_8Ugn8GvtEdqG6fBIPwe-mw" association="_oKKsXvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKKsYfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKKsYvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_FQiVsGwYEdqHKKVoxc0dlA" name="StructuredClassifier" isAbstract="true">
      <ownedComment xmi:id="_oKUdUPWnEdqea89UKW2qFQ" annotatedElement="_FQiVsGwYEdqHKKVoxc0dlA">
        <body>A structured classifier is an abstract metaclass that represents any classifier whose behavior can be fully or partly described by the collaboration of owned or referenced instances.</body>
      </ownedComment>
      <ownedRule xmi:id="_oKUdUfWnEdqea89UKW2qFQ" name="multiplicities" constrainedElement="_FQiVsGwYEdqHKKVoxc0dlA">
        <ownedComment xmi:id="_oKUdUvWnEdqea89UKW2qFQ" annotatedElement="_oKUdUfWnEdqea89UKW2qFQ">
          <body>The multiplicities on connected elements must be consistent.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKUdU_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oKUdVPWnEdqea89UKW2qFQ" general="_6UV2QGwJEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oKUdVfWnEdqea89UKW2qFQ" name="ownedAttribute" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oKUdXfWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ _oACf8vWnEdqea89UKW2qFQ" association="_oKeOUPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKUdVvWnEdqea89UKW2qFQ" annotatedElement="_oKUdVfWnEdqea89UKW2qFQ">
          <body>References the properties owned by the classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKUdV_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKUdWPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKUdWfWnEdqea89UKW2qFQ" name="part" type="_Jp_1oGveEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" association="_oKeOV_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKUdWvWnEdqea89UKW2qFQ" annotatedElement="_oKUdWfWnEdqea89UKW2qFQ">
          <body>References the properties specifying instances that the classifier owns by composition. This association is derived, selecting those owned properties where isComposite is true.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKUdW_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKUdXPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKUdXfWnEdqea89UKW2qFQ" name="role" type="_oKUdZfWnEdqea89UKW2qFQ" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_oAyG5fWnEdqea89UKW2qFQ" association="_oKeOW_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKUdXvWnEdqea89UKW2qFQ" annotatedElement="_oKUdXfWnEdqea89UKW2qFQ">
          <body>References the roles that instances may play in this classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKUdX_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKUdYPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKUdYfWnEdqea89UKW2qFQ" name="ownedConnector" type="_oKKscPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAMQ8PWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oKeOYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKUdYvWnEdqea89UKW2qFQ" annotatedElement="_oKUdYfWnEdqea89UKW2qFQ">
          <body>References the connectors owned by the classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKUdY_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKUdZPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_YorvMHL0EdqziYxiZo0YtA" name="createOwnedAttribute">
        <ownedComment xmi:id="_9BZT4OwlEdqYHf-imTcTdw" annotatedElement="_YorvMHL0EdqziYxiZo0YtA">
          <body>Creates a property with the specified name, type, lower bound, and upper bound as an owned attribute of this structured classifier.</body>
        </ownedComment>
        <ownedParameter xmi:id="_YorvMXL0EdqziYxiZo0YtA" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_YorvMnL0EdqziYxiZo0YtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gKEUcaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_gKEUcKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_YorvM3L0EdqziYxiZo0YtA" name="type" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iJ7TYaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_iJ7TYKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_YorvNHL0EdqziYxiZo0YtA" name="lower" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_YorvNXL0EdqziYxiZo0YtA" name="upper" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKUdb_WnEdqea89UKW2qFQ" name="A_type_connector" memberEnd="_oKKsfPWnEdqea89UKW2qFQ _oKUdcPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oKUdcPWnEdqea89UKW2qFQ" type="_oKKscPWnEdqea89UKW2qFQ" association="_oKUdb_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKUdcfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKUdcvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKeOUPWnEdqea89UKW2qFQ" name="A_ownedAttribute_structuredClassifier" memberEnd="_oKUdVfWnEdqea89UKW2qFQ _oKeOVPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKeOUfWnEdqea89UKW2qFQ" general="_oKeOW_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oKeOUvWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oKeOU_WnEdqea89UKW2qFQ" general="_oCk2nfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKeOVPWnEdqea89UKW2qFQ" type="_FQiVsGwYEdqHKKVoxc0dlA" redefinedProperty="_oKeOXfWnEdqea89UKW2qFQ" association="_oKeOUPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKeOVfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKeOVvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKeOV_WnEdqea89UKW2qFQ" name="A_part_structuredClassifier" memberEnd="_oKUdWfWnEdqea89UKW2qFQ _oKeOWPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oKeOWPWnEdqea89UKW2qFQ" type="_FQiVsGwYEdqHKKVoxc0dlA" association="_oKeOV_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKeOWfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKeOWvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKeOW_WnEdqea89UKW2qFQ" name="A_role_structuredClassifier" memberEnd="_oKUdXfWnEdqea89UKW2qFQ _oKeOXfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKeOXPWnEdqea89UKW2qFQ" general="_oC3xlfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKeOXfWnEdqea89UKW2qFQ" type="_FQiVsGwYEdqHKKVoxc0dlA" association="_oKeOW_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKeOXvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKeOX_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKeOYPWnEdqea89UKW2qFQ" name="A_ownedConnector_structuredClassifier" memberEnd="_oKUdYfWnEdqea89UKW2qFQ _oKeOZPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKeOYfWnEdqea89UKW2qFQ" general="_oC3xh_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oKeOYvWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oKeOY_WnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKeOZPWnEdqea89UKW2qFQ" type="_FQiVsGwYEdqHKKVoxc0dlA" subsettedProperty="_oA733_WnEdqea89UKW2qFQ" association="_oKeOYPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKeOZfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKeOZvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKeOZ_WnEdqea89UKW2qFQ" name="A_redefinedConnector_connector" memberEnd="_oKKsgPWnEdqea89UKW2qFQ _oKeOafWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKeOaPWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKeOafWnEdqea89UKW2qFQ" type="_oKKscPWnEdqea89UKW2qFQ" association="_oKeOZ_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKeOavWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKeOa_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKeObPWnEdqea89UKW2qFQ" name="A_end_connector" memberEnd="_oKKshPWnEdqea89UKW2qFQ _oKeObvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKeObfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKeObvWnEdqea89UKW2qFQ" type="_oKKscPWnEdqea89UKW2qFQ" association="_oKeObPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKeOb_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKeOcPWnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKeOcfWnEdqea89UKW2qFQ" name="A_definingEnd_connectorEnd" memberEnd="_oKKsaPWnEdqea89UKW2qFQ _oKeOcvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oKeOcvWnEdqea89UKW2qFQ" type="_aOgw0GveEdq4DLWZOhbdEA" association="_oKeOcfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKeOc_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKeOdPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKeOdfWnEdqea89UKW2qFQ" name="A_end_role" memberEnd="_oKKsbPWnEdqea89UKW2qFQ _oKUdaPWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCk2nfWnEdqea89UKW2qFQ" name="A_attribute_classifier" memberEnd="_oACf8vWnEdqea89UKW2qFQ _oCk2oPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oCk2nvWnEdqea89UKW2qFQ" general="_oC3xh_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oCk2n_WnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oCk2oPWnEdqea89UKW2qFQ" name="classifier" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_oA733_WnEdqea89UKW2qFQ" association="_oCk2nfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKeOdvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKeOd_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJIKhPWnEdqea89UKW2qFQ" name="Variable">
      <ownedComment xmi:id="_oJIKhfWnEdqea89UKW2qFQ" annotatedElement="_oJIKhPWnEdqea89UKW2qFQ">
        <body>Variables are elements for passing data between actions indirectly. A local variable stores values shared by the actions within a structured activity group but not accessible outside it. The output of an action may be written to a variable and read for the input to a subsequent action, which is effectively an indirect data flow path. Because there is no predefined relationship between actions that read and write variables, these actions must be sequenced by control flows to prevent race conditions that may occur between actions that read or write the same variable.</body>
      </ownedComment>
      <ownedComment xmi:id="_oKeOe_WnEdqea89UKW2qFQ" annotatedElement="_oJIKhPWnEdqea89UKW2qFQ">
        <body>A variable is considered a connectable element.</body>
      </ownedComment>
      <ownedRule xmi:id="_oJIKhvWnEdqea89UKW2qFQ" name="owned" constrainedElement="_oJIKhPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJIKh_WnEdqea89UKW2qFQ" annotatedElement="_oJIKhvWnEdqea89UKW2qFQ">
          <body>A variable is owned by a StructuredNode or Activity, but not both.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oJIKiPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oJIKivWnEdqea89UKW2qFQ" general="_Gjgl0GveEdq4DLWZOhbdEA"/>
      <generalization xmi:id="_oKeOfPWnEdqea89UKW2qFQ" general="_oKUdZfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oJIKi_WnEdqea89UKW2qFQ" name="scope" type="_oJIKmfWnEdqea89UKW2qFQ" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oJk2cPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJIKjPWnEdqea89UKW2qFQ" annotatedElement="_oJIKi_WnEdqea89UKW2qFQ">
          <body>A structured activity node that owns the variable.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJIKjfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJIKjvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJIKj_WnEdqea89UKW2qFQ" name="activityScope" type="_oI-ZgPWnEdqea89UKW2qFQ" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oJk2mfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJIKkPWnEdqea89UKW2qFQ" annotatedElement="_oJIKj_WnEdqea89UKW2qFQ">
          <body>An activity that owns the variable.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJIKkfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJIKkvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oJIKk_WnEdqea89UKW2qFQ" name="isAccessibleBy" isQuery="true" bodyCondition="_oJIKlfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJIKlPWnEdqea89UKW2qFQ" annotatedElement="_oJIKk_WnEdqea89UKW2qFQ">
          <body>The isAccessibleBy() operation is not defined in standard UML. Implementations should define it to specify which actions can access a variable.&#xD;
</body>
        </ownedComment>
        <ownedRule xmi:id="_oJIKlfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oJIKk_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oJIKlvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oJIKl_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oJIKmPWnEdqea89UKW2qFQ" name="a" type="_oIreyPWnEdqea89UKW2qFQ"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oKnYQPWnEdqea89UKW2qFQ" name="CollaborationUse">
      <ownedComment xmi:id="_oKnYQfWnEdqea89UKW2qFQ" annotatedElement="_oKnYQPWnEdqea89UKW2qFQ">
        <body>A collaboration use represents one particular use of a collaboration to explain the relationships between the properties of a classifier. A collaboration use shows how the pattern described by a collaboration is applied in a given context, by binding specific entities from that context to the roles of the collaboration. Depending on the context, these entities could be structural features of a classifier, instance specifications, or even roles in some containing collaboration. There may be multiple occurrences of a given collaboration within a classifier, each involving a different set of roles and connectors. A given role or connector may be involved in multiple occurrences of the same or different collaborations.&#xD;
Associated dependencies map features of the collaboration type to features in the classifier. These dependencies indicate which role in the classifier plays which role in the collaboration.</body>
      </ownedComment>
      <ownedRule xmi:id="_oKnYQvWnEdqea89UKW2qFQ" name="client_elements" constrainedElement="_oKnYQPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKnYQ_WnEdqea89UKW2qFQ" annotatedElement="_oKnYQvWnEdqea89UKW2qFQ">
          <body>All the client elements of a roleBinding are in one classifier and all supplier elements of a roleBinding are in one collaboration and they are compatible.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKnYRPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oKnYRfWnEdqea89UKW2qFQ" name="every_role" constrainedElement="_oKnYQPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKnYRvWnEdqea89UKW2qFQ" annotatedElement="_oKnYRfWnEdqea89UKW2qFQ">
          <body>Every role in the collaboration is bound within the collaboration use to a connectable element within the classifier or operation.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKnYR_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oKnYSPWnEdqea89UKW2qFQ" name="connectors" constrainedElement="_oKnYQPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKnYSfWnEdqea89UKW2qFQ" annotatedElement="_oKnYSPWnEdqea89UKW2qFQ">
          <body>The connectors in the classifier connect according to the connectors in the collaboration</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKnYSvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oKnYS_WnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oKnYTPWnEdqea89UKW2qFQ" name="type" type="_oKnYVPWnEdqea89UKW2qFQ" association="_oKxJQPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKnYTfWnEdqea89UKW2qFQ" annotatedElement="_oKnYTPWnEdqea89UKW2qFQ">
          <body>The collaboration which is used in this occurrence. The collaboration defines the cooperation between its roles which are mapped to properties of the classifier owning the collaboration use.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKnYTvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKnYT_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKnYUPWnEdqea89UKW2qFQ" name="roleBinding" type="_rEDGkGwKEdq7X4sGURiZYA" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oKxJRPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKnYUfWnEdqea89UKW2qFQ" annotatedElement="_oKnYUPWnEdqea89UKW2qFQ">
          <body>A mapping between features of the collaboration type and features of the classifier or operation. This mapping indicates which connectable element of the classifier or operation plays which role(s) in the collaboration. A connectable element may be bound to multiple roles in the same collaboration use (that is, it may play multiple roles).&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKnYUvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKnYU_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oKnYVPWnEdqea89UKW2qFQ" name="Collaboration">
      <ownedComment xmi:id="_oKnYVfWnEdqea89UKW2qFQ" annotatedElement="_oKnYVPWnEdqea89UKW2qFQ">
        <body>A collaboration use represents the application of the pattern described by a collaboration to a specific situation involving specific classes or instances playing the roles of the collaboration.</body>
      </ownedComment>
      <generalization xmi:id="_oKnYV_WnEdqea89UKW2qFQ" general="_FQiVsGwYEdqHKKVoxc0dlA"/>
      <generalization xmi:id="_oKnYWPWnEdqea89UKW2qFQ" general="_iY7sMGvsEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oKnYWfWnEdqea89UKW2qFQ" name="collaborationRole" type="_oKUdZfWnEdqea89UKW2qFQ" subsettedProperty="_oKUdXfWnEdqea89UKW2qFQ" association="_oKxJU_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKnYWvWnEdqea89UKW2qFQ" annotatedElement="_oKnYWfWnEdqea89UKW2qFQ">
          <body>References connectable elements (possibly owned by other classifiers) which represent roles that instances may play in this collaboration.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKnYW_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKnYXPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKxJQPWnEdqea89UKW2qFQ" name="A_type_collaborationUse" memberEnd="_oKnYTPWnEdqea89UKW2qFQ _oKxJQfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oKxJQfWnEdqea89UKW2qFQ" type="_oKnYQPWnEdqea89UKW2qFQ" association="_oKxJQPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKxJQvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKxJQ_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKxJRPWnEdqea89UKW2qFQ" name="A_roleBinding_collaborationUse" memberEnd="_oKnYUPWnEdqea89UKW2qFQ _oKxJRvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKxJRfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKxJRvWnEdqea89UKW2qFQ" type="_oKnYQPWnEdqea89UKW2qFQ" association="_oKxJRPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKxJR_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKxJSPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKxJSfWnEdqea89UKW2qFQ" name="A_classifier_representation" memberEnd="_oKnYXfWnEdqea89UKW2qFQ _oKxJS_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKxJSvWnEdqea89UKW2qFQ" general="_oKxJTvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKxJS_WnEdqea89UKW2qFQ" type="_6UV2QGwJEdq7X4sGURiZYA" redefinedProperty="_oKxJUPWnEdqea89UKW2qFQ" association="_oKxJSfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKxJTPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKxJTfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKxJTvWnEdqea89UKW2qFQ" name="A_collaborationUse_classifier" memberEnd="_oKnYYfWnEdqea89UKW2qFQ _oKxJUPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKxJT_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKxJUPWnEdqea89UKW2qFQ" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oKxJTvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKxJUfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKxJUvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oKxJU_WnEdqea89UKW2qFQ" name="A_collaborationRole_collaboration" memberEnd="_oKnYWfWnEdqea89UKW2qFQ _oKxJVfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oKxJVPWnEdqea89UKW2qFQ" general="_oKeOW_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oKxJVfWnEdqea89UKW2qFQ" type="_oKnYVPWnEdqea89UKW2qFQ" redefinedProperty="_oKeOXfWnEdqea89UKW2qFQ" association="_oKxJU_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKxJVvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKxJV_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oKxJYvWnEdqea89UKW2qFQ" name="ControlNode" isAbstract="true">
      <ownedComment xmi:id="_oKxJY_WnEdqea89UKW2qFQ" annotatedElement="_oKxJYvWnEdqea89UKW2qFQ">
        <body>A control node is an abstract activity node that coordinates flows in an activity.</body>
      </ownedComment>
      <generalization xmi:id="_oKxJZPWnEdqea89UKW2qFQ" general="_oI-Zo_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oK66QPWnEdqea89UKW2qFQ" name="ControlFlow">
      <ownedComment xmi:id="_oK66QfWnEdqea89UKW2qFQ" annotatedElement="_oK66QPWnEdqea89UKW2qFQ">
        <body>A control flow is an edge that starts an activity node after the previous one is finished.</body>
      </ownedComment>
      <ownedRule xmi:id="_oK66QvWnEdqea89UKW2qFQ" name="object_nodes" constrainedElement="_oK66QPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66Q_WnEdqea89UKW2qFQ" annotatedElement="_oK66QvWnEdqea89UKW2qFQ">
          <body>Control flows may not have object nodes at either end, except for object nodes with control type.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66RPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oK66RfWnEdqea89UKW2qFQ" general="_oKxJZfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oK66UvWnEdqea89UKW2qFQ" name="InitialNode">
      <ownedComment xmi:id="_oK66U_WnEdqea89UKW2qFQ" annotatedElement="_oK66UvWnEdqea89UKW2qFQ">
        <body>An initial node is a control node at which flow starts when the activity is invoked.</body>
      </ownedComment>
      <ownedRule xmi:id="_oK66VPWnEdqea89UKW2qFQ" name="no_incoming_edges" constrainedElement="_oK66UvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66VfWnEdqea89UKW2qFQ" annotatedElement="_oK66VPWnEdqea89UKW2qFQ">
          <body>An initial node has no incoming edges.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66VvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oK66V_WnEdqea89UKW2qFQ" name="control_edges" constrainedElement="_oK66UvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66WPWnEdqea89UKW2qFQ" annotatedElement="_oK66V_WnEdqea89UKW2qFQ">
          <body>Only control edges can have initial nodes as source.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66WfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oK66WvWnEdqea89UKW2qFQ" general="_oKxJYvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oK66a_WnEdqea89UKW2qFQ" name="ActivityParameterNode">
      <ownedComment xmi:id="_oK66bPWnEdqea89UKW2qFQ" annotatedElement="_oK66a_WnEdqea89UKW2qFQ">
        <body>An activity parameter node is an object node for inputs and outputs to activities.</body>
      </ownedComment>
      <ownedRule xmi:id="_oK66bfWnEdqea89UKW2qFQ" name="has_parameters" constrainedElement="_oK66a_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66bvWnEdqea89UKW2qFQ" annotatedElement="_oK66bfWnEdqea89UKW2qFQ">
          <body>Activity parameter nodes must have parameters from the containing activity.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66b_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oK66cPWnEdqea89UKW2qFQ" name="same_type" constrainedElement="_oK66a_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66cfWnEdqea89UKW2qFQ" annotatedElement="_oK66cPWnEdqea89UKW2qFQ">
          <body>The type of an activity parameter node is the same as the type of its parameter.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66cvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oK66c_WnEdqea89UKW2qFQ" name="no_edges" constrainedElement="_oK66a_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66dPWnEdqea89UKW2qFQ" annotatedElement="_oK66c_WnEdqea89UKW2qFQ">
          <body>An activity parameter node may have all incoming edges or all outgoing edges, but it must not have both incoming and outgoing edges.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66dfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oK66dvWnEdqea89UKW2qFQ" name="no_incoming_edges" constrainedElement="_oK66a_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66d_WnEdqea89UKW2qFQ" annotatedElement="_oK66dvWnEdqea89UKW2qFQ">
          <body>Activity parameter object nodes with no incoming edges and one or more outgoing edges must have a parameter with in or inout direction.&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66ePWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oK66efWnEdqea89UKW2qFQ" name="no_outgoing_edges" constrainedElement="_oK66a_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66evWnEdqea89UKW2qFQ" annotatedElement="_oK66efWnEdqea89UKW2qFQ">
          <body>Activity parameter object nodes with no outgoing edges and one or more incoming edges must have a parameter with out, inout, or return direction.&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66e_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oK66fPWnEdqea89UKW2qFQ" general="_oKxJWPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oK66ffWnEdqea89UKW2qFQ" name="parameter" type="_KyaPMGveEdq4DLWZOhbdEA" association="_oLEEU_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66fvWnEdqea89UKW2qFQ" annotatedElement="_oK66ffWnEdqea89UKW2qFQ">
          <body>The parameter the object node will be accepting or providing values for.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oK66f_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oK66gPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIiUuPWnEdqea89UKW2qFQ" name="ValuePin">
      <ownedComment xmi:id="_oIiUufWnEdqea89UKW2qFQ" annotatedElement="_oIiUuPWnEdqea89UKW2qFQ">
        <body>A value pin is an input pin that provides a value by evaluating a value specification.</body>
      </ownedComment>
      <ownedRule xmi:id="_oIiUuvWnEdqea89UKW2qFQ" name="compatible_type" constrainedElement="_oIiUuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIiUu_WnEdqea89UKW2qFQ" annotatedElement="_oIiUuvWnEdqea89UKW2qFQ">
          <body>The type of value specification must be compatible with the type of the value pin.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIiUvPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLEES_WnEdqea89UKW2qFQ" name="no_incoming_edges" constrainedElement="_oIiUuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLEETPWnEdqea89UKW2qFQ" annotatedElement="_oLEES_WnEdqea89UKW2qFQ">
          <body>Value pins have no incoming edges.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLEETfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIiUvfWnEdqea89UKW2qFQ" general="_oIiUxfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oIiUvvWnEdqea89UKW2qFQ" name="value" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" association="_oI1PsvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIiUv_WnEdqea89UKW2qFQ" annotatedElement="_oIiUvvWnEdqea89UKW2qFQ">
          <body>Value that the pin will provide.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIiUwPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIiUwfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLEETvWnEdqea89UKW2qFQ" name="A_activity_edge" memberEnd="_oKxJbvWnEdqea89UKW2qFQ _oLEER_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oLEET_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLEEUPWnEdqea89UKW2qFQ" name="A_outgoing_source" memberEnd="_oLEEMPWnEdqea89UKW2qFQ _oKxJcvWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLEEUfWnEdqea89UKW2qFQ" name="A_target_incoming" memberEnd="_oLEENPWnEdqea89UKW2qFQ _oKxJdvWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLEEU_WnEdqea89UKW2qFQ" name="A_parameter_activityParameterNode" memberEnd="_oK66ffWnEdqea89UKW2qFQ _oLEEVPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oLEEVPWnEdqea89UKW2qFQ" type="_oK66a_WnEdqea89UKW2qFQ" association="_oLEEU_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLEEVfWnEdqea89UKW2qFQ" name="A_redefinedNode_activityNode" memberEnd="_oLEEOPWnEdqea89UKW2qFQ _oLEEV_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oLEEVvWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oLEEV_WnEdqea89UKW2qFQ" type="_oI-Zo_WnEdqea89UKW2qFQ" redefinedProperty="_oC3xhvWnEdqea89UKW2qFQ" association="_oLEEVfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLEEWPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLEEWfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLN1MPWnEdqea89UKW2qFQ" name="A_redefinedEdge_activityEdge" memberEnd="_oKxJfvWnEdqea89UKW2qFQ _oLN1MvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oLN1MfWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oLN1MvWnEdqea89UKW2qFQ" type="_oKxJZfWnEdqea89UKW2qFQ" redefinedProperty="_oC3xhvWnEdqea89UKW2qFQ" association="_oLN1MPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLN1M_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLN1NPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gfgNwGveEdq4DLWZOhbdEA" name="Message">
      <ownedComment xmi:id="_oLW_L_WnEdqea89UKW2qFQ" annotatedElement="_gfgNwGveEdq4DLWZOhbdEA">
        <body>A message defines a particular communication between lifelines of an interaction.</body>
      </ownedComment>
      <ownedRule xmi:id="_oLW_MPWnEdqea89UKW2qFQ" name="sending_receiving_message_event" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oLW_MfWnEdqea89UKW2qFQ" annotatedElement="_oLW_MPWnEdqea89UKW2qFQ">
          <body>If the sending MessageEvent and the receiving MessageEvent of the same Message are on the same Lifeline, the sending MessageEvent must be ordered before the receiving MessageEvent.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLW_MvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLW_M_WnEdqea89UKW2qFQ" name="signature_refer_to" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oLW_NPWnEdqea89UKW2qFQ" annotatedElement="_oLW_M_WnEdqea89UKW2qFQ">
          <body>The signature must either refer an Operation (in which case messageSort is either synchCall or asynchCall) or a Signal (in which case messageSort is asynchSignal). The name of the NamedElement referenced by signature must be the same as that of the Message.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLW_NfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLW_NvWnEdqea89UKW2qFQ" name="signature_is_operation" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oLW_N_WnEdqea89UKW2qFQ" annotatedElement="_oLW_NvWnEdqea89UKW2qFQ">
          <body>In the case when the Message signature is an Operation, the arguments of the Message must correspond to the parameters of the Operation. A Parameter corresponds to an Argument if the Argument is of the same Class or a specialization of that of the Parameter.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLW_OPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLW_OfWnEdqea89UKW2qFQ" name="signature_is_signal" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oLW_OvWnEdqea89UKW2qFQ" annotatedElement="_oLW_OfWnEdqea89UKW2qFQ">
          <body>In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Arguement is of the same Class or a specialization of that of the Attribute.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLW_O_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLW_PPWnEdqea89UKW2qFQ" name="arguments" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oLW_PfWnEdqea89UKW2qFQ" annotatedElement="_oLW_PPWnEdqea89UKW2qFQ">
          <body>Arguments of a Message must only be:
i) attributes of the sending lifeline
ii) constants
iii) symbolic values (which are wildcard values representing any legal value)
iv) explicit parameters of the enclosing Interaction
v) attributes of the class owning the Interaction
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLW_PvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLW_P_WnEdqea89UKW2qFQ" name="cannot_cross_boundaries" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oLW_QPWnEdqea89UKW2qFQ" annotatedElement="_oLW_P_WnEdqea89UKW2qFQ">
          <body>Messages cannot cross bounderies of CombinedFragments or their operands.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLW_QfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLW_QvWnEdqea89UKW2qFQ" name="occurrence_specifications" constrainedElement="_gfgNwGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oLW_Q_WnEdqea89UKW2qFQ" annotatedElement="_oLW_QvWnEdqea89UKW2qFQ">
          <body>If the MessageEnds are both OccurrenceSpecifications then the connector must go between the Parts represented by the Lifelines of the two MessageEnds.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLW_RPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oLW_RfWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oLW_RvWnEdqea89UKW2qFQ" name="messageKind" type="_Y_jskGvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="_oLW_R_WnEdqea89UKW2qFQ" annotatedElement="_oLW_RvWnEdqea89UKW2qFQ">
          <body>The derived kind of the Message (complete, lost, found or unknown)</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oLW_SPWnEdqea89UKW2qFQ" type="_Y_jskGvtEdqG6fBIPwe-mw" instance="_oLzrEPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLW_SfWnEdqea89UKW2qFQ" name="messageSort" type="_oLzrEvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLW_SvWnEdqea89UKW2qFQ" annotatedElement="_oLW_SfWnEdqea89UKW2qFQ">
          <body>The sort of communication reflected by the Message</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oLW_S_WnEdqea89UKW2qFQ" type="_oLzrEvWnEdqea89UKW2qFQ" instance="_oLzrFPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLW_TPWnEdqea89UKW2qFQ" name="receiveEvent" type="_oLgwTPWnEdqea89UKW2qFQ" association="_oLzrM_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLW_TfWnEdqea89UKW2qFQ" annotatedElement="_oLW_TPWnEdqea89UKW2qFQ">
          <body>References the Receiving of the Message</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLW_TvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLW_T_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLW_UPWnEdqea89UKW2qFQ" name="sendEvent" type="_oLgwTPWnEdqea89UKW2qFQ" association="_oLzrN_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLW_UfWnEdqea89UKW2qFQ" annotatedElement="_oLW_UPWnEdqea89UKW2qFQ">
          <body>References the Sending of the Message.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLW_UvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLW_U_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLW_VPWnEdqea89UKW2qFQ" name="connector" type="_oKKscPWnEdqea89UKW2qFQ" association="_oL9cEPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLW_VfWnEdqea89UKW2qFQ" annotatedElement="_oLW_VPWnEdqea89UKW2qFQ">
          <body>The Connector on which this Message is sent.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLW_VvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLW_V_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLW_WPWnEdqea89UKW2qFQ" name="interaction" type="_oLN1N_WnEdqea89UKW2qFQ" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oL9cFPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLW_WfWnEdqea89UKW2qFQ" annotatedElement="_oLW_WPWnEdqea89UKW2qFQ">
          <body>The enclosing Interaction owning the Message</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLW_WvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLW_W_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLW_XPWnEdqea89UKW2qFQ" name="argument" type="_oBFBwPWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oL9cGPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLW_XfWnEdqea89UKW2qFQ" annotatedElement="_oLW_XPWnEdqea89UKW2qFQ">
          <body>The arguments of the Message</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLW_XvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLW_X_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLW_YPWnEdqea89UKW2qFQ" name="signature" type="_csVgUGvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_oL9cMvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLW_YfWnEdqea89UKW2qFQ" annotatedElement="_oLW_YPWnEdqea89UKW2qFQ">
          <body>The definition of the type or signature of the Message (depending on its kind). The associated named element is derived from the message end that constitutes the sending or receiving message event. If both a sending event and a receiving message event are present, the signature is obtained from the sending event.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLW_YvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLW_Y_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_8U6CAFYfEdqB6vblk3tuMA" name="getMessageKind" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_-_OTMFYfEdqB6vblk3tuMA" type="_Y_jskGvtEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_R__uEFYjEdqB6vblk3tuMA" name="getSignature" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_WEKuIFYjEdqB6vblk3tuMA" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YR4i4VYjEdqB6vblk3tuMA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_YR4i4FYjEdqB6vblk3tuMA"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLgwIPWnEdqea89UKW2qFQ" name="GeneralOrdering">
      <ownedComment xmi:id="_oLgwIfWnEdqea89UKW2qFQ" annotatedElement="_oLgwIPWnEdqea89UKW2qFQ">
        <body>A general ordering represents a binary relation between two occurrence specifications, to describe that one occurrence specification must occur before the other in a valid trace. This mechanism provides the ability to define partial orders of occurrence cpecifications that may otherwise not have a specified order.</body>
      </ownedComment>
      <generalization xmi:id="_oLgwIvWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oLgwI_WnEdqea89UKW2qFQ" name="before" type="_oLgwOfWnEdqea89UKW2qFQ" association="_oL9cFvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwJPWnEdqea89UKW2qFQ" annotatedElement="_oLgwI_WnEdqea89UKW2qFQ">
          <body>The OccurrenceSpecification referenced comes before the OccurrenceSpecification referenced by after.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwJfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwJvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLgwJ_WnEdqea89UKW2qFQ" name="after" type="_oLgwOfWnEdqea89UKW2qFQ" association="_oL9cF_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwKPWnEdqea89UKW2qFQ" annotatedElement="_oLgwJ_WnEdqea89UKW2qFQ">
          <body>The OccurrenceSpecification referenced comes after the OccurrenceSpecification referenced by before.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwKfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwKvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLgwK_WnEdqea89UKW2qFQ" name="ExecutionSpecification" isAbstract="true">
      <ownedComment xmi:id="_oLgwLPWnEdqea89UKW2qFQ" annotatedElement="_oLgwK_WnEdqea89UKW2qFQ">
        <body>An execution specification is a specification of the execution of a unit of behavior or action within the lifeline. The duration of an execution specification is represented by two cccurrence specifications, the start occurrence specification and the finish occurrence specification.</body>
      </ownedComment>
      <ownedRule xmi:id="_oLgwLfWnEdqea89UKW2qFQ" name="same_lifeline" constrainedElement="_oLgwK_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwLvWnEdqea89UKW2qFQ" annotatedElement="_oLgwLfWnEdqea89UKW2qFQ">
          <body>The startEvent and the finishEvent must be on the same Lifeline</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLgwL_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>start.lifeline = finish.lifeline</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oLgwMPWnEdqea89UKW2qFQ" general="_oLW_IPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oLgwMfWnEdqea89UKW2qFQ" name="start" type="_oLgwOfWnEdqea89UKW2qFQ" association="_oLzrIvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwMvWnEdqea89UKW2qFQ" annotatedElement="_oLgwMfWnEdqea89UKW2qFQ">
          <body>References the OccurrenceSpecification that designates the start of the Action or Behavior</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwM_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwNPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLgwNfWnEdqea89UKW2qFQ" name="finish" type="_oLgwOfWnEdqea89UKW2qFQ" association="_oLzrJ_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwNvWnEdqea89UKW2qFQ" annotatedElement="_oLgwNfWnEdqea89UKW2qFQ">
          <body>References the OccurrenceSpecification that designates the finish of the Action or Behavior.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwN_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwOPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLgwOfWnEdqea89UKW2qFQ" name="OccurrenceSpecification">
      <ownedComment xmi:id="_oLgwOvWnEdqea89UKW2qFQ" annotatedElement="_oLgwOfWnEdqea89UKW2qFQ">
        <body>An occurrence specification is the basic semantic unit of interactions. The sequences of occurrences specified by them are the meanings of interactions.</body>
      </ownedComment>
      <generalization xmi:id="_oLgwO_WnEdqea89UKW2qFQ" general="_oLW_IPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oLgwPPWnEdqea89UKW2qFQ" name="covered" type="_oLN1S_WnEdqea89UKW2qFQ" redefinedProperty="_oLW_I_WnEdqea89UKW2qFQ" association="_oLzrO_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwPfWnEdqea89UKW2qFQ" annotatedElement="_oLgwPPWnEdqea89UKW2qFQ">
          <body>References the Lifeline on which the OccurrenceSpecification appears.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwPvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwP_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLgwQPWnEdqea89UKW2qFQ" name="toAfter" type="_oLgwIPWnEdqea89UKW2qFQ" association="_oL9cFvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwQfWnEdqea89UKW2qFQ" annotatedElement="_oLgwQPWnEdqea89UKW2qFQ">
          <body>References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwQvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwQ_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLgwRPWnEdqea89UKW2qFQ" name="toBefore" type="_oLgwIPWnEdqea89UKW2qFQ" association="_oL9cF_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwRfWnEdqea89UKW2qFQ" annotatedElement="_oLgwRPWnEdqea89UKW2qFQ">
          <body>References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwRvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwR_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLgwSPWnEdqea89UKW2qFQ" name="event" type="_oM20GfWnEdqea89UKW2qFQ" association="_oMHNFPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwSfWnEdqea89UKW2qFQ" annotatedElement="_oLgwSPWnEdqea89UKW2qFQ">
          <body>References a specification of the occurring event.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwSvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwS_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLgwTPWnEdqea89UKW2qFQ" name="MessageEnd" isAbstract="true">
      <ownedComment xmi:id="_oLgwTfWnEdqea89UKW2qFQ" annotatedElement="_oLgwTPWnEdqea89UKW2qFQ">
        <body>MessageEnd is an abstract specialization of NamedElement that represents what can occur at the end of a message.</body>
      </ownedComment>
      <generalization xmi:id="_oLgwTvWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oLgwT_WnEdqea89UKW2qFQ" name="message" type="_gfgNwGveEdq4DLWZOhbdEA" association="_oMHNEPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwUPWnEdqea89UKW2qFQ" annotatedElement="_oLgwT_WnEdqea89UKW2qFQ">
          <body>References a Message.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwUfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwUvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLgwU_WnEdqea89UKW2qFQ" name="StateInvariant">
      <ownedComment xmi:id="_oLgwVPWnEdqea89UKW2qFQ" annotatedElement="_oLgwU_WnEdqea89UKW2qFQ">
        <body>A state invariant is a runtime constraint on the participants of the interaction. It may be used to specify a variety of different kinds of constraints, such as values of attributes or variables, internal or external states, and so on. A state invariant is an interaction fragment and it is placed on a lifeline.</body>
      </ownedComment>
      <generalization xmi:id="_oLgwVfWnEdqea89UKW2qFQ" general="_oLW_IPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oLgwVvWnEdqea89UKW2qFQ" name="invariant" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oL9cHfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwV_WnEdqea89UKW2qFQ" annotatedElement="_oLgwVvWnEdqea89UKW2qFQ">
          <body>A Constraint that should hold at runtime for this StateInvariant</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwWPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwWfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLgwWvWnEdqea89UKW2qFQ" name="covered" type="_oLN1S_WnEdqea89UKW2qFQ" redefinedProperty="_oLW_I_WnEdqea89UKW2qFQ" association="_oL9cIPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwW_WnEdqea89UKW2qFQ" annotatedElement="_oLgwWvWnEdqea89UKW2qFQ">
          <body>References the Lifeline on which the StateInvariant appears.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwXPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwXfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLgwXvWnEdqea89UKW2qFQ" name="ActionExecutionSpecification">
      <ownedComment xmi:id="_oLgwX_WnEdqea89UKW2qFQ" annotatedElement="_oLgwXvWnEdqea89UKW2qFQ">
        <body>An action execution specification is a kind of execution specification representing the execution of an action.</body>
      </ownedComment>
      <ownedRule xmi:id="_oLgwYPWnEdqea89UKW2qFQ" name="action_referenced" constrainedElement="_oLgwXvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwYfWnEdqea89UKW2qFQ" annotatedElement="_oLgwYPWnEdqea89UKW2qFQ">
          <body>The Action referenced by the ActionExecutionSpecification, if any, must be owned by the Interaction owning the ActionExecutionOccurrence.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLgwYvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oLgwY_WnEdqea89UKW2qFQ" general="_oLgwK_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oLgwZPWnEdqea89UKW2qFQ" name="action" type="_oIreyPWnEdqea89UKW2qFQ" association="_oL9cLvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwZfWnEdqea89UKW2qFQ" annotatedElement="_oLgwZPWnEdqea89UKW2qFQ">
          <body>Action whose execution is occurring.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwZvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwZ_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLgwaPWnEdqea89UKW2qFQ" name="BehaviorExecutionSpecification">
      <ownedComment xmi:id="_oLgwafWnEdqea89UKW2qFQ" annotatedElement="_oLgwaPWnEdqea89UKW2qFQ">
        <body>A behavior execution specification is a kind of execution specification representing the execution of a behavior.</body>
      </ownedComment>
      <generalization xmi:id="_oLgwavWnEdqea89UKW2qFQ" general="_oLgwK_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oLgwa_WnEdqea89UKW2qFQ" name="behavior" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oL9cLPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLgwbPWnEdqea89UKW2qFQ" annotatedElement="_oLgwa_WnEdqea89UKW2qFQ">
          <body>Behavior whose execution is occurring.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLgwbfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLgwbvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLqhIPWnEdqea89UKW2qFQ" name="ExecutionEvent">
      <ownedComment xmi:id="_oLqhIfWnEdqea89UKW2qFQ" annotatedElement="_oLqhIPWnEdqea89UKW2qFQ">
        <body>An execution event models the start or finish of an execution occurrence.</body>
      </ownedComment>
      <generalization xmi:id="_oLqhIvWnEdqea89UKW2qFQ" general="_oM20GfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLqhI_WnEdqea89UKW2qFQ" name="CreationEvent">
      <ownedComment xmi:id="_oLqhJPWnEdqea89UKW2qFQ" annotatedElement="_oLqhI_WnEdqea89UKW2qFQ">
        <body>A creation event models the creation of an object.</body>
      </ownedComment>
      <ownedRule xmi:id="_oLqhJfWnEdqea89UKW2qFQ" name="no_occurrence_above" constrainedElement="_oLqhI_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLqhJvWnEdqea89UKW2qFQ" annotatedElement="_oLqhJfWnEdqea89UKW2qFQ">
          <body>No othet OccurrenceSpecification may appear above an OccurrenceSpecification which references a CreationEvent on a given Lifeline in an InteractionOperand.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLqhJ_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oLqhKPWnEdqea89UKW2qFQ" general="_oM20GfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLqhKfWnEdqea89UKW2qFQ" name="DestructionEvent">
      <ownedComment xmi:id="_oLqhKvWnEdqea89UKW2qFQ" annotatedElement="_oLqhKfWnEdqea89UKW2qFQ">
        <body>A destruction event models the destruction of an object.</body>
      </ownedComment>
      <ownedRule xmi:id="_oLqhK_WnEdqea89UKW2qFQ" name="no_occurrence_specifications_below" constrainedElement="_oLqhKfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLqhLPWnEdqea89UKW2qFQ" annotatedElement="_oLqhK_WnEdqea89UKW2qFQ">
          <body>No other OccurrenceSpecifications may appear below an OccurrenceSpecification which references a DestructionEvent on a given Lifeline in an InteractionOperand.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLqhLfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oLqhLvWnEdqea89UKW2qFQ" general="_oM20GfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLqhL_WnEdqea89UKW2qFQ" name="SendOperationEvent">
      <ownedComment xmi:id="_oLqhMPWnEdqea89UKW2qFQ" annotatedElement="_oLqhL_WnEdqea89UKW2qFQ">
        <body>A send operation event models the invocation of an operation call.</body>
      </ownedComment>
      <generalization xmi:id="_oLqhMfWnEdqea89UKW2qFQ" general="_oM20D_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oLqhMvWnEdqea89UKW2qFQ" name="operation" type="_M4X2IGveEdq4DLWZOhbdEA" association="_oL9cNPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLqhM_WnEdqea89UKW2qFQ" annotatedElement="_oLqhMvWnEdqea89UKW2qFQ">
          <body>The operation associated with this event.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLqhNPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLqhNfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLqhNvWnEdqea89UKW2qFQ" name="SendSignalEvent">
      <ownedComment xmi:id="_oLqhN_WnEdqea89UKW2qFQ" annotatedElement="_oLqhNvWnEdqea89UKW2qFQ">
        <body>A send signal event models the sending of a signal.</body>
      </ownedComment>
      <generalization xmi:id="_oLqhOPWnEdqea89UKW2qFQ" general="_oM20D_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oLqhOfWnEdqea89UKW2qFQ" name="signal" type="_Pu3O0HL0EdqziYxiZo0YtA" association="_oL9cOPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLqhOvWnEdqea89UKW2qFQ" annotatedElement="_oLqhOfWnEdqea89UKW2qFQ">
          <body>The signal associated with this event.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLqhO_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLqhPPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLqhPfWnEdqea89UKW2qFQ" name="MessageOccurrenceSpecification">
      <ownedComment xmi:id="_oLqhPvWnEdqea89UKW2qFQ" annotatedElement="_oLqhPfWnEdqea89UKW2qFQ">
        <body>A message occurrence specification pecifies the occurrence of message events, such as sending and receiving of signals or invoking or receiving of operation calls. A message occurrence specification is a kind of message end. Messages are generated either by synchronous operation calls or asynchronous signal sends. They are received by the execution of corresponding accept event actions.</body>
      </ownedComment>
      <generalization xmi:id="_oLqhP_WnEdqea89UKW2qFQ" general="_oLgwTPWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oLqhQPWnEdqea89UKW2qFQ" general="_oLgwOfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLqhQfWnEdqea89UKW2qFQ" name="ExecutionOccurrenceSpecification">
      <ownedComment xmi:id="_oLqhQvWnEdqea89UKW2qFQ" annotatedElement="_oLqhQfWnEdqea89UKW2qFQ">
        <body>An execution occurrence specification represents moments in time at which actions or behaviors start or finish.</body>
      </ownedComment>
      <generalization xmi:id="_oLqhQ_WnEdqea89UKW2qFQ" general="_oLgwOfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oLqhRPWnEdqea89UKW2qFQ" name="execution" type="_oLgwK_WnEdqea89UKW2qFQ" association="_oMHNHfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLqhRfWnEdqea89UKW2qFQ" annotatedElement="_oLqhRPWnEdqea89UKW2qFQ">
          <body>References the execution specification describing the execution that is started or finished at this execution event.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLqhRvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLqhR_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLqhSPWnEdqea89UKW2qFQ" name="event" type="_oLqhIPWnEdqea89UKW2qFQ" redefinedProperty="_oLgwSPWnEdqea89UKW2qFQ" association="_oMHNIfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLqhSfWnEdqea89UKW2qFQ" annotatedElement="_oLqhSPWnEdqea89UKW2qFQ">
          <body>Redefines the event referenced to be restricted to an execution event.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLqhSvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLqhS_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLqhTPWnEdqea89UKW2qFQ" name="ReceiveOperationEvent">
      <ownedComment xmi:id="_oLqhTfWnEdqea89UKW2qFQ" annotatedElement="_oLqhTPWnEdqea89UKW2qFQ">
        <body>A receive operation event specifies the event of receiving an operation invocation for a particular operation by the target entity.</body>
      </ownedComment>
      <generalization xmi:id="_oLqhTvWnEdqea89UKW2qFQ" general="_oM20D_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oLqhT_WnEdqea89UKW2qFQ" name="operation" type="_M4X2IGveEdq4DLWZOhbdEA" association="_oMHNJvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLqhUPWnEdqea89UKW2qFQ" annotatedElement="_oLqhT_WnEdqea89UKW2qFQ">
          <body>The operation associated with this event.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLqhUfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLqhUvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLqhU_WnEdqea89UKW2qFQ" name="ReceiveSignalEvent">
      <ownedComment xmi:id="_oLqhVPWnEdqea89UKW2qFQ" annotatedElement="_oLqhU_WnEdqea89UKW2qFQ">
        <body>A receive signal event specifies the event of receiving a signal by the target entity.</body>
      </ownedComment>
      <generalization xmi:id="_oLqhVfWnEdqea89UKW2qFQ" general="_oM20D_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oLqhVvWnEdqea89UKW2qFQ" name="signal" type="_Pu3O0HL0EdqziYxiZo0YtA" association="_oMHNKvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLqhV_WnEdqea89UKW2qFQ" annotatedElement="_oLqhVvWnEdqea89UKW2qFQ">
          <body>The signal associated with this event.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLqhWPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLqhWfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Y_jskGvtEdqG6fBIPwe-mw" name="MessageKind">
      <ownedComment xmi:id="_oLqhWvWnEdqea89UKW2qFQ" annotatedElement="_Y_jskGvtEdqG6fBIPwe-mw">
        <body>This is an enumerated type that identifies the type of message.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_oLqhW_WnEdqea89UKW2qFQ" name="complete">
        <ownedComment xmi:id="_oLqhXPWnEdqea89UKW2qFQ" annotatedElement="_oLqhW_WnEdqea89UKW2qFQ">
          <body>sendEvent and receiveEvent are present</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oLqhXfWnEdqea89UKW2qFQ" name="lost">
        <ownedComment xmi:id="_oLqhXvWnEdqea89UKW2qFQ" annotatedElement="_oLqhXfWnEdqea89UKW2qFQ">
          <body>sendEvent present and receiveEvent absent</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oLqhX_WnEdqea89UKW2qFQ" name="found">
        <ownedComment xmi:id="_oLqhYPWnEdqea89UKW2qFQ" annotatedElement="_oLqhX_WnEdqea89UKW2qFQ">
          <body>sendEvent absent and receiveEvent present</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oLzrEPWnEdqea89UKW2qFQ" name="unknown">
        <ownedComment xmi:id="_oLzrEfWnEdqea89UKW2qFQ" annotatedElement="_oLzrEPWnEdqea89UKW2qFQ">
          <body>sendEvent and receiveEvent absent (should not appear)</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_oLzrEvWnEdqea89UKW2qFQ" name="MessageSort">
      <ownedComment xmi:id="_oLzrE_WnEdqea89UKW2qFQ" annotatedElement="_oLzrEvWnEdqea89UKW2qFQ">
        <body>This is an enumerated type that identifies the type of communication action that was used to generate the message.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_oLzrFPWnEdqea89UKW2qFQ" name="synchCall">
        <ownedComment xmi:id="_oLzrFfWnEdqea89UKW2qFQ" annotatedElement="_oLzrFPWnEdqea89UKW2qFQ">
          <body>The message was generated by a synchronous call to an operation.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oLzrFvWnEdqea89UKW2qFQ" name="asynchCall">
        <ownedComment xmi:id="_oLzrF_WnEdqea89UKW2qFQ" annotatedElement="_oLzrFvWnEdqea89UKW2qFQ">
          <body>The message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous&#xD;
= false.&#xD;
</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oLzrGPWnEdqea89UKW2qFQ" name="asynchSignal">
        <ownedComment xmi:id="_oLzrGfWnEdqea89UKW2qFQ" annotatedElement="_oLzrGPWnEdqea89UKW2qFQ">
          <body>The message was generated by an asynchronous send action.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oLzrGvWnEdqea89UKW2qFQ" name="createMessage">
        <ownedComment xmi:id="_oLzrG_WnEdqea89UKW2qFQ" annotatedElement="_oLzrGvWnEdqea89UKW2qFQ">
          <body>The message designating the creation of another lifeline object.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oLzrHPWnEdqea89UKW2qFQ" name="deleteMessage">
        <ownedComment xmi:id="_oLzrHfWnEdqea89UKW2qFQ" annotatedElement="_oLzrHPWnEdqea89UKW2qFQ">
          <body>The message designating the termination of another lifeline.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oLzrHvWnEdqea89UKW2qFQ" name="reply">
        <ownedComment xmi:id="_oLzrH_WnEdqea89UKW2qFQ" annotatedElement="_oLzrHvWnEdqea89UKW2qFQ">
          <body>The message is a reply message to an operation call.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLzrIPWnEdqea89UKW2qFQ" name="A_covered_coveredBy" memberEnd="_oLW_I_WnEdqea89UKW2qFQ _oLN1V_WnEdqea89UKW2qFQ">
      <ownedComment xmi:id="_oLzrIfWnEdqea89UKW2qFQ" annotatedElement="_oLzrIPWnEdqea89UKW2qFQ">
        <body>This association shows the lifelines that make up an interaction. A lifeline may be part of more than one interaction use.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLzrIvWnEdqea89UKW2qFQ" name="A_executionSpecification_start" memberEnd="_oLgwMfWnEdqea89UKW2qFQ _oLzrJPWnEdqea89UKW2qFQ">
      <ownedComment xmi:id="_oLzrI_WnEdqea89UKW2qFQ" annotatedElement="_oLzrIvWnEdqea89UKW2qFQ">
        <body>The event shows the time point at which the action begins execution.</body>
      </ownedComment>
      <ownedEnd xmi:id="_oLzrJPWnEdqea89UKW2qFQ" type="_oLgwK_WnEdqea89UKW2qFQ" association="_oLzrIvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLzrJfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLzrJvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLzrJ_WnEdqea89UKW2qFQ" name="A_executionSpecification_finish" memberEnd="_oLgwNfWnEdqea89UKW2qFQ _oLzrKfWnEdqea89UKW2qFQ">
      <ownedComment xmi:id="_oLzrKPWnEdqea89UKW2qFQ" annotatedElement="_oLzrJ_WnEdqea89UKW2qFQ">
        <body>The event shows the time point at which the action completes execution.</body>
      </ownedComment>
      <ownedEnd xmi:id="_oLzrKfWnEdqea89UKW2qFQ" type="_oLgwK_WnEdqea89UKW2qFQ" association="_oLzrJ_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLzrKvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLzrK_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLzrLPWnEdqea89UKW2qFQ" name="A_lifeline_represents" memberEnd="_oLN1W_WnEdqea89UKW2qFQ _oLzrLvWnEdqea89UKW2qFQ">
      <ownedComment xmi:id="_oLzrLfWnEdqea89UKW2qFQ" annotatedElement="_oLzrLPWnEdqea89UKW2qFQ">
        <body>If a Part has multiplicity, multiple lifelines might be used to show it.</body>
      </ownedComment>
      <ownedEnd xmi:id="_oLzrLvWnEdqea89UKW2qFQ" type="_oLN1S_WnEdqea89UKW2qFQ" association="_oLzrLPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLzrL_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLzrMPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLzrMfWnEdqea89UKW2qFQ" name="A_lifeline_interaction" memberEnd="_oLN1O_WnEdqea89UKW2qFQ _oLN1X_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oLzrMvWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLzrM_WnEdqea89UKW2qFQ" name="A_receiveEvent_message" memberEnd="_oLW_TPWnEdqea89UKW2qFQ _oLzrNPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oLzrNPWnEdqea89UKW2qFQ" type="_gfgNwGveEdq4DLWZOhbdEA" association="_oLzrM_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLzrNfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLzrNvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLzrN_WnEdqea89UKW2qFQ" name="A_sendEvent_message" memberEnd="_oLW_UPWnEdqea89UKW2qFQ _oLzrOPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oLzrOPWnEdqea89UKW2qFQ" type="_gfgNwGveEdq4DLWZOhbdEA" association="_oLzrN_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLzrOfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLzrOvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLzrO_WnEdqea89UKW2qFQ" name="A_events_covered" memberEnd="_oLgwPPWnEdqea89UKW2qFQ _oLzrPfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oLzrPPWnEdqea89UKW2qFQ" general="_oLzrIPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oLzrPfWnEdqea89UKW2qFQ" name="events" type="_oLgwOfWnEdqea89UKW2qFQ" isOrdered="true" association="_oLzrO_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLzrPvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLzrP_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLzrQPWnEdqea89UKW2qFQ" name="A_selector_lifeline" memberEnd="_oLN1Y_WnEdqea89UKW2qFQ _oLzrQvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oLzrQfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oLzrQvWnEdqea89UKW2qFQ" type="_oLN1S_WnEdqea89UKW2qFQ" association="_oLzrQPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLzrQ_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLzrRPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cEPWnEdqea89UKW2qFQ" name="A_connector_message" memberEnd="_oLW_VPWnEdqea89UKW2qFQ _oL9cEfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oL9cEfWnEdqea89UKW2qFQ" type="_gfgNwGveEdq4DLWZOhbdEA" association="_oL9cEPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oL9cEvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oL9cE_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cFPWnEdqea89UKW2qFQ" name="A_message_interaction" memberEnd="_oLW_WPWnEdqea89UKW2qFQ _oLN1P_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oL9cFfWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cFvWnEdqea89UKW2qFQ" name="A_before_toAfter" memberEnd="_oLgwQPWnEdqea89UKW2qFQ _oLgwI_WnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cF_WnEdqea89UKW2qFQ" name="A_toBefore_after" memberEnd="_oLgwJ_WnEdqea89UKW2qFQ _oLgwRPWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cGPWnEdqea89UKW2qFQ" name="A_argument_message" memberEnd="_oLW_XPWnEdqea89UKW2qFQ _oL9cGvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oL9cGfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oL9cGvWnEdqea89UKW2qFQ" type="_gfgNwGveEdq4DLWZOhbdEA" association="_oL9cGPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oL9cG_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oL9cHPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cHfWnEdqea89UKW2qFQ" name="A_invariant_stateInvariant" memberEnd="_oLgwVvWnEdqea89UKW2qFQ _oL9cH_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oL9cHvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oL9cH_WnEdqea89UKW2qFQ" type="_oLgwU_WnEdqea89UKW2qFQ" association="_oL9cHfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cIPWnEdqea89UKW2qFQ" name="A_stateInvariant_covered" memberEnd="_oLgwWvWnEdqea89UKW2qFQ _oL9cIvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oL9cIfWnEdqea89UKW2qFQ" general="_oLzrIPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oL9cIvWnEdqea89UKW2qFQ" name="stateInvariant" type="_oLgwU_WnEdqea89UKW2qFQ" association="_oL9cIPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oL9cI_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oL9cJPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cJfWnEdqea89UKW2qFQ" name="A_generalOrdering_interactionFragment" memberEnd="_oLW_J_WnEdqea89UKW2qFQ _oL9cJ_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oL9cJvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oL9cJ_WnEdqea89UKW2qFQ" type="_oLW_IPWnEdqea89UKW2qFQ" association="_oL9cJfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oL9cKPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oL9cKfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cKvWnEdqea89UKW2qFQ" name="A_enclosingInteraction_fragment" memberEnd="_oLN1Q_WnEdqea89UKW2qFQ _oLW_K_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oL9cK_WnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cLPWnEdqea89UKW2qFQ" name="A_behavior_behaviorExecutionSpecification" memberEnd="_oLgwa_WnEdqea89UKW2qFQ _oL9cLfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oL9cLfWnEdqea89UKW2qFQ" type="_oLgwaPWnEdqea89UKW2qFQ" association="_oL9cLPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cLvWnEdqea89UKW2qFQ" name="A_action_actionExecutionSpecification" memberEnd="_oLgwZPWnEdqea89UKW2qFQ _oL9cL_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oL9cL_WnEdqea89UKW2qFQ" type="_oLgwXvWnEdqea89UKW2qFQ" association="_oL9cLvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oL9cMPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oL9cMfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cMvWnEdqea89UKW2qFQ" name="A_signature_message" memberEnd="_oLW_YPWnEdqea89UKW2qFQ _oL9cM_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oL9cM_WnEdqea89UKW2qFQ" type="_gfgNwGveEdq4DLWZOhbdEA" association="_oL9cMvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cNPWnEdqea89UKW2qFQ" name="A_operation_sendOperationEvent" memberEnd="_oLqhMvWnEdqea89UKW2qFQ _oL9cNfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oL9cNfWnEdqea89UKW2qFQ" type="_oLqhL_WnEdqea89UKW2qFQ" association="_oL9cNPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oL9cNvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oL9cN_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oL9cOPWnEdqea89UKW2qFQ" name="A_signal_sendSignalEvent" memberEnd="_oLqhOfWnEdqea89UKW2qFQ _oL9cOfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oL9cOfWnEdqea89UKW2qFQ" type="_oLqhNvWnEdqea89UKW2qFQ" association="_oL9cOPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oL9cOvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oL9cO_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMHNEPWnEdqea89UKW2qFQ" name="A_message_messageEnd" memberEnd="_oLgwT_WnEdqea89UKW2qFQ _oMHNEfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oMHNEfWnEdqea89UKW2qFQ" type="_oLgwTPWnEdqea89UKW2qFQ" association="_oMHNEPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMHNEvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMHNE_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMHNFPWnEdqea89UKW2qFQ" name="A_event_occurrenceSpecification" memberEnd="_oLgwSPWnEdqea89UKW2qFQ _oMHNFfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oMHNFfWnEdqea89UKW2qFQ" type="_oLgwOfWnEdqea89UKW2qFQ" association="_oMHNFPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMHNFvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMHNF_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMHNGPWnEdqea89UKW2qFQ" name="A_action_interaction" memberEnd="_oLN1R_WnEdqea89UKW2qFQ _oMHNGvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oMHNGfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oMHNGvWnEdqea89UKW2qFQ" type="_oLN1N_WnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oMHNGPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMHNG_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMHNHPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMHNHfWnEdqea89UKW2qFQ" name="A_execution_executionOccurrenceSpecification" memberEnd="_oLqhRPWnEdqea89UKW2qFQ _oMHNHvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oMHNHvWnEdqea89UKW2qFQ" type="_oLqhQfWnEdqea89UKW2qFQ" association="_oMHNHfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMHNH_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMHNIPWnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMHNIfWnEdqea89UKW2qFQ" name="A_event_executionOccurrenceSpecification" memberEnd="_oLqhSPWnEdqea89UKW2qFQ _oMHNI_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oMHNIvWnEdqea89UKW2qFQ" general="_oMHNFPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oMHNI_WnEdqea89UKW2qFQ" type="_oLqhQfWnEdqea89UKW2qFQ" redefinedProperty="_oMHNFfWnEdqea89UKW2qFQ" association="_oMHNIfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMHNJPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMHNJfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMHNJvWnEdqea89UKW2qFQ" name="A_operation_receiveOperationEvent" memberEnd="_oLqhT_WnEdqea89UKW2qFQ _oMHNJ_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oMHNJ_WnEdqea89UKW2qFQ" type="_oLqhTPWnEdqea89UKW2qFQ" association="_oMHNJvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMHNKPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMHNKfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMHNKvWnEdqea89UKW2qFQ" name="A_signal_receiveSignalEvent" memberEnd="_oLqhVvWnEdqea89UKW2qFQ _oMHNK_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oMHNK_WnEdqea89UKW2qFQ" type="_oLqhU_WnEdqea89UKW2qFQ" association="_oMHNKvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMHNLPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMHNLfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oMQXAPWnEdqea89UKW2qFQ" name="Actor">
      <ownedComment xmi:id="_oMQXAfWnEdqea89UKW2qFQ" annotatedElement="_oMQXAPWnEdqea89UKW2qFQ">
        <body>An actor specifies a role played by a user or any other system that interacts with the subject.</body>
      </ownedComment>
      <ownedRule xmi:id="_oMQXAvWnEdqea89UKW2qFQ" name="associations" constrainedElement="_oMQXAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMQXA_WnEdqea89UKW2qFQ" annotatedElement="_oMQXAvWnEdqea89UKW2qFQ">
          <body>An actor can only have associations to use cases, components and classes. Furthermore these associations must be binary.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMQXBPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.ownedAttribute->forAll ( a |&#xA;(a.association->notEmpty()) implies&#xA;((a.association.memberEnd.size() = 2) and&#xA;(a.opposite.class.oclIsKindOf(UseCase) or&#xA;(a.opposite.class.oclIsKindOf(Class) and not a.opposite.class.oclIsKindOf(Behavior))))&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oMQXBfWnEdqea89UKW2qFQ" name="must_have_name" constrainedElement="_oMQXAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMQXBvWnEdqea89UKW2qFQ" annotatedElement="_oMQXBfWnEdqea89UKW2qFQ">
          <body>An actor must have a name.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMQXB_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>name->notEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oMQXCPWnEdqea89UKW2qFQ" general="_iY7sMGvsEdqG6fBIPwe-mw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oMQXCfWnEdqea89UKW2qFQ" name="Extend">
      <ownedComment xmi:id="_oMQXCvWnEdqea89UKW2qFQ" annotatedElement="_oMQXCfWnEdqea89UKW2qFQ">
        <body>A relationship from an extending use case to an extended use case that specifies how and when the behavior defined in the extending use case can be inserted into the behavior defined in the extended use case.</body>
      </ownedComment>
      <ownedRule xmi:id="_oMQXC_WnEdqea89UKW2qFQ" name="extension_points" constrainedElement="_oMQXCfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMQXDPWnEdqea89UKW2qFQ" annotatedElement="_oMQXC_WnEdqea89UKW2qFQ">
          <body>The extension points referenced by the extend relationship must belong to the use case that is being extended.&#xD;
&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMQXDfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>extensionLocation->forAll (xp | extendedCase.extensionPoint->includes(xp))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oMQXDvWnEdqea89UKW2qFQ" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <generalization xmi:id="_oMQXD_WnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oMQXEPWnEdqea89UKW2qFQ" name="extendedCase" type="_oMaIAPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL5vWnEdqea89UKW2qFQ" association="_oMjR9fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMQXEfWnEdqea89UKW2qFQ" annotatedElement="_oMQXEPWnEdqea89UKW2qFQ">
          <body>References the use case that is being extended.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMQXEvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMQXE_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMQXFPWnEdqea89UKW2qFQ" name="extension" type="_oMaIAPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL4vWnEdqea89UKW2qFQ" association="_oMjR-vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMQXFfWnEdqea89UKW2qFQ" annotatedElement="_oMQXFPWnEdqea89UKW2qFQ">
          <body>References the use case that represents the extension and owns the extend relationship.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMQXFvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMQXF_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMQXGPWnEdqea89UKW2qFQ" name="condition" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oMjR__WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMQXGfWnEdqea89UKW2qFQ" annotatedElement="_oMQXGPWnEdqea89UKW2qFQ">
          <body>References the condition that must hold when the first extension point is reached for the extension to take place. If no constraint is associated with the extend relationship, the extension is unconditional.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMQXGvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMQXG_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMQXHPWnEdqea89UKW2qFQ" name="extensionLocation" type="_oMaIJvWnEdqea89UKW2qFQ" isOrdered="true" association="_oMjSBPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMQXHfWnEdqea89UKW2qFQ" annotatedElement="_oMQXHPWnEdqea89UKW2qFQ">
          <body>An ordered list of extension points belonging to the extended use case, specifying where the respective behavioral fragments of the extending use case are to be inserted. The first fragment in the extending use case is associated with the first extension point in the list, the second fragment with the second point, and so on. (Note that, in most practical cases, the extending use case has just a single behavior fragment, so that the list of extension points is trivial.)&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMQXHvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMQXH_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oMQXIPWnEdqea89UKW2qFQ" name="Include">
      <ownedComment xmi:id="_oMQXIfWnEdqea89UKW2qFQ" annotatedElement="_oMQXIPWnEdqea89UKW2qFQ">
        <body>An include relationship defines that a use case contains the behavior defined in another use case.</body>
      </ownedComment>
      <generalization xmi:id="_oMQXIvWnEdqea89UKW2qFQ" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <generalization xmi:id="_oMQXI_WnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oMQXJPWnEdqea89UKW2qFQ" name="includingCase" type="_oMaIAPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL4vWnEdqea89UKW2qFQ" association="_oMaIOfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMQXJfWnEdqea89UKW2qFQ" annotatedElement="_oMQXJPWnEdqea89UKW2qFQ">
          <body>References the use case which will include the addition and owns the include relationship.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMQXJvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMQXJ_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMQXKPWnEdqea89UKW2qFQ" name="addition" type="_oMaIAPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL5vWnEdqea89UKW2qFQ" association="_oMjR8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMQXKfWnEdqea89UKW2qFQ" annotatedElement="_oMQXKPWnEdqea89UKW2qFQ">
          <body>References the use case that is to be included.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMQXKvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMQXK_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oMaIAPWnEdqea89UKW2qFQ" name="UseCase">
      <ownedComment xmi:id="_oMaIAfWnEdqea89UKW2qFQ" annotatedElement="_oMaIAPWnEdqea89UKW2qFQ">
        <body>A use case is the specification of a set of actions performed by a system, which yields an observable result that is, typically, of value for one or more actors or other stakeholders of the system.</body>
      </ownedComment>
      <ownedRule xmi:id="_oMaIAvWnEdqea89UKW2qFQ" name="must_have_name" constrainedElement="_oMaIAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaIA_WnEdqea89UKW2qFQ" annotatedElement="_oMaIAvWnEdqea89UKW2qFQ">
          <body>A UseCase must have a name.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMaIBPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.name -> notEmpty ()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oMaIBfWnEdqea89UKW2qFQ" name="binary_associations" constrainedElement="_oMaIAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaIBvWnEdqea89UKW2qFQ" annotatedElement="_oMaIBfWnEdqea89UKW2qFQ">
          <body>UseCases can only be involved in binary Associations.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMaIB_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oMaICPWnEdqea89UKW2qFQ" name="no_association_to_use_case" constrainedElement="_oMaIAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaICfWnEdqea89UKW2qFQ" annotatedElement="_oMaICPWnEdqea89UKW2qFQ">
          <body>UseCases can not have Associations to UseCases specifying the same subject.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMaICvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oMaIC_WnEdqea89UKW2qFQ" name="cannot_include_self" constrainedElement="_oMaIAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaIDPWnEdqea89UKW2qFQ" annotatedElement="_oMaIC_WnEdqea89UKW2qFQ">
          <body>A use case cannot include use cases that directly or indirectly include it.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMaIDfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>not self.allIncludedUseCases()->includes(self)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oMaIDvWnEdqea89UKW2qFQ" general="_iY7sMGvsEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oMaID_WnEdqea89UKW2qFQ" name="include" type="_oMQXIPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oMaIOfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaIEPWnEdqea89UKW2qFQ" annotatedElement="_oMaID_WnEdqea89UKW2qFQ">
          <body>References the Include relationships owned by this use case.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMaIEfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMaIEvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMaIE_WnEdqea89UKW2qFQ" name="extend" type="_oMQXCfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oMjR-vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaIFPWnEdqea89UKW2qFQ" annotatedElement="_oMaIE_WnEdqea89UKW2qFQ">
          <body>References the Extend relationships owned by this use case.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMaIFfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMaIFvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMaIF_WnEdqea89UKW2qFQ" name="extensionPoint" type="_oMaIJvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oMjR_fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaIGPWnEdqea89UKW2qFQ" annotatedElement="_oMaIF_WnEdqea89UKW2qFQ">
          <body>References the ExtensionPoints owned by the use case.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMaIGfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMaIGvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMaIG_WnEdqea89UKW2qFQ" name="subject" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oMjSDfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaIHPWnEdqea89UKW2qFQ" annotatedElement="_oMaIG_WnEdqea89UKW2qFQ">
          <body>References the subjects to which this use case applies. The subject or its parts realize all the use cases that apply to this subject. Use cases need not be attached to any specific subject, however. The subject may, but need not, own the use cases that apply to it.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMaIHfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMaIHvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oMaIH_WnEdqea89UKW2qFQ" name="allIncludedUseCases" isQuery="true" bodyCondition="_oMaIIfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaIIPWnEdqea89UKW2qFQ" annotatedElement="_oMaIH_WnEdqea89UKW2qFQ">
          <body>The query allIncludedUseCases() returns the transitive closure of all use cases (directly or indirectly) included by this use case.</body>
        </ownedComment>
        <ownedRule xmi:id="_oMaIIfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oMaIH_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMaIIvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = self.include->union(self.include->collect(in | in.allIncludedUseCases()))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oMaII_WnEdqea89UKW2qFQ" type="_oMaIAPWnEdqea89UKW2qFQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMaIJPWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMaIJfWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oMaIJvWnEdqea89UKW2qFQ" name="ExtensionPoint">
      <ownedComment xmi:id="_oMaIJ_WnEdqea89UKW2qFQ" annotatedElement="_oMaIJvWnEdqea89UKW2qFQ">
        <body>An extension point identifies a point in the behavior of a use case where that behavior can be extended by the behavior of some other (extending) use case, as specified by an extend relationship.</body>
      </ownedComment>
      <ownedRule xmi:id="_oMaIKPWnEdqea89UKW2qFQ" name="must_have_name" constrainedElement="_oMaIJvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaIKfWnEdqea89UKW2qFQ" annotatedElement="_oMaIKPWnEdqea89UKW2qFQ">
          <body>An ExtensionPoint must have a name.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMaIKvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.name->notEmpty ()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oMaIK_WnEdqea89UKW2qFQ" general="_oA731vWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oMaILPWnEdqea89UKW2qFQ" name="useCase" type="_oMaIAPWnEdqea89UKW2qFQ" association="_oMjR_fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaILfWnEdqea89UKW2qFQ" annotatedElement="_oMaILPWnEdqea89UKW2qFQ">
          <body>References the use case that owns this extension point.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMaILvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMaIL_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMaIOfWnEdqea89UKW2qFQ" name="A_includingCase_include" memberEnd="_oMQXJPWnEdqea89UKW2qFQ _oMaID_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oMaIOvWnEdqea89UKW2qFQ" general="_oCuAuPWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oMaIO_WnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMjR8PWnEdqea89UKW2qFQ" name="A_addition_include" memberEnd="_oMQXKPWnEdqea89UKW2qFQ _oMjR8vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oMjR8fWnEdqea89UKW2qFQ" general="_oC3xgPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oMjR8vWnEdqea89UKW2qFQ" type="_oMQXIPWnEdqea89UKW2qFQ" association="_oMjR8PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMjR8_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMjR9PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMjR9fWnEdqea89UKW2qFQ" name="A_extendedCase_extend" memberEnd="_oMQXEPWnEdqea89UKW2qFQ _oMjR9_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oMjR9vWnEdqea89UKW2qFQ" general="_oC3xgPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oMjR9_WnEdqea89UKW2qFQ" type="_oMQXCfWnEdqea89UKW2qFQ" association="_oMjR9fWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMjR-PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMjR-fWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMjR-vWnEdqea89UKW2qFQ" name="A_extension_extend" memberEnd="_oMQXFPWnEdqea89UKW2qFQ _oMaIE_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oMjR-_WnEdqea89UKW2qFQ" general="_oCuAuPWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oMjR_PWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMjR_fWnEdqea89UKW2qFQ" name="A_extensionPoint_useCase" memberEnd="_oMaIF_WnEdqea89UKW2qFQ _oMaILPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oMjR_vWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMjR__WnEdqea89UKW2qFQ" name="A_condition_extend" memberEnd="_oMQXGPWnEdqea89UKW2qFQ _oMjSAfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oMjSAPWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oMjSAfWnEdqea89UKW2qFQ" type="_oMQXCfWnEdqea89UKW2qFQ" association="_oMjR__WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMjSAvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMjSA_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMjSBPWnEdqea89UKW2qFQ" name="A_extensionLocation_extension" memberEnd="_oMQXHPWnEdqea89UKW2qFQ _oMjSBfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oMjSBfWnEdqea89UKW2qFQ" name="extension" type="_oMQXCfWnEdqea89UKW2qFQ" association="_oMjSBPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMjSBvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMjSB_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMjSCPWnEdqea89UKW2qFQ" name="A_ownedUseCase_classifier" memberEnd="_oMaIMfWnEdqea89UKW2qFQ _oMjSCvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oMjSCfWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oMjSCvWnEdqea89UKW2qFQ" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oMjSCPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMjSC_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMjSDPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oMjSDfWnEdqea89UKW2qFQ" name="A_subject_useCase" memberEnd="_oMaIG_WnEdqea89UKW2qFQ _oMaINfWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_oMtC8PWnEdqea89UKW2qFQ" name="CallEvent">
      <ownedComment xmi:id="_oMtC8fWnEdqea89UKW2qFQ" annotatedElement="_oMtC8PWnEdqea89UKW2qFQ">
        <body>A call event models the receipt by an object of a message invoking a call of an operation.</body>
      </ownedComment>
      <generalization xmi:id="_oMtC8vWnEdqea89UKW2qFQ" general="_oM20D_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oMtC8_WnEdqea89UKW2qFQ" name="operation" type="_M4X2IGveEdq4DLWZOhbdEA" association="_oM_97PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMtC9PWnEdqea89UKW2qFQ" annotatedElement="_oMtC8_WnEdqea89UKW2qFQ">
          <body>Designates the operation whose invocation raised the call event.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMtC9fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMtC9vWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oMtC9_WnEdqea89UKW2qFQ" name="ChangeEvent">
      <ownedComment xmi:id="_oMtC-PWnEdqea89UKW2qFQ" annotatedElement="_oMtC9_WnEdqea89UKW2qFQ">
        <body>A change event models a change in the system configuration that makes a condition true.</body>
      </ownedComment>
      <generalization xmi:id="_oMtC-fWnEdqea89UKW2qFQ" general="_oM20GfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oMtC-vWnEdqea89UKW2qFQ" name="changeExpression" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oM_-A_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMtC-_WnEdqea89UKW2qFQ" annotatedElement="_oMtC-vWnEdqea89UKW2qFQ">
          <body>A Boolean-valued expression that will result in a change event whenever its value changes from false to true.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMtC_PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMtC_fWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oM2z8PWnEdqea89UKW2qFQ" name="Reception">
      <ownedComment xmi:id="_oM2z8fWnEdqea89UKW2qFQ" annotatedElement="_oM2z8PWnEdqea89UKW2qFQ">
        <body>A reception is a declaration stating that a classifier is prepared to react to the receipt of a signal. A reception designates a signal and specifies the expected behavioral response. The details of handling a signal are specified by the behavior associated with the reception or the classifier itself.</body>
      </ownedComment>
      <ownedRule xmi:id="_oM2z8vWnEdqea89UKW2qFQ" name="not_query" constrainedElement="_oM2z8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oM2z8_WnEdqea89UKW2qFQ" annotatedElement="_oM2z8vWnEdqea89UKW2qFQ">
          <body>A Reception can not be a query.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oM2z9PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>not self.isQuery</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oM2z9fWnEdqea89UKW2qFQ" general="_rHT3YKOsEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:id="_oM2z9vWnEdqea89UKW2qFQ" name="signal" type="_Pu3O0HL0EdqziYxiZo0YtA" association="_oM_96PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oM2z9_WnEdqea89UKW2qFQ" annotatedElement="_oM2z9vWnEdqea89UKW2qFQ">
          <body>The signal that this reception handles.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oM2z-PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oM2z-fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Pu3O0HL0EdqziYxiZo0YtA" name="Signal">
      <ownedComment xmi:id="_oM2z-vWnEdqea89UKW2qFQ" annotatedElement="_Pu3O0HL0EdqziYxiZo0YtA">
        <body>A signal is a specification of send request instances communicated between objects. The receiving object handles the received request instances as specified by its receptions. The data carried by a send request (which was passed to it by the send invocation occurrence that caused that request) are represented as attributes of the signal. A signal is defined independently of the classifiers handling the signal occurrence.</body>
      </ownedComment>
      <generalization xmi:id="_oM2z-_WnEdqea89UKW2qFQ" general="_6UV2QGwJEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oM2z_PWnEdqea89UKW2qFQ" name="ownedAttribute" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oACf8vWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oM_-CPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oM2z_fWnEdqea89UKW2qFQ" annotatedElement="_oM2z_PWnEdqea89UKW2qFQ">
          <body>The attributes owned by the signal.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oM2z_vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oM2z__WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_YIM4UHL0EdqziYxiZo0YtA" name="createOwnedAttribute">
        <ownedComment xmi:id="_MBen4OwmEdqYHf-imTcTdw" annotatedElement="_YIM4UHL0EdqziYxiZo0YtA">
          <body>Creates a property with the specified name, type, lower bound, and upper bound as an owned attribute of this signal.</body>
        </ownedComment>
        <ownedParameter xmi:id="_YIM4UXL0EdqziYxiZo0YtA" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_YIM4UnL0EdqziYxiZo0YtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5RAjsaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5RAjsKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_YIM4U3L0EdqziYxiZo0YtA" name="type" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7g9NEaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7g9NEKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_YIM4VHL0EdqziYxiZo0YtA" name="lower" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_YIM4VXL0EdqziYxiZo0YtA" name="upper" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oM20APWnEdqea89UKW2qFQ" name="SignalEvent">
      <ownedComment xmi:id="_oM20AfWnEdqea89UKW2qFQ" annotatedElement="_oM20APWnEdqea89UKW2qFQ">
        <body>A signal event represents the receipt of an asynchronous signal instance. A signal event may, for example, cause a state machine to trigger a transition.</body>
      </ownedComment>
      <generalization xmi:id="_oM20AvWnEdqea89UKW2qFQ" general="_oM20D_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oM20A_WnEdqea89UKW2qFQ" name="signal" type="_Pu3O0HL0EdqziYxiZo0YtA" association="_oM_98PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oM20BPWnEdqea89UKW2qFQ" annotatedElement="_oM20A_WnEdqea89UKW2qFQ">
          <body>The specific signal that is associated with this event.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oM20D_WnEdqea89UKW2qFQ" name="MessageEvent" isAbstract="true">
      <ownedComment xmi:id="_oM20EPWnEdqea89UKW2qFQ" annotatedElement="_oM20D_WnEdqea89UKW2qFQ">
        <body>A message event specifies the receipt by an object of either a call or a signal.</body>
      </ownedComment>
      <generalization xmi:id="_oM20EfWnEdqea89UKW2qFQ" general="_oM20GfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oM20EvWnEdqea89UKW2qFQ" name="AnyReceiveEvent">
      <ownedComment xmi:id="_oM20E_WnEdqea89UKW2qFQ" annotatedElement="_oM20EvWnEdqea89UKW2qFQ">
        <body>A transition trigger associated with an any receive event specifies that the transition is to be triggered by the receipt of any message that is not explicitly referenced in another transition from the same vertex.</body>
      </ownedComment>
      <generalization xmi:id="_oM20FPWnEdqea89UKW2qFQ" general="_oM20D_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iY7sMGvsEdqG6fBIPwe-mw" name="BehavioredClassifier" isAbstract="true">
      <ownedComment xmi:id="_oKBifPWnEdqea89UKW2qFQ" annotatedElement="_iY7sMGvsEdqG6fBIPwe-mw">
        <body>A behaviored classifier may have an interface realization.</body>
      </ownedComment>
      <ownedComment xmi:id="_oIFo1_WnEdqea89UKW2qFQ" annotatedElement="_iY7sMGvsEdqG6fBIPwe-mw">
        <body>A classifier can have behavior specifications defined in its namespace. One of these may specify the behavior of the classifier itself.</body>
      </ownedComment>
      <ownedRule xmi:id="_oIFo2PWnEdqea89UKW2qFQ" name="class_behavior" constrainedElement="_iY7sMGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oIFo2fWnEdqea89UKW2qFQ" annotatedElement="_oIFo2PWnEdqea89UKW2qFQ">
          <body>If a behavior is classifier behavior, it does not have a specification.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIFo2vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.classifierBehavior.notEmpty() implies self.specification.isEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIFo2_WnEdqea89UKW2qFQ" general="_6UV2QGwJEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oIFo3PWnEdqea89UKW2qFQ" name="ownedBehavior" type="_TUPtYGveEdq4DLWZOhbdEA" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oIYjqfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIFo3fWnEdqea89UKW2qFQ" annotatedElement="_oIFo3PWnEdqea89UKW2qFQ">
          <body>References behavior specifications owned by a classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIFo3vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIFo3_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIFo4PWnEdqea89UKW2qFQ" name="classifierBehavior" type="_TUPtYGveEdq4DLWZOhbdEA" subsettedProperty="_oIFo3PWnEdqea89UKW2qFQ" association="_oIYjrvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIFo4fWnEdqea89UKW2qFQ" annotatedElement="_oIFo4PWnEdqea89UKW2qFQ">
          <body>A behavior specification that specifies the behavior of the classifier itself.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIFo4vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIFo4_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKBifvWnEdqea89UKW2qFQ" name="interfaceRealization" type="_l2mXcHLzEdqziYxiZo0YtA" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ _oJunmfWnEdqea89UKW2qFQ" association="_oKKsVfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKBif_WnEdqea89UKW2qFQ" annotatedElement="_oKBifvWnEdqea89UKW2qFQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKBigPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKBigfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oM20FfWnEdqea89UKW2qFQ" name="ownedTrigger" type="_oMtDCvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oNJu4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oM20FvWnEdqea89UKW2qFQ" annotatedElement="_oM20FfWnEdqea89UKW2qFQ">
          <body>References Trigger descriptions owned by a Classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oM20F_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oM20GPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_dx6lQK69EdqjppZik4kD8A" name="getImplementedInterfaces">
        <ownedComment xmi:id="_5-ADEOwfEdqYHf-imTcTdw" annotatedElement="_dx6lQK69EdqjppZik4kD8A">
          <body>Retrieves the interfaces on which this behaviored classifier has an interface realization dependency.</body>
        </ownedComment>
        <ownedParameter xmi:id="_gSQbEK69EdqjppZik4kD8A" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iwNEMa69EdqjppZik4kD8A" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_iwNEMK69EdqjppZik4kD8A"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lbuPQK69EdqjppZik4kD8A" name="getAllImplementedInterfaces">
        <ownedComment xmi:id="_-G81cOwfEdqYHf-imTcTdw" annotatedElement="_lbuPQK69EdqjppZik4kD8A">
          <body>Retrieves all the interfaces on which this behaviored classifier or any of its parents has an interface realization dependency.</body>
        </ownedComment>
        <ownedParameter xmi:id="_lbuPQa69EdqjppZik4kD8A" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lbuPQq69EdqjppZik4kD8A" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lbuPQ669EdqjppZik4kD8A"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oM20GfWnEdqea89UKW2qFQ" name="Event" isAbstract="true">
      <ownedComment xmi:id="_oM20GvWnEdqea89UKW2qFQ" annotatedElement="_oM20GfWnEdqea89UKW2qFQ">
        <body>An event is the specification of some occurrence that may potentially trigger effects by an object.</body>
      </ownedComment>
      <generalization xmi:id="_oM20G_WnEdqea89UKW2qFQ" general="_jKxnwGwLEdq7X4sGURiZYA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_oM_94PWnEdqea89UKW2qFQ" name="CallConcurrencyKind">
      <ownedComment xmi:id="_oM_94fWnEdqea89UKW2qFQ" annotatedElement="_oM_94PWnEdqea89UKW2qFQ">
        <body>CallConcurrencyKind is an enumeration type.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_oM_94vWnEdqea89UKW2qFQ" name="sequential">
        <ownedComment xmi:id="_oM_94_WnEdqea89UKW2qFQ" annotatedElement="_oM_94vWnEdqea89UKW2qFQ">
          <body>No concurrency management mechanism is associated with the operation and, therefore, concurrency conflicts may occur. Instances that invoke a behavioral feature need to coordinate so that only one invocation to a target on any behavioral feature occurs at once.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oM_95PWnEdqea89UKW2qFQ" name="guarded">
        <ownedComment xmi:id="_oM_95fWnEdqea89UKW2qFQ" annotatedElement="_oM_95PWnEdqea89UKW2qFQ">
          <body>Multiple invocations of a behavioral feature may occur simultaneously to one instance, but only one is allowed to commence. The others are blocked until the performance of the first behavioral feature is complete. It is the responsibility of the system designer to ensure that deadlocks do not occur due to simultaneous blocks.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oM_95vWnEdqea89UKW2qFQ" name="concurrent">
        <ownedComment xmi:id="_oM_95_WnEdqea89UKW2qFQ" annotatedElement="_oM_95vWnEdqea89UKW2qFQ">
          <body>Multiple invocations of a behavioral feature may occur simultaneously to one instance and all of them may proceed concurrently.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oM_96PWnEdqea89UKW2qFQ" name="A_reception_signal" memberEnd="_oM2z9vWnEdqea89UKW2qFQ _oM_96fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oM_96fWnEdqea89UKW2qFQ" type="_oM2z8PWnEdqea89UKW2qFQ" association="_oM_96PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oM_96vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oM_96_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oM_97PWnEdqea89UKW2qFQ" name="A_operation_callEvent" memberEnd="_oMtC8_WnEdqea89UKW2qFQ _oM_97fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oM_97fWnEdqea89UKW2qFQ" type="_oMtC8PWnEdqea89UKW2qFQ" association="_oM_97PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oM_97vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oM_97_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oM_98PWnEdqea89UKW2qFQ" name="A_signal_signalEvent" memberEnd="_oM20A_WnEdqea89UKW2qFQ _oM_98fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oM_98fWnEdqea89UKW2qFQ" type="_oM20APWnEdqea89UKW2qFQ" association="_oM_98PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oM_98vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oM_98_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oM_99PWnEdqea89UKW2qFQ" name="A_ownedReception_interface" memberEnd="_oMtDEvWnEdqea89UKW2qFQ _oM_99_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oM_99fWnEdqea89UKW2qFQ" general="_oC3xh_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oM_99vWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oM_99_WnEdqea89UKW2qFQ" type="_8Ugn8GvtEdqG6fBIPwe-mw" association="_oM_99PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oM_9-PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oM_9-fWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oM_9-vWnEdqea89UKW2qFQ" name="A_ownedReception_class" memberEnd="_oMtDBvWnEdqea89UKW2qFQ _oM_9_fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oM_9-_WnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oM_9_PWnEdqea89UKW2qFQ" general="_oC3xh_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oM_9_fWnEdqea89UKW2qFQ" type="_00owUGvdEdq4DLWZOhbdEA" association="_oM_9-vWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oM_9_vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oM_9__WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oM_-A_WnEdqea89UKW2qFQ" name="A_changeExpression_changeEvent" memberEnd="_oMtC-vWnEdqea89UKW2qFQ _oM_-BfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oM_-BPWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oM_-BfWnEdqea89UKW2qFQ" type="_oMtC9_WnEdqea89UKW2qFQ" association="_oM_-A_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oCuAj_WnEdqea89UKW2qFQ" name="A_raisedException_behavioralFeature" memberEnd="_oB0ow_WnEdqea89UKW2qFQ _oCuAkPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oCuAkPWnEdqea89UKW2qFQ" visibility="public" type="_rHT3YKOsEdqi_5gqUMOQtA" association="_oCuAj_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oM_-BvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oM_-B_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oM_-CPWnEdqea89UKW2qFQ" name="A_ownedAttribute_owningSignal" memberEnd="_oM2z_PWnEdqea89UKW2qFQ _oM_-C_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oM_-CfWnEdqea89UKW2qFQ" general="_oCk2nfWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oM_-CvWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oM_-C_WnEdqea89UKW2qFQ" name="owningSignal" type="_Pu3O0HL0EdqziYxiZo0YtA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ _oCk2oPWnEdqea89UKW2qFQ _oAoV0_WnEdqea89UKW2qFQ" association="_oM_-CPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oM_-DPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oM_-DfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oNJu4PWnEdqea89UKW2qFQ" name="A_ownedTrigger_behavioredClassifier" memberEnd="_oM20FfWnEdqea89UKW2qFQ _oNJu4vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oNJu4fWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oNJu4vWnEdqea89UKW2qFQ" type="_iY7sMGvsEdqG6fBIPwe-mw" association="_oNJu4PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNJu4_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNJu5PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oNJu5fWnEdqea89UKW2qFQ" name="A_event_trigger" memberEnd="_oMtDDfWnEdqea89UKW2qFQ _oNJu5vWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oNJu5vWnEdqea89UKW2qFQ" type="_oMtDCvWnEdqea89UKW2qFQ" association="_oNJu5fWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oNJu5_WnEdqea89UKW2qFQ" name="ForkNode">
      <ownedComment xmi:id="_oNJu6PWnEdqea89UKW2qFQ" annotatedElement="_oNJu5_WnEdqea89UKW2qFQ">
        <body>A fork node is a control node that splits a flow into multiple concurrent flows.</body>
      </ownedComment>
      <ownedRule xmi:id="_oNJu6fWnEdqea89UKW2qFQ" name="one_incoming_edge" constrainedElement="_oNJu5_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNJu6vWnEdqea89UKW2qFQ" annotatedElement="_oNJu6fWnEdqea89UKW2qFQ">
          <body>A fork node has one incoming edge.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNJu6_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNJu7PWnEdqea89UKW2qFQ" name="edges" constrainedElement="_oNJu5_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNJu7fWnEdqea89UKW2qFQ" annotatedElement="_oNJu7PWnEdqea89UKW2qFQ">
          <body>The edges coming into and out of a fork node must be either all object flows or all control flows.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNJu7vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oNJu7_WnEdqea89UKW2qFQ" general="_oKxJYvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oNJu8PWnEdqea89UKW2qFQ" name="FlowFinalNode">
      <ownedComment xmi:id="_oNJu8fWnEdqea89UKW2qFQ" annotatedElement="_oNJu8PWnEdqea89UKW2qFQ">
        <body>A flow final node is a final node that terminates a flow.</body>
      </ownedComment>
      <generalization xmi:id="_oNJu8vWnEdqea89UKW2qFQ" general="_oNcp6fWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oNJu8_WnEdqea89UKW2qFQ" name="CentralBufferNode">
      <ownedComment xmi:id="_oNJu9PWnEdqea89UKW2qFQ" annotatedElement="_oNJu8_WnEdqea89UKW2qFQ">
        <body>A central buffer node is an object node for managing flows from multiple sources and destinations.</body>
      </ownedComment>
      <generalization xmi:id="_oNJu9fWnEdqea89UKW2qFQ" general="_oKxJWPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oNTf4PWnEdqea89UKW2qFQ" name="ActivityPartition">
      <ownedComment xmi:id="_oNTf4fWnEdqea89UKW2qFQ" annotatedElement="_oNTf4PWnEdqea89UKW2qFQ">
        <body>An activity partition is a kind of activity group for identifying actions that have some characteristic in common.</body>
      </ownedComment>
      <ownedRule xmi:id="_oNTf4vWnEdqea89UKW2qFQ" name="dimension_not_contained" constrainedElement="_oNTf4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTf4_WnEdqea89UKW2qFQ" annotatedElement="_oNTf4vWnEdqea89UKW2qFQ">
          <body>A partition with isDimension = true may not be contained by another partition.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNTf5PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNTf5fWnEdqea89UKW2qFQ" name="represents_part" constrainedElement="_oNTf4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTf5vWnEdqea89UKW2qFQ" annotatedElement="_oNTf5fWnEdqea89UKW2qFQ">
          <body>If a partition represents a part, then all the non-external partitions in the same dimension and at the same level of nesting in that dimension must represent parts directly contained in the internal structure of the same classifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNTf5_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNTf6PWnEdqea89UKW2qFQ" name="represents_classifier" constrainedElement="_oNTf4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTf6fWnEdqea89UKW2qFQ" annotatedElement="_oNTf6PWnEdqea89UKW2qFQ">
          <body>If a non-external partition represents a classifier and is contained in another partition, then the containing partition must represent a classifier, and the classifier of the subpartition must be nested in the classifier represented by the containing partition, or be at the contained end of a strong composition association with the classifier represented by the containing partition.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNTf6vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNTf6_WnEdqea89UKW2qFQ" name="represents_part_and_is_contained" constrainedElement="_oNTf4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTf7PWnEdqea89UKW2qFQ" annotatedElement="_oNTf6_WnEdqea89UKW2qFQ">
          <body>If a partition represents a part and is contained by another partition, then the part must be of a classifier represented by the containing partition, or of a classifier that is the type of a part representing the containing partition.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNTf7fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oNTf7vWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <generalization xmi:id="_oNTf7_WnEdqea89UKW2qFQ" general="_oI-ZjvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oNTf8PWnEdqea89UKW2qFQ" name="isDimension" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oNTf8fWnEdqea89UKW2qFQ" annotatedElement="_oNTf8PWnEdqea89UKW2qFQ">
          <body>Tells whether the partition groups other partitions along a dimension.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oNTf8vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNTf8_WnEdqea89UKW2qFQ" name="isExternal" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oNTf9PWnEdqea89UKW2qFQ" annotatedElement="_oNTf8_WnEdqea89UKW2qFQ">
          <body>Tells whether the partition represents an entity to which the partitioning structure does not apply.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oNTf9fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNTf9vWnEdqea89UKW2qFQ" name="edge" type="_oKxJZfWnEdqea89UKW2qFQ" subsettedProperty="_oK66Z_WnEdqea89UKW2qFQ" association="_oNma0vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTf9_WnEdqea89UKW2qFQ" annotatedElement="_oNTf9vWnEdqea89UKW2qFQ">
          <body>Edges immediately contained in the group.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNTf-PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNTf-fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNTf-vWnEdqea89UKW2qFQ" name="node" type="_oI-Zo_WnEdqea89UKW2qFQ" subsettedProperty="_oI-ZkfWnEdqea89UKW2qFQ" association="_oNma1PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTf-_WnEdqea89UKW2qFQ" annotatedElement="_oNTf-vWnEdqea89UKW2qFQ">
          <body>Nodes immediately contained in the group.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNTf_PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNTf_fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNTf_vWnEdqea89UKW2qFQ" name="subpartition" type="_oNTf4PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oI-ZmfWnEdqea89UKW2qFQ" association="_oNma1vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTf__WnEdqea89UKW2qFQ" annotatedElement="_oNTf_vWnEdqea89UKW2qFQ">
          <body>Partitions immediately contained in the partition. Specialized from Activity-Group::subgroup.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNTgAPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNTgAfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNTgAvWnEdqea89UKW2qFQ" name="superPartition" type="_oNTf4PWnEdqea89UKW2qFQ" subsettedProperty="_oI-ZnfWnEdqea89UKW2qFQ" association="_oNma1vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTgA_WnEdqea89UKW2qFQ" annotatedElement="_oNTgAvWnEdqea89UKW2qFQ">
          <body>Partition immediately containing the partition.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNTgBPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNTgBfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNTgBvWnEdqea89UKW2qFQ" name="represents" type="_kl90MGvbEdq4DLWZOhbdEA" association="_oNma2PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTgB_WnEdqea89UKW2qFQ" annotatedElement="_oNTgBvWnEdqea89UKW2qFQ">
          <body>An element constraining behaviors invoked by nodes in the partition.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNTgCPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNTgCfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oNcp0PWnEdqea89UKW2qFQ" name="MergeNode">
      <ownedComment xmi:id="_oNcp0fWnEdqea89UKW2qFQ" annotatedElement="_oNcp0PWnEdqea89UKW2qFQ">
        <body>A merge node is a control node that brings together multiple alternate flows. It is not used to synchronize concurrent flows but to accept one among several alternate flows.</body>
      </ownedComment>
      <ownedRule xmi:id="_oNcp0vWnEdqea89UKW2qFQ" name="one_outgoing_edge" constrainedElement="_oNcp0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNcp0_WnEdqea89UKW2qFQ" annotatedElement="_oNcp0vWnEdqea89UKW2qFQ">
          <body>A merge node has one outgoing edge.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNcp1PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNcp1fWnEdqea89UKW2qFQ" name="edges" constrainedElement="_oNcp0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNcp1vWnEdqea89UKW2qFQ" annotatedElement="_oNcp1fWnEdqea89UKW2qFQ">
          <body>The edges coming into and out of a merge node must be either all object flows or all control flows.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNcp1_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oNcp2PWnEdqea89UKW2qFQ" general="_oKxJYvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oNcp2fWnEdqea89UKW2qFQ" name="DecisionNode">
      <ownedComment xmi:id="_oNcp2vWnEdqea89UKW2qFQ" annotatedElement="_oNcp2fWnEdqea89UKW2qFQ">
        <body>A decision node is a control node that chooses between outgoing flows.</body>
      </ownedComment>
      <ownedRule xmi:id="_oNcp2_WnEdqea89UKW2qFQ" name="one_incoming_edge" constrainedElement="_oNcp2fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNcp3PWnEdqea89UKW2qFQ" annotatedElement="_oNcp2_WnEdqea89UKW2qFQ">
          <body>A decision node has one incoming edge.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNcp3fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNcp3vWnEdqea89UKW2qFQ" name="input_parameter" constrainedElement="_oNcp2fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNcp3_WnEdqea89UKW2qFQ" annotatedElement="_oNcp3vWnEdqea89UKW2qFQ">
          <body>A decision input behavior has zero or one input parameter and one output parameter. Any input parameter must be the same as or a supertype of the type of object tokens coming along the incoming edge. The behavior cannot have side effects.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNcp4PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNcp4fWnEdqea89UKW2qFQ" name="edges" constrainedElement="_oNcp2fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNcp4vWnEdqea89UKW2qFQ" annotatedElement="_oNcp4fWnEdqea89UKW2qFQ">
          <body>The edges coming into and out of a decision node must be either all object flows or all control flows.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNcp4_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oNcp5PWnEdqea89UKW2qFQ" general="_oKxJYvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oNcp5fWnEdqea89UKW2qFQ" name="decisionInput" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oNma3_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNcp5vWnEdqea89UKW2qFQ" annotatedElement="_oNcp5fWnEdqea89UKW2qFQ">
          <body>Provides input to guard specifications on edges outgoing from the decision node.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNcp5_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNcp6PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oNcp6fWnEdqea89UKW2qFQ" name="FinalNode" isAbstract="true">
      <ownedComment xmi:id="_oNcp6vWnEdqea89UKW2qFQ" annotatedElement="_oNcp6fWnEdqea89UKW2qFQ">
        <body>A final node is an abstract control node at which a flow in an activity stops.</body>
      </ownedComment>
      <ownedRule xmi:id="_oNcp6_WnEdqea89UKW2qFQ" name="no_outgoing_edges" constrainedElement="_oNcp6fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNcp7PWnEdqea89UKW2qFQ" annotatedElement="_oNcp6_WnEdqea89UKW2qFQ">
          <body>A final node has no outgoing edges.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNcp7fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oNcp7vWnEdqea89UKW2qFQ" general="_oKxJYvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oK66W_WnEdqea89UKW2qFQ" name="ActivityFinalNode">
      <ownedComment xmi:id="_oK66XPWnEdqea89UKW2qFQ" annotatedElement="_oK66W_WnEdqea89UKW2qFQ">
        <body>An activity final node is a final node that stops all flows in an activity.</body>
      </ownedComment>
      <generalization xmi:id="_oNcp7_WnEdqea89UKW2qFQ" general="_oNcp6fWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oNma0vWnEdqea89UKW2qFQ" name="A_edge_inPartition" memberEnd="_oNTgCvWnEdqea89UKW2qFQ _oNTf9vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oNma0_WnEdqea89UKW2qFQ" general="_oLEEUvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oNma1PWnEdqea89UKW2qFQ" name="A_inPartition_node" memberEnd="_oNTgFfWnEdqea89UKW2qFQ _oNTf-vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oNma1fWnEdqea89UKW2qFQ" general="_oI-ZsPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oNma1vWnEdqea89UKW2qFQ" name="A_subpartition_superPartition" memberEnd="_oNTf_vWnEdqea89UKW2qFQ _oNTgAvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oNma1_WnEdqea89UKW2qFQ" general="_oI-Zs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oNma2PWnEdqea89UKW2qFQ" name="A_represents_activityPartition" memberEnd="_oNTgBvWnEdqea89UKW2qFQ _oNma2fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oNma2fWnEdqea89UKW2qFQ" type="_oNTf4PWnEdqea89UKW2qFQ" association="_oNma2PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNma2vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNma2_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oNma3PWnEdqea89UKW2qFQ" name="A_activityEdge_guard" memberEnd="_oNTgDvWnEdqea89UKW2qFQ _oNma3vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oNma3fWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oNma3vWnEdqea89UKW2qFQ" type="_oKxJZfWnEdqea89UKW2qFQ" association="_oNma3PWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oNma3_WnEdqea89UKW2qFQ" name="A_decisionInput_decisionNode" memberEnd="_oNcp5fWnEdqea89UKW2qFQ _oNma4PWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oNma4PWnEdqea89UKW2qFQ" type="_oNcp2fWnEdqea89UKW2qFQ" association="_oNma3_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNma4fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNma4vWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oNma4_WnEdqea89UKW2qFQ" name="A_partition_activity" memberEnd="_oNcp9_WnEdqea89UKW2qFQ _oNma5fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oNma5PWnEdqea89UKW2qFQ" general="_oI-ZsfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oNma5fWnEdqea89UKW2qFQ" type="_oI-ZgPWnEdqea89UKW2qFQ" association="_oNma4_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNma5vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNma5_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI-ZsfWnEdqea89UKW2qFQ" name="A_group_inActivity" memberEnd="_oI-ZivWnEdqea89UKW2qFQ _oI-ZlfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oI-ZsvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oNvk4PWnEdqea89UKW2qFQ" name="EncapsulatedClassifier" isAbstract="true">
      <ownedComment xmi:id="_oNvk4fWnEdqea89UKW2qFQ" annotatedElement="_oNvk4PWnEdqea89UKW2qFQ">
        <body>A classifier has the ability to own ports as specific and type checked interaction points.</body>
      </ownedComment>
      <generalization xmi:id="_oNvk4vWnEdqea89UKW2qFQ" general="_FQiVsGwYEdqHKKVoxc0dlA"/>
      <ownedAttribute xmi:id="_oNvk4_WnEdqea89UKW2qFQ" name="ownedPort" type="_ZAuvEGveEdq4DLWZOhbdEA" isDerived="true" aggregation="composite" subsettedProperty="_oKUdVfWnEdqea89UKW2qFQ" association="_oNvk9PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNvk5PWnEdqea89UKW2qFQ" annotatedElement="_oNvk4_WnEdqea89UKW2qFQ">
          <body>References a set of ports that an encapsulated classifier owns.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNvk5fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNvk5vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aOgw0GveEdq4DLWZOhbdEA" name="ConnectorEnd">
      <ownedComment xmi:id="_oKKsY_WnEdqea89UKW2qFQ" annotatedElement="_aOgw0GveEdq4DLWZOhbdEA">
        <body>A connector end is an endpoint of a connector, which attaches the connector to a connectable element. Each connector end is part of one connector.</body>
      </ownedComment>
      <ownedRule xmi:id="_oKKsZPWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_aOgw0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oKKsZfWnEdqea89UKW2qFQ" annotatedElement="_oKKsZPWnEdqea89UKW2qFQ">
          <body>The multiplicity of the connector end may not be more general than the multiplicity of the association typing the owning connector.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKKsZvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNvk5_WnEdqea89UKW2qFQ" name="part_with_port_empty" constrainedElement="_aOgw0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oNvk6PWnEdqea89UKW2qFQ" annotatedElement="_oNvk5_WnEdqea89UKW2qFQ">
          <body>If a connector end is attached to a port of the containing classifier, partWithPort will be empty.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNvk6fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNvk6vWnEdqea89UKW2qFQ" name="role_and_part_with_port" constrainedElement="_aOgw0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oNvk6_WnEdqea89UKW2qFQ" annotatedElement="_oNvk6vWnEdqea89UKW2qFQ">
          <body>If a connector end references both a role and a partWithPort, then the role must be a port that is defined by the type of the partWithPort.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNvk7PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNvk7fWnEdqea89UKW2qFQ" name="self_part_with_port" constrainedElement="_aOgw0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oNvk7vWnEdqea89UKW2qFQ" annotatedElement="_oNvk7fWnEdqea89UKW2qFQ">
          <body>The property held in self.partWithPort must not be a Port.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNvk7_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oKKsZ_WnEdqea89UKW2qFQ" general="_Gjgl0GveEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oKKsaPWnEdqea89UKW2qFQ" name="definingEnd" type="_Jp_1oGveEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" association="_oKeOcfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKKsafWnEdqea89UKW2qFQ" annotatedElement="_oKKsaPWnEdqea89UKW2qFQ">
          <body>A derived association referencing the corresponding association end on the association which types the connector owing this connector end. This association is derived by selecting the association end at the same place in the ordering of association ends as this connector end.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKKsavWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKKsa_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKKsbPWnEdqea89UKW2qFQ" name="role" type="_oKUdZfWnEdqea89UKW2qFQ" association="_oKeOdfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKKsbfWnEdqea89UKW2qFQ" annotatedElement="_oKKsbPWnEdqea89UKW2qFQ">
          <body>The connectable element attached at this connector end. When an instance of the containing classifier is created, a link may (depending on the multiplicities) be created to an instance of the classifier that types this connectable element.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKKsbvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKKsb_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNvk8PWnEdqea89UKW2qFQ" name="partWithPort" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_oN5VzfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNvk8fWnEdqea89UKW2qFQ" annotatedElement="_oNvk8PWnEdqea89UKW2qFQ">
          <body>Indicates the role of the internal structure of a classifier with the port to which the connector end is attached.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNvk8vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNvk8_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_QT7XMFYKEdqrn7iZ0eqieg" name="getDefiningEnd" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_VkstQFYKEdqrn7iZ0eqieg" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oNvk9PWnEdqea89UKW2qFQ" name="A_encapsulatedClassifier_ownedPort" memberEnd="_oNvk4_WnEdqea89UKW2qFQ _oNvk9_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oNvk9vWnEdqea89UKW2qFQ" general="_oKeOUPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oNvk9_WnEdqea89UKW2qFQ" type="_oNvk4PWnEdqea89UKW2qFQ" redefinedProperty="_oKeOVPWnEdqea89UKW2qFQ" subsettedProperty="_oA733_WnEdqea89UKW2qFQ" association="_oNvk9PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNvk-PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNvk-fWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oN5VwPWnEdqea89UKW2qFQ" name="A_required_port" memberEnd="_oNvk1PWnEdqea89UKW2qFQ _oN5VwfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oN5VwfWnEdqea89UKW2qFQ" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_oN5VwPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oN5VwvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oN5Vw_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oN5VxPWnEdqea89UKW2qFQ" name="A_redefinedPort_port" memberEnd="_oNvk2PWnEdqea89UKW2qFQ _oN5VxvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oN5VxfWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oN5VxvWnEdqea89UKW2qFQ" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_oN5VxPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oN5Vx_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oN5VyPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oN5VyfWnEdqea89UKW2qFQ" name="A_provided_port" memberEnd="_oNvk3PWnEdqea89UKW2qFQ _oN5VyvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oN5VyvWnEdqea89UKW2qFQ" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_oN5VyfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oN5Vy_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oN5VzPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oN5VzfWnEdqea89UKW2qFQ" name="A_partWithPort_connectorEnd" memberEnd="_oNvk8PWnEdqea89UKW2qFQ _oN5VzvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oN5VzvWnEdqea89UKW2qFQ" type="_aOgw0GveEdq4DLWZOhbdEA" association="_oN5VzfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oODGzPWnEdqea89UKW2qFQ" name="ComponentRealization">
      <ownedComment xmi:id="_oODGzfWnEdqea89UKW2qFQ" annotatedElement="_oODGzPWnEdqea89UKW2qFQ">
        <body>The realization concept is specialized to (optionally) define the classifiers that realize the contract offered by a component in terms of its provided and required interfaces. The component forms an abstraction from these various classifiers.</body>
      </ownedComment>
      <generalization xmi:id="_oODGzvWnEdqea89UKW2qFQ" general="_oJunhvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oODGz_WnEdqea89UKW2qFQ" name="abstraction" type="_DAbfwa69EdqjppZik4kD8A" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ _oJungvWnEdqea89UKW2qFQ" association="_oOMQtPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oODG0PWnEdqea89UKW2qFQ" annotatedElement="_oODGz_WnEdqea89UKW2qFQ">
          <body>The Component that owns this ComponentRealization and which is implemented by its realizing classifiers.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oODG0fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oODG0vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oODG0_WnEdqea89UKW2qFQ" name="realizingClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_oJunfvWnEdqea89UKW2qFQ" association="_oOMQt_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oODG1PWnEdqea89UKW2qFQ" annotatedElement="_oODG0_WnEdqea89UKW2qFQ">
          <body>A classifier that is involved in the implementation of the Component that owns this ComponentRealization.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oODG1fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oODG1vWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oKKscPWnEdqea89UKW2qFQ" name="Connector">
      <ownedComment xmi:id="_oKKscfWnEdqea89UKW2qFQ" annotatedElement="_oKKscPWnEdqea89UKW2qFQ">
        <body>Specifies a link that enables communication between two or more instances. This link may be an instance of an association, or it may represent the possibility of the instances being able to communicate because their identities are known by virtue of being passed in as parameters, held in variables or slots, or because the communicating instances are the same instance. The link may be realized by something as simple as a pointer or by something as complex as a network connection. In contrast to associations, which specify links between any instance of the associated classifiers, connectors specify links between instances playing the connected parts only.</body>
      </ownedComment>
      <ownedComment xmi:id="_oODG1_WnEdqea89UKW2qFQ" annotatedElement="_oKKscPWnEdqea89UKW2qFQ">
        <body>A delegation connector is a connector that links the external contract of a component (as specified by its ports) to the internal realization of that behavior by the component’s parts. It represents the forwarding of signals (operation requests and events): a signal that arrives at a port that has a delegation connector to a part or to another port will be passed on to that target for handling.&#xD;
An assembly connector is a connector between two components that defines that one component provides the services that another component requires. An assembly connector is a connector that is defined from a required interface or port to a provided interface or port.</body>
      </ownedComment>
      <ownedRule xmi:id="_oKKscvWnEdqea89UKW2qFQ" name="types" constrainedElement="_oKKscPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKKsc_WnEdqea89UKW2qFQ" annotatedElement="_oKKscvWnEdqea89UKW2qFQ">
          <body>The types of the connectable elements that the ends of a connector are attached to must conform to the types of the association ends of the association that types the connector, if any.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKKsdPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oKKsdfWnEdqea89UKW2qFQ" name="compatible" constrainedElement="_oKKscPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKKsdvWnEdqea89UKW2qFQ" annotatedElement="_oKKsdfWnEdqea89UKW2qFQ">
          <body>The connectable elements attached to the ends of a connector must be compatible.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKKsd_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oKKsePWnEdqea89UKW2qFQ" name="roles" constrainedElement="_oKKscPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKKsefWnEdqea89UKW2qFQ" annotatedElement="_oKKsePWnEdqea89UKW2qFQ">
          <body>The ConnectableElements attached as roles to each ConnectorEnd owned by a Connector must be roles of the Classifier that owned the Connector, or they must be ports of such roles.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKKsevWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oODG2PWnEdqea89UKW2qFQ" name="between_interfaces_ports" constrainedElement="_oKKscPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oODG2fWnEdqea89UKW2qFQ" annotatedElement="_oODG2PWnEdqea89UKW2qFQ">
          <body>A delegation connector must only be defined between used Interfaces or Ports of the same kind, e.g. between two provided Ports or between two required Ports.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oODG2vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oODG2_WnEdqea89UKW2qFQ" name="between_interface_port_implements" constrainedElement="_oKKscPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oODG3PWnEdqea89UKW2qFQ" annotatedElement="_oODG2_WnEdqea89UKW2qFQ">
          <body>If a delegation connector is defined between a used Interface or Port and an internal Part Classifier, then that Classifier must have an 'implements' relationship to the Interface type of that Port.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oODG3fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oODG3vWnEdqea89UKW2qFQ" name="between_interface_port_signature" constrainedElement="_oKKscPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oODG3_WnEdqea89UKW2qFQ" annotatedElement="_oODG3vWnEdqea89UKW2qFQ">
          <body>If a delegation connector is defined between a source Interface or Port and a target Interface or Port, then the target Interface must support a signature compatible subset of Operations of the source Interface or Port.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oODG4PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oODG4fWnEdqea89UKW2qFQ" name="union_signature_compatible" constrainedElement="_oKKscPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oODG4vWnEdqea89UKW2qFQ" annotatedElement="_oODG4fWnEdqea89UKW2qFQ">
          <body>In a complete model, if a source Port has delegation connectors to a set of delegated target Ports, then the union of the Interfaces of these target Ports must be signature compatible with the Interface that types the source Port.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oODG4_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oODG5PWnEdqea89UKW2qFQ" name="assembly_connector" constrainedElement="_oKKscPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oODG5fWnEdqea89UKW2qFQ" annotatedElement="_oODG5PWnEdqea89UKW2qFQ">
          <body>An assembly connector must only be defined from a required Interface or Ports to a provided Interface or Port.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oODG5vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oKKse_WnEdqea89UKW2qFQ" general="_oAoV0PWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oKKsfPWnEdqea89UKW2qFQ" name="type" type="_AwvxoGwNEdq7X4sGURiZYA" association="_oKUdb_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKKsffWnEdqea89UKW2qFQ" annotatedElement="_oKKsfPWnEdqea89UKW2qFQ">
          <body>An optional association that specifies the link corresponding to this connector.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKKsfvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKKsf_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKKsgPWnEdqea89UKW2qFQ" name="redefinedConnector" type="_oKKscPWnEdqea89UKW2qFQ" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oKeOZ_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKKsgfWnEdqea89UKW2qFQ" annotatedElement="_oKKsgPWnEdqea89UKW2qFQ">
          <body>A connector may be redefined when its containing classifier is specialized. The redefining connector may have a type that specializes the type of the redefined connector.&#xD;
The types of the connector ends of the redefining connector may specialize the types of the connector ends of the redefined connector. The properties of the connector ends of the redefining connector may be replaced.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKKsgvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKKsg_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKKshPWnEdqea89UKW2qFQ" name="end" type="_aOgw0GveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oKeObPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKKshfWnEdqea89UKW2qFQ" annotatedElement="_oKKshPWnEdqea89UKW2qFQ">
          <body>A connector consists of at least two connector ends, each representing the participation of instances of the classifiers typing the connectable elements attached to this end. The set of connector ends is ordered.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKKshvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKKsh_WnEdqea89UKW2qFQ" value="2"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oODG5_WnEdqea89UKW2qFQ" name="kind" type="_oODG7_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oODG6PWnEdqea89UKW2qFQ" annotatedElement="_oODG5_WnEdqea89UKW2qFQ">
          <body>Indicates the kind of connector.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oODG6fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oODG6vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oODG6_WnEdqea89UKW2qFQ" name="contract" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oOMQuvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oODG7PWnEdqea89UKW2qFQ" annotatedElement="_oODG6_WnEdqea89UKW2qFQ">
          <body>The set of Behaviors that specify the valid interaction patterns across the connector.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oODG7fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oODG7vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_oODG7_WnEdqea89UKW2qFQ" name="ConnectorKind">
      <ownedComment xmi:id="_oODG8PWnEdqea89UKW2qFQ" annotatedElement="_oODG7_WnEdqea89UKW2qFQ">
        <body>ConnectorKind is an enumeration type.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_oODG8fWnEdqea89UKW2qFQ" name="assembly">
        <ownedComment xmi:id="_oODG8vWnEdqea89UKW2qFQ" annotatedElement="_oODG8fWnEdqea89UKW2qFQ">
          <body>Indicates that the connector is an assembly connector.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oODG8_WnEdqea89UKW2qFQ" name="delegation">
        <ownedComment xmi:id="_oODG9PWnEdqea89UKW2qFQ" annotatedElement="_oODG8_WnEdqea89UKW2qFQ">
          <body>Indicates that the connector is a delegation connector.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOMQsPWnEdqea89UKW2qFQ" name="A_required_component" memberEnd="_oN5V2vWnEdqea89UKW2qFQ _oOMQsfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oOMQsfWnEdqea89UKW2qFQ" type="_DAbfwa69EdqjppZik4kD8A" association="_oOMQsPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOMQsvWnEdqea89UKW2qFQ" name="A_provided_component" memberEnd="_oN5V3vWnEdqea89UKW2qFQ _oOMQs_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oOMQs_WnEdqea89UKW2qFQ" type="_DAbfwa69EdqjppZik4kD8A" association="_oOMQsvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOMQtPWnEdqea89UKW2qFQ" name="A_realization_abstraction" memberEnd="_oN5V4vWnEdqea89UKW2qFQ _oODGz_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oOMQtfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oOMQtvWnEdqea89UKW2qFQ" general="_oJ3xdfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOMQt_WnEdqea89UKW2qFQ" name="A_realizingClassifier_componentRealization" memberEnd="_oODG0_WnEdqea89UKW2qFQ _oOMQufWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oOMQuPWnEdqea89UKW2qFQ" general="_oJ3xb_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oOMQufWnEdqea89UKW2qFQ" type="_oODGzPWnEdqea89UKW2qFQ" redefinedProperty="_oC3xgvWnEdqea89UKW2qFQ" association="_oOMQt_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOMQuvWnEdqea89UKW2qFQ" name="A_contract_connector" memberEnd="_oODG6_WnEdqea89UKW2qFQ _oOMQu_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oOMQu_WnEdqea89UKW2qFQ" type="_oKKscPWnEdqea89UKW2qFQ" association="_oOMQuvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOMQvPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOMQvfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oOMQ2vWnEdqea89UKW2qFQ" name="Manifestation">
      <ownedComment xmi:id="_oOMQ2_WnEdqea89UKW2qFQ" annotatedElement="_oOMQ2vWnEdqea89UKW2qFQ">
        <body>A manifestation is the concrete physical rendering of one or more model elements by an artifact.</body>
      </ownedComment>
      <generalization xmi:id="_oOMQ3PWnEdqea89UKW2qFQ" general="_oJundPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oOMQ3fWnEdqea89UKW2qFQ" name="utilizedElement" type="_jKxnwGwLEdq7X4sGURiZYA" subsettedProperty="_oJunfvWnEdqea89UKW2qFQ" association="_oOWBsPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOMQ3vWnEdqea89UKW2qFQ" annotatedElement="_oOMQ3fWnEdqea89UKW2qFQ">
          <body>The model element that is utilized in the manifestation in an Artifact.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOMQ3_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOMQ4PWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOWBsPWnEdqea89UKW2qFQ" name="A_utilizedElement_manifestation" memberEnd="_oOMQ3fWnEdqea89UKW2qFQ _oOWBsvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oOWBsfWnEdqea89UKW2qFQ" general="_oJ3xb_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oOWBsvWnEdqea89UKW2qFQ" type="_oOMQ2vWnEdqea89UKW2qFQ" association="_oOWBsPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOWBs_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOWBtPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOWBtfWnEdqea89UKW2qFQ" name="A_nestedArtifact_artifact" memberEnd="_oOMQyvWnEdqea89UKW2qFQ _oOWBt_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oOWBtvWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oOWBt_WnEdqea89UKW2qFQ" type="_-lGRgHLzEdqziYxiZo0YtA" redefinedProperty="_oC3xlvWnEdqea89UKW2qFQ" association="_oOWBtfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOWBuPWnEdqea89UKW2qFQ" name="A_manifestation_artifact" memberEnd="_oOMQzvWnEdqea89UKW2qFQ _oOWBu_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oOWBufWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oOWBuvWnEdqea89UKW2qFQ" general="_oJ3xdfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oOWBu_WnEdqea89UKW2qFQ" type="_-lGRgHLzEdqziYxiZo0YtA" association="_oOWBuPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOWBvPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOWBvfWnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOWBvvWnEdqea89UKW2qFQ" name="A_ownedOperation_artifact" memberEnd="_oOMQ0vWnEdqea89UKW2qFQ _oOWBwvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oOWBv_WnEdqea89UKW2qFQ" general="_oC3xh_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oOWBwPWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oOWBwfWnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oOWBwvWnEdqea89UKW2qFQ" type="_-lGRgHLzEdqziYxiZo0YtA" subsettedProperty="_oA733_WnEdqea89UKW2qFQ _oCRUo_WnEdqea89UKW2qFQ _oAoV0_WnEdqea89UKW2qFQ" association="_oOWBvvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOWBw_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOWBxPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOWBxfWnEdqea89UKW2qFQ" name="A_ownedAttribute_artifact" memberEnd="_oOMQ1vWnEdqea89UKW2qFQ _oOWByPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oOWBxvWnEdqea89UKW2qFQ" general="_oCk2nfWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oOWBx_WnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oOWByPWnEdqea89UKW2qFQ" type="_-lGRgHLzEdqziYxiZo0YtA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ _oAoV0_WnEdqea89UKW2qFQ _oCk2oPWnEdqea89UKW2qFQ" association="_oOWBxfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOWByfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOWByvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oOWB1_WnEdqea89UKW2qFQ" name="Node">
      <ownedComment xmi:id="_oOWB2PWnEdqea89UKW2qFQ" annotatedElement="_oOWB1_WnEdqea89UKW2qFQ">
        <body>A node is computational resource upon which artifacts may be deployed for execution.&#xD;
Nodes can be interconnected through communication paths to define network structures.</body>
      </ownedComment>
      <ownedRule xmi:id="_oOWB2fWnEdqea89UKW2qFQ" name="internal_structure" constrainedElement="_oOWB1_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOWB2vWnEdqea89UKW2qFQ" annotatedElement="_oOWB2fWnEdqea89UKW2qFQ">
          <body>The internal structure of a Node (if defined) consists solely of parts of type Node.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOWB2_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oOWB3PWnEdqea89UKW2qFQ" general="_00owUGvdEdq4DLWZOhbdEA"/>
      <generalization xmi:id="_oOWB3fWnEdqea89UKW2qFQ" general="_oOfytvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oOWB3vWnEdqea89UKW2qFQ" name="nestedNode" type="_oOWB1_WnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oOo8rPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOWB3_WnEdqea89UKW2qFQ" annotatedElement="_oOWB3vWnEdqea89UKW2qFQ">
          <body>The Nodes that are defined (nested) within the Node.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOWB4PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOWB4fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oOfysPWnEdqea89UKW2qFQ" name="Device">
      <ownedComment xmi:id="_oOfysfWnEdqea89UKW2qFQ" annotatedElement="_oOfysPWnEdqea89UKW2qFQ">
        <body>A device is a physical computational resource with processing capability upon which artifacts may be deployed for execution. Devices may be complex (i.e., they may consist of other devices).</body>
      </ownedComment>
      <generalization xmi:id="_oOfysvWnEdqea89UKW2qFQ" general="_oOWB1_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oOfys_WnEdqea89UKW2qFQ" name="ExecutionEnvironment">
      <ownedComment xmi:id="_oOfytPWnEdqea89UKW2qFQ" annotatedElement="_oOfys_WnEdqea89UKW2qFQ">
        <body>An execution environment is a node that offers an execution environment for specific types of components that are deployed on it in the form of executable artifacts.</body>
      </ownedComment>
      <generalization xmi:id="_oOfytfWnEdqea89UKW2qFQ" general="_oOWB1_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oOfytvWnEdqea89UKW2qFQ" name="DeploymentTarget" isAbstract="true">
      <ownedComment xmi:id="_oOfyt_WnEdqea89UKW2qFQ" annotatedElement="_oOfytvWnEdqea89UKW2qFQ">
        <body>A deployment target is the location for a deployed artifact.</body>
      </ownedComment>
      <generalization xmi:id="_oOfyuPWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oOfyufWnEdqea89UKW2qFQ" name="deployment" type="_oOWBzPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ _oJunmfWnEdqea89UKW2qFQ" association="_oOo8qfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOfyuvWnEdqea89UKW2qFQ" annotatedElement="_oOfyufWnEdqea89UKW2qFQ">
          <body>The set of Deployments for a DeploymentTarget.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOfyu_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOfyvPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oOfyvfWnEdqea89UKW2qFQ" name="deployedElement" type="_jKxnwGwLEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" association="_oOo8r_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOfyvvWnEdqea89UKW2qFQ" annotatedElement="_oOfyvfWnEdqea89UKW2qFQ">
          <body>The set of elements that are manifested in an Artifact that is involved in Deployment to a DeploymentTarget.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOfyv_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOfywPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oOfywfWnEdqea89UKW2qFQ" name="deployedElement" isQuery="true" bodyCondition="_oOfywvWnEdqea89UKW2qFQ">
        <ownedRule xmi:id="_oOfywvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oOfywfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOfyw_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = ((self.deployment->collect(deployedArtifact))->collect(manifestation))->collect(utilizedElement)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oOfyxPWnEdqea89UKW2qFQ" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOfyxfWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOfyxvWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oOfyx_WnEdqea89UKW2qFQ" name="DeployedArtifact" isAbstract="true">
      <ownedComment xmi:id="_oOfyyPWnEdqea89UKW2qFQ" annotatedElement="_oOfyx_WnEdqea89UKW2qFQ">
        <body>A deployed artifact is an artifact or artifact instance that has been deployed to a deployment target.</body>
      </ownedComment>
      <generalization xmi:id="_oOfyyfWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oOfyyvWnEdqea89UKW2qFQ" name="CommunicationPath">
      <ownedComment xmi:id="_oOfyy_WnEdqea89UKW2qFQ" annotatedElement="_oOfyyvWnEdqea89UKW2qFQ">
        <body>A communication path is an association between two deployment targets, through which they are able to exchange signals and messages.</body>
      </ownedComment>
      <ownedRule xmi:id="_oOfyzPWnEdqea89UKW2qFQ" name="association_ends" constrainedElement="_oOfyyvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOfyzfWnEdqea89UKW2qFQ" annotatedElement="_oOfyzPWnEdqea89UKW2qFQ">
          <body>The association ends of a CommunicationPath are typed by DeploymentTargets.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOfyzvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>result = self.endType->forAll (t | t.oclIsKindOf(DeploymentTarget))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oOfyz_WnEdqea89UKW2qFQ" general="_AwvxoGwNEdq7X4sGURiZYA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oFQXJPWnEdqea89UKW2qFQ" name="InstanceSpecification">
      <ownedComment xmi:id="_oFQXJfWnEdqea89UKW2qFQ" annotatedElement="_oFQXJPWnEdqea89UKW2qFQ">
        <body>An instance specification is a model element that represents an instance in a modeled system.</body>
      </ownedComment>
      <ownedComment xmi:id="_oOfy1fWnEdqea89UKW2qFQ" annotatedElement="_oFQXJPWnEdqea89UKW2qFQ">
        <body>An instance specification has the capability of being a deployment target in a deployment relationship, in the case that it is an instance of a node. It is also has the capability of being a deployed artifact, if it is an instance of an artifact.</body>
      </ownedComment>
      <ownedRule xmi:id="_oFQXJvWnEdqea89UKW2qFQ" name="defining_feature" constrainedElement="_oFQXJPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oFQXJ_WnEdqea89UKW2qFQ" annotatedElement="_oFQXJvWnEdqea89UKW2qFQ">
          <body>The defining feature of each slot is a structural feature (directly or inherited) of a classifier of the instance specification.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFQXKPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>slot->forAll(s | classifier->exists (c | c.allFeatures()->includes (s.definingFeature)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oFQXKfWnEdqea89UKW2qFQ" name="structural_feature" constrainedElement="_oFQXJPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oFQXKvWnEdqea89UKW2qFQ" annotatedElement="_oFQXKfWnEdqea89UKW2qFQ">
          <body>One structural feature (including the same feature inherited from multiple classifiers) is the defining feature of at most one slot in an instance specification.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFQXK_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() &lt;= 1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOfy1vWnEdqea89UKW2qFQ" name="deployment_target" constrainedElement="_oFQXJPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOfy1_WnEdqea89UKW2qFQ" annotatedElement="_oOfy1vWnEdqea89UKW2qFQ">
          <body>An InstanceSpecification can be a DeploymentTarget if it is the instance specification of a Node and functions as a part in the internal structure of an encompassing Node.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOfy2PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOfy2fWnEdqea89UKW2qFQ" name="deployment_artifact" constrainedElement="_oFQXJPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOfy2vWnEdqea89UKW2qFQ" annotatedElement="_oOfy2fWnEdqea89UKW2qFQ">
          <body>An InstanceSpecification can be a DeployedArtifact if it is the instance specification of an Artifact.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOfy2_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oFQXLPWnEdqea89UKW2qFQ" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <generalization xmi:id="_oOo8oPWnEdqea89UKW2qFQ" general="_oOfytvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oOo8ofWnEdqea89UKW2qFQ" general="_oOfyx_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oFQXLfWnEdqea89UKW2qFQ" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oHWB1fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oFQXLvWnEdqea89UKW2qFQ" annotatedElement="_oFQXLfWnEdqea89UKW2qFQ">
          <body>The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFQXL_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFQXMPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oFQXMfWnEdqea89UKW2qFQ" name="slot" type="_oFQXOfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oHWB1_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oFQXMvWnEdqea89UKW2qFQ" annotatedElement="_oFQXMfWnEdqea89UKW2qFQ">
          <body>A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFQXM_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFQXNPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oFQXNfWnEdqea89UKW2qFQ" name="specification" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oHo80fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oFQXNvWnEdqea89UKW2qFQ" annotatedElement="_oFQXNfWnEdqea89UKW2qFQ">
          <body>A specification of how to compute, derive, or construct the instance.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFQXN_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFQXOPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-lGRgHLzEdqziYxiZo0YtA" name="Artifact">
      <ownedComment xmi:id="_oOMQw_WnEdqea89UKW2qFQ" annotatedElement="_-lGRgHLzEdqziYxiZo0YtA">
        <body>An artifact is the specification of a physical piece of information that is used or produced by a software development process, or by deployment and operation of a system. Examples of artifacts include model files, source files, scripts, and binary executable files, a table in a database system, a development deliverable, or a word-processing document, a mail message.</body>
      </ownedComment>
      <ownedComment xmi:id="_oOo8ovWnEdqea89UKW2qFQ" annotatedElement="_-lGRgHLzEdqziYxiZo0YtA">
        <body>An artifact is the source of a deployment to a node.</body>
      </ownedComment>
      <generalization xmi:id="_oOMQxPWnEdqea89UKW2qFQ" general="_6UV2QGwJEdq7X4sGURiZYA"/>
      <generalization xmi:id="_oOo8o_WnEdqea89UKW2qFQ" general="_oOfyx_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oOMQxvWnEdqea89UKW2qFQ" name="fileName" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oOMQx_WnEdqea89UKW2qFQ" annotatedElement="_oOMQxvWnEdqea89UKW2qFQ">
          <body>A concrete name that is used to refer to the Artifact in a physical context. Example: file system name, universal resource locator.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOMQyPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOMQyfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oOMQyvWnEdqea89UKW2qFQ" name="nestedArtifact" type="_-lGRgHLzEdqziYxiZo0YtA" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oOWBtfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOMQy_WnEdqea89UKW2qFQ" annotatedElement="_oOMQyvWnEdqea89UKW2qFQ">
          <body>The Artifacts that are defined (nested) within the Artifact.&#xD;
The association is a specialization of the ownedMember association from Namespace to NamedElement.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOMQzPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOMQzfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oOMQzvWnEdqea89UKW2qFQ" name="manifestation" type="_oOMQ2vWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oJunmfWnEdqea89UKW2qFQ _oAfL8fWnEdqea89UKW2qFQ" association="_oOWBuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOMQz_WnEdqea89UKW2qFQ" annotatedElement="_oOMQzvWnEdqea89UKW2qFQ">
          <body>The set of model elements that are manifested in the Artifact. That is, these model elements are utilized in the construction (or generation) of the artifact.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOMQ0PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOMQ0fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oOMQ0vWnEdqea89UKW2qFQ" name="ownedOperation" type="_M4X2IGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oAMQ8PWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oOWBvvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOMQ0_WnEdqea89UKW2qFQ" annotatedElement="_oOMQ0vWnEdqea89UKW2qFQ">
          <body>The Operations defined for the Artifact. The association is a specialization of the ownedMember association.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOMQ1PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOMQ1fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oOMQ1vWnEdqea89UKW2qFQ" name="ownedAttribute" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oACf8vWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oOWBxfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOMQ1_WnEdqea89UKW2qFQ" annotatedElement="_oOMQ1vWnEdqea89UKW2qFQ">
          <body>The attributes or association ends defined for the Artifact.&#xD;
The association is a specialization of the ownedMember association.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOMQ2PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOMQ2fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_C-IuUHL0EdqziYxiZo0YtA" name="createOwnedOperation">
        <ownedComment xmi:id="_DUnlcOwmEdqYHf-imTcTdw" annotatedElement="_C-IuUHL0EdqziYxiZo0YtA">
          <body>Creates an operation with the specified name, parameter names, parameter types, and return type (or null) as an owned operation of this artifact.</body>
        </ownedComment>
        <ownedParameter xmi:id="_C-IuUXL0EdqziYxiZo0YtA" type="_M4X2IGveEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_C-IuUnL0EdqziYxiZo0YtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m8S2MaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_m8S2MKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_C-IuVHL0EdqziYxiZo0YtA" name="parameterNames" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-IuVXL0EdqziYxiZo0YtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_C-IuVnL0EdqziYxiZo0YtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_C-IuV3L0EdqziYxiZo0YtA" name="parameterTypes" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-IuWHL0EdqziYxiZo0YtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_C-IuWXL0EdqziYxiZo0YtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_C-IuU3L0EdqziYxiZo0YtA" name="returnType" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o7P2MaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o7P2MKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_U7wxgHL0EdqziYxiZo0YtA" name="createOwnedAttribute">
        <ownedComment xmi:id="__9c1UOwlEdqYHf-imTcTdw" annotatedElement="_U7wxgHL0EdqziYxiZo0YtA">
          <body>Creates a property with the specified name, type, lower bound, and upper bound as an owned attribute of this artifact.</body>
        </ownedComment>
        <ownedParameter xmi:id="_U7wxgXL0EdqziYxiZo0YtA" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_U7wxgnL0EdqziYxiZo0YtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rUSKIaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rUSKIKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_U7wxg3L0EdqziYxiZo0YtA" name="type" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tO6q0aOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_tO6q0KOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_U7wxhHL0EdqziYxiZo0YtA" name="lower" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_U7wxhXL0EdqziYxiZo0YtA" name="upper" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOo8pPWnEdqea89UKW2qFQ" name="A_deployedArtifact_deployment" memberEnd="_oOWBz_WnEdqea89UKW2qFQ _oOo8pvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oOo8pfWnEdqea89UKW2qFQ" general="_oJ3xb_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oOo8pvWnEdqea89UKW2qFQ" type="_oOWBzPWnEdqea89UKW2qFQ" association="_oOo8pPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOo8p_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOo8qPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOo8qfWnEdqea89UKW2qFQ" name="A_deployment_location" memberEnd="_oOWB0_WnEdqea89UKW2qFQ _oOfyufWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oOo8qvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oOo8q_WnEdqea89UKW2qFQ" general="_oJ3xdfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOo8rPWnEdqea89UKW2qFQ" name="A_nestedNode_node" memberEnd="_oOWB3vWnEdqea89UKW2qFQ _oOo8rvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oOo8rfWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oOo8rvWnEdqea89UKW2qFQ" type="_oOWB1_WnEdqea89UKW2qFQ" redefinedProperty="_oC3xlvWnEdqea89UKW2qFQ" association="_oOo8rPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oOo8r_WnEdqea89UKW2qFQ" name="A_deployedElement_deploymentTarget" memberEnd="_oOfyvfWnEdqea89UKW2qFQ _oOo8sPWnEdqea89UKW2qFQ" isDerived="true">
      <ownedEnd xmi:id="_oOo8sPWnEdqea89UKW2qFQ" type="_oOfytvWnEdqea89UKW2qFQ" association="_oOo8r_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOo8sfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOo8svWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oOytoPWnEdqea89UKW2qFQ" name="InteractionUse">
      <ownedComment xmi:id="_oOytofWnEdqea89UKW2qFQ" annotatedElement="_oOytoPWnEdqea89UKW2qFQ">
        <body>An interaction use refers to an interaction. The interaction use is a shorthand for copying the contents of the referenced interaction where the interaction use is. To be accurate the copying must take into account substituting parameters with arguments and connect the formal gates with the actual ones.</body>
      </ownedComment>
      <ownedRule xmi:id="_oOytovWnEdqea89UKW2qFQ" name="gates_match" constrainedElement="_oOytoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOyto_WnEdqea89UKW2qFQ" annotatedElement="_oOytovWnEdqea89UKW2qFQ">
          <body>Actual Gates of the InteractionUse must match Formal Gates of the referred Interaction. Gates match when their names are equal.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOytpPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOytpfWnEdqea89UKW2qFQ" name="all_lifelines" constrainedElement="_oOytoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOytpvWnEdqea89UKW2qFQ" annotatedElement="_oOytpfWnEdqea89UKW2qFQ">
          <body>The InteractionUse must cover all Lifelines of the enclosing Interaction which appear within the referred Interaction.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOytp_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOytqPWnEdqea89UKW2qFQ" name="arguments_correspond_to_parameters" constrainedElement="_oOytoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOytqfWnEdqea89UKW2qFQ" annotatedElement="_oOytqPWnEdqea89UKW2qFQ">
          <body>The arguments of the InteractionUse must correspond to parameters of the referred Interaction</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOytqvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOytq_WnEdqea89UKW2qFQ" name="arguments_are_constants" constrainedElement="_oOytoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOytrPWnEdqea89UKW2qFQ" annotatedElement="_oOytq_WnEdqea89UKW2qFQ">
          <body>The arguments must only be constants, parameters of the enclosing Interaction or attributes of the classifier owning the enclosing Interaction.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOytrfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oOytrvWnEdqea89UKW2qFQ" general="_oLW_IPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oOytr_WnEdqea89UKW2qFQ" name="refersTo" type="_oLN1N_WnEdqea89UKW2qFQ" association="_oPYjivWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOytsPWnEdqea89UKW2qFQ" annotatedElement="_oOytr_WnEdqea89UKW2qFQ">
          <body>Refers to the Interaction that defines its meaning</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOytsfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOytsvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oOyts_WnEdqea89UKW2qFQ" name="actualGate" type="_oO73rfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oPYjk_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOyttPWnEdqea89UKW2qFQ" annotatedElement="_oOyts_WnEdqea89UKW2qFQ">
          <body>The actual gates of the InteractionUse</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOyttfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOyttvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oOytt_WnEdqea89UKW2qFQ" name="argument" type="_oIreyPWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" association="_oPYjo_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOytuPWnEdqea89UKW2qFQ" annotatedElement="_oOytt_WnEdqea89UKW2qFQ">
          <body>The actual arguments of the Interaction</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOytufWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOytuvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oOytu_WnEdqea89UKW2qFQ" name="PartDecomposition">
      <ownedComment xmi:id="_oOytvPWnEdqea89UKW2qFQ" annotatedElement="_oOytu_WnEdqea89UKW2qFQ">
        <body>A part decomposition is a description of the internal interactions of one lifeline relative to an interaction.</body>
      </ownedComment>
      <ownedRule xmi:id="_oOytvfWnEdqea89UKW2qFQ" name="parts_of_internal_structures" constrainedElement="_oOytu_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOytvvWnEdqea89UKW2qFQ" annotatedElement="_oOytvfWnEdqea89UKW2qFQ">
          <body>PartDecompositions apply only to Parts that are Parts of Internal Structures not to Parts of Collaborations.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOytv_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOytwPWnEdqea89UKW2qFQ" name="assume" constrainedElement="_oOytu_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOytwfWnEdqea89UKW2qFQ" annotatedElement="_oOytwPWnEdqea89UKW2qFQ">
          <body>Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Within X there is a sequence of constructs along L (such constructs are CombinedFragments, InteractionUse and (plain) OccurrenceSpecifications). Then a corresponding sequence of constructs must appear within D, matched one-to-one in the same order.&#xD;
&#xD;
i) CombinedFragment covering L are matched with an extra-global CombinedFragment in D&#xD;
ii) An InteractionUse covering L are matched with a global (i.e. covering all Lifelines) InteractionUse in D.&#xD;
iii) A plain OccurrenceSpecification on L is considered an actualGate that must be matched by a formalGate of D&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOytwvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOytw_WnEdqea89UKW2qFQ" name="commutativity_of_decomposition" constrainedElement="_oOytu_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOytxPWnEdqea89UKW2qFQ" annotatedElement="_oOytw_WnEdqea89UKW2qFQ">
          <body>Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Assume also that there is within X an&#xD;
InteractionUse (say) U that covers L. According to the constraint above U will have a counterpart CU within D. Within the Interaction referenced by U, L should also be decomposed, and the decomposition should reference CU. (This rule is called commutativity of decomposition)&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOytxfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oOytxvWnEdqea89UKW2qFQ" general="_oOytoPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oOytx_WnEdqea89UKW2qFQ" name="InteractionOperand">
      <ownedComment xmi:id="_oOytyPWnEdqea89UKW2qFQ" annotatedElement="_oOytx_WnEdqea89UKW2qFQ">
        <body>An interaction operand is contained in a combined fragment. An interaction operand represents one operand of the expression given by the enclosing combined fragment.</body>
      </ownedComment>
      <ownedRule xmi:id="_oOytyfWnEdqea89UKW2qFQ" name="guard_directly_prior" constrainedElement="_oOytx_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOytyvWnEdqea89UKW2qFQ" annotatedElement="_oOytyfWnEdqea89UKW2qFQ">
          <body>The guard must be placed directly prior to (above) the OccurrenceSpecification that will become the first OccurrenceSpecification within this InteractionOperand.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOyty_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOytzPWnEdqea89UKW2qFQ" name="guard_contain_references" constrainedElement="_oOytx_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOytzfWnEdqea89UKW2qFQ" annotatedElement="_oOytzPWnEdqea89UKW2qFQ">
          <body>The guard must contain only references to values local to the Lifeline on which it resides, or values global to the whole Interaction.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOytzvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oOytz_WnEdqea89UKW2qFQ" general="_oLW_IPWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oOyt0PWnEdqea89UKW2qFQ" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oOyt0fWnEdqea89UKW2qFQ" name="guard" type="_oO73kPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oPYjgPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOyt0vWnEdqea89UKW2qFQ" annotatedElement="_oOyt0fWnEdqea89UKW2qFQ">
          <body>Constraint of the operand.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOyt0_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOyt1PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oOyt1fWnEdqea89UKW2qFQ" name="fragment" type="_oLW_IPWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oPYjp_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOyt1vWnEdqea89UKW2qFQ" annotatedElement="_oOyt1fWnEdqea89UKW2qFQ">
          <body>The fragments of the operand.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOyt1_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOyt2PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oO73kPWnEdqea89UKW2qFQ" name="InteractionConstraint">
      <ownedComment xmi:id="_oO73kfWnEdqea89UKW2qFQ" annotatedElement="_oO73kPWnEdqea89UKW2qFQ">
        <body>An interaction constraint is a Boolean expression that guards an operand in a combined fragment.</body>
      </ownedComment>
      <ownedRule xmi:id="_oO73kvWnEdqea89UKW2qFQ" name="dynamic_variables" constrainedElement="_oO73kPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73k_WnEdqea89UKW2qFQ" annotatedElement="_oO73kvWnEdqea89UKW2qFQ">
          <body>The dynamic variables that take part in the constraint must be owned by the ConnectableElement corresponding to the covered Lifeline.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73lPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oO73lfWnEdqea89UKW2qFQ" name="global_data" constrainedElement="_oO73kPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73lvWnEdqea89UKW2qFQ" annotatedElement="_oO73lfWnEdqea89UKW2qFQ">
          <body>The constraint may contain references to global data or write-once data.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73l_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oO73mPWnEdqea89UKW2qFQ" name="minint_maxint" constrainedElement="_oO73kPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73mfWnEdqea89UKW2qFQ" annotatedElement="_oO73mPWnEdqea89UKW2qFQ">
          <body>Minint/maxint can only be present if the InteractionConstraint is associated with the operand of a loop CombinedFragment.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73mvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oO73m_WnEdqea89UKW2qFQ" name="minint_non_negative" constrainedElement="_oO73kPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73nPWnEdqea89UKW2qFQ" annotatedElement="_oO73m_WnEdqea89UKW2qFQ">
          <body>If minint is specified, then the expression must evaluate to a non-negative integer.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73nfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oO73nvWnEdqea89UKW2qFQ" name="maxint_positive" constrainedElement="_oO73kPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73n_WnEdqea89UKW2qFQ" annotatedElement="_oO73nvWnEdqea89UKW2qFQ">
          <body>If maxint is specified, then the expression must evaluate to a positive integer.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73oPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oO73ofWnEdqea89UKW2qFQ" name="maxint_greater_equal_minint" constrainedElement="_oO73kPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73ovWnEdqea89UKW2qFQ" annotatedElement="_oO73ofWnEdqea89UKW2qFQ">
          <body>If maxint is specified, then minint must be specified and the evaluation of maxint must be >= the evaluation of minint</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73o_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oO73pPWnEdqea89UKW2qFQ" general="_oBht0PWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oO73pfWnEdqea89UKW2qFQ" name="minint" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oPYjnfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73pvWnEdqea89UKW2qFQ" annotatedElement="_oO73pfWnEdqea89UKW2qFQ">
          <body>The minimum number of iterations of a loop</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oO73p_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oO73qPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oO73qfWnEdqea89UKW2qFQ" name="maxint" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oPYjoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73qvWnEdqea89UKW2qFQ" annotatedElement="_oO73qfWnEdqea89UKW2qFQ">
          <body>The maximum number of iterations of a loop</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oO73q_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oO73rPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oO73rfWnEdqea89UKW2qFQ" name="Gate">
      <ownedComment xmi:id="_oO73rvWnEdqea89UKW2qFQ" annotatedElement="_oO73rfWnEdqea89UKW2qFQ">
        <body>A gate is a connection point for relating a message outside an interaction fragment with a message inside the interaction fragment.</body>
      </ownedComment>
      <ownedRule xmi:id="_oO73r_WnEdqea89UKW2qFQ" name="messages_actual_gate" constrainedElement="_oO73rfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73sPWnEdqea89UKW2qFQ" annotatedElement="_oO73r_WnEdqea89UKW2qFQ">
          <body>The message leading to/from an actualGate of an InteractionUse must correspond to the message leading from/to the formalGate with the same name of the Interaction referenced by the InteractionUse.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73sfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oO73svWnEdqea89UKW2qFQ" name="messages_combined_fragment" constrainedElement="_oO73rfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73s_WnEdqea89UKW2qFQ" annotatedElement="_oO73svWnEdqea89UKW2qFQ">
          <body>The message leading to/from an (expression) Gate within a CombinedFragment must correspond to the message leading from/to the CombinedFragment on its outside.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73tPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oO73tfWnEdqea89UKW2qFQ" general="_oLgwTPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oO73tvWnEdqea89UKW2qFQ" name="CombinedFragment">
      <ownedComment xmi:id="_oO73t_WnEdqea89UKW2qFQ" annotatedElement="_oO73tvWnEdqea89UKW2qFQ">
        <body>A combined fragment defines an expression of interaction fragments. A combined fragment is defined by an interaction operator and corresponding interaction operands. Through the use of combined fragments the user will be able to describe a number of traces in a compact and concise manner.</body>
      </ownedComment>
      <ownedRule xmi:id="_oO73uPWnEdqea89UKW2qFQ" name="opt_loop_break_neg" constrainedElement="_oO73tvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73ufWnEdqea89UKW2qFQ" annotatedElement="_oO73uPWnEdqea89UKW2qFQ">
          <body>If the interactionOperator is opt, loop, break, or neg there must be exactly one operand</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73uvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oO73u_WnEdqea89UKW2qFQ" name="minint_and_maxint" constrainedElement="_oO73tvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73vPWnEdqea89UKW2qFQ" annotatedElement="_oO73u_WnEdqea89UKW2qFQ">
          <body>The InteractionConstraint with minint and maxint only apply when attached to an InteractionOperand where the interactionOperator is loop.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73vfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oO73vvWnEdqea89UKW2qFQ" name="break" constrainedElement="_oO73tvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73v_WnEdqea89UKW2qFQ" annotatedElement="_oO73vvWnEdqea89UKW2qFQ">
          <body>If the interactionOperator is break, the corresponding InteractionOperand must cover all Lifelines within the enclosing InteractionFragment.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73wPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oO73wfWnEdqea89UKW2qFQ" name="consider_and_ignore" constrainedElement="_oO73tvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73wvWnEdqea89UKW2qFQ" annotatedElement="_oO73wfWnEdqea89UKW2qFQ">
          <body>The interaction operators 'consider' and 'ignore' can only be used for the CombineIgnoreFragment subtype of CombinedFragment</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO73w_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>((interactionOperator = #consider) or (interactionOperator = #ignore)) implies oclsisTypeOf(CombineIgnoreFragment)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oO73xPWnEdqea89UKW2qFQ" general="_oLW_IPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oO73xfWnEdqea89UKW2qFQ" name="interactionOperator" type="_oPPZnfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73xvWnEdqea89UKW2qFQ" annotatedElement="_oO73xfWnEdqea89UKW2qFQ">
          <body>Specifies the operation which defines the semantics of this combination of InteractionFragments.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oO73x_WnEdqea89UKW2qFQ" type="_oPPZnfWnEdqea89UKW2qFQ" instance="_oPPZn_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oO73yPWnEdqea89UKW2qFQ" name="operand" type="_oOytx_WnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oPYjhfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73yfWnEdqea89UKW2qFQ" annotatedElement="_oO73yPWnEdqea89UKW2qFQ">
          <body>The set of operands of the combined fragment.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oO73yvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oO73y_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oO73zPWnEdqea89UKW2qFQ" name="cfragmentGate" type="_oO73rfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oPYjjvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO73zfWnEdqea89UKW2qFQ" annotatedElement="_oO73zPWnEdqea89UKW2qFQ">
          <body>Specifies the gates that form the interface between this CombinedFragment and its surroundings</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oO73zvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oO73z_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLN1N_WnEdqea89UKW2qFQ" name="Interaction">
      <ownedComment xmi:id="_oLN1OPWnEdqea89UKW2qFQ" annotatedElement="_oLN1N_WnEdqea89UKW2qFQ">
        <body>An interaction is a unit of behavior that focuses on the observable exchange of information between connectable elements.</body>
      </ownedComment>
      <generalization xmi:id="_oLN1OfWnEdqea89UKW2qFQ" general="_oLW_IPWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oLN1OvWnEdqea89UKW2qFQ" general="_TUPtYGveEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oLN1O_WnEdqea89UKW2qFQ" name="lifeline" type="_oLN1S_WnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oLzrMfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLN1PPWnEdqea89UKW2qFQ" annotatedElement="_oLN1O_WnEdqea89UKW2qFQ">
          <body>Specifies the participants in this Interaction.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLN1PfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLN1PvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLN1P_WnEdqea89UKW2qFQ" name="message" type="_gfgNwGveEdq4DLWZOhbdEA" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oL9cFPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLN1QPWnEdqea89UKW2qFQ" annotatedElement="_oLN1P_WnEdqea89UKW2qFQ">
          <body>The Messages contained in this Interaction.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLN1QfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLN1QvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLN1Q_WnEdqea89UKW2qFQ" name="fragment" type="_oLW_IPWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oL9cKvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLN1RPWnEdqea89UKW2qFQ" annotatedElement="_oLN1Q_WnEdqea89UKW2qFQ">
          <body>The ordered set of fragments in the Interaction.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLN1RfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLN1RvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLN1R_WnEdqea89UKW2qFQ" name="action" type="_oIreyPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oMHNGPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLN1SPWnEdqea89UKW2qFQ" annotatedElement="_oLN1R_WnEdqea89UKW2qFQ">
          <body>Actions owned by the Interaction.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLN1SfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLN1SvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oO730PWnEdqea89UKW2qFQ" name="formalGate" type="_oO73rfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oPYjmPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO730fWnEdqea89UKW2qFQ" annotatedElement="_oO730PWnEdqea89UKW2qFQ">
          <body>Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oO730vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oO730_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLN1S_WnEdqea89UKW2qFQ" name="Lifeline">
      <ownedComment xmi:id="_oLN1TPWnEdqea89UKW2qFQ" annotatedElement="_oLN1S_WnEdqea89UKW2qFQ">
        <body>A lifeline represents an individual participant in the interaction. While parts and structural features may have multiplicity greater than 1, lifelines represent only one interacting entity.</body>
      </ownedComment>
      <ownedRule xmi:id="_oLN1TfWnEdqea89UKW2qFQ" name="interaction_uses_share_lifeline" constrainedElement="_oLN1S_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLN1TvWnEdqea89UKW2qFQ" annotatedElement="_oLN1TfWnEdqea89UKW2qFQ">
          <body>If two (or more) InteractionUses within one Interaction, refer to Interactions with 'common Lifelines,' those Lifelines must also appear in the Interaction with the InteractionUses. By common Lifelines we mean Lifelines with the same selector and represents associations.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLN1T_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLN1UPWnEdqea89UKW2qFQ" name="selector_specified" constrainedElement="_oLN1S_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLN1UfWnEdqea89UKW2qFQ" annotatedElement="_oLN1UPWnEdqea89UKW2qFQ">
          <body>The selector for a Lifeline must only be specified if the referenced Part is multivalued.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLN1UvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.selector->isEmpty() implies not self.represents.isMultivalued()) or&#xA;(not self.selector->isEmpty() implies self.represents.isMultivalued())&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLN1U_WnEdqea89UKW2qFQ" name="same_classifier" constrainedElement="_oLN1S_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLN1VPWnEdqea89UKW2qFQ" annotatedElement="_oLN1U_WnEdqea89UKW2qFQ">
          <body>The classifier containing the referenced ConnectableElement must be the same classifier, or an ancestor, of the classifier that contains the interaction enclosing this lifeline.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLN1VfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>if (represents->notEmpty()) then&#xA;(if selector->notEmpty() then represents.isMultivalued() else not represents.isMultivalued())&#xA;</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oLN1VvWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oLN1V_WnEdqea89UKW2qFQ" name="coveredBy" type="_oLW_IPWnEdqea89UKW2qFQ" association="_oLzrIPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLN1WPWnEdqea89UKW2qFQ" annotatedElement="_oLN1V_WnEdqea89UKW2qFQ">
          <body>References the InteractionFragments in which this Lifeline takes part.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLN1WfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLN1WvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLN1W_WnEdqea89UKW2qFQ" name="represents" type="_oKUdZfWnEdqea89UKW2qFQ" association="_oLzrLPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLN1XPWnEdqea89UKW2qFQ" annotatedElement="_oLN1W_WnEdqea89UKW2qFQ">
          <body>References the ConnectableElement within the classifier that contains the enclosing interaction.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLN1XfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLN1XvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLN1X_WnEdqea89UKW2qFQ" name="interaction" type="_oLN1N_WnEdqea89UKW2qFQ" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oLzrMfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLN1YPWnEdqea89UKW2qFQ" annotatedElement="_oLN1X_WnEdqea89UKW2qFQ">
          <body>References the Interaction enclosing this Lifeline.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLN1YfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLN1YvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLN1Y_WnEdqea89UKW2qFQ" name="selector" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oLzrQPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLN1ZPWnEdqea89UKW2qFQ" annotatedElement="_oLN1Y_WnEdqea89UKW2qFQ">
          <body>If the referenced ConnectableElement is multivalued, then this specifies the specific individual part within that set.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLN1ZfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLN1ZvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oO731PWnEdqea89UKW2qFQ" name="decomposedAs" type="_oOytu_WnEdqea89UKW2qFQ" association="_oPPZt_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oO731fWnEdqea89UKW2qFQ" annotatedElement="_oO731PWnEdqea89UKW2qFQ">
          <body>References the Interaction that represents the decomposition.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oO731vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oO731_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oPFokPWnEdqea89UKW2qFQ" name="Continuation">
      <ownedComment xmi:id="_oPFokfWnEdqea89UKW2qFQ" annotatedElement="_oPFokPWnEdqea89UKW2qFQ">
        <body>A continuation is a syntactic way to define continuations of different branches of an alternative combined fragment. Continuations is intuitively similar to labels representing intermediate points in a flow of control.</body>
      </ownedComment>
      <ownedRule xmi:id="_oPFokvWnEdqea89UKW2qFQ" name="same_name" constrainedElement="_oPFokPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPFok_WnEdqea89UKW2qFQ" annotatedElement="_oPFokvWnEdqea89UKW2qFQ">
          <body>Continuations with the same name may only cover the same set of Lifelines (within one Classifier).</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPFolPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPFolfWnEdqea89UKW2qFQ" name="global" constrainedElement="_oPFokPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPFolvWnEdqea89UKW2qFQ" annotatedElement="_oPFolfWnEdqea89UKW2qFQ">
          <body>Continuations are always global in the enclosing InteractionFragment e.g. it always covers all Lifelines covered by the enclosing InteractionFragment.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPFol_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPFomPWnEdqea89UKW2qFQ" name="first_or_last_interaction_fragment" constrainedElement="_oPFokPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPFomfWnEdqea89UKW2qFQ" annotatedElement="_oPFomPWnEdqea89UKW2qFQ">
          <body>Continuations always occur as the very first InteractionFragment or the very last InteractionFragment of the enclosing InteractionFragment.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPFomvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oPFom_WnEdqea89UKW2qFQ" general="_oLW_IPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oPFonPWnEdqea89UKW2qFQ" name="setting" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oPFonfWnEdqea89UKW2qFQ" annotatedElement="_oPFonPWnEdqea89UKW2qFQ">
          <body>True: when the Continuation is at the end of the enclosing InteractionFragment and False when it is in the beginning.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oPFonvWnEdqea89UKW2qFQ" value="true"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oLW_IPWnEdqea89UKW2qFQ" name="InteractionFragment" isAbstract="true">
      <ownedComment xmi:id="_oLW_IfWnEdqea89UKW2qFQ" annotatedElement="_oLW_IPWnEdqea89UKW2qFQ">
        <body>InteractionFragment is an abstract notion of the most general interaction unit. An interaction fragment is a piece of an interaction. Each interaction fragment is conceptually like an interaction by itself.</body>
      </ownedComment>
      <generalization xmi:id="_oLW_IvWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oLW_I_WnEdqea89UKW2qFQ" name="covered" type="_oLN1S_WnEdqea89UKW2qFQ" association="_oLzrIPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLW_JPWnEdqea89UKW2qFQ" annotatedElement="_oLW_I_WnEdqea89UKW2qFQ">
          <body>References the Lifelines that the InteractionFragment involves.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLW_JfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLW_JvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLW_J_WnEdqea89UKW2qFQ" name="generalOrdering" type="_oLgwIPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oL9cJfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLW_KPWnEdqea89UKW2qFQ" annotatedElement="_oLW_J_WnEdqea89UKW2qFQ">
          <body>The general ordering relationships contained in this fragment.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLW_KfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLW_KvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLW_K_WnEdqea89UKW2qFQ" name="enclosingInteraction" type="_oLN1N_WnEdqea89UKW2qFQ" association="_oL9cKvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLW_LPWnEdqea89UKW2qFQ" annotatedElement="_oLW_K_WnEdqea89UKW2qFQ">
          <body>The Interaction enclosing this InteractionFragment.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLW_LfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLW_LvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oPFon_WnEdqea89UKW2qFQ" name="enclosingOperand" type="_oOytx_WnEdqea89UKW2qFQ" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oPYjp_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPFooPWnEdqea89UKW2qFQ" annotatedElement="_oPFon_WnEdqea89UKW2qFQ">
          <body>The operand enclosing this InteractionFragment (they may nest recursively)</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPFoofWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPFoovWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oPPZkPWnEdqea89UKW2qFQ" name="ConsiderIgnoreFragment">
      <ownedComment xmi:id="_oPPZkfWnEdqea89UKW2qFQ" annotatedElement="_oPPZkPWnEdqea89UKW2qFQ">
        <body>A consider ignore fragment is a kind of combined fragment that is used for the consider and ignore cases, which require lists of pertinent messages to be specified.</body>
      </ownedComment>
      <ownedRule xmi:id="_oPPZkvWnEdqea89UKW2qFQ" name="consider_or_ignore" constrainedElement="_oPPZkPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPPZk_WnEdqea89UKW2qFQ" annotatedElement="_oPPZkvWnEdqea89UKW2qFQ">
          <body>The interaction operator of a ConsiderIgnoreFragment must be either 'consider' or 'ignore'.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPPZlPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(interactionOperator = #consider) or (interactionOperator = #ignore)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPPZlfWnEdqea89UKW2qFQ" name="type" constrainedElement="_oPPZkPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPPZlvWnEdqea89UKW2qFQ" annotatedElement="_oPPZlfWnEdqea89UKW2qFQ">
          <body>The NamedElements must be of a type of element that identifies a message (e.g., an Operation, Reception, or a Signal).</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPPZl_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>message->forAll(m | m.oclIsKindOf(Operation) or m.oclIsKindOf(Reception) or m.oclIsKindOf(Signal))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oPPZmPWnEdqea89UKW2qFQ" general="_oO73tvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oPPZmfWnEdqea89UKW2qFQ" name="message" type="_csVgUGvtEdqG6fBIPwe-mw" association="_oPiUgPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPPZmvWnEdqea89UKW2qFQ" annotatedElement="_oPPZmfWnEdqea89UKW2qFQ">
          <body>The set of messages that apply to this fragment</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPPZm_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPPZnPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_oPPZnfWnEdqea89UKW2qFQ" name="InteractionOperatorKind">
      <ownedComment xmi:id="_oPPZnvWnEdqea89UKW2qFQ" annotatedElement="_oPPZnfWnEdqea89UKW2qFQ">
        <body>InteractionOperatorKind is an enumeration designating the different kinds of operators of combined fragments. The interaction operand defines the type of operator of a combined fragment.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_oPPZn_WnEdqea89UKW2qFQ" name="seq">
        <ownedComment xmi:id="_oPPZoPWnEdqea89UKW2qFQ" annotatedElement="_oPPZn_WnEdqea89UKW2qFQ">
          <body>The interactionOperator seq designates that the CombinedFragment represents a weak sequencing between the behaviors of the operands.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oPPZofWnEdqea89UKW2qFQ" name="alt">
        <ownedComment xmi:id="_oPPZovWnEdqea89UKW2qFQ" annotatedElement="_oPPZofWnEdqea89UKW2qFQ">
          <body>The interactionOperator alt designates that the CombinedFragment represents a choice of behavior. At most one of the operands will be chosen. The chosen operand must have an explicit or implicit guard expression that evaluates to true at this point in the interaction. An implicit true guard is implied if the operand has no guard.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oPPZo_WnEdqea89UKW2qFQ" name="opt">
        <ownedComment xmi:id="_oPPZpPWnEdqea89UKW2qFQ" annotatedElement="_oPPZo_WnEdqea89UKW2qFQ">
          <body>The interactionOperator opt designates that the CombinedFragment represents a choice of behavior where either the (sole) operand happens or nothing happens. An option is semantically equivalent to an alternative CombinedFragment where there is one operand with non-empty content and the second operand is empty.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oPPZpfWnEdqea89UKW2qFQ" name="break">
        <ownedComment xmi:id="_oPPZpvWnEdqea89UKW2qFQ" annotatedElement="_oPPZpfWnEdqea89UKW2qFQ">
          <body>The interactionOperator break designates that the CombinedFragment represents a breaking scenario in the sense that the operand is a scenario that is performed instead of the remainder of the enclosing InteractionFragment. A break operator with a guard is chosen when the guard is true and the rest of the enclosing Interaction Fragment is ignored. When the guard of the break operand is false, the break operand is ignored and the rest of the enclosing InteractionFragment is chosen. The choice between a break operand without a guard and the rest of the enclosing InteractionFragment is done non-deterministically.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oPPZp_WnEdqea89UKW2qFQ" name="par">
        <ownedComment xmi:id="_oPPZqPWnEdqea89UKW2qFQ" annotatedElement="_oPPZp_WnEdqea89UKW2qFQ">
          <body>The interactionOperator par designates that the CombinedFragment represents a parallel merge between the behaviors of the operands. The OccurrenceSpecifications of the different operands can be interleaved in any way as long as the ordering imposed by each operand as such is preserved.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oPPZqfWnEdqea89UKW2qFQ" name="strict">
        <ownedComment xmi:id="_oPPZqvWnEdqea89UKW2qFQ" annotatedElement="_oPPZqfWnEdqea89UKW2qFQ">
          <body>The interactionOperator strict designates that the CombinedFragment represents a strict sequencing between the behaviors of the operands. The semantics of strict sequencing defines a strict ordering of the operands on the first level within the CombinedFragment with interactionOperator strict. Therefore OccurrenceSpecifications within contained CombinedFragment will not directly be compared with other OccurrenceSpecifications of the enclosing CombinedFragment.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oPPZq_WnEdqea89UKW2qFQ" name="loop">
        <ownedComment xmi:id="_oPPZrPWnEdqea89UKW2qFQ" annotatedElement="_oPPZq_WnEdqea89UKW2qFQ">
          <body>The interactionOperator loop designates that the CombinedFragment represents a loop. The loop operand will be repeated a number of times.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oPPZrfWnEdqea89UKW2qFQ" name="critical">
        <ownedComment xmi:id="_oPPZrvWnEdqea89UKW2qFQ" annotatedElement="_oPPZrfWnEdqea89UKW2qFQ">
          <body>The interactionOperator critical designates that the CombinedFragment represents a critical region. A critical region means that the traces of the region cannot be interleaved by other OccurrenceSpecifications (on those Lifelines covered by the region). This means that the region is treated atomically by the enclosing fragment when determining the set of valid traces. Even though enclosing CombinedFragments may imply that some OccurrenceSpecifications may interleave into the region, such as e.g. with par-operator, this is prevented by defining a region.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oPPZr_WnEdqea89UKW2qFQ" name="neg">
        <ownedComment xmi:id="_oPPZsPWnEdqea89UKW2qFQ" annotatedElement="_oPPZr_WnEdqea89UKW2qFQ">
          <body>The interactionOperator neg designates that the CombinedFragment represents traces that are defined to be invalid.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oPPZsfWnEdqea89UKW2qFQ" name="assert">
        <ownedComment xmi:id="_oPPZsvWnEdqea89UKW2qFQ" annotatedElement="_oPPZsfWnEdqea89UKW2qFQ">
          <body>The interactionOperator assert designates that the CombinedFragment represents an assertion. The sequences of the operand of the assertion are the only valid continuations. All other continuations result in an invalid trace.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oPPZs_WnEdqea89UKW2qFQ" name="ignore">
        <ownedComment xmi:id="_oPPZtPWnEdqea89UKW2qFQ" annotatedElement="_oPPZs_WnEdqea89UKW2qFQ">
          <body>The interacionOperator ignore designates that there are some message types that are not shown within this combined fragment. These message types can be considered insignificant and are implicitly ignored if they appear in a corresponding execution. Alternatively, one can understand ignore to mean that the message types that are ignored can appear anywhere in the traces.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oPPZtfWnEdqea89UKW2qFQ" name="consider">
        <ownedComment xmi:id="_oPPZtvWnEdqea89UKW2qFQ" annotatedElement="_oPPZtfWnEdqea89UKW2qFQ">
          <body>The interactionOperator consider designates which messages should be considered within this combined fragment. This is equivalent to defining every other message to be ignored.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPPZt_WnEdqea89UKW2qFQ" name="A_lifeline_decomposedAs" memberEnd="_oO731PWnEdqea89UKW2qFQ _oPPZuPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oPPZuPWnEdqea89UKW2qFQ" type="_oLN1S_WnEdqea89UKW2qFQ" association="_oPPZt_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPYjgPWnEdqea89UKW2qFQ" name="A_guard_interactionOperand" memberEnd="_oOyt0fWnEdqea89UKW2qFQ _oPYjgvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oPYjgfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oPYjgvWnEdqea89UKW2qFQ" type="_oOytx_WnEdqea89UKW2qFQ" association="_oPYjgPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPYjg_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPYjhPWnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPYjhfWnEdqea89UKW2qFQ" name="A_operand_combinedFragment" memberEnd="_oO73yPWnEdqea89UKW2qFQ _oPYjh_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oPYjhvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oPYjh_WnEdqea89UKW2qFQ" type="_oO73tvWnEdqea89UKW2qFQ" association="_oPYjhfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPYjiPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPYjifWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPYjivWnEdqea89UKW2qFQ" name="A_refersTo_interactionUse" memberEnd="_oOytr_WnEdqea89UKW2qFQ _oPYji_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oPYji_WnEdqea89UKW2qFQ" type="_oOytoPWnEdqea89UKW2qFQ" association="_oPYjivWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPYjjPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPYjjfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPYjjvWnEdqea89UKW2qFQ" name="A_cfragmentGate_combinedFragment" memberEnd="_oO73zPWnEdqea89UKW2qFQ _oPYjkPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oPYjj_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oPYjkPWnEdqea89UKW2qFQ" type="_oO73tvWnEdqea89UKW2qFQ" association="_oPYjjvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPYjkfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPYjkvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPYjk_WnEdqea89UKW2qFQ" name="A_interactionUse_actualGate" memberEnd="_oOyts_WnEdqea89UKW2qFQ _oPYjlfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oPYjlPWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oPYjlfWnEdqea89UKW2qFQ" type="_oOytoPWnEdqea89UKW2qFQ" association="_oPYjk_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPYjlvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPYjl_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPYjmPWnEdqea89UKW2qFQ" name="A_formalGate_interaction" memberEnd="_oO730PWnEdqea89UKW2qFQ _oPYjmvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oPYjmfWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oPYjmvWnEdqea89UKW2qFQ" type="_oLN1N_WnEdqea89UKW2qFQ" association="_oPYjmPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPYjm_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPYjnPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPYjnfWnEdqea89UKW2qFQ" name="A_minint_interactionConstraint" memberEnd="_oO73pfWnEdqea89UKW2qFQ _oPYjn_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oPYjnvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oPYjn_WnEdqea89UKW2qFQ" type="_oO73kPWnEdqea89UKW2qFQ" association="_oPYjnfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPYjoPWnEdqea89UKW2qFQ" name="A_maxint_interactionConstraint" memberEnd="_oO73qfWnEdqea89UKW2qFQ _oPYjovWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oPYjofWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oPYjovWnEdqea89UKW2qFQ" type="_oO73kPWnEdqea89UKW2qFQ" association="_oPYjoPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPYjo_WnEdqea89UKW2qFQ" name="A_argument_interactionUse" memberEnd="_oOytt_WnEdqea89UKW2qFQ _oPYjpPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oPYjpPWnEdqea89UKW2qFQ" type="_oOytoPWnEdqea89UKW2qFQ" association="_oPYjo_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPYjpfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPYjpvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPYjp_WnEdqea89UKW2qFQ" name="A_fragment_enclosingOperand" memberEnd="_oOyt1fWnEdqea89UKW2qFQ _oPFon_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oPYjqPWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oPiUgPWnEdqea89UKW2qFQ" name="A_message_considerIgnoreFragment" memberEnd="_oPPZmfWnEdqea89UKW2qFQ _oPiUgfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oPiUgfWnEdqea89UKW2qFQ" type="_oPPZkPWnEdqea89UKW2qFQ" association="_oPiUgPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPiUgvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPiUg_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oPiUhPWnEdqea89UKW2qFQ" name="CreateObjectAction">
      <ownedComment xmi:id="_oPiUhfWnEdqea89UKW2qFQ" annotatedElement="_oPiUhPWnEdqea89UKW2qFQ">
        <body>A create object action is an action that creates an object that conforms to a statically specified classifier and puts it on an output pin at runtime.</body>
      </ownedComment>
      <ownedRule xmi:id="_oPiUhvWnEdqea89UKW2qFQ" name="classifier_not_abstract" constrainedElement="_oPiUhPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPiUh_WnEdqea89UKW2qFQ" annotatedElement="_oPiUhvWnEdqea89UKW2qFQ">
          <body>The classifier cannot be abstract.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPiUiPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>not (self.classifier.isAbstract = #true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPiUifWnEdqea89UKW2qFQ" name="classifier_not_association_class" constrainedElement="_oPiUhPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPiUivWnEdqea89UKW2qFQ" annotatedElement="_oPiUifWnEdqea89UKW2qFQ">
          <body>The classifier cannot be an association class</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPiUi_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>not self.classifier.oclIsKindOf(AssociationClass)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPiUjPWnEdqea89UKW2qFQ" name="same_type" constrainedElement="_oPiUhPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPiUjfWnEdqea89UKW2qFQ" annotatedElement="_oPiUjPWnEdqea89UKW2qFQ">
          <body>The type of the result pin must be the same as the classifier of the action.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPiUjvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.type = self.classifier</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPiUj_WnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oPiUhPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPiUkPWnEdqea89UKW2qFQ" annotatedElement="_oPiUj_WnEdqea89UKW2qFQ">
          <body>The multiplicity of the output pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPiUkfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oPiUkvWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oPiUk_WnEdqea89UKW2qFQ" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oQk2UPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPiUlPWnEdqea89UKW2qFQ" annotatedElement="_oPiUk_WnEdqea89UKW2qFQ">
          <body>Classifier to be instantiated.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPiUlfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPiUlvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oPiUl_WnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oQk2VPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPiUmPWnEdqea89UKW2qFQ" annotatedElement="_oPiUl_WnEdqea89UKW2qFQ">
          <body>Gives the output pin on which the result is put.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPiUmfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPiUmvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oPsFgPWnEdqea89UKW2qFQ" name="DestroyObjectAction">
      <ownedComment xmi:id="_oPsFgfWnEdqea89UKW2qFQ" annotatedElement="_oPsFgPWnEdqea89UKW2qFQ">
        <body>A destroy object action is an action that destroys objects.</body>
      </ownedComment>
      <ownedRule xmi:id="_oPsFgvWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oPsFgPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFg_WnEdqea89UKW2qFQ" annotatedElement="_oPsFgvWnEdqea89UKW2qFQ">
          <body>The multiplicity of the input pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPsFhPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.target.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPsFhfWnEdqea89UKW2qFQ" name="no_type" constrainedElement="_oPsFgPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFhvWnEdqea89UKW2qFQ" annotatedElement="_oPsFhfWnEdqea89UKW2qFQ">
          <body>The input pin has no type.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPsFh_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.target.type->size() = 0</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oPsFiPWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oPsFifWnEdqea89UKW2qFQ" name="isDestroyLinks" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oPsFivWnEdqea89UKW2qFQ" annotatedElement="_oPsFifWnEdqea89UKW2qFQ">
          <body>Specifies whether links in which the object participates are destroyed along with the object.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oPsFi_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oPsFjPWnEdqea89UKW2qFQ" name="isDestroyOwnedObjects" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oPsFjfWnEdqea89UKW2qFQ" annotatedElement="_oPsFjPWnEdqea89UKW2qFQ">
          <body>Specifies whether objects owned by the object are destroyed along with the object.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oPsFjvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oPsFj_WnEdqea89UKW2qFQ" name="target" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oQk2WfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFkPWnEdqea89UKW2qFQ" annotatedElement="_oPsFj_WnEdqea89UKW2qFQ">
          <body>The input pin providing the object to be destroyed.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPsFkfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPsFkvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oPsFk_WnEdqea89UKW2qFQ" name="TestIdentityAction">
      <ownedComment xmi:id="_oPsFlPWnEdqea89UKW2qFQ" annotatedElement="_oPsFk_WnEdqea89UKW2qFQ">
        <body>A test identity action is an action that tests if two values are identical objects.</body>
      </ownedComment>
      <ownedRule xmi:id="_oPsFlfWnEdqea89UKW2qFQ" name="no_type" constrainedElement="_oPsFk_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFlvWnEdqea89UKW2qFQ" annotatedElement="_oPsFlfWnEdqea89UKW2qFQ">
          <body>The input pins have no type.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPsFl_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.first.type->size() = 0&#xA;and self.second.type->size() = 0&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPsFmPWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oPsFk_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFmfWnEdqea89UKW2qFQ" annotatedElement="_oPsFmPWnEdqea89UKW2qFQ">
          <body>The multiplicity of the input pins is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPsFmvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.first.multiplicity.is(1,1)&#xA;and self.second.multiplicity.is(1,1)&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPsFm_WnEdqea89UKW2qFQ" name="result_is_boolean" constrainedElement="_oPsFk_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFnPWnEdqea89UKW2qFQ" annotatedElement="_oPsFm_WnEdqea89UKW2qFQ">
          <body>The type of the result is Boolean.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPsFnfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.type.oclIsTypeOf(Boolean)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oPsFnvWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oPsFn_WnEdqea89UKW2qFQ" name="first" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oQk2XvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFoPWnEdqea89UKW2qFQ" annotatedElement="_oPsFn_WnEdqea89UKW2qFQ">
          <body>Gives the pin on which an object is placed.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPsFofWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPsFovWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oPsFo_WnEdqea89UKW2qFQ" name="second" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oQk2Y_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFpPWnEdqea89UKW2qFQ" annotatedElement="_oPsFo_WnEdqea89UKW2qFQ">
          <body>Gives the pin on which an object is placed.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPsFpfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPsFpvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oPsFp_WnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oQk2aPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFqPWnEdqea89UKW2qFQ" annotatedElement="_oPsFp_WnEdqea89UKW2qFQ">
          <body>Tells whether the two input objects are identical.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPsFqfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPsFqvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oPsFq_WnEdqea89UKW2qFQ" name="ReadSelfAction">
      <ownedComment xmi:id="_oPsFrPWnEdqea89UKW2qFQ" annotatedElement="_oPsFq_WnEdqea89UKW2qFQ">
        <body>A read self action is an action that retrieves the host object of an action.</body>
      </ownedComment>
      <ownedRule xmi:id="_oPsFrfWnEdqea89UKW2qFQ" name="contained" constrainedElement="_oPsFq_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFrvWnEdqea89UKW2qFQ" annotatedElement="_oPsFrfWnEdqea89UKW2qFQ">
          <body>The action must be contained in an behavior that has a host classifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPsFr_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.context->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPsFsPWnEdqea89UKW2qFQ" name="not_static" constrainedElement="_oPsFq_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFsfWnEdqea89UKW2qFQ" annotatedElement="_oPsFsPWnEdqea89UKW2qFQ">
          <body>If the action is contained in an behavior that is acting as the body of a method, then the operation of the method must not be static.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPsFsvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPsFs_WnEdqea89UKW2qFQ" name="type" constrainedElement="_oPsFq_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFtPWnEdqea89UKW2qFQ" annotatedElement="_oPsFs_WnEdqea89UKW2qFQ">
          <body>The type of the result output pin is the host classifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPsFtfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.type = self.context</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPsFtvWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oPsFq_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFt_WnEdqea89UKW2qFQ" annotatedElement="_oPsFtvWnEdqea89UKW2qFQ">
          <body>The multiplicity of the result output pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPsFuPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oPsFufWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oPsFuvWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oQk2bfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oPsFu_WnEdqea89UKW2qFQ" annotatedElement="_oPsFuvWnEdqea89UKW2qFQ">
          <body>Gives the output pin on which the hosting object is placed.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPsFvPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oPsFvfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oP1PcPWnEdqea89UKW2qFQ" name="StructuralFeatureAction" isAbstract="true">
      <ownedComment xmi:id="_oP1PcfWnEdqea89UKW2qFQ" annotatedElement="_oP1PcPWnEdqea89UKW2qFQ">
        <body>StructuralFeatureAction is an abstract class for all structural feature actions.</body>
      </ownedComment>
      <ownedRule xmi:id="_oP1PcvWnEdqea89UKW2qFQ" name="not_static" constrainedElement="_oP1PcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1Pc_WnEdqea89UKW2qFQ" annotatedElement="_oP1PcvWnEdqea89UKW2qFQ">
          <body>The structural feature must not be static.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP1PdPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.structuralFeature.isStatic = #false</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oP1PdfWnEdqea89UKW2qFQ" name="same_type" constrainedElement="_oP1PcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1PdvWnEdqea89UKW2qFQ" annotatedElement="_oP1PdfWnEdqea89UKW2qFQ">
          <body>The type of the object input pin is the same as the classifier of the object passed on this pin.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP1Pd_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oP1PePWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oP1PcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1PefWnEdqea89UKW2qFQ" annotatedElement="_oP1PePWnEdqea89UKW2qFQ">
          <body>The multiplicity of the input pin must be 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP1PevWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.object.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oP1Pe_WnEdqea89UKW2qFQ" name="visibility" constrainedElement="_oP1PcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1PfPWnEdqea89UKW2qFQ" annotatedElement="_oP1Pe_WnEdqea89UKW2qFQ">
          <body>Visibility of structural feature must allow access to the object performing the action.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP1PffWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>let host : Classifier = self.context in&#xA;self.structuralFeature.visibility = #public&#xA;or host = self.structuralFeature.featuringClassifier.type&#xA;or (self.structuralFeature.visibility = #protected and host.allSupertypes&#xA;->includes(self.structuralFeature.featuringClassifier.type)))&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oP1PfvWnEdqea89UKW2qFQ" name="one_featuring_classifier" constrainedElement="_oP1PcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1Pf_WnEdqea89UKW2qFQ" annotatedElement="_oP1PfvWnEdqea89UKW2qFQ">
          <body>A structural feature has exactly one featuringClassifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP1PgPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.structuralFeature.featuringClassifier->size() = 1</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oP1PgfWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oP1PgvWnEdqea89UKW2qFQ" name="structuralFeature" type="_oA73-fWnEdqea89UKW2qFQ" association="_oQk2cvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1Pg_WnEdqea89UKW2qFQ" annotatedElement="_oP1PgvWnEdqea89UKW2qFQ">
          <body>Structural feature to be read.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oP1PhPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oP1PhfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oP1PhvWnEdqea89UKW2qFQ" name="object" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oQunUPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1Ph_WnEdqea89UKW2qFQ" annotatedElement="_oP1PhvWnEdqea89UKW2qFQ">
          <body>Gives the input pin from which the object whose structural feature is to be read or written is obtained.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oP1PiPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oP1PifWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oP1PivWnEdqea89UKW2qFQ" name="ReadStructuralFeatureAction">
      <ownedComment xmi:id="_oP1Pi_WnEdqea89UKW2qFQ" annotatedElement="_oP1PivWnEdqea89UKW2qFQ">
        <body>A read structural feature action is a structural feature action that retrieves the values of a structural feature.</body>
      </ownedComment>
      <ownedRule xmi:id="_oP1PjPWnEdqea89UKW2qFQ" name="type_and_ordering" constrainedElement="_oP1PivWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1PjfWnEdqea89UKW2qFQ" annotatedElement="_oP1PjPWnEdqea89UKW2qFQ">
          <body>The type and ordering of the result output pin are the same as the type and ordering of the structural feature.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP1PjvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.type = self.structuralFeature.type&#xA;and self.result.ordering = self.structuralFeature.ordering&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oP1Pj_WnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oP1PivWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1PkPWnEdqea89UKW2qFQ" annotatedElement="_oP1Pj_WnEdqea89UKW2qFQ">
          <body>The multiplicity of the structural feature must be compatible with the multiplicity of the output pin.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP1PkfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.structuralFeature.multiplicity.compatibleWith(self.result.multiplicity)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oP1PkvWnEdqea89UKW2qFQ" general="_oP1PcPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oP1Pk_WnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oQunVfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1PlPWnEdqea89UKW2qFQ" annotatedElement="_oP1Pk_WnEdqea89UKW2qFQ">
          <body>Gives the output pin on which the result is put.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oP1PlfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oP1PlvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oP1Pl_WnEdqea89UKW2qFQ" name="WriteStructuralFeatureAction" isAbstract="true">
      <ownedComment xmi:id="_oP1PmPWnEdqea89UKW2qFQ" annotatedElement="_oP1Pl_WnEdqea89UKW2qFQ">
        <body>WriteStructuralFeatureAction is an abstract class for structural feature actions that change structural feature values.</body>
      </ownedComment>
      <ownedRule xmi:id="_oP1PmfWnEdqea89UKW2qFQ" name="input_pin" constrainedElement="_oP1Pl_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1PmvWnEdqea89UKW2qFQ" annotatedElement="_oP1PmfWnEdqea89UKW2qFQ">
          <body>The type input pin is the same as the classifier of the structural feature.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP1Pm_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.value.type = self.structuralFeature.featuringClassifier</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oP1PnPWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oP1Pl_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1PnfWnEdqea89UKW2qFQ" annotatedElement="_oP1PnPWnEdqea89UKW2qFQ">
          <body>The multiplicity of the input pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP1PnvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.value.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oP1Pn_WnEdqea89UKW2qFQ" general="_oP1PcPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oP1PoPWnEdqea89UKW2qFQ" name="value" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oQunWvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP1PofWnEdqea89UKW2qFQ" annotatedElement="_oP1PoPWnEdqea89UKW2qFQ">
          <body>Value to be added or removed from the structural feature.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oP1PovWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oP1Po_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oP1PpPWnEdqea89UKW2qFQ" name="ClearStructuralFeatureAction">
      <ownedComment xmi:id="_oP1PpfWnEdqea89UKW2qFQ" annotatedElement="_oP1PpPWnEdqea89UKW2qFQ">
        <body>A clear structural feature action is a structural feature action that removes all values of a structural feature.</body>
      </ownedComment>
      <generalization xmi:id="_oP1PpvWnEdqea89UKW2qFQ" general="_oP1PcPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oP_AcPWnEdqea89UKW2qFQ" name="RemoveStructuralFeatureValueAction">
      <ownedComment xmi:id="_oP_AcfWnEdqea89UKW2qFQ" annotatedElement="_oP_AcPWnEdqea89UKW2qFQ">
        <body>A remove structural feature value action is a write structural feature action that removes values from structural features.</body>
      </ownedComment>
      <ownedRule xmi:id="_oP_AcvWnEdqea89UKW2qFQ" name="non_unique_removal" constrainedElement="_oP_AcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP_Ac_WnEdqea89UKW2qFQ" annotatedElement="_oP_AcvWnEdqea89UKW2qFQ">
          <body>Actions removing a value from ordered nonunique structural features must have a single removeAt input pin if isRemoveDuplicates is false. It must be of type Unlimited Natural with multiplicity 1..1. Otherwise, the action has no removeAt input pin.&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP_AdPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oP_AdfWnEdqea89UKW2qFQ" general="_oP1Pl_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oP_AdvWnEdqea89UKW2qFQ" name="isRemoveDuplicates" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oP_Ad_WnEdqea89UKW2qFQ" annotatedElement="_oP_AdvWnEdqea89UKW2qFQ">
          <body>Specifies whether to remove duplicates of the value in nonunique structural features.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oP_AePWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oP_AefWnEdqea89UKW2qFQ" name="removeAt" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oRBiR_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP_AevWnEdqea89UKW2qFQ" annotatedElement="_oP_AefWnEdqea89UKW2qFQ">
          <body>Specifies the position of an existing value to remove in ordered nonunique structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oP_Ae_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oP_AfPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oP_AffWnEdqea89UKW2qFQ" name="AddStructuralFeatureValueAction">
      <ownedComment xmi:id="_oP_AfvWnEdqea89UKW2qFQ" annotatedElement="_oP_AffWnEdqea89UKW2qFQ">
        <body>An add structural feature value action is a write structural feature action for adding values to a structural feature.</body>
      </ownedComment>
      <ownedRule xmi:id="_oP_Af_WnEdqea89UKW2qFQ" name="unlimited_natural_and_multiplicity" constrainedElement="_oP_AffWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP_AgPWnEdqea89UKW2qFQ" annotatedElement="_oP_Af_WnEdqea89UKW2qFQ">
          <body>Actions adding a value to ordered structural features must have a single input pin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, otherwise the action has no input pin for the insertion point.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP_AgfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>let insertAtPins : Collection = self.insertAt in&#xA;if self.structuralFeature.isOrdered = #false&#xA;then insertAtPins->size() = 0&#xA;else let insertAtPin : InputPin= insertAt->asSequence()->first() in&#xA;insertAtPins->size() = 1&#xA;and insertAtPin.type = UnlimitedNatural&#xA;and insertAtPin.multiplicity.is(1,1))&#xA;endif&#xA;</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oP_AgvWnEdqea89UKW2qFQ" general="_oP1Pl_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oP_Ag_WnEdqea89UKW2qFQ" name="isReplaceAll" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oP_AhPWnEdqea89UKW2qFQ" annotatedElement="_oP_Ag_WnEdqea89UKW2qFQ">
          <body>Specifies whether existing values of the structural feature of the object should be removed before adding the new value.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oP_AhfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oP_AhvWnEdqea89UKW2qFQ" name="insertAt" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oQunX_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP_Ah_WnEdqea89UKW2qFQ" annotatedElement="_oP_AhvWnEdqea89UKW2qFQ">
          <body>Gives the position at which to insert a new value or move an existing value in ordered structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero. This pin is omitted for unordered structural features.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oP_AiPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oP_AifWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oP_AivWnEdqea89UKW2qFQ" name="LinkAction" isAbstract="true">
      <ownedComment xmi:id="_oP_Ai_WnEdqea89UKW2qFQ" annotatedElement="_oP_AivWnEdqea89UKW2qFQ">
        <body>LinkAction is an abstract class for all link actions that identify their links by the objects at the ends of the links and by the qualifiers at ends of the links.</body>
      </ownedComment>
      <ownedRule xmi:id="_oP_AjPWnEdqea89UKW2qFQ" name="same_association" constrainedElement="_oP_AivWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP_AjfWnEdqea89UKW2qFQ" annotatedElement="_oP_AjPWnEdqea89UKW2qFQ">
          <body>The association ends of the link end data must all be from the same association and include all and only the association ends of that association.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP_AjvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.endData->collect(end) = self.association()->collect(connection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oP_Aj_WnEdqea89UKW2qFQ" name="not_static" constrainedElement="_oP_AivWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP_AkPWnEdqea89UKW2qFQ" annotatedElement="_oP_Aj_WnEdqea89UKW2qFQ">
          <body>The association ends of the link end data must not be static.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP_AkfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.endData->forall(end.oclisKindOf(NavigableEnd) implies end.isStatic = #false</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oP_AkvWnEdqea89UKW2qFQ" name="same_pins" constrainedElement="_oP_AivWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP_Ak_WnEdqea89UKW2qFQ" annotatedElement="_oP_AkvWnEdqea89UKW2qFQ">
          <body>The input pins of the action are the same as the pins of the link end data and insertion pins.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP_AlPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.input->asSet() =&#xA;let ledpins : Set = self.endData->collect(value) in&#xA;if self.oclIsKindOf(LinkEndCreationData)&#xA;then ledpins->union(self.endData.oclAsType(LinkEndCreationData).insertAt)&#xA;else ledpins&#xA;</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oP_AlfWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oP_AlvWnEdqea89UKW2qFQ" name="endData" type="_oQIKYPWnEdqea89UKW2qFQ" aggregation="composite" association="_oQ4YUPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP_Al_WnEdqea89UKW2qFQ" annotatedElement="_oP_AlvWnEdqea89UKW2qFQ">
          <body>Data identifying one end of a link by the objects on its ends and qualifiers.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oP_AmPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oP_AmfWnEdqea89UKW2qFQ" value="2"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oP_AmvWnEdqea89UKW2qFQ" name="inputValue" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oRBiXvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP_Am_WnEdqea89UKW2qFQ" annotatedElement="_oP_AmvWnEdqea89UKW2qFQ">
          <body>Pins taking end objects and qualifier values as input.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oP_AnPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oP_AnfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oP_AnvWnEdqea89UKW2qFQ" name="association" isQuery="true" bodyCondition="_oP_AoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oP_An_WnEdqea89UKW2qFQ" annotatedElement="_oP_AnvWnEdqea89UKW2qFQ">
          <body>The association operates on LinkAction. It returns the association of the action.</body>
        </ownedComment>
        <ownedRule xmi:id="_oP_AoPWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oP_AnvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oP_AofWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = self.endData->asSequence().first().end.association</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oP_AovWnEdqea89UKW2qFQ" type="_AwvxoGwNEdq7X4sGURiZYA" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oQIKdPWnEdqea89UKW2qFQ" name="ReadLinkAction">
      <ownedComment xmi:id="_oQIKdfWnEdqea89UKW2qFQ" annotatedElement="_oQIKdPWnEdqea89UKW2qFQ">
        <body>A read link action is a link action that navigates across associations to retrieve objects on one end.</body>
      </ownedComment>
      <ownedRule xmi:id="_oQIKdvWnEdqea89UKW2qFQ" name="one_open_end" constrainedElement="_oQIKdPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQIKd_WnEdqea89UKW2qFQ" annotatedElement="_oQIKdvWnEdqea89UKW2qFQ">
          <body>Exactly one link-end data specification (the 'open' end) must not have an end object input pin.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQIKePWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.endData->select(ed | ed.value->size() = 0)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQIKefWnEdqea89UKW2qFQ" name="type_and_ordering" constrainedElement="_oQIKdPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQIKevWnEdqea89UKW2qFQ" annotatedElement="_oQIKefWnEdqea89UKW2qFQ">
          <body>The type and ordering of the result output pin are same as the type and ordering of the open association end.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQIKe_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>let openend : AssociationEnd = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in&#xA;self.result.type = openend.type&#xA;and self.result.ordering = openend.ordering&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQIKfPWnEdqea89UKW2qFQ" name="compatible_multiplicity" constrainedElement="_oQIKdPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQIKffWnEdqea89UKW2qFQ" annotatedElement="_oQIKfPWnEdqea89UKW2qFQ">
          <body>The multiplicity of the open association end must be compatible with the multiplicity of the result output pin.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQIKfvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>let openend : AssociationEnd = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in&#xA;openend.multiplicity.compatibleWith(self.result.multiplicity)&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQIKf_WnEdqea89UKW2qFQ" name="navigable_open_end" constrainedElement="_oQIKdPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQIKgPWnEdqea89UKW2qFQ" annotatedElement="_oQIKf_WnEdqea89UKW2qFQ">
          <body>The open end must be navigable.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQIKgfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>let openend : AssociationEnd = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in&#xA;openend.isNavigable()&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQIKgvWnEdqea89UKW2qFQ" name="visibility" constrainedElement="_oQIKdPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQIKg_WnEdqea89UKW2qFQ" annotatedElement="_oQIKgvWnEdqea89UKW2qFQ">
          <body>Visibility of the open end must allow access to the object performing the action.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQIKhPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>let host : Classifier = self.context in&#xA;let openend : AssociationEnd = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in&#xA;openend.visibility = #public&#xA;or self.endData->exists(oed | not oed.end = openend&#xA;and (host = oed.end.participant&#xA;or (openend.visibility = #protected&#xA;and host.allSupertypes->includes(oed.end.participant))))&#xA;</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oQIKhfWnEdqea89UKW2qFQ" general="_oP_AivWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oQIKhvWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oQ4YXPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQIKh_WnEdqea89UKW2qFQ" annotatedElement="_oQIKhvWnEdqea89UKW2qFQ">
          <body>The pin on which are put the objects participating in the association at the end not specified by the inputs.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQIKiPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQIKifWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oQR7YPWnEdqea89UKW2qFQ" name="LinkEndCreationData">
      <ownedComment xmi:id="_oQR7YfWnEdqea89UKW2qFQ" annotatedElement="_oQR7YPWnEdqea89UKW2qFQ">
        <body>A link end creation data is not an action. It is an element that identifies links. It identifies one end of a link to be created by a create link action.</body>
      </ownedComment>
      <ownedRule xmi:id="_oQR7YvWnEdqea89UKW2qFQ" name="create_link_action" constrainedElement="_oQR7YPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQR7Y_WnEdqea89UKW2qFQ" annotatedElement="_oQR7YvWnEdqea89UKW2qFQ">
          <body>LinkEndCreationData can only be end data for CreateLinkAction or one of its specializations.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQR7ZPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.LinkAction.oclIsKindOf(CreateLinkAction)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQR7ZfWnEdqea89UKW2qFQ" name="single_input_pin" constrainedElement="_oQR7YPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQR7ZvWnEdqea89UKW2qFQ" annotatedElement="_oQR7ZfWnEdqea89UKW2qFQ">
          <body>Link end creation data for ordered association ends must have a single input pin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, otherwise the action has no input pin for the insertion point.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQR7Z_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>let insertAtPins : Collection = self.insertAt in&#xA;if self.end.ordering = #unordered&#xA;then insertAtPins->size() = 0&#xA;else let insertAtPin : InputPin = insertAts->asSequence()->first() in&#xA;insertAtPins->size() = 1&#xA;and insertAtPin.type = UnlimitedNatural&#xA;and insertAtPin.multiplicity.is(1,1))&#xA;endif&#xA;</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oQR7aPWnEdqea89UKW2qFQ" general="_oQIKYPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oQR7afWnEdqea89UKW2qFQ" name="isReplaceAll" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oQR7avWnEdqea89UKW2qFQ" annotatedElement="_oQR7afWnEdqea89UKW2qFQ">
          <body>Specifies whether the existing links emanating from the object on this end should be destroyed before creating a new link.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oQR7a_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oQR7bPWnEdqea89UKW2qFQ" name="insertAt" type="_oIiUxfWnEdqea89UKW2qFQ" association="_oQ4YYfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQR7bfWnEdqea89UKW2qFQ" annotatedElement="_oQR7bPWnEdqea89UKW2qFQ">
          <body>Specifies where the new link should be inserted for ordered association ends, or where an existing link should be moved to. The type of the input is UnlimitedNatural, but the input cannot be zero. This pin is omitted for association ends that are not ordered.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQR7bvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQR7b_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oQR7cPWnEdqea89UKW2qFQ" name="CreateLinkAction">
      <ownedComment xmi:id="_oQR7cfWnEdqea89UKW2qFQ" annotatedElement="_oQR7cPWnEdqea89UKW2qFQ">
        <body>A create link action is a write link action for creating links.</body>
      </ownedComment>
      <ownedRule xmi:id="_oQR7cvWnEdqea89UKW2qFQ" name="association_not_abstract" constrainedElement="_oQR7cPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQR7c_WnEdqea89UKW2qFQ" annotatedElement="_oQR7cvWnEdqea89UKW2qFQ">
          <body>The association cannot be an abstract classifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQR7dPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.association().isAbstract = #false</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oQR7dfWnEdqea89UKW2qFQ" general="_oQR7gfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oQR7dvWnEdqea89UKW2qFQ" name="endData" type="_oQR7YPWnEdqea89UKW2qFQ" aggregation="composite" redefinedProperty="_oP_AlvWnEdqea89UKW2qFQ" association="_oQ4YZfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQR7d_WnEdqea89UKW2qFQ" annotatedElement="_oQR7dvWnEdqea89UKW2qFQ">
          <body>Specifies ends of association and inputs.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQR7ePWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQR7efWnEdqea89UKW2qFQ" value="2"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oQR7evWnEdqea89UKW2qFQ" name="DestroyLinkAction">
      <ownedComment xmi:id="_oQR7e_WnEdqea89UKW2qFQ" annotatedElement="_oQR7evWnEdqea89UKW2qFQ">
        <body>A destroy link action is a write link action that destroys links and link objects.</body>
      </ownedComment>
      <generalization xmi:id="_oQR7fPWnEdqea89UKW2qFQ" general="_oQR7gfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oQR7ffWnEdqea89UKW2qFQ" name="endData" type="_oQbsePWnEdqea89UKW2qFQ" aggregation="composite" redefinedProperty="_oP_AlvWnEdqea89UKW2qFQ" association="_oRBiUPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQR7fvWnEdqea89UKW2qFQ" annotatedElement="_oQR7ffWnEdqea89UKW2qFQ">
          <body>Specifies ends of association and inputs.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQR7f_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQR7gPWnEdqea89UKW2qFQ" value="2"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oQR7gfWnEdqea89UKW2qFQ" name="WriteLinkAction" isAbstract="true">
      <ownedComment xmi:id="_oQR7gvWnEdqea89UKW2qFQ" annotatedElement="_oQR7gfWnEdqea89UKW2qFQ">
        <body>WriteLinkAction is an abstract class for link actions that create and destroy links.</body>
      </ownedComment>
      <ownedRule xmi:id="_oQR7g_WnEdqea89UKW2qFQ" name="allow_access" constrainedElement="_oQR7gfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQR7hPWnEdqea89UKW2qFQ" annotatedElement="_oQR7g_WnEdqea89UKW2qFQ">
          <body>The visibility of at least one end must allow access to the class using the action.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQR7hfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oQR7hvWnEdqea89UKW2qFQ" general="_oP_AivWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oQR7h_WnEdqea89UKW2qFQ" name="ClearAssociationAction">
      <ownedComment xmi:id="_oQR7iPWnEdqea89UKW2qFQ" annotatedElement="_oQR7h_WnEdqea89UKW2qFQ">
        <body>A clear association action is an action that destroys all links of an association in which a particular object participates.</body>
      </ownedComment>
      <ownedRule xmi:id="_oQR7ifWnEdqea89UKW2qFQ" name="same_type" constrainedElement="_oQR7h_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQR7ivWnEdqea89UKW2qFQ" annotatedElement="_oQR7ifWnEdqea89UKW2qFQ">
          <body>The type of the input pin must be the same as the type of at least one of the association ends of the association.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQR7i_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.association->exists(end.type = self.object.type)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQR7jPWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oQR7h_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQR7jfWnEdqea89UKW2qFQ" annotatedElement="_oQR7jPWnEdqea89UKW2qFQ">
          <body>The multiplicity of the input pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQR7jvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.object.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oQR7j_WnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oQR7kPWnEdqea89UKW2qFQ" name="object" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oQ4YavWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQR7kfWnEdqea89UKW2qFQ" annotatedElement="_oQR7kPWnEdqea89UKW2qFQ">
          <body>Gives the input pin from which is obtained the object whose participation in the association is to be cleared.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQR7kvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQR7k_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oQR7lPWnEdqea89UKW2qFQ" name="association" type="_AwvxoGwNEdq7X4sGURiZYA" association="_oQ4Yb_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQR7lfWnEdqea89UKW2qFQ" annotatedElement="_oQR7lPWnEdqea89UKW2qFQ">
          <body>Association to be cleared.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQR7lvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQR7l_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oQbsYPWnEdqea89UKW2qFQ" name="BroadcastSignalAction">
      <ownedComment xmi:id="_oQbsYfWnEdqea89UKW2qFQ" annotatedElement="_oQbsYPWnEdqea89UKW2qFQ">
        <body>A broadcast signal action is an action that transmits a signal instance to all the potential target objects in the system, which may cause the firing of a state machine transitions or the execution of associated activities of a target object. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately after the signals are sent out. It does not wait for receipt. Any reply messages are ignored and are not transmitted to the requestor.</body>
      </ownedComment>
      <ownedRule xmi:id="_oQbsYvWnEdqea89UKW2qFQ" name="number_and_order" constrainedElement="_oQbsYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbsY_WnEdqea89UKW2qFQ" annotatedElement="_oQbsYvWnEdqea89UKW2qFQ">
          <body>The number and order of argument pins must be the same as the number and order of attributes in the signal.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQbsZPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQbsZfWnEdqea89UKW2qFQ" name="type_ordering_multiplicity" constrainedElement="_oQbsYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbsZvWnEdqea89UKW2qFQ" annotatedElement="_oQbsZfWnEdqea89UKW2qFQ">
          <body>The type, ordering, and multiplicity of an argument pin must be the same as the corresponding attribute of the signal.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQbsZ_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oQbsaPWnEdqea89UKW2qFQ" general="_oIiUyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oQbsafWnEdqea89UKW2qFQ" name="signal" type="_Pu3O0HL0EdqziYxiZo0YtA" association="_oRBiQ_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbsavWnEdqea89UKW2qFQ" annotatedElement="_oQbsafWnEdqea89UKW2qFQ">
          <body>The specification of signal object transmitted to the target objects.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQbsa_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQbsbPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oQbsbfWnEdqea89UKW2qFQ" name="SendObjectAction">
      <ownedComment xmi:id="_oQbsbvWnEdqea89UKW2qFQ" annotatedElement="_oQbsbfWnEdqea89UKW2qFQ">
        <body>A send object action is an action that transmits an object to the target object, where it may invoke behavior such as the firing of state machine transitions or the execution of an activity. The value of the object is available to the execution of invoked behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor.</body>
      </ownedComment>
      <generalization xmi:id="_oQbsb_WnEdqea89UKW2qFQ" general="_oIiUyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oQbscPWnEdqea89UKW2qFQ" name="target" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oQ4Yc_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbscfWnEdqea89UKW2qFQ" annotatedElement="_oQbscPWnEdqea89UKW2qFQ">
          <body>The target object to which the object is sent.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQbscvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQbsc_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oQbsdPWnEdqea89UKW2qFQ" name="request" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" redefinedProperty="_oIiUy_WnEdqea89UKW2qFQ" association="_oRBiQPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbsdfWnEdqea89UKW2qFQ" annotatedElement="_oQbsdPWnEdqea89UKW2qFQ">
          <body>The request object, which is transmitted to the target object. The object may be copied in transmission, so identity might not be preserved. (Specialized from InvocationActon.argument)</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQbsdvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQbsd_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oQbsePWnEdqea89UKW2qFQ" name="LinkEndDestructionData">
      <ownedComment xmi:id="_oQbsefWnEdqea89UKW2qFQ" annotatedElement="_oQbsePWnEdqea89UKW2qFQ">
        <body>A link end destruction data is not an action. It is an element that identifies links. It identifies one end of a link to be destroyed by destroy link action.</body>
      </ownedComment>
      <ownedRule xmi:id="_oQbsevWnEdqea89UKW2qFQ" name="destroy_link_action" constrainedElement="_oQbsePWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbse_WnEdqea89UKW2qFQ" annotatedElement="_oQbsevWnEdqea89UKW2qFQ">
          <body>LinkEndDestructionData can only be end data for DestroyLinkAction or one of its specializations.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQbsfPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQbsffWnEdqea89UKW2qFQ" name="unlimited_natural_and_multiplicity" constrainedElement="_oQbsePWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbsfvWnEdqea89UKW2qFQ" annotatedElement="_oQbsffWnEdqea89UKW2qFQ">
          <body>LinkEndDestructionData for ordered nonunique association ends must have a single destroyAt input pin if isDestroyDuplicates is false. It must be of type UnlimitedNatural and have a multiplicity of 1..1. Otherwise, the action has no input pin for the removal position.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQbsf_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oQbsgPWnEdqea89UKW2qFQ" general="_oQIKYPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oQbsgfWnEdqea89UKW2qFQ" name="isDestroyDuplicates" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oQbsgvWnEdqea89UKW2qFQ" annotatedElement="_oQbsgfWnEdqea89UKW2qFQ">
          <body>Specifies whether to destroy duplicates of the value in nonunique association ends.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oQbsg_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oQbshPWnEdqea89UKW2qFQ" name="destroyAt" type="_oIiUxfWnEdqea89UKW2qFQ" association="_oRBiTPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbshfWnEdqea89UKW2qFQ" annotatedElement="_oQbshPWnEdqea89UKW2qFQ">
          <body>Specifies the position of an existing link to be destroyed in ordered nonunique association ends. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQbshvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQbsh_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oQbsiPWnEdqea89UKW2qFQ" name="ValueSpecificationAction">
      <ownedComment xmi:id="_oQbsifWnEdqea89UKW2qFQ" annotatedElement="_oQbsiPWnEdqea89UKW2qFQ">
        <body>A value specification action is an action that evaluates a value specification.</body>
      </ownedComment>
      <ownedRule xmi:id="_oQbsivWnEdqea89UKW2qFQ" name="compatible_type" constrainedElement="_oQbsiPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbsi_WnEdqea89UKW2qFQ" annotatedElement="_oQbsivWnEdqea89UKW2qFQ">
          <body>The type of value specification must be compatible with the type of the result pin.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQbsjPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQbsjfWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oQbsiPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbsjvWnEdqea89UKW2qFQ" annotatedElement="_oQbsjfWnEdqea89UKW2qFQ">
          <body>The multiplicity of the result pin is 1..1</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQbsj_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oQbskPWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oQbskfWnEdqea89UKW2qFQ" name="value" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" association="_oRBiVfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbskvWnEdqea89UKW2qFQ" annotatedElement="_oQbskfWnEdqea89UKW2qFQ">
          <body>Value specification to be evaluated.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQbsk_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQbslPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oQbslfWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oRBiWfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQbslvWnEdqea89UKW2qFQ" annotatedElement="_oQbslfWnEdqea89UKW2qFQ">
          <body>Gives the output pin on which the result is put.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQbsl_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQbsmPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQk2UPWnEdqea89UKW2qFQ" name="A_classifier_createObjectAction" memberEnd="_oPiUk_WnEdqea89UKW2qFQ _oQk2UfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oQk2UfWnEdqea89UKW2qFQ" type="_oPiUhPWnEdqea89UKW2qFQ" association="_oQk2UPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQk2UvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQk2U_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQk2VPWnEdqea89UKW2qFQ" name="A_result_createObjectAction" memberEnd="_oPiUl_WnEdqea89UKW2qFQ _oQk2VvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQk2VfWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQk2VvWnEdqea89UKW2qFQ" type="_oPiUhPWnEdqea89UKW2qFQ" association="_oQk2VPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQk2V_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQk2WPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQk2WfWnEdqea89UKW2qFQ" name="A_target_destroyObjectAction" memberEnd="_oPsFj_WnEdqea89UKW2qFQ _oQk2W_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQk2WvWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQk2W_WnEdqea89UKW2qFQ" type="_oPsFgPWnEdqea89UKW2qFQ" association="_oQk2WfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQk2XPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQk2XfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQk2XvWnEdqea89UKW2qFQ" name="A_first_testIdentityAction" memberEnd="_oPsFn_WnEdqea89UKW2qFQ _oQk2YPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQk2X_WnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQk2YPWnEdqea89UKW2qFQ" type="_oPsFk_WnEdqea89UKW2qFQ" association="_oQk2XvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQk2YfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQk2YvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQk2Y_WnEdqea89UKW2qFQ" name="A_second_testIdentityAction" memberEnd="_oPsFo_WnEdqea89UKW2qFQ _oQk2ZfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQk2ZPWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQk2ZfWnEdqea89UKW2qFQ" type="_oPsFk_WnEdqea89UKW2qFQ" association="_oQk2Y_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQk2ZvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQk2Z_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQk2aPWnEdqea89UKW2qFQ" name="A_result_testIdentityAction" memberEnd="_oPsFp_WnEdqea89UKW2qFQ _oQk2avWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQk2afWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQk2avWnEdqea89UKW2qFQ" type="_oPsFk_WnEdqea89UKW2qFQ" association="_oQk2aPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQk2a_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQk2bPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQk2bfWnEdqea89UKW2qFQ" name="A_result_readSelfAction" memberEnd="_oPsFuvWnEdqea89UKW2qFQ _oQk2b_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQk2bvWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQk2b_WnEdqea89UKW2qFQ" type="_oPsFq_WnEdqea89UKW2qFQ" association="_oQk2bfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQk2cPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQk2cfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQk2cvWnEdqea89UKW2qFQ" name="A_structuralFeatureAction_structuralFeature" memberEnd="_oP1PgvWnEdqea89UKW2qFQ _oQk2c_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oQk2c_WnEdqea89UKW2qFQ" type="_oP1PcPWnEdqea89UKW2qFQ" association="_oQk2cvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQk2dPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQk2dfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQunUPWnEdqea89UKW2qFQ" name="A_object_structuralFeatureAction" memberEnd="_oP1PhvWnEdqea89UKW2qFQ _oQunUvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQunUfWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQunUvWnEdqea89UKW2qFQ" type="_oP1PcPWnEdqea89UKW2qFQ" association="_oQunUPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQunU_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQunVPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQunVfWnEdqea89UKW2qFQ" name="A_result_readStructuralFeatureAction" memberEnd="_oP1Pk_WnEdqea89UKW2qFQ _oQunV_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQunVvWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQunV_WnEdqea89UKW2qFQ" type="_oP1PivWnEdqea89UKW2qFQ" association="_oQunVfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQunWPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQunWfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQunWvWnEdqea89UKW2qFQ" name="A_value_writeStructuralFeatureAction" memberEnd="_oP1PoPWnEdqea89UKW2qFQ _oQunXPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQunW_WnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQunXPWnEdqea89UKW2qFQ" type="_oP1Pl_WnEdqea89UKW2qFQ" association="_oQunWvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQunXfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQunXvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQunX_WnEdqea89UKW2qFQ" name="A_insertAt_addStructuralFeatureValueAction" memberEnd="_oP_AhvWnEdqea89UKW2qFQ _oQunYfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQunYPWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQunYfWnEdqea89UKW2qFQ" type="_oP_AffWnEdqea89UKW2qFQ" association="_oQunX_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQunYvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQunY_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQ4YUPWnEdqea89UKW2qFQ" name="A_endData_linkAction" memberEnd="_oP_AlvWnEdqea89UKW2qFQ _oQ4YUfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oQ4YUfWnEdqea89UKW2qFQ" type="_oP_AivWnEdqea89UKW2qFQ" association="_oQ4YUPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQ4YUvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQ4YU_WnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQ4YVPWnEdqea89UKW2qFQ" name="A_value_linkEndData" memberEnd="_oQIKbPWnEdqea89UKW2qFQ _oQ4YVfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oQ4YVfWnEdqea89UKW2qFQ" type="_oQIKYPWnEdqea89UKW2qFQ" association="_oQ4YVPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQ4YVvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQ4YV_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQ4YWPWnEdqea89UKW2qFQ" name="A_end_linkEndData" memberEnd="_oQIKcPWnEdqea89UKW2qFQ _oQ4YWfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oQ4YWfWnEdqea89UKW2qFQ" type="_oQIKYPWnEdqea89UKW2qFQ" association="_oQ4YWPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQ4YWvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQ4YW_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQ4YXPWnEdqea89UKW2qFQ" name="A_result_readLinkAction" memberEnd="_oQIKhvWnEdqea89UKW2qFQ _oQ4YXvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQ4YXfWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQ4YXvWnEdqea89UKW2qFQ" type="_oQIKdPWnEdqea89UKW2qFQ" association="_oQ4YXPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQ4YX_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQ4YYPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQ4YYfWnEdqea89UKW2qFQ" name="A_insertAt_linkEndCreationData" memberEnd="_oQR7bPWnEdqea89UKW2qFQ _oQ4YYvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oQ4YYvWnEdqea89UKW2qFQ" type="_oQR7YPWnEdqea89UKW2qFQ" association="_oQ4YYfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQ4YY_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQ4YZPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQ4YZfWnEdqea89UKW2qFQ" name="A_endData_createLinkAction" memberEnd="_oQR7dvWnEdqea89UKW2qFQ _oQ4YZ_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQ4YZvWnEdqea89UKW2qFQ" general="_oQ4YUPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQ4YZ_WnEdqea89UKW2qFQ" type="_oQR7cPWnEdqea89UKW2qFQ" redefinedProperty="_oQ4YUfWnEdqea89UKW2qFQ" association="_oQ4YZfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQ4YaPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQ4YafWnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQ4YavWnEdqea89UKW2qFQ" name="A_object_clearAssociationAction" memberEnd="_oQR7kPWnEdqea89UKW2qFQ _oQ4YbPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQ4Ya_WnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQ4YbPWnEdqea89UKW2qFQ" type="_oQR7h_WnEdqea89UKW2qFQ" association="_oQ4YavWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQ4YbfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQ4YbvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQ4Yb_WnEdqea89UKW2qFQ" name="A_association_clearAssociationAction" memberEnd="_oQR7lPWnEdqea89UKW2qFQ _oQ4YcPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oQ4YcPWnEdqea89UKW2qFQ" type="_oQR7h_WnEdqea89UKW2qFQ" association="_oQ4Yb_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQ4YcfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQ4YcvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oQ4Yc_WnEdqea89UKW2qFQ" name="A_target_sendObjectAction" memberEnd="_oQbscPWnEdqea89UKW2qFQ _oQ4YdfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oQ4YdPWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oQ4YdfWnEdqea89UKW2qFQ" type="_oQbsbfWnEdqea89UKW2qFQ" redefinedProperty="_oI1Pr_WnEdqea89UKW2qFQ" association="_oQ4Yc_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oRBiQPWnEdqea89UKW2qFQ" name="A_request_sendObjectAction" memberEnd="_oQbsdPWnEdqea89UKW2qFQ _oRBiQvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oRBiQfWnEdqea89UKW2qFQ" general="_oI1PpfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oRBiQvWnEdqea89UKW2qFQ" type="_oQbsbfWnEdqea89UKW2qFQ" redefinedProperty="_oI1Pp_WnEdqea89UKW2qFQ" association="_oRBiQPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oRBiQ_WnEdqea89UKW2qFQ" name="A_signal_broadcastSignalAction" memberEnd="_oQbsafWnEdqea89UKW2qFQ _oRBiRPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oRBiRPWnEdqea89UKW2qFQ" type="_oQbsYPWnEdqea89UKW2qFQ" association="_oRBiQ_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRBiRfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRBiRvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oRBiR_WnEdqea89UKW2qFQ" name="A_removeAt_removeStructuralFeatureValueAction" memberEnd="_oP_AefWnEdqea89UKW2qFQ _oRBiSfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oRBiSPWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oRBiSfWnEdqea89UKW2qFQ" type="_oP_AcPWnEdqea89UKW2qFQ" association="_oRBiR_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRBiSvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRBiS_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oRBiTPWnEdqea89UKW2qFQ" name="A_destroyAt_linkEndDestructionData" memberEnd="_oQbshPWnEdqea89UKW2qFQ _oRBiTfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oRBiTfWnEdqea89UKW2qFQ" type="_oQbsePWnEdqea89UKW2qFQ" association="_oRBiTPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRBiTvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRBiT_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oRBiUPWnEdqea89UKW2qFQ" name="A_endData_destroyLinkAction" memberEnd="_oQR7ffWnEdqea89UKW2qFQ _oRBiUvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oRBiUfWnEdqea89UKW2qFQ" general="_oQ4YUPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oRBiUvWnEdqea89UKW2qFQ" type="_oQR7evWnEdqea89UKW2qFQ" redefinedProperty="_oQ4YUfWnEdqea89UKW2qFQ" association="_oRBiUPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRBiU_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRBiVPWnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oRBiVfWnEdqea89UKW2qFQ" name="A_value_valueSpecificationAction" memberEnd="_oQbskfWnEdqea89UKW2qFQ _oRBiVvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oRBiVvWnEdqea89UKW2qFQ" type="_oQbsiPWnEdqea89UKW2qFQ" association="_oRBiVfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRBiV_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRBiWPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oRBiWfWnEdqea89UKW2qFQ" name="A_result_valueSpecificationAction" memberEnd="_oQbslfWnEdqea89UKW2qFQ _oRBiW_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oRBiWvWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oRBiW_WnEdqea89UKW2qFQ" type="_oQbsiPWnEdqea89UKW2qFQ" association="_oRBiWfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRBiXPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRBiXfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oRBiXvWnEdqea89UKW2qFQ" name="A_inputValue_linkAction" memberEnd="_oP_AmvWnEdqea89UKW2qFQ _oRBiYPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oRBiX_WnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oRBiYPWnEdqea89UKW2qFQ" type="_oP_AivWnEdqea89UKW2qFQ" redefinedProperty="_oI1Pr_WnEdqea89UKW2qFQ" association="_oRBiXvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DylKEH4YEdq7cMP_l1l5Gg" name="TimeExpression">
      <ownedComment xmi:id="_oRn_MPWnEdqea89UKW2qFQ" annotatedElement="_DylKEH4YEdq7cMP_l1l5Gg">
        <body>A time expression defines a value specification that represents a time value.</body>
      </ownedComment>
      <generalization xmi:id="_oRn_MfWnEdqea89UKW2qFQ" general="_oBFBwPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oRn_MvWnEdqea89UKW2qFQ" name="expr" type="_oBFBwPWnEdqea89UKW2qFQ" association="_oSErLvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRn_M_WnEdqea89UKW2qFQ" annotatedElement="_oRn_MvWnEdqea89UKW2qFQ">
          <body>The value of the time expression.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRn_NPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRn_NfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oRn_NvWnEdqea89UKW2qFQ" name="observation" type="_oRxJRvWnEdqea89UKW2qFQ" association="_oSErLPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRn_N_WnEdqea89UKW2qFQ" annotatedElement="_oRn_NvWnEdqea89UKW2qFQ">
          <body>Refers to the time and duration observations that are involved in expr.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRn_OPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRn_OfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_JdkW8H4YEdq7cMP_l1l5Gg" name="stringValue" isQuery="true">
        <ownedParameter xmi:id="_JdkW8X4YEdq7cMP_l1l5Gg" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-Ixo8H4XEdq7cMP_l1l5Gg" name="Duration">
      <ownedComment xmi:id="_oRn_OvWnEdqea89UKW2qFQ" annotatedElement="_-Ixo8H4XEdq7cMP_l1l5Gg">
        <body>Duration defines a value specification that specifies the temporal distance between two time instants.</body>
      </ownedComment>
      <generalization xmi:id="_oRn_O_WnEdqea89UKW2qFQ" general="_oBFBwPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oRn_PPWnEdqea89UKW2qFQ" name="expr" type="_oBFBwPWnEdqea89UKW2qFQ" association="_oSErMPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRn_PfWnEdqea89UKW2qFQ" annotatedElement="_oRn_PPWnEdqea89UKW2qFQ">
          <body>The value of the Duration.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRn_PvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRn_P_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oRn_QPWnEdqea89UKW2qFQ" name="observation" type="_oRxJRvWnEdqea89UKW2qFQ" association="_oSErKvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRn_QfWnEdqea89UKW2qFQ" annotatedElement="_oRn_QPWnEdqea89UKW2qFQ">
          <body>Refers to the time and duration observations that are involved in expr.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRn_QvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRn_Q_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_I3a88H4YEdq7cMP_l1l5Gg" name="stringValue" isQuery="true">
        <ownedParameter xmi:id="_I3a88X4YEdq7cMP_l1l5Gg" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oRn_RPWnEdqea89UKW2qFQ" name="DurationInterval">
      <ownedComment xmi:id="_oRn_RfWnEdqea89UKW2qFQ" annotatedElement="_oRn_RPWnEdqea89UKW2qFQ">
        <body>A duration interval defines the range between two durations.</body>
      </ownedComment>
      <generalization xmi:id="_oRn_RvWnEdqea89UKW2qFQ" general="_oRxJNvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oRn_R_WnEdqea89UKW2qFQ" name="min" type="_-Ixo8H4XEdq7cMP_l1l5Gg" redefinedProperty="_oRxJOfWnEdqea89UKW2qFQ" association="_oR66OfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRn_SPWnEdqea89UKW2qFQ" annotatedElement="_oRn_R_WnEdqea89UKW2qFQ">
          <body>Refers to the Duration denoting the minimum value of the range.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oRn_SfWnEdqea89UKW2qFQ" name="max" type="_-Ixo8H4XEdq7cMP_l1l5Gg" redefinedProperty="_oRxJPfWnEdqea89UKW2qFQ" association="_oR66PPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRn_SvWnEdqea89UKW2qFQ" annotatedElement="_oRn_SfWnEdqea89UKW2qFQ">
          <body>Refers to the Duration denoting the maximum value of the range.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oRn_S_WnEdqea89UKW2qFQ" name="TimeConstraint">
      <ownedComment xmi:id="_oRn_TPWnEdqea89UKW2qFQ" annotatedElement="_oRn_S_WnEdqea89UKW2qFQ">
        <body>A time constraint is a constraint that refers to a time interval.</body>
      </ownedComment>
      <generalization xmi:id="_oRn_TfWnEdqea89UKW2qFQ" general="_oRxJL_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oRn_TvWnEdqea89UKW2qFQ" name="specification" type="_oRn_V_WnEdqea89UKW2qFQ" aggregation="composite" redefinedProperty="_oRxJMvWnEdqea89UKW2qFQ" association="_oR66RfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRn_T_WnEdqea89UKW2qFQ" annotatedElement="_oRn_TvWnEdqea89UKW2qFQ">
          <body>A condition that must be true when evaluated in order for the constraint to be satisfied.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRn_UPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRn_UfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oRn_UvWnEdqea89UKW2qFQ" name="firstEvent" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oRn_U_WnEdqea89UKW2qFQ" annotatedElement="_oRn_UvWnEdqea89UKW2qFQ">
          <body>The value of firstEvent is related to constrainedElement. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters constrainedElement. If firstEvent is false, then the corresponding observation event is the last time instant the execution is within constrainedElement.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRn_VPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRn_VfWnEdqea89UKW2qFQ"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oRn_VvWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" value="true"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oRn_V_WnEdqea89UKW2qFQ" name="TimeInterval">
      <ownedComment xmi:id="_oRn_WPWnEdqea89UKW2qFQ" annotatedElement="_oRn_V_WnEdqea89UKW2qFQ">
        <body>A time interval defines the range between two time expressions.</body>
      </ownedComment>
      <generalization xmi:id="_oRn_WfWnEdqea89UKW2qFQ" general="_oRxJNvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oRn_WvWnEdqea89UKW2qFQ" name="max" type="_DylKEH4YEdq7cMP_l1l5Gg" redefinedProperty="_oRxJPfWnEdqea89UKW2qFQ" association="_oR66P_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRn_W_WnEdqea89UKW2qFQ" annotatedElement="_oRn_WvWnEdqea89UKW2qFQ">
          <body>Refers to the TimeExpression denoting the maximum value of the range.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oRn_XPWnEdqea89UKW2qFQ" name="min" type="_DylKEH4YEdq7cMP_l1l5Gg" redefinedProperty="_oRxJOfWnEdqea89UKW2qFQ" association="_oR66QvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRn_XfWnEdqea89UKW2qFQ" annotatedElement="_oRn_XPWnEdqea89UKW2qFQ">
          <body>Refers to the TimeExpression denoting the minimum value of the range.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oRxJIPWnEdqea89UKW2qFQ" name="DurationConstraint">
      <ownedComment xmi:id="_oRxJIfWnEdqea89UKW2qFQ" annotatedElement="_oRxJIPWnEdqea89UKW2qFQ">
        <body>A duration constraint is a constraint that refers to a duration interval.</body>
      </ownedComment>
      <ownedRule xmi:id="_oRxJIvWnEdqea89UKW2qFQ" name="first_event_multiplicity" constrainedElement="_oRxJIPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRxJI_WnEdqea89UKW2qFQ" annotatedElement="_oRxJIvWnEdqea89UKW2qFQ">
          <body>The multiplicity of firstEvent must be 2 if the multiplicity of constrainedElement is 2. Otherwise the multiplicity of firstEvent is 0.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oRxJJPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>if (constrainedElement->size() =2)&#xD;&#xA;  then (firstEvent->size() = 2) else (firstEvent->size() = 0)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oRxJJfWnEdqea89UKW2qFQ" general="_oRxJL_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oRxJJvWnEdqea89UKW2qFQ" name="specification" type="_oRn_RPWnEdqea89UKW2qFQ" aggregation="composite" redefinedProperty="_oRxJMvWnEdqea89UKW2qFQ" association="_oSErIPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRxJJ_WnEdqea89UKW2qFQ" annotatedElement="_oRxJJvWnEdqea89UKW2qFQ">
          <body>The interval constraining the duration.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRxJKPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRxJKfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oRxJKvWnEdqea89UKW2qFQ" name="firstEvent" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oRxJK_WnEdqea89UKW2qFQ" annotatedElement="_oRxJKvWnEdqea89UKW2qFQ">
          <body>The value of firstEvent[i] is related to constrainedElement[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters constrainedElement[i]. If firstEvent[i] is false, then the corresponding observation event is the last time instant the execution is within constrainedElement[i]. Default value is true applied when constrainedElement[i] refers an element that represents only one time instant.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRxJLPWnEdqea89UKW2qFQ" value="2"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRxJLfWnEdqea89UKW2qFQ"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oRxJLvWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" value="true"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oRxJL_WnEdqea89UKW2qFQ" name="IntervalConstraint">
      <ownedComment xmi:id="_oRxJMPWnEdqea89UKW2qFQ" annotatedElement="_oRxJL_WnEdqea89UKW2qFQ">
        <body>An interval constraint is a constraint that refers to an interval.</body>
      </ownedComment>
      <generalization xmi:id="_oRxJMfWnEdqea89UKW2qFQ" general="_oBht0PWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oRxJMvWnEdqea89UKW2qFQ" name="specification" type="_oRxJNvWnEdqea89UKW2qFQ" aggregation="composite" redefinedProperty="_oBht3fWnEdqea89UKW2qFQ" association="_oSErJ_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRxJM_WnEdqea89UKW2qFQ" annotatedElement="_oRxJMvWnEdqea89UKW2qFQ">
          <body>A condition that must be true when evaluated in order for the constraint to be satisfied.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRxJNPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRxJNfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oRxJNvWnEdqea89UKW2qFQ" name="Interval">
      <ownedComment xmi:id="_oRxJN_WnEdqea89UKW2qFQ" annotatedElement="_oRxJNvWnEdqea89UKW2qFQ">
        <body>An interval defines the range between two value specifications.</body>
      </ownedComment>
      <generalization xmi:id="_oRxJOPWnEdqea89UKW2qFQ" general="_oBFBwPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oRxJOfWnEdqea89UKW2qFQ" name="min" type="_oBFBwPWnEdqea89UKW2qFQ" association="_oSErI_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRxJOvWnEdqea89UKW2qFQ" annotatedElement="_oRxJOfWnEdqea89UKW2qFQ">
          <body>Refers to the ValueSpecification denoting the minimum value of the range.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRxJO_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRxJPPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oRxJPfWnEdqea89UKW2qFQ" name="max" type="_oBFBwPWnEdqea89UKW2qFQ" association="_oSErJfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRxJPvWnEdqea89UKW2qFQ" annotatedElement="_oRxJPfWnEdqea89UKW2qFQ">
          <body>Refers to the ValueSpecification denoting the maximum value of the range.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRxJP_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRxJQPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oRxJRvWnEdqea89UKW2qFQ" name="Observation" isAbstract="true">
      <ownedComment xmi:id="_oRxJR_WnEdqea89UKW2qFQ" annotatedElement="_oRxJRvWnEdqea89UKW2qFQ">
        <body>Observation is a superclass of TimeObservation and DurationObservation in order for TimeExpression and Duration to refer to either in a simple way.</body>
      </ownedComment>
      <generalization xmi:id="_oRxJSPWnEdqea89UKW2qFQ" general="_jKxnwGwLEdq7X4sGURiZYA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oR66IPWnEdqea89UKW2qFQ" name="TimeObservation">
      <ownedComment xmi:id="_oR66IfWnEdqea89UKW2qFQ" annotatedElement="_oR66IPWnEdqea89UKW2qFQ">
        <body>A time observation is a reference to a time instant during an execution. It points out the element in the model to observe and whether the observation is when this model element is entered or when it is exited.</body>
      </ownedComment>
      <generalization xmi:id="_oR66IvWnEdqea89UKW2qFQ" general="_oRxJRvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oR66I_WnEdqea89UKW2qFQ" name="event" type="_csVgUGvtEdqG6fBIPwe-mw" association="_oSErMvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oR66JPWnEdqea89UKW2qFQ" annotatedElement="_oR66I_WnEdqea89UKW2qFQ">
          <body>The observation is determined by the entering or exiting of the event element during execution.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oR66JfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oR66JvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oR66J_WnEdqea89UKW2qFQ" name="firstEvent" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oR66KPWnEdqea89UKW2qFQ" annotatedElement="_oR66J_WnEdqea89UKW2qFQ">
          <body>The value of firstEvent is related to event. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters event. If firstEvent is false, then the corresponding observation event is the time instant the execution exits event.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oR66KfWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" value="true"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oR66KvWnEdqea89UKW2qFQ" name="DurationObservation">
      <ownedComment xmi:id="_oR66K_WnEdqea89UKW2qFQ" annotatedElement="_oR66KvWnEdqea89UKW2qFQ">
        <body>A duration observation is a reference to a duration during an execution. It points out the element(s) in the model to observe and whether the observations are when this model element is entered or when it is exited.</body>
      </ownedComment>
      <ownedRule xmi:id="_oR66LPWnEdqea89UKW2qFQ" name="first_event_multiplicity" constrainedElement="_oR66KvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oR66LfWnEdqea89UKW2qFQ" annotatedElement="_oR66LPWnEdqea89UKW2qFQ">
          <body>The multiplicity of firstEvent must be 2 if the multiplicity of event is 2. Otherwise the multiplicity of firstEvent is 0.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oR66LvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>if (event->size() = 2)&#xD;&#xA;  then (firstEvent->size() = 2) else (firstEvent->size() = 0)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oR66L_WnEdqea89UKW2qFQ" general="_oRxJRvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oR66MPWnEdqea89UKW2qFQ" name="event" type="_csVgUGvtEdqG6fBIPwe-mw" association="_oSErNPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oR66MfWnEdqea89UKW2qFQ" annotatedElement="_oR66MPWnEdqea89UKW2qFQ">
          <body>The observation is determined by the entering or exiting of the event element during execution.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oR66MvWnEdqea89UKW2qFQ" value="2"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oR66M_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oR66NPWnEdqea89UKW2qFQ" name="firstEvent" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oR66NfWnEdqea89UKW2qFQ" annotatedElement="_oR66NPWnEdqea89UKW2qFQ">
          <body>The value of firstEvent[i] is related to event[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters event[i]. If firstEvent[i] is false, then the corresponding observation event is the time instant the execution exits event[i]. Default value is true applied when event[i] refers an element that represents only one time instant.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oR66NvWnEdqea89UKW2qFQ" value="2"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oR66N_WnEdqea89UKW2qFQ"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oR66OPWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" value="true"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oR66OfWnEdqea89UKW2qFQ" name="A_min_durationInterval" memberEnd="_oRn_R_WnEdqea89UKW2qFQ _oR66O_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oR66OvWnEdqea89UKW2qFQ" general="_oSErI_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oR66O_WnEdqea89UKW2qFQ" type="_oRn_RPWnEdqea89UKW2qFQ" redefinedProperty="_oSErJPWnEdqea89UKW2qFQ" association="_oR66OfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oR66PPWnEdqea89UKW2qFQ" name="A_max_durationInterval" memberEnd="_oRn_SfWnEdqea89UKW2qFQ _oR66PvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oR66PfWnEdqea89UKW2qFQ" general="_oSErJfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oR66PvWnEdqea89UKW2qFQ" type="_oRn_RPWnEdqea89UKW2qFQ" redefinedProperty="_oSErJvWnEdqea89UKW2qFQ" association="_oR66PPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oR66P_WnEdqea89UKW2qFQ" name="A_max_timeInterval" memberEnd="_oRn_WvWnEdqea89UKW2qFQ _oR66QfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oR66QPWnEdqea89UKW2qFQ" general="_oSErJfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oR66QfWnEdqea89UKW2qFQ" type="_oRn_V_WnEdqea89UKW2qFQ" redefinedProperty="_oSErJvWnEdqea89UKW2qFQ" association="_oR66P_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oR66QvWnEdqea89UKW2qFQ" name="A_min_timeInterval" memberEnd="_oRn_XPWnEdqea89UKW2qFQ _oR66RPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oR66Q_WnEdqea89UKW2qFQ" general="_oSErI_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oR66RPWnEdqea89UKW2qFQ" type="_oRn_V_WnEdqea89UKW2qFQ" redefinedProperty="_oSErJPWnEdqea89UKW2qFQ" association="_oR66QvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oR66RfWnEdqea89UKW2qFQ" name="A_specification_timeConstraint" memberEnd="_oRn_TvWnEdqea89UKW2qFQ _oR66R_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oR66RvWnEdqea89UKW2qFQ" general="_oSErJ_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oR66R_WnEdqea89UKW2qFQ" type="_oRn_S_WnEdqea89UKW2qFQ" redefinedProperty="_oSErKfWnEdqea89UKW2qFQ" association="_oR66RfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSErIPWnEdqea89UKW2qFQ" name="A_specification_durationConstraint" memberEnd="_oRxJJvWnEdqea89UKW2qFQ _oSErIvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oSErIfWnEdqea89UKW2qFQ" general="_oSErJ_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oSErIvWnEdqea89UKW2qFQ" type="_oRxJIPWnEdqea89UKW2qFQ" redefinedProperty="_oSErKfWnEdqea89UKW2qFQ" association="_oSErIPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSErI_WnEdqea89UKW2qFQ" name="A_min_interval" memberEnd="_oRxJOfWnEdqea89UKW2qFQ _oSErJPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oSErJPWnEdqea89UKW2qFQ" type="_oRxJNvWnEdqea89UKW2qFQ" association="_oSErI_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSErJfWnEdqea89UKW2qFQ" name="A_max_interval" memberEnd="_oRxJPfWnEdqea89UKW2qFQ _oSErJvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oSErJvWnEdqea89UKW2qFQ" type="_oRxJNvWnEdqea89UKW2qFQ" association="_oSErJfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSErJ_WnEdqea89UKW2qFQ" name="A_specification_intervalConstraint" memberEnd="_oRxJMvWnEdqea89UKW2qFQ _oSErKfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oSErKPWnEdqea89UKW2qFQ" general="_oC3xi_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oSErKfWnEdqea89UKW2qFQ" type="_oRxJL_WnEdqea89UKW2qFQ" association="_oSErJ_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSErKvWnEdqea89UKW2qFQ" name="A_observation_duration" memberEnd="_oRn_QPWnEdqea89UKW2qFQ _oSErK_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oSErK_WnEdqea89UKW2qFQ" type="_-Ixo8H4XEdq7cMP_l1l5Gg" association="_oSErKvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSErLPWnEdqea89UKW2qFQ" name="A_observation_timeExpression" memberEnd="_oRn_NvWnEdqea89UKW2qFQ _oSErLfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oSErLfWnEdqea89UKW2qFQ" type="_DylKEH4YEdq7cMP_l1l5Gg" association="_oSErLPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oM_-APWnEdqea89UKW2qFQ" name="A_when_timeEvent" memberEnd="_oM_-AvWnEdqea89UKW2qFQ _oM20C_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oM_-AfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oM_-AvWnEdqea89UKW2qFQ" visibility="public" type="_oM20BfWnEdqea89UKW2qFQ" association="_oM_-APWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSErLvWnEdqea89UKW2qFQ" name="A_expr_timeExpression" memberEnd="_oRn_MvWnEdqea89UKW2qFQ _oSErL_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oSErL_WnEdqea89UKW2qFQ" type="_DylKEH4YEdq7cMP_l1l5Gg" association="_oSErLvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSErMPWnEdqea89UKW2qFQ" name="A_expr_duration" memberEnd="_oRn_PPWnEdqea89UKW2qFQ _oSErMfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oSErMfWnEdqea89UKW2qFQ" type="_-Ixo8H4XEdq7cMP_l1l5Gg" association="_oSErMPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSErMvWnEdqea89UKW2qFQ" name="A_event_timeObservation" memberEnd="_oR66I_WnEdqea89UKW2qFQ _oSErM_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oSErM_WnEdqea89UKW2qFQ" type="_oR66IPWnEdqea89UKW2qFQ" association="_oSErMvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSErNPWnEdqea89UKW2qFQ" name="A_event_durationObservation" memberEnd="_oR66MPWnEdqea89UKW2qFQ _oSErNfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oSErNfWnEdqea89UKW2qFQ" type="_oR66KvWnEdqea89UKW2qFQ" association="_oSErNPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIiUyPWnEdqea89UKW2qFQ" name="InvocationAction" isAbstract="true">
      <ownedComment xmi:id="_oIiUyfWnEdqea89UKW2qFQ" annotatedElement="_oIiUyPWnEdqea89UKW2qFQ">
        <body>InvocationAction is an abstract class for the various actions that invoke behavior.</body>
      </ownedComment>
      <ownedComment xmi:id="_oSErNvWnEdqea89UKW2qFQ" annotatedElement="_oIiUyPWnEdqea89UKW2qFQ">
        <body>In addition to targeting an object, invocation actions can also invoke behavioral features on ports from where the invocation requests are routed onwards on links deriving from attached connectors. Invocation actions may also be sent to a target via a given port, either on the sending object or on another object.</body>
      </ownedComment>
      <ownedRule xmi:id="_oSErN_WnEdqea89UKW2qFQ" name="on_port_receiver" constrainedElement="_oIiUyPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSErOPWnEdqea89UKW2qFQ" annotatedElement="_oSErN_WnEdqea89UKW2qFQ">
          <body>The onPort must be a port on the receiver object.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSErOfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIiUyvWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oIiUy_WnEdqea89UKW2qFQ" name="argument" type="_oIiUxfWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oI1PpfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIiUzPWnEdqea89UKW2qFQ" annotatedElement="_oIiUy_WnEdqea89UKW2qFQ">
          <body>Specification of the ordered set of argument values that appears during execution.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIiUzfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIiUzvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSN1EPWnEdqea89UKW2qFQ" name="onPort" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_oSN1HfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSN1EfWnEdqea89UKW2qFQ" annotatedElement="_oSN1EPWnEdqea89UKW2qFQ">
          <body>A optional port of the receiver object on which the behavioral feature is invoked.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSN1EvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSN1E_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oMtDCvWnEdqea89UKW2qFQ" name="Trigger">
      <ownedComment xmi:id="_oMtDC_WnEdqea89UKW2qFQ" annotatedElement="_oMtDCvWnEdqea89UKW2qFQ">
        <body>A trigger relates an event to a behavior that may affect an instance of the classifier.</body>
      </ownedComment>
      <ownedComment xmi:id="_oSN1FPWnEdqea89UKW2qFQ" annotatedElement="_oMtDCvWnEdqea89UKW2qFQ">
        <body>A trigger specification may be qualified by the port on which the event occurred.</body>
      </ownedComment>
      <generalization xmi:id="_oMtDDPWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oMtDDfWnEdqea89UKW2qFQ" name="event" type="_oM20GfWnEdqea89UKW2qFQ" association="_oNJu5fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMtDDvWnEdqea89UKW2qFQ" annotatedElement="_oMtDDfWnEdqea89UKW2qFQ">
          <body>The event that causes the trigger.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMtDD_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMtDEPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSN1FfWnEdqea89UKW2qFQ" name="port" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_oSN1GfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSN1FvWnEdqea89UKW2qFQ" annotatedElement="_oSN1FfWnEdqea89UKW2qFQ">
          <body>A optional port of the receiver object on which the behavioral feature is invoked.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSN1F_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSN1GPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSN1GfWnEdqea89UKW2qFQ" name="A_port_trigger" memberEnd="_oSN1FfWnEdqea89UKW2qFQ _oSN1GvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oSN1GvWnEdqea89UKW2qFQ" type="_oMtDCvWnEdqea89UKW2qFQ" association="_oSN1GfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSN1G_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSN1HPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oSN1HfWnEdqea89UKW2qFQ" name="A_onPort_invocationAction" memberEnd="_oSN1EPWnEdqea89UKW2qFQ _oSN1HvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oSN1HvWnEdqea89UKW2qFQ" type="_oIiUyPWnEdqea89UKW2qFQ" association="_oSN1HfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSN1H_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSN1IPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oSXmEPWnEdqea89UKW2qFQ" name="StateMachine">
      <ownedComment xmi:id="_oSXmEfWnEdqea89UKW2qFQ" annotatedElement="_oSXmEPWnEdqea89UKW2qFQ">
        <body>State machines can be used to express the behavior of part of a system. Behavior is modeled as a traversal of a graph of state nodes interconnected by one or more joined transition arcs that are triggered by the dispatching of series of (event) occurrences. During this traversal, the state machine executes a series of activities associated with various elements of the state machine.</body>
      </ownedComment>
      <ownedRule xmi:id="_oSXmEvWnEdqea89UKW2qFQ" name="classifier_context" constrainedElement="_oSXmEPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSXmE_WnEdqea89UKW2qFQ" annotatedElement="_oSXmEvWnEdqea89UKW2qFQ">
          <body>The classifier context of a state machine cannot be an interface.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSXmFPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>context->notEmpty() implies not context.oclIsKindOf(Interface)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oSXmFfWnEdqea89UKW2qFQ" name="context_classifier" constrainedElement="_oSXmEPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSXmFvWnEdqea89UKW2qFQ" annotatedElement="_oSXmFfWnEdqea89UKW2qFQ">
          <body>The context classifier of the method state machine of a behavioral feature must be the classifier that owns the behavioral feature.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSXmF_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>specification->notEmpty() implies (context->notEmpty() and specification->featuringClassifier->exists (c | c = context))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oSXmGPWnEdqea89UKW2qFQ" name="connection_points" constrainedElement="_oSXmEPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSXmGfWnEdqea89UKW2qFQ" annotatedElement="_oSXmGPWnEdqea89UKW2qFQ">
          <body>The connection points of a state machine are pseudostates of kind entry point or exit point.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSXmGvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>conectionPoint->forAll (c | c.kind = #entryPoint or c.kind = #exitPoint)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oSXmG_WnEdqea89UKW2qFQ" name="method" constrainedElement="_oSXmEPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSXmHPWnEdqea89UKW2qFQ" annotatedElement="_oSXmG_WnEdqea89UKW2qFQ">
          <body>A state machine as the method for a behavioral feature cannot have entry/exit connection points.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSXmHfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>specification->notEmpty() implies connectionPoint->isEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oSXmHvWnEdqea89UKW2qFQ" general="_TUPtYGveEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oSXmH_WnEdqea89UKW2qFQ" name="region" type="_oTaH4PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oTtC1PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSXmIPWnEdqea89UKW2qFQ" annotatedElement="_oSXmH_WnEdqea89UKW2qFQ">
          <body>The regions owned directly by the state machine.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSXmIfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSXmIvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSXmI_WnEdqea89UKW2qFQ" name="connectionPoint" type="_oTHM8PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oTtC1vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSXmJPWnEdqea89UKW2qFQ" annotatedElement="_oSXmI_WnEdqea89UKW2qFQ">
          <body>The connection points defined for this state machine. They represent the interface of the state machine when used as part of submachine state.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSXmJfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSXmJvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSXmJ_WnEdqea89UKW2qFQ" name="extendedStateMachine" type="_oSXmEPWnEdqea89UKW2qFQ" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oTtC3_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSXmKPWnEdqea89UKW2qFQ" annotatedElement="_oSXmJ_WnEdqea89UKW2qFQ">
          <body>The state machines of which this is an extension.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSXmKfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSXmKvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSXmK_WnEdqea89UKW2qFQ" name="submachineState" type="_oSqhAPWnEdqea89UKW2qFQ" association="_oTj49PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSXmLPWnEdqea89UKW2qFQ" annotatedElement="_oSXmK_WnEdqea89UKW2qFQ">
          <body>References the submachine(s) in case of a submachine state. Multiple machines are referenced in case of a concurrent state.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSXmLfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSXmLvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oSXmL_WnEdqea89UKW2qFQ" name="LCA" isQuery="true" bodyCondition="_oSXmMvWnEdqea89UKW2qFQ">
        <eAnnotations xmi:id="_oSXmMPWnEdqea89UKW2qFQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <ownedComment xmi:id="_oSXmMfWnEdqea89UKW2qFQ" annotatedElement="_oSXmL_WnEdqea89UKW2qFQ">
          <body>The operation LCA(s1,s2) returns an orthogonal state or region which is the least common ancestor of states s1 and s2, based on the statemachine containment hierarchy.</body>
        </ownedComment>
        <ownedRule xmi:id="_oSXmMvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSXmL_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSXmM_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSXmNPWnEdqea89UKW2qFQ" type="_ZiwkoGwLEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:id="_oSXmNfWnEdqea89UKW2qFQ" name="s1" type="_oSqhAPWnEdqea89UKW2qFQ"/>
        <ownedParameter xmi:id="_oSXmNvWnEdqea89UKW2qFQ" name="s2" type="_oSqhAPWnEdqea89UKW2qFQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oSXmN_WnEdqea89UKW2qFQ" name="ancestor" isQuery="true" bodyCondition="_oSXmOfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSXmOPWnEdqea89UKW2qFQ" annotatedElement="_oSXmN_WnEdqea89UKW2qFQ">
          <body>The query ancestor(s1, s2) checks whether s2 is an ancestor state of state s1. context StateMachine::ancestor (s1 : State, s2 : State) : Boolean&#xD;
</body>
        </ownedComment>
        <ownedRule xmi:id="_oSXmOfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSXmN_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSXmOvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if (s2 = s1) then&#xA;true&#xA;else if (s1.container->isEmpty) then&#xA;true&#xA;else if (s2.container->isEmpty) then&#xA;false&#xA;else (ancestor (s1, s2.container))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSXmO_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oSXmPPWnEdqea89UKW2qFQ" name="s1" type="_oSqhAPWnEdqea89UKW2qFQ"/>
        <ownedParameter xmi:id="_oSXmPfWnEdqea89UKW2qFQ" name="s2" type="_oSqhAPWnEdqea89UKW2qFQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oSXmPvWnEdqea89UKW2qFQ" name="isRedefinitionContextValid" isQuery="true" redefinedOperation="_oA737fWnEdqea89UKW2qFQ" bodyCondition="_oSXmQPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSXmP_WnEdqea89UKW2qFQ" annotatedElement="_oSXmPvWnEdqea89UKW2qFQ">
          <body>The query isRedefinitionContextValid() specifies whether the redefinition contexts of a statemachine are properly related to the redefinition contexts of the specified statemachine to allow this element to redefine the other. The containing classifier of a redefining statemachine must redefine the containing classifier of the redefined statemachine.</body>
        </ownedComment>
        <ownedRule xmi:id="_oSXmQPWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSXmPvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSXmQfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSXmQvWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oSXmQ_WnEdqea89UKW2qFQ" name="redefined" type="_oSXmEPWnEdqea89UKW2qFQ" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oSXmRPWnEdqea89UKW2qFQ" name="isConsistentWith" isQuery="true" redefinedOperation="_oA735_WnEdqea89UKW2qFQ" bodyCondition="_oSXmR_WnEdqea89UKW2qFQ">
        <eAnnotations xmi:id="_oSXmRfWnEdqea89UKW2qFQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <ownedComment xmi:id="_oSXmRvWnEdqea89UKW2qFQ" annotatedElement="_oSXmRPWnEdqea89UKW2qFQ">
          <body>The query isConsistentWith() specifies that a redefining state machine is consistent with a redefined state machine provided that the redefining state machine is an extension of the redefined state machine: Regions are inherited and regions can be added, inherited regions can be redefined. In case of multiple redefining state machines, extension implies that the redefining state machine gets orthogonal regions for each of the redefined state machines.</body>
        </ownedComment>
        <ownedRule xmi:id="_oSXmR_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSXmRPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSXmSPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSXmSfWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oSXmSvWnEdqea89UKW2qFQ" name="redefinee" type="_oA731vWnEdqea89UKW2qFQ"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oS9b8PWnEdqea89UKW2qFQ" name="Transition">
      <ownedComment xmi:id="_oS9b8fWnEdqea89UKW2qFQ" annotatedElement="_oS9b8PWnEdqea89UKW2qFQ">
        <body>A transition is a directed relationship between a source vertex and a target vertex. It may be part of a compound transition, which takes the state machine from one state configuration to another, representing the complete response of the state machine to an occurrence of an event of a particular type.</body>
      </ownedComment>
      <ownedRule xmi:id="_oS9b8vWnEdqea89UKW2qFQ" name="fork_segment_guards" constrainedElement="_oS9b8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9b8_WnEdqea89UKW2qFQ" annotatedElement="_oS9b8vWnEdqea89UKW2qFQ">
          <body>A fork segment must not have guards or triggers.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9b9PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(source.oclIsKindOf(Pseudostate) and source.kind = #fork) implies (guard->isEmpty() and trigger->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oS9b9fWnEdqea89UKW2qFQ" name="join_segment_guards" constrainedElement="_oS9b8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9b9vWnEdqea89UKW2qFQ" annotatedElement="_oS9b9fWnEdqea89UKW2qFQ">
          <body>A join segment must not have guards or triggers.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9b9_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(target.oclIsKindOf(Pseudostate) and target.kind = #join) implies (guard->isEmpty() and trigger->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oS9b-PWnEdqea89UKW2qFQ" name="fork_segment_state" constrainedElement="_oS9b8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9b-fWnEdqea89UKW2qFQ" annotatedElement="_oS9b-PWnEdqea89UKW2qFQ">
          <body>A fork segment must always target a state.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9b-vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(source.oclIsKindOf(Pseudostate) and source.kind = #fork) implies (target.oclIsKindOf(State))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oS9b-_WnEdqea89UKW2qFQ" name="join_segment_state" constrainedElement="_oS9b8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9b_PWnEdqea89UKW2qFQ" annotatedElement="_oS9b-_WnEdqea89UKW2qFQ">
          <body>A join segment must always originate from a state.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9b_fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(target.oclIsKindOf(Pseudostate) and target.kind = #join) implies (source.oclIsKindOf(State))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oS9b_vWnEdqea89UKW2qFQ" name="outgoing_pseudostates" constrainedElement="_oS9b8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9b__WnEdqea89UKW2qFQ" annotatedElement="_oS9b_vWnEdqea89UKW2qFQ">
          <body>Transitions outgoing pseudostates may not have a trigger.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9cAPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>source.oclIsKindOf(Pseudostate) and&#xA;((source.kind &lt;> #junction) and (source.kind &lt;> #join) and (source.kind &lt;> #initial)) implies trigger->isEmpty()&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oS9cAfWnEdqea89UKW2qFQ" name="initial_transition" constrainedElement="_oS9b8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cAvWnEdqea89UKW2qFQ" annotatedElement="_oS9cAfWnEdqea89UKW2qFQ">
          <body>An initial transition at the topmost level (region of a statemachine) either has no trigger or it has a trigger with the stereotype «create».</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9cA_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.source.oclIsKindOf(Pseudostate) implies&#xA;(self.source.oclAsType(Pseudostate).kind = #initial) implies&#xA;(self.source.container = self.stateMachine.top) implies&#xA;((self.trigger->isEmpty) or&#xA;(self.trigger.stereotype.name = 'create'))&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oS9cBPWnEdqea89UKW2qFQ" name="signatures_compatible" constrainedElement="_oS9b8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cBfWnEdqea89UKW2qFQ" annotatedElement="_oS9cBPWnEdqea89UKW2qFQ">
          <body>In case of more than one trigger, the signatures of these must be compatible in case the parameters of the signal are assigned to local variables/attributes.&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9cBvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oS9cB_WnEdqea89UKW2qFQ" general="_oA731vWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oS9cCPWnEdqea89UKW2qFQ" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oS9cCfWnEdqea89UKW2qFQ" name="kind" type="_oTj44PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cCvWnEdqea89UKW2qFQ" annotatedElement="_oS9cCfWnEdqea89UKW2qFQ">
          <body>Indicates  the precise type of the transition.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oS9cC_WnEdqea89UKW2qFQ" type="_oTj44PWnEdqea89UKW2qFQ" instance="_oTj47PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oS9cDPWnEdqea89UKW2qFQ" name="container" type="_oTaH4PWnEdqea89UKW2qFQ" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oTj48PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cDfWnEdqea89UKW2qFQ" annotatedElement="_oS9cDPWnEdqea89UKW2qFQ">
          <body>Designates the region that owns this transition.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oS9cDvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oS9cD_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oS9cEPWnEdqea89UKW2qFQ" name="source" type="_oS9cPvWnEdqea89UKW2qFQ" association="_oTj48vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cEfWnEdqea89UKW2qFQ" annotatedElement="_oS9cEPWnEdqea89UKW2qFQ">
          <body>Designates the originating vertex (state or pseudostate) of the transition.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oS9cEvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oS9cE_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oS9cFPWnEdqea89UKW2qFQ" name="target" type="_oS9cPvWnEdqea89UKW2qFQ" association="_oTj48_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cFfWnEdqea89UKW2qFQ" annotatedElement="_oS9cFPWnEdqea89UKW2qFQ">
          <body>Designates the target vertex that is reached when the transition is taken.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oS9cFvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oS9cF_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oS9cGPWnEdqea89UKW2qFQ" name="redefinedTransition" type="_oS9b8PWnEdqea89UKW2qFQ" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oTj5APWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cGfWnEdqea89UKW2qFQ" annotatedElement="_oS9cGPWnEdqea89UKW2qFQ">
          <body>The transition that is redefined by this transition.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oS9cGvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oS9cG_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oS9cHPWnEdqea89UKW2qFQ" name="guard" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG6fWnEdqea89UKW2qFQ" association="_oTtC5PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cHfWnEdqea89UKW2qFQ" annotatedElement="_oS9cHPWnEdqea89UKW2qFQ">
          <body>A guard is a constraint that provides a fine-grained control over the firing of the transition. The guard is evaluated when an event occurrence is dispatched by the state machine. If the guard is true at that time, the transition may be enabled, otherwise, it is disabled. Guards should be pure expressions without side effects. Guard expressions with side effects are ill formed.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oS9cHvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oS9cH_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oS9cIPWnEdqea89UKW2qFQ" name="redefinitionContext" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" redefinedProperty="_oA733_WnEdqea89UKW2qFQ" association="_oT2z1fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cIfWnEdqea89UKW2qFQ" annotatedElement="_oS9cIPWnEdqea89UKW2qFQ">
          <body>References the classifier in which context this element may be redefined.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oS9cIvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oS9cI_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oS9cJPWnEdqea89UKW2qFQ" name="effect" type="_TUPtYGveEdq4DLWZOhbdEA" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oT2z3_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cJfWnEdqea89UKW2qFQ" annotatedElement="_oS9cJPWnEdqea89UKW2qFQ">
          <body>Specifies an optional behavior to be performed when the transition fires.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oS9cJvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oS9cJ_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oS9cKPWnEdqea89UKW2qFQ" name="trigger" type="_oMtDCvWnEdqea89UKW2qFQ" aggregation="composite" association="_oUAk0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cKfWnEdqea89UKW2qFQ" annotatedElement="_oS9cKPWnEdqea89UKW2qFQ">
          <body>Specifies the triggers that may fire the transition.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oS9cKvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oS9cK_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oS9cLPWnEdqea89UKW2qFQ" name="redefinitionContext" isQuery="true" bodyCondition="_oS9cLvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cLfWnEdqea89UKW2qFQ" annotatedElement="_oS9cLPWnEdqea89UKW2qFQ">
          <body>The redefinition context of a transition is the nearest containing statemachine.</body>
        </ownedComment>
        <ownedRule xmi:id="_oS9cLvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oS9cLPWnEdqea89UKW2qFQ _oS9cIPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9cL_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = let sm = containingStateMachine() in&#xA;if sm.context->isEmpty() or sm.general->notEmpty() then&#xA;sm&#xA;else&#xA;sm.context&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oS9cMPWnEdqea89UKW2qFQ" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oS9cMfWnEdqea89UKW2qFQ" name="isConsistentWith" isQuery="true" precondition="_oS9cNfWnEdqea89UKW2qFQ" redefinedOperation="_oA735_WnEdqea89UKW2qFQ" bodyCondition="_oS9cM_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cMvWnEdqea89UKW2qFQ" annotatedElement="_oS9cMfWnEdqea89UKW2qFQ">
          <body>The query isConsistentWith() specifies that a redefining transition is consistent with a redefined transition provided that the redefining transition has the following relation to the redefined transition: A redefining transition redefines all properties of the corresponding redefined transition, except the source state and the trigger.</body>
        </ownedComment>
        <ownedRule xmi:id="_oS9cM_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oS9cMfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9cNPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (redefinee.oclIsKindOf(Transition) and&#xD;&#xA;  let trans: Transition = redefinee.oclAsType(Transition) in&#xD;&#xA;    (source() = trans.source() and trigger() = tran.trigger())</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oS9cNfWnEdqea89UKW2qFQ" constrainedElement="_oS9cMfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9cNvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>redefinee.isRedefinitionContextValid(self)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oS9cN_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oS9cOPWnEdqea89UKW2qFQ" name="redefinee" type="_oA731vWnEdqea89UKW2qFQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oS9cOfWnEdqea89UKW2qFQ" name="containingStateMachine" isQuery="true" bodyCondition="_oS9cO_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cOvWnEdqea89UKW2qFQ" annotatedElement="_oS9cOfWnEdqea89UKW2qFQ">
          <body>The query containingStateMachine() returns the state machine that contains the transition either directly or transitively.</body>
        </ownedComment>
        <ownedRule xmi:id="_oS9cO_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oS9cOfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9cPPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = container.containingStateMachine()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oS9cPfWnEdqea89UKW2qFQ" type="_oSXmEPWnEdqea89UKW2qFQ" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oS9cPvWnEdqea89UKW2qFQ" name="Vertex" isAbstract="true">
      <ownedComment xmi:id="_oS9cP_WnEdqea89UKW2qFQ" annotatedElement="_oS9cPvWnEdqea89UKW2qFQ">
        <body>A vertex is an abstraction of a node in a state machine graph. In general, it can be the source or destination of any number of transitions.</body>
      </ownedComment>
      <generalization xmi:id="_oS9cQPWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oS9cQfWnEdqea89UKW2qFQ" name="container" type="_oTaH4PWnEdqea89UKW2qFQ" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oTj47vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cQvWnEdqea89UKW2qFQ" annotatedElement="_oS9cQfWnEdqea89UKW2qFQ">
          <body>The region that contains this vertex.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oS9cQ_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oS9cRPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oS9cRfWnEdqea89UKW2qFQ" name="outgoing" type="_oS9b8PWnEdqea89UKW2qFQ" association="_oTj48vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cRvWnEdqea89UKW2qFQ" annotatedElement="_oS9cRfWnEdqea89UKW2qFQ">
          <body>Specifies the transitions departing from this vertex.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oS9cR_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oS9cSPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oS9cSfWnEdqea89UKW2qFQ" name="incoming" type="_oS9b8PWnEdqea89UKW2qFQ" association="_oTj48_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cSvWnEdqea89UKW2qFQ" annotatedElement="_oS9cSfWnEdqea89UKW2qFQ">
          <body>Specifies the transitions entering this vertex.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oS9cS_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oS9cTPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oS9cTfWnEdqea89UKW2qFQ" name="containingStateMachine" isQuery="true" bodyCondition="_oS9cT_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oS9cTvWnEdqea89UKW2qFQ" annotatedElement="_oS9cTfWnEdqea89UKW2qFQ">
          <body>The operation containingStateMachine() returns the state machine in which this Vertex is defined</body>
        </ownedComment>
        <ownedRule xmi:id="_oS9cT_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oS9cTfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS9cUPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if not container->isEmpty()&#xA;then&#xA;-- the container is a region&#xA;container.containingStateMachine()&#xA;else if (oclIsKindOf(Pseudostate)) then&#xA;-- entry or exit point?&#xA;if (kind = #entryPoint) or (kind = #exitPoint) then&#xA;stateMachine&#xA;else if (oclIsKindOf(ConnectionPointReference)) then&#xA;state.containingStateMachine() -- no other valid cases possible&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oS9cUfWnEdqea89UKW2qFQ" type="_oSXmEPWnEdqea89UKW2qFQ" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oTHM8PWnEdqea89UKW2qFQ" name="Pseudostate">
      <ownedComment xmi:id="_oTHM8fWnEdqea89UKW2qFQ" annotatedElement="_oTHM8PWnEdqea89UKW2qFQ">
        <body>A pseudostate is an abstraction that encompasses different types of transient vertices in the state machine graph.</body>
      </ownedComment>
      <ownedRule xmi:id="_oTHM8vWnEdqea89UKW2qFQ" name="initial_vertex" constrainedElement="_oTHM8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHM8_WnEdqea89UKW2qFQ" annotatedElement="_oTHM8vWnEdqea89UKW2qFQ">
          <body>An initial vertex can have at most one outgoing transition.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHM9PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.kind = #initial) implies (self.outgoing->size &lt;= 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHM9fWnEdqea89UKW2qFQ" name="history_vertices" constrainedElement="_oTHM8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHM9vWnEdqea89UKW2qFQ" annotatedElement="_oTHM9fWnEdqea89UKW2qFQ">
          <body>History vertices can have at most one outgoing transition.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHM9_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>((self.kind = #deepHistory) or (self.kind = #shallowHistory)) implies&#xA;(self.outgoing->size &lt;= 1)&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHM-PWnEdqea89UKW2qFQ" name="join_vertex" constrainedElement="_oTHM8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHM-fWnEdqea89UKW2qFQ" annotatedElement="_oTHM-PWnEdqea89UKW2qFQ">
          <body>In a complete statemachine, a join vertex must have at least two incoming transitions and exactly one outgoing transition.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHM-vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.kind = #join) implies&#xA;((self.outgoing->size = 1) and (self.incoming->size >= 2))&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHM-_WnEdqea89UKW2qFQ" name="transitions_incoming" constrainedElement="_oTHM8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHM_PWnEdqea89UKW2qFQ" annotatedElement="_oTHM-_WnEdqea89UKW2qFQ">
          <body>All transitions incoming a join vertex must originate in different regions of an orthogonal state.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHM_fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.kind = #join) implies&#xA;  self.incoming->forAll (t1, t2 | t1&lt;>t2 implies&#xA;    (self.stateMachine.LCA(t1.source, t2.source).container.isOrthogonal))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHM_vWnEdqea89UKW2qFQ" name="fork_vertex" constrainedElement="_oTHM8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHM__WnEdqea89UKW2qFQ" annotatedElement="_oTHM_vWnEdqea89UKW2qFQ">
          <body>In a complete statemachine, a fork vertex must have at least two outgoing transitions and exactly one incoming transition.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHNAPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.kind = #fork) implies&#xA;((self.incoming->size = 1) and (self.outgoing->size >= 2))&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHNAfWnEdqea89UKW2qFQ" name="transitions_outgoing" constrainedElement="_oTHM8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNAvWnEdqea89UKW2qFQ" annotatedElement="_oTHNAfWnEdqea89UKW2qFQ">
          <body>All transitions outgoing a fork vertex must target states in different regions of an orthogonal state.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHNA_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.kind = #fork) implies&#xA;  self.outgoing->forAll (t1, t2 | t1&lt;>t2 implies&#xA;    (self.stateMachine.LCA(t1.target, t2.target).container.isOrthogonal))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHNBPWnEdqea89UKW2qFQ" name="junction_vertex" constrainedElement="_oTHM8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNBfWnEdqea89UKW2qFQ" annotatedElement="_oTHNBPWnEdqea89UKW2qFQ">
          <body>In a complete statemachine, a junction vertex must have at least one incoming and one outgoing transition.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHNBvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.kind = #junction) implies&#xA;((self.incoming->size >= 1) and (self.outgoing->size >= 1))&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHNB_WnEdqea89UKW2qFQ" name="choice_vertex" constrainedElement="_oTHM8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNCPWnEdqea89UKW2qFQ" annotatedElement="_oTHNB_WnEdqea89UKW2qFQ">
          <body>In a complete statemachine, a choice vertex must have at least one incoming and one outgoing transition.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHNCfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.kind = #choice) implies&#xA;((self.incoming->size >= 1) and (self.outgoing->size >= 1))&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHNCvWnEdqea89UKW2qFQ" name="outgoing_from_initial" constrainedElement="_oTHM8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNC_WnEdqea89UKW2qFQ" annotatedElement="_oTHNCvWnEdqea89UKW2qFQ">
          <body>The outgoing transition from and initial vertex may have a behavior, but not a trigger or a guard.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHNDPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.kind = #initial) implies (self.outgoing.guard->isEmpty()&#xD;&#xA;  and self.outgoing.trigger->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oTHNDfWnEdqea89UKW2qFQ" general="_oS9cPvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oTHNDvWnEdqea89UKW2qFQ" name="kind" type="_oTaIIvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHND_WnEdqea89UKW2qFQ" annotatedElement="_oTHNDvWnEdqea89UKW2qFQ">
          <body>Determines the precise type of the Pseudostate and can be one of: entryPoint, exitPoint, initial, deepHistory, shallowHistory, join, fork, junction, terminate or choice.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oTHNEPWnEdqea89UKW2qFQ" type="_oTaIIvWnEdqea89UKW2qFQ" instance="_oTaIJPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oTHNEfWnEdqea89UKW2qFQ" name="stateMachine" type="_oSXmEPWnEdqea89UKW2qFQ" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oTtC1vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNEvWnEdqea89UKW2qFQ" annotatedElement="_oTHNEfWnEdqea89UKW2qFQ">
          <body>The StateMachine in which this Pseudostate is defined. This only applies to Pseudostates of the kind entryPoint or exitPoint.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTHNE_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTHNFPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oTHNFfWnEdqea89UKW2qFQ" name="state" type="_oSqhAPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oT2z8_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNFvWnEdqea89UKW2qFQ" annotatedElement="_oTHNFfWnEdqea89UKW2qFQ">
          <body>The State that owns this pseudostate and in which it appears.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTHNF_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTHNGPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oTHNGfWnEdqea89UKW2qFQ" name="FinalState">
      <ownedComment xmi:id="_oTHNGvWnEdqea89UKW2qFQ" annotatedElement="_oTHNGfWnEdqea89UKW2qFQ">
        <body>A special kind of state signifying that the enclosing region is completed. If the enclosing region is directly contained in a state machine and all other regions in the state machine also are completed, then it means that the entire state machine is completed.</body>
      </ownedComment>
      <ownedRule xmi:id="_oTHNG_WnEdqea89UKW2qFQ" name="no_outgoing_transitions" constrainedElement="_oTHNGfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNHPWnEdqea89UKW2qFQ" annotatedElement="_oTHNG_WnEdqea89UKW2qFQ">
          <body>A final state cannot have any outgoing transitions.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHNHfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.outgoing->size() = 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHNHvWnEdqea89UKW2qFQ" name="no_regions" constrainedElement="_oTHNGfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNH_WnEdqea89UKW2qFQ" annotatedElement="_oTHNHvWnEdqea89UKW2qFQ">
          <body>A final state cannot have regions.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHNIPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.region->size() = 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHNIfWnEdqea89UKW2qFQ" name="cannot_reference_submachine" constrainedElement="_oTHNGfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNIvWnEdqea89UKW2qFQ" annotatedElement="_oTHNIfWnEdqea89UKW2qFQ">
          <body>A final state cannot reference a submachine.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHNI_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.submachine->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHNJPWnEdqea89UKW2qFQ" name="no_entry_behavior" constrainedElement="_oTHNGfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNJfWnEdqea89UKW2qFQ" annotatedElement="_oTHNJPWnEdqea89UKW2qFQ">
          <body>A final state has no entry behavior.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHNJvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.entry->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHNJ_WnEdqea89UKW2qFQ" name="no_exit_behavior" constrainedElement="_oTHNGfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNKPWnEdqea89UKW2qFQ" annotatedElement="_oTHNJ_WnEdqea89UKW2qFQ">
          <body>A final state has no exit behavior.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHNKfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.exit->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTHNKvWnEdqea89UKW2qFQ" name="no_state_behavior" constrainedElement="_oTHNGfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTHNK_WnEdqea89UKW2qFQ" annotatedElement="_oTHNKvWnEdqea89UKW2qFQ">
          <body>A final state has no state (doActivity) behavior.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTHNLPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.doActivity->isEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oTHNLfWnEdqea89UKW2qFQ" general="_oSqhAPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oTQ98PWnEdqea89UKW2qFQ" name="ConnectionPointReference">
      <ownedComment xmi:id="_oTQ98fWnEdqea89UKW2qFQ" annotatedElement="_oTQ98PWnEdqea89UKW2qFQ">
        <body>A connection point reference represents a usage (as part of a submachine state) of an entry/exit point defined in the statemachine reference by the submachine state.</body>
      </ownedComment>
      <ownedRule xmi:id="_oTQ98vWnEdqea89UKW2qFQ" name="entry_pseudostates" constrainedElement="_oTQ98PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTQ98_WnEdqea89UKW2qFQ" annotatedElement="_oTQ98vWnEdqea89UKW2qFQ">
          <body>The entry Pseudostates must be Pseudostates with kind entryPoint.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTQ99PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>entry->notEmpty() implies entry->forAll(e | e.kind = #entryPoint)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTQ99fWnEdqea89UKW2qFQ" name="exit_pseudostates" constrainedElement="_oTQ98PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTQ99vWnEdqea89UKW2qFQ" annotatedElement="_oTQ99fWnEdqea89UKW2qFQ">
          <body>The exit Pseudostates must be Pseudostates with kind exitPoint.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTQ99_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>exit->notEmpty() implies exit->forAll(e | e.kind = #exitPoint)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oTQ9-PWnEdqea89UKW2qFQ" general="_oS9cPvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oTQ9-fWnEdqea89UKW2qFQ" name="entry" type="_oTHM8PWnEdqea89UKW2qFQ" association="_oTj49fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTQ9-vWnEdqea89UKW2qFQ" annotatedElement="_oTQ9-fWnEdqea89UKW2qFQ">
          <body>The entryPoint kind pseudo states corresponding to this connection point.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTQ9-_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTQ9_PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oTQ9_fWnEdqea89UKW2qFQ" name="state" type="_oSqhAPWnEdqea89UKW2qFQ" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oTj4-fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTQ9_vWnEdqea89UKW2qFQ" annotatedElement="_oTQ9_fWnEdqea89UKW2qFQ">
          <body>The State in which the connection point refreshens are defined.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTQ9__WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTQ-APWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oTQ-AfWnEdqea89UKW2qFQ" name="exit" type="_oTHM8PWnEdqea89UKW2qFQ" association="_oTtC0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTQ-AvWnEdqea89UKW2qFQ" annotatedElement="_oTQ-AfWnEdqea89UKW2qFQ">
          <body>The exitPoints kind pseudo states corresponding to this connection point.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTQ-A_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTQ-BPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oM20BfWnEdqea89UKW2qFQ" name="TimeEvent">
      <ownedComment xmi:id="_oM20BvWnEdqea89UKW2qFQ" annotatedElement="_oM20BfWnEdqea89UKW2qFQ">
        <body>A time event specifies a point in time. At the specified time, the event occurs.</body>
      </ownedComment>
      <ownedComment xmi:id="_oTaIHvWnEdqea89UKW2qFQ" annotatedElement="_oM20BfWnEdqea89UKW2qFQ">
        <body>A time event can be defined relative to entering the current state of the executing state machine.</body>
      </ownedComment>
      <ownedRule xmi:id="_oRxJQfWnEdqea89UKW2qFQ" name="when_non_negative" constrainedElement="_oM20BfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oRxJQvWnEdqea89UKW2qFQ" annotatedElement="_oRxJQfWnEdqea89UKW2qFQ">
          <body>The ValueSpecification when must return a non-negative Integer.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oRxJQ_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTaIH_WnEdqea89UKW2qFQ" name="starting_time" constrainedElement="_oM20BfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaIIPWnEdqea89UKW2qFQ" annotatedElement="_oTaIH_WnEdqea89UKW2qFQ">
          <body>The starting time for a relative time event may only be omitted for a time event that is the trigger of a state machine.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTaIIfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oM20B_WnEdqea89UKW2qFQ" general="_oM20GfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oM20CPWnEdqea89UKW2qFQ" name="isRelative" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oM20CfWnEdqea89UKW2qFQ" annotatedElement="_oM20CPWnEdqea89UKW2qFQ">
          <body>Specifies whether it is relative or absolute time.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oM20CvWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oM20C_WnEdqea89UKW2qFQ" name="when" visibility="public" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oM_-APWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oM20DPWnEdqea89UKW2qFQ" annotatedElement="_oM20C_WnEdqea89UKW2qFQ">
          <body>Specifies the corresponding time deadline.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRxJRPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oRxJRfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_oTaIIvWnEdqea89UKW2qFQ" name="PseudostateKind">
      <ownedComment xmi:id="_oTaII_WnEdqea89UKW2qFQ" annotatedElement="_oTaIIvWnEdqea89UKW2qFQ">
        <body>PseudostateKind is an enumeration type.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_oTaIJPWnEdqea89UKW2qFQ" name="initial">
        <ownedComment xmi:id="_oTaIJfWnEdqea89UKW2qFQ" annotatedElement="_oTaIJPWnEdqea89UKW2qFQ">
          <body>An initial pseudostate represents a default vertex that is the source for a single transition to the default state of a composite state. There can be at most one initial vertex in a region. The outgoing transition from the initial vertex may have a behavior, but not a trigger or guard.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oTaIJvWnEdqea89UKW2qFQ" name="deepHistory">
        <ownedComment xmi:id="_oTaIJ_WnEdqea89UKW2qFQ" annotatedElement="_oTaIJvWnEdqea89UKW2qFQ">
          <body>DeepHistory represents the most recent active configuration of the composite state that directly contains this pseudostate; e.g. the state configuration that was active when the composite state was last exited. A composite state can have at most one deep history vertex. At most one transition may originate from the history connector to the default deep history state. This transition is taken in case the composite state had never been active before. Entry actions of states entered on the path to the state represented by a deep history are performed.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oTaIKPWnEdqea89UKW2qFQ" name="shallowHistory">
        <ownedComment xmi:id="_oTaIKfWnEdqea89UKW2qFQ" annotatedElement="_oTaIKPWnEdqea89UKW2qFQ">
          <body>ShallowHistory represents the most recent active substate of its containing state (but not the substates of that substate). A composite state can have at most one shallow history vertex. A transition coming into the shallow history vertex is equivalent to a transition coming into the most recent active substate of a state. At most one transition may originate from the history connector to the default shallow history state. This transition is taken in case the composite state had never been active before. Entry actions of states entered on the path to the state represented by a shallow history are performed.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oTaIKvWnEdqea89UKW2qFQ" name="join">
        <ownedComment xmi:id="_oTaIK_WnEdqea89UKW2qFQ" annotatedElement="_oTaIKvWnEdqea89UKW2qFQ">
          <body>Join vertices serve to merge several transitions emanating from source vertices in different orthogonal regions. The transitions entering a join vertex cannot have guards or triggers.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oTaILPWnEdqea89UKW2qFQ" name="fork">
        <ownedComment xmi:id="_oTaILfWnEdqea89UKW2qFQ" annotatedElement="_oTaILPWnEdqea89UKW2qFQ">
          <body>Fork vertices serve to split an incoming transition into two or more transitions terminating on orthogonal target vertices&#xD;
(i.e. vertices in different regions of a composite state). The segments outgoing from a fork vertex must not have guards or triggers.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oTaILvWnEdqea89UKW2qFQ" name="junction">
        <ownedComment xmi:id="_oTaIL_WnEdqea89UKW2qFQ" annotatedElement="_oTaILvWnEdqea89UKW2qFQ">
          <body>Junction vertices are semantic-free vertices that are used to chain together multiple transitions. They are used to construct compound transition paths between states. For example, a junction can be used to converge multiple incoming transitions into a single outgoing transition representing a shared transition path (this is known as an merge). Conversely, they can be used to split an incoming transition into multiple outgoing transition segments with different guard conditions. This realizes a static conditional branch. (In the latter case, outgoing transitions whose guard conditions evaluate to false are disabled. A predefined guard denoted 'else' may be defined for at most one outgoing transition. This transition is enabled if all the guards labeling the other transitions are false.) Static conditional branches are distinct from dynamic conditional branches that are realized by choice vertices (described below).</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oTaIMPWnEdqea89UKW2qFQ" name="choice">
        <ownedComment xmi:id="_oTaIMfWnEdqea89UKW2qFQ" annotatedElement="_oTaIMPWnEdqea89UKW2qFQ">
          <body>Choice vertices which, when reached, result in the dynamic evaluation of the guards of the triggers of its outgoing transitions. This realizes a dynamic conditional branch. It allows splitting of transitions into multiple outgoing paths such that the decision on which path to take may be a function of the results of prior actions performed in the same run-tocompletion step. If more than one of the guards evaluates to true, an arbitrary one is selected. If none of the guards evaluates to true, then the model is considered ill-formed. (To avoid this, it is recommended to define one outgoing transition with the predefined else guard for every choice vertex.) Choice vertices should be distinguished from static branch points that are based on junction points (described above).</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oTaIMvWnEdqea89UKW2qFQ" name="entryPoint">
        <ownedComment xmi:id="_oTaIM_WnEdqea89UKW2qFQ" annotatedElement="_oTaIMvWnEdqea89UKW2qFQ">
          <body>An entry point pseudostate is an entry point of a state machine or composite state. In each region of the state machine or composite state it has a single transition to a vertex within the same region.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oTaINPWnEdqea89UKW2qFQ" name="exitPoint">
        <ownedComment xmi:id="_oTaINfWnEdqea89UKW2qFQ" annotatedElement="_oTaINPWnEdqea89UKW2qFQ">
          <body>An exit point pseudostate is an exit point of a state machine or composite state. Entering an exit point within any region of the composite state or state machine referenced by a submachine state implies the exit of this composite state or submachine state and the triggering of the transition that has this exit point as source in the state machine enclosing the submachine or composite state.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oTaINvWnEdqea89UKW2qFQ" name="terminate">
        <ownedComment xmi:id="_oTaIN_WnEdqea89UKW2qFQ" annotatedElement="_oTaINvWnEdqea89UKW2qFQ">
          <body>Entering a terminate pseudostate implies that the execution of this state machine by means of its context object is terminated. The state machine does not exit any states nor does it perform any exit actions other than those associated with the transition leading to the terminate pseudostate. Entering a terminate pseudostate is equivalent to invoking a DestroyObjectAction.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_oTj44PWnEdqea89UKW2qFQ" name="TransitionKind">
      <ownedComment xmi:id="_oTj44fWnEdqea89UKW2qFQ" annotatedElement="_oTj44PWnEdqea89UKW2qFQ">
        <body>TransitionKind is an enumeration type.</body>
      </ownedComment>
      <ownedRule xmi:id="_oTj44vWnEdqea89UKW2qFQ" name="state_is_local" constrainedElement="_oTj44PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTj44_WnEdqea89UKW2qFQ" annotatedElement="_oTj44vWnEdqea89UKW2qFQ">
          <body>The source state of a transition with transition kind local must be a composite state.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTj45PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>kind=#local implies owner.source.isComposite</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTj45fWnEdqea89UKW2qFQ" name="state_is_external" constrainedElement="_oTj44PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTj45vWnEdqea89UKW2qFQ" annotatedElement="_oTj45fWnEdqea89UKW2qFQ">
          <body>The source state of a transition with transition kind external must be a composite state.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTj45_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>kind=#external implies owner.source.isComposite</body>
        </specification>
      </ownedRule>
      <ownedLiteral xmi:id="_oTj46PWnEdqea89UKW2qFQ" name="internal">
        <ownedComment xmi:id="_oTj46fWnEdqea89UKW2qFQ" annotatedElement="_oTj46PWnEdqea89UKW2qFQ">
          <body>kind=internal implies that the transition, if triggered, occurs without exiting or entering the source state. Thus, it does not cause a state change. This means that the entry or exit condition of the source state will not be invoked. An internal transition can be taken even if the state machine is in one or more regions nested within this state.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oTj46vWnEdqea89UKW2qFQ" name="local">
        <ownedComment xmi:id="_oTj46_WnEdqea89UKW2qFQ" annotatedElement="_oTj46vWnEdqea89UKW2qFQ">
          <body>kind=local implies that the transition, if triggered, will not exit the composite (source) state, but it will apply to any state within the composite state, and these will be exited and entered.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oTj47PWnEdqea89UKW2qFQ" name="external">
        <ownedComment xmi:id="_oTj47fWnEdqea89UKW2qFQ" annotatedElement="_oTj47PWnEdqea89UKW2qFQ">
          <body>kind=external implies that the transition, if triggered, will exit the composite (source) state.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTj47vWnEdqea89UKW2qFQ" name="A_container_subvertex" memberEnd="_oTaH8PWnEdqea89UKW2qFQ _oS9cQfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTj47_WnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTj48PWnEdqea89UKW2qFQ" name="A_container_transition" memberEnd="_oS9cDPWnEdqea89UKW2qFQ _oTaH9PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTj48fWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTj48vWnEdqea89UKW2qFQ" name="A_outgoing_source" memberEnd="_oS9cRfWnEdqea89UKW2qFQ _oS9cEPWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTj48_WnEdqea89UKW2qFQ" name="A_incoming_target" memberEnd="_oS9cSfWnEdqea89UKW2qFQ _oS9cFPWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTj49PWnEdqea89UKW2qFQ" name="A_submachineState_submachine" memberEnd="_oSqhIPWnEdqea89UKW2qFQ _oSXmK_WnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTj49fWnEdqea89UKW2qFQ" name="A_entry_connectionPointReference" memberEnd="_oTQ9-fWnEdqea89UKW2qFQ _oTj49vWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oTj49vWnEdqea89UKW2qFQ" type="_oTQ98PWnEdqea89UKW2qFQ" association="_oTj49fWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTj49_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTj4-PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTj4-fWnEdqea89UKW2qFQ" name="A_state_connection" memberEnd="_oTQ9_fWnEdqea89UKW2qFQ _oSqhJPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTj4-vWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTj4-_WnEdqea89UKW2qFQ" name="A_redefinedState_state" memberEnd="_oSqhKPWnEdqea89UKW2qFQ _oTj4_fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTj4_PWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oTj4_fWnEdqea89UKW2qFQ" type="_oSqhAPWnEdqea89UKW2qFQ" redefinedProperty="_oC3xhvWnEdqea89UKW2qFQ" association="_oTj4-_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTj4_vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTj4__WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTj5APWnEdqea89UKW2qFQ" name="A_redefinedTransition_transition" memberEnd="_oS9cGPWnEdqea89UKW2qFQ _oTj5AvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTj5AfWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oTj5AvWnEdqea89UKW2qFQ" type="_oS9b8PWnEdqea89UKW2qFQ" redefinedProperty="_oC3xhvWnEdqea89UKW2qFQ" association="_oTj5APWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTj5A_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTj5BPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTtC0PWnEdqea89UKW2qFQ" name="A_exit_connectionPointReference" memberEnd="_oTQ-AfWnEdqea89UKW2qFQ _oTtC0fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oTtC0fWnEdqea89UKW2qFQ" type="_oTQ98PWnEdqea89UKW2qFQ" association="_oTtC0PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTtC0vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTtC0_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTtC1PWnEdqea89UKW2qFQ" name="A_region_stateMachine" memberEnd="_oSXmH_WnEdqea89UKW2qFQ _oTaH-PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTtC1fWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTtC1vWnEdqea89UKW2qFQ" name="A_connectionPoint_stateMachine" memberEnd="_oSXmI_WnEdqea89UKW2qFQ _oTHNEfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTtC1_WnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTtC2PWnEdqea89UKW2qFQ" name="A_region_state" memberEnd="_oSqhLPWnEdqea89UKW2qFQ _oTaH_PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTtC2fWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTtC2vWnEdqea89UKW2qFQ" name="A_region_extendedRegion" memberEnd="_oTaIAPWnEdqea89UKW2qFQ _oTtC3PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTtC2_WnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oTtC3PWnEdqea89UKW2qFQ" type="_oTaH4PWnEdqea89UKW2qFQ" redefinedProperty="_oC3xhvWnEdqea89UKW2qFQ" association="_oTtC2vWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTtC3fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTtC3vWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTtC3_WnEdqea89UKW2qFQ" name="A_stateMachine_extendedStateMachine" memberEnd="_oSXmJ_WnEdqea89UKW2qFQ _oTtC4fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTtC4PWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oTtC4fWnEdqea89UKW2qFQ" type="_oSXmEPWnEdqea89UKW2qFQ" redefinedProperty="_oC3xhvWnEdqea89UKW2qFQ" association="_oTtC3_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTtC4vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTtC4_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTtC5PWnEdqea89UKW2qFQ" name="A_guard_transition" memberEnd="_oS9cHPWnEdqea89UKW2qFQ _oTtC5vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTtC5fWnEdqea89UKW2qFQ" general="_oC3xuPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oTtC5vWnEdqea89UKW2qFQ" type="_oS9b8PWnEdqea89UKW2qFQ" association="_oTtC5PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTtC5_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTtC6PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oTtC6fWnEdqea89UKW2qFQ" name="A_redefinitionContext_region" memberEnd="_oTaIBPWnEdqea89UKW2qFQ _oTtC6_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oTtC6vWnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oTtC6_WnEdqea89UKW2qFQ" type="_oTaH4PWnEdqea89UKW2qFQ" association="_oTtC6fWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTtC7PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTtC7fWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oT2z0PWnEdqea89UKW2qFQ" name="A_state_redefinitionContext" memberEnd="_oSqhMPWnEdqea89UKW2qFQ _oT2z0vWnEdqea89UKW2qFQ" isDerived="true">
      <generalization xmi:id="_oT2z0fWnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oT2z0vWnEdqea89UKW2qFQ" type="_oSqhAPWnEdqea89UKW2qFQ" association="_oT2z0PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oT2z0_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oT2z1PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oT2z1fWnEdqea89UKW2qFQ" name="A_transition_redefinitionContext" memberEnd="_oS9cIPWnEdqea89UKW2qFQ _oT2z1_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oT2z1vWnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oT2z1_WnEdqea89UKW2qFQ" type="_oS9b8PWnEdqea89UKW2qFQ" association="_oT2z1fWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oT2z2PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oT2z2fWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oT2z2vWnEdqea89UKW2qFQ" name="A_stateInvariant_owningState" memberEnd="_oSqhNPWnEdqea89UKW2qFQ _oT2z3PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oT2z2_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oT2z3PWnEdqea89UKW2qFQ" name="owningState" type="_oSqhAPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oT2z2vWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oT2z3fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oT2z3vWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oT2z3_WnEdqea89UKW2qFQ" name="A_effect_transition" memberEnd="_oS9cJPWnEdqea89UKW2qFQ _oT2z4fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oT2z4PWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oT2z4fWnEdqea89UKW2qFQ" type="_oS9b8PWnEdqea89UKW2qFQ" association="_oT2z3_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oT2z4vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oT2z4_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oT2z5PWnEdqea89UKW2qFQ" name="A_entry_state" memberEnd="_oSqhOPWnEdqea89UKW2qFQ _oT2z5vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oT2z5fWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oT2z5vWnEdqea89UKW2qFQ" type="_oSqhAPWnEdqea89UKW2qFQ" association="_oT2z5PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oT2z5_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oT2z6PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oT2z6fWnEdqea89UKW2qFQ" name="A_exit_state" memberEnd="_oSqhPPWnEdqea89UKW2qFQ _oT2z6_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oT2z6vWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oT2z6_WnEdqea89UKW2qFQ" type="_oSqhAPWnEdqea89UKW2qFQ" association="_oT2z6fWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oT2z7PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oT2z7fWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oT2z7vWnEdqea89UKW2qFQ" name="A_doActivity_state" memberEnd="_oSqhQPWnEdqea89UKW2qFQ _oT2z8PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oT2z7_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oT2z8PWnEdqea89UKW2qFQ" type="_oSqhAPWnEdqea89UKW2qFQ" association="_oT2z7vWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oT2z8fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oT2z8vWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oT2z8_WnEdqea89UKW2qFQ" name="A_connectionPoint_state" memberEnd="_oSqhRPWnEdqea89UKW2qFQ _oTHNFfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oT2z9PWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oUAk0PWnEdqea89UKW2qFQ" name="A_trigger_transition" memberEnd="_oS9cKPWnEdqea89UKW2qFQ _oUAk0fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oUAk0fWnEdqea89UKW2qFQ" type="_oS9b8PWnEdqea89UKW2qFQ" association="_oUAk0PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUAk0vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUAk0_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oUAk1PWnEdqea89UKW2qFQ" name="A_deferrableTrigger_state" memberEnd="_oSqhSPWnEdqea89UKW2qFQ _oUAk1fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oUAk1fWnEdqea89UKW2qFQ" type="_oSqhAPWnEdqea89UKW2qFQ" association="_oUAk1PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUAk1vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUAk1_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_A7vDAGv0Edq7X4sGURiZYA" name="Stereotype">
      <ownedComment xmi:id="_oUAk3_WnEdqea89UKW2qFQ" annotatedElement="_A7vDAGv0Edq7X4sGURiZYA">
        <body>A stereotype defines how an existing metaclass may be extended, and enables the use of platform or domain specific terminology or notation in place of, or in addition to, the ones used for the extended metaclass.</body>
      </ownedComment>
      <ownedRule xmi:id="_oUAk4PWnEdqea89UKW2qFQ" name="name_not_clash" constrainedElement="_A7vDAGv0Edq7X4sGURiZYA">
        <ownedComment xmi:id="_oUAk4fWnEdqea89UKW2qFQ" annotatedElement="_oUAk4PWnEdqea89UKW2qFQ">
          <body>Stereotype names should not clash with keyword names for the extended model element.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUAk4vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oUAk4_WnEdqea89UKW2qFQ" name="generalize" constrainedElement="_A7vDAGv0Edq7X4sGURiZYA">
        <ownedComment xmi:id="_oUAk5PWnEdqea89UKW2qFQ" annotatedElement="_oUAk4_WnEdqea89UKW2qFQ">
          <body>A Stereotype may only generalize or specialize another Stereotype.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUAk5fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>generalization.general->forAll(e |e.oclIsKindOf(Stereotype)) and generalization.specific->forAll(e | e.oclIsKindOf(Stereotype)) </body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oUAk5vWnEdqea89UKW2qFQ" general="_00owUGvdEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oUAk5_WnEdqea89UKW2qFQ" name="icon" type="_nDq0wJPzEdqpjIDDFZ2Hgw" aggregation="composite" association="_oUmatfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUAk6PWnEdqea89UKW2qFQ" annotatedElement="_oUAk5_WnEdqea89UKW2qFQ">
          <body>Stereotype can change the graphical appearance of the extended model element by using attached icons. When this association is not null, it references the location of the icon content to be displayed within diagrams presenting the extended model elements.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUAk6fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUAk6vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_FJce8GwHEdq7X4sGURiZYA" name="createExtension">
        <ownedComment xmi:id="_7qwjAOwjEdqYHf-imTcTdw" annotatedElement="_FJce8GwHEdq7X4sGURiZYA">
          <body>Creates a(n) (required) extension of the specified metaclass with this stereotype.</body>
        </ownedComment>
        <ownedParameter xmi:id="_IziyIGwHEdq7X4sGURiZYA" type="_skHGwGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_cQPbYGwHEdq7X4sGURiZYA" name="metaclass" type="_00owUGvdEdq4DLWZOhbdEA" effect="read"/>
        <ownedParameter xmi:id="_Jc0YoGwHEdq7X4sGURiZYA" name="isRequired" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_X7-EcGv0Edq7X4sGURiZYA" name="getProfile" isQuery="true">
        <ownedComment xmi:id="_9LxCwOwjEdqYHf-imTcTdw" annotatedElement="_X7-EcGv0Edq7X4sGURiZYA">
          <body>Retrieves the profile that owns this stereotype.</body>
        </ownedComment>
        <ownedParameter xmi:id="_Z7OmcGv0Edq7X4sGURiZYA" type="__pew8GvzEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_D7gsMWwHEdq7X4sGURiZYA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_D7gsMGwHEdq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_im40YGwHEdq7X4sGURiZYA" name="getKeyword" isQuery="true">
        <ownedComment xmi:id="_-0EdUOwjEdqYHf-imTcTdw" annotatedElement="_im40YGwHEdq7X4sGURiZYA">
          <body>Retrieves the localized keyword for this stereotype.</body>
        </ownedComment>
        <ownedParameter xmi:id="_lZHEYGwHEdq7X4sGURiZYA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_n7YM0GwHEdq7X4sGURiZYA" name="getKeyword" isQuery="true">
        <ownedComment xmi:id="_AJA3AOwkEdqYHf-imTcTdw" annotatedElement="_n7YM0GwHEdq7X4sGURiZYA">
          <body>Retrieves the keyword for this stereotype, localized if indicated.</body>
        </ownedComment>
        <ownedParameter xmi:id="_n7YM0WwHEdq7X4sGURiZYA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_rn3FoGwHEdq7X4sGURiZYA" name="localize" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_02jCwGwHEdq7X4sGURiZYA" name="getExtendedMetaclasses" isQuery="true">
        <ownedComment xmi:id="_BxLHoOwkEdqYHf-imTcTdw" annotatedElement="_02jCwGwHEdq7X4sGURiZYA">
          <body>Retrieves the metaclasses extended by this stereotype.</body>
        </ownedComment>
        <ownedParameter xmi:id="_25hnIGwHEdq7X4sGURiZYA" type="_00owUGvdEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5lVtIWwHEdq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5lVtIGwHEdq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_7T5gsGwHEdq7X4sGURiZYA" name="getAllExtendedMetaclasses" isQuery="true">
        <ownedComment xmi:id="_FnVg4OwkEdqYHf-imTcTdw" annotatedElement="_7T5gsGwHEdq7X4sGURiZYA">
          <body>Retrieves all the metaclasses extended by this stereotype, including the metaclasses extended by its superstereotypes.</body>
        </ownedComment>
        <ownedParameter xmi:id="_7T5gsWwHEdq7X4sGURiZYA" type="_00owUGvdEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7T5gsmwHEdq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7T5gs2wHEdq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wdNtsI0GEdqipMtlOpTiHA" name="getDefinition" isQuery="true">
        <ownedComment xmi:id="_MOYGUOwkEdqYHf-imTcTdw" annotatedElement="_wdNtsI0GEdqipMtlOpTiHA">
          <body>Retrieves the current definition (Ecore representation) of this stereotype.</body>
        </ownedComment>
        <ownedParameter xmi:id="_wdNtsY0GEdqipMtlOpTiHA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53903D5BF000A"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wdNtso0GEdqipMtlOpTiHA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wdNts40GEdqipMtlOpTiHA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_h2eXIJPzEdqpjIDDFZ2Hgw" name="createIcon">
        <ownedComment xmi:id="_Oq2IwOwkEdqYHf-imTcTdw" annotatedElement="_h2eXIJPzEdqpjIDDFZ2Hgw">
          <body>Creates an icon with the specified location for this stereotype.</body>
        </ownedComment>
        <ownedParameter xmi:id="_tND04JPzEdqpjIDDFZ2Hgw" type="_nDq0wJPzEdqpjIDDFZ2Hgw" direction="return"/>
        <ownedParameter xmi:id="_vrdJ8JPzEdqpjIDDFZ2Hgw" name="location" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_pK-tQJP4EdqpjIDDFZ2Hgw" name="createIcon">
        <ownedComment xmi:id="_UNpC8OwkEdqYHf-imTcTdw" annotatedElement="_pK-tQJP4EdqpjIDDFZ2Hgw">
          <body>Creates an icon with the specified format and content for this stereotype.</body>
        </ownedComment>
        <ownedParameter xmi:id="_ud-Q4JP4EdqpjIDDFZ2Hgw" type="_nDq0wJPzEdqpjIDDFZ2Hgw" direction="return"/>
        <ownedParameter xmi:id="_T7RY0JP5EdqpjIDDFZ2Hgw" name="format" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_RPUI4JP5EdqpjIDDFZ2Hgw" name="content" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__pew8GvzEdq7X4sGURiZYA" name="Profile">
      <ownedComment xmi:id="_oUJuwPWnEdqea89UKW2qFQ" annotatedElement="__pew8GvzEdq7X4sGURiZYA">
        <body>A profile defines limited extensions to a reference metamodel with the purpose of adapting the metamodel to a specific platform or domain.</body>
      </ownedComment>
      <ownedRule xmi:id="_oUJuwfWnEdqea89UKW2qFQ" name="metaclass_reference_not_specialized" constrainedElement="__pew8GvzEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oUJuwvWnEdqea89UKW2qFQ" annotatedElement="_oUJuwfWnEdqea89UKW2qFQ">
          <body>An element imported as a metaclassReference is not specialized or generalized in a Profile.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUJuw_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.metaclassReference.importedElement->&#xD;&#xA;  select(c | c.oclIsKindOf(Classifier) and&#xD;&#xA;    (c.generalization.namespace = self or&#xD;&#xA;      (c.specialization.namespace = self) )->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oUJuxPWnEdqea89UKW2qFQ" name="references_same_metamodel" constrainedElement="__pew8GvzEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oUJuxfWnEdqea89UKW2qFQ" annotatedElement="_oUJuxPWnEdqea89UKW2qFQ">
          <body>All elements imported either as metaclassReferences or through metamodelReferences are members of the same base reference metamodel.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUJuxvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.metamodelReference.importedPackage.elementImport.importedElement.allOwningPackages())->&#xD;&#xA;  union(self.metaclassReference.importedElement.allOwningPackages() )->notEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oUJux_WnEdqea89UKW2qFQ" general="_-cvRAGvzEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oUJuyPWnEdqea89UKW2qFQ" name="ownedStereotype" type="_A7vDAGv0Edq7X4sGURiZYA" isDerived="true" aggregation="composite" subsettedProperty="_oB-ZwvWnEdqea89UKW2qFQ" association="_oUdQw_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUJuyfWnEdqea89UKW2qFQ" annotatedElement="_oUJuyPWnEdqea89UKW2qFQ">
          <body>References the Stereotypes that are owned by the Profile.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUJuyvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUJuy_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oUJuzPWnEdqea89UKW2qFQ" name="metaclassReference" type="_RPl78GwIEdq7X4sGURiZYA" aggregation="composite" subsettedProperty="_oAyG2fWnEdqea89UKW2qFQ" association="_oUdQ2PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUJuzfWnEdqea89UKW2qFQ" annotatedElement="_oUJuzPWnEdqea89UKW2qFQ">
          <body>References a metaclass that may be extended.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUJuzvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUJuz_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oUJu0PWnEdqea89UKW2qFQ" name="metamodelReference" type="_SnNPIGwIEdq7X4sGURiZYA" aggregation="composite" subsettedProperty="_oAyG3fWnEdqea89UKW2qFQ" association="_oUmasPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUJu0fWnEdqea89UKW2qFQ" annotatedElement="_oUJu0PWnEdqea89UKW2qFQ">
          <body>References a package containing (directly or indirectly) metaclasses that may be extended.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUJu0vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUJu0_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_2QKPIGwJEdq7X4sGURiZYA" name="create">
        <ownedComment xmi:id="_QbUdUOwjEdqYHf-imTcTdw" annotatedElement="_2QKPIGwJEdq7X4sGURiZYA">
          <body>Creates and returns an instance of (the Ecore representation of) the specified classifier defined in this profile.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9o-PwGwJEdq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53C4F1C860123"/>
        </ownedParameter>
        <ownedParameter xmi:id="_-se7MGwJEdq7X4sGURiZYA" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_senckGwJEdq7X4sGURiZYA" name="createOwnedStereotype">
        <ownedComment xmi:id="_VxTDgOwjEdqYHf-imTcTdw" annotatedElement="_senckGwJEdq7X4sGURiZYA">
          <body>Creates a(n) (abstract) stereotype with the specified name as an owned stereotype of this profile.</body>
        </ownedComment>
        <ownedParameter xmi:id="_upCswGwJEdq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:id="_xOvjsGwJEdq7X4sGURiZYA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_vJOosGwJEdq7X4sGURiZYA" name="isAbstract" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_8ACYgGwIEdq7X4sGURiZYA" name="isDefined" isQuery="true">
        <ownedComment xmi:id="_iDLr4OwjEdqYHf-imTcTdw" annotatedElement="_8ACYgGwIEdq7X4sGURiZYA">
          <body>Determines whether this profile is defined.</body>
        </ownedComment>
        <ownedParameter xmi:id="_E3LYUGwJEdq7X4sGURiZYA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_GdjgQGwJEdq7X4sGURiZYA" name="define">
        <ownedComment xmi:id="_gx0xsOwjEdqYHf-imTcTdw" annotatedElement="_GdjgQGwJEdq7X4sGURiZYA">
          <body>Defines this profile by (re)creating Ecore representations of its current contents.</body>
        </ownedComment>
        <ownedParameter xmi:id="_JO2EsGwgEdqHKKVoxc0dlA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53905C3F7000A"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_bctjUWwgEdqHKKVoxc0dlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_bctjUGwgEdqHKKVoxc0dlA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_LLkQEGwgEdqHKKVoxc0dlA" name="getDefinition" isQuery="true">
        <ownedComment xmi:id="_nSm-IOwjEdqYHf-imTcTdw" annotatedElement="_LLkQEGwgEdqHKKVoxc0dlA">
          <body>Retrieves the current definition (Ecore representation) of this profile.</body>
        </ownedComment>
        <ownedParameter xmi:id="_P0QScGwgEdqHKKVoxc0dlA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53905C3F7000A"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dKYmEWwgEdqHKKVoxc0dlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_dKYmEGwgEdqHKKVoxc0dlA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nFBqQGwgEdqHKKVoxc0dlA" name="getDefinition" isQuery="true">
        <ownedComment xmi:id="_qItBgOwjEdqYHf-imTcTdw" annotatedElement="_nFBqQGwgEdqHKKVoxc0dlA">
          <body>Retrieves the current definition (Ecore representation) of the specified named element in this profile.</body>
        </ownedComment>
        <ownedParameter xmi:id="_nFBqQWwgEdqHKKVoxc0dlA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53B65CCC600FE"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nFBqQmwgEdqHKKVoxc0dlA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nFBqQ2wgEdqHKKVoxc0dlA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_pPTwgGwgEdqHKKVoxc0dlA" name="namedElement" type="_csVgUGvtEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_LBK1YGwJEdq7X4sGURiZYA" name="getReferencedMetaclasses" isQuery="true">
        <ownedComment xmi:id="_rWMIUOwjEdqYHf-imTcTdw" annotatedElement="_LBK1YGwJEdq7X4sGURiZYA">
          <body>Retrieves the metaclasses referenced by this profile.</body>
        </ownedComment>
        <ownedParameter xmi:id="_Ns-UUGwJEdq7X4sGURiZYA" type="_00owUGvdEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_PU_bAWwJEdq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_PU_bAGwJEdq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Y9mUAGwJEdq7X4sGURiZYA" name="getReferencedMetamodels" isQuery="true">
        <ownedComment xmi:id="_wXAW0OwjEdqYHf-imTcTdw" annotatedElement="_Y9mUAGwJEdq7X4sGURiZYA">
          <body>Retrieves the metamodels referenced by this profile.</body>
        </ownedComment>
        <ownedParameter xmi:id="_berJoGwJEdq7X4sGURiZYA" type="_NVhqMGv0Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dSdbcWwJEdq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_dSdbcGwJEdq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_HL150JPuEdqpjIDDFZ2Hgw" name="getOwnedExtensions" isQuery="true">
        <ownedComment xmi:id="_27ORwOwjEdqYHf-imTcTdw" annotatedElement="_HL150JPuEdqpjIDDFZ2Hgw">
          <body>Retrieves the extensions owned by this profile, excluding non-required extensions if indicated.</body>
        </ownedComment>
        <ownedParameter xmi:id="_KG2SYJPuEdqpjIDDFZ2Hgw" type="_skHGwGvsEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bi6zYZP3EdqpjIDDFZ2Hgw" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Bi6zYJP3EdqpjIDDFZ2Hgw"/>
        </ownedParameter>
        <ownedParameter xmi:id="_OTEbMJPuEdqpjIDDFZ2Hgw" name="requiredOnly" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_00owUGvdEdq4DLWZOhbdEA" name="Class">
      <ownedComment xmi:id="_oBOywPWnEdqea89UKW2qFQ" annotatedElement="_00owUGvdEdq4DLWZOhbdEA">
        <body>A class describes a set of objects that share the same specifications of features, constraints, and semantics.</body>
      </ownedComment>
      <ownedComment xmi:id="_oMtC_vWnEdqea89UKW2qFQ" annotatedElement="_00owUGvdEdq4DLWZOhbdEA">
        <body>A class may be designated as active (i.e., each of its instances having its own thread of control) or passive (i.e., each of its instances executing within the context of some other object). A class may also specify which signals the instances of this class handle.</body>
      </ownedComment>
      <ownedComment xmi:id="_oN5V0vWnEdqea89UKW2qFQ" annotatedElement="_00owUGvdEdq4DLWZOhbdEA">
        <body>A class has the capability to have an internal structure and ports.</body>
      </ownedComment>
      <ownedComment xmi:id="_oUJu2fWnEdqea89UKW2qFQ" annotatedElement="_00owUGvdEdq4DLWZOhbdEA">
        <body>Class has derived association that indicates how it may be extended through one or more stereotypes. Stereotype is the only kind of metaclass that cannot be extended by stereotypes.</body>
      </ownedComment>
      <ownedRule xmi:id="_oMtC__WnEdqea89UKW2qFQ" name="passive_class" constrainedElement="_00owUGvdEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oMtDAPWnEdqea89UKW2qFQ" annotatedElement="_oMtC__WnEdqea89UKW2qFQ">
          <body>A passive class may not own receptions.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMtDAfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>not self.isActive implies self.ownedReception.isEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oMtDAvWnEdqea89UKW2qFQ" general="_iY7sMGvsEdqG6fBIPwe-mw"/>
      <generalization xmi:id="_oN5V0_WnEdqea89UKW2qFQ" general="_oNvk4PWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oBOywvWnEdqea89UKW2qFQ" name="isAbstract" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" redefinedProperty="_oEp6MPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBOyw_WnEdqea89UKW2qFQ" annotatedElement="_oBOywvWnEdqea89UKW2qFQ">
          <body>True when a class is abstract.</body>
        </ownedComment>
        <ownedComment xmi:id="_oFtDG_WnEdqea89UKW2qFQ" annotatedElement="_oBOywvWnEdqea89UKW2qFQ">
          <body>If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oFtDHPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oF2NAPWnEdqea89UKW2qFQ" name="nestedClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" isOrdered="true" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oHWB3fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oF2NAfWnEdqea89UKW2qFQ" annotatedElement="_oF2NAPWnEdqea89UKW2qFQ">
          <body>References all the Classifiers that are defined (nested) within the Class.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF2NAvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF2NA_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBOyxfWnEdqea89UKW2qFQ" name="ownedAttribute" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" redefinedProperty="_oKUdVfWnEdqea89UKW2qFQ" subsettedProperty="_oACf8vWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oCk2kvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBOyxvWnEdqea89UKW2qFQ" annotatedElement="_oBOyxfWnEdqea89UKW2qFQ">
          <body>The attributes (i.e. the properties) owned by the class.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF2NBPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF2NBfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBOyyfWnEdqea89UKW2qFQ" name="ownedOperation" visibility="public" type="_M4X2IGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oAMQ8PWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oCk2lfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBOyyvWnEdqea89UKW2qFQ" annotatedElement="_oBOyyfWnEdqea89UKW2qFQ">
          <body>The operations owned by the class.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF2NBvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF2NB_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBOyzfWnEdqea89UKW2qFQ" name="superClass" visibility="public" type="_00owUGvdEdq4DLWZOhbdEA" isDerived="true" redefinedProperty="_oAMQ9PWnEdqea89UKW2qFQ" association="_oCk2qvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBOyzvWnEdqea89UKW2qFQ" annotatedElement="_oBOyzfWnEdqea89UKW2qFQ">
          <body>This gives the superclasses of a class.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF2NCPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF2NCfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMtDA_WnEdqea89UKW2qFQ" name="isActive" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oMtDBPWnEdqea89UKW2qFQ" annotatedElement="_oMtDA_WnEdqea89UKW2qFQ">
          <body>Determines whether an object specified by this class is active or not. If true, then the owning class is referred to as an active class. If false, then such a class is referred to as a passive class.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oMtDBfWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMtDBvWnEdqea89UKW2qFQ" name="ownedReception" type="_oM2z8PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ _oAMQ8PWnEdqea89UKW2qFQ" association="_oM_9-vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMtDB_WnEdqea89UKW2qFQ" annotatedElement="_oMtDBvWnEdqea89UKW2qFQ">
          <body>Receptions that objects of this class are willing to accept.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMtDCPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMtDCfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oUJu2vWnEdqea89UKW2qFQ" name="extension" type="_skHGwGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_oUdQzfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUJu2_WnEdqea89UKW2qFQ" annotatedElement="_oUJu2vWnEdqea89UKW2qFQ">
          <body>References the Extensions that specify additional properties of the metaclass. The property is derived from the extensions whose memberEnds are typed by the Class.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUJu3PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUJu3fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_4xcu4FYKEdqrn7iZ0eqieg" name="getExtensions" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_8-RUoFYKEdqrn7iZ0eqieg" type="_skHGwGvsEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-3Q2kVYKEdqrn7iZ0eqieg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-3Q2kFYKEdqrn7iZ0eqieg"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_EpigwGwQEdq14q0ETb1t3g" name="createOwnedOperation">
        <ownedComment xmi:id="_ZFCecOweEdqYHf-imTcTdw" annotatedElement="_EpigwGwQEdq14q0ETb1t3g">
          <body>Creates an operation with the specified name, parameter names, parameter types, and return type (or null) as an owned operation of this class.</body>
        </ownedComment>
        <ownedParameter xmi:id="_IMMIIGwQEdq14q0ETb1t3g" type="_M4X2IGveEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_bWQJQGwQEdq14q0ETb1t3g" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qFIE0aOwEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qFIE0KOwEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_LLEUEGwQEdq14q0ETb1t3g" name="parameterNames" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mIoGsWwQEdq14q0ETb1t3g" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mIoGsGwQEdq14q0ETb1t3g"/>
        </ownedParameter>
        <ownedParameter xmi:id="_RCurAGwQEdq14q0ETb1t3g" name="parameterTypes" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jYfhYWwQEdq14q0ETb1t3g" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jYfhYGwQEdq14q0ETb1t3g"/>
        </ownedParameter>
        <ownedParameter xmi:id="_WoD70GwQEdq14q0ETb1t3g" name="returnType" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r-30saOwEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_r-30sKOwEdqi_5gqUMOQtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_shXKYGwQEdq14q0ETb1t3g" name="isMetaclass" isQuery="true">
        <ownedComment xmi:id="_hb-7QOweEdqYHf-imTcTdw" annotatedElement="_shXKYGwQEdq14q0ETb1t3g">
          <body>Determines whether this class is a metaclass.</body>
        </ownedComment>
        <ownedParameter xmi:id="_urWVsGwQEdq14q0ETb1t3g" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBOy0fWnEdqea89UKW2qFQ" name="inherit" visibility="public" isQuery="true" redefinedOperation="_oAVbFfWnEdqea89UKW2qFQ" bodyCondition="_oBOy0_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBOy0vWnEdqea89UKW2qFQ" annotatedElement="_oBOy0fWnEdqea89UKW2qFQ">
          <body>The inherit operation is overridden to exclude redefined properties.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBOy0_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBOy0fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF2NCvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBOy1fWnEdqea89UKW2qFQ" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF2NC_WnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF2NDPWnEdqea89UKW2qFQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oBOy2PWnEdqea89UKW2qFQ" name="inhs" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF2NDfWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF2NDvWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uY5yQGv5Edq7X4sGURiZYA" name="ProfileApplication">
      <ownedComment xmi:id="_oUJu3vWnEdqea89UKW2qFQ" annotatedElement="_uY5yQGv5Edq7X4sGURiZYA">
        <body>A profile application is used to show which profiles have been applied to a package.</body>
      </ownedComment>
      <generalization xmi:id="_oUJu3_WnEdqea89UKW2qFQ" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:id="_oUJu4PWnEdqea89UKW2qFQ" name="appliedProfile" type="__pew8GvzEdq7X4sGURiZYA" subsettedProperty="_oAfL5vWnEdqea89UKW2qFQ" association="_oUdQyPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUJu4fWnEdqea89UKW2qFQ" annotatedElement="_oUJu4PWnEdqea89UKW2qFQ">
          <body>References the Profiles that are applied to a Package through this ProfileApplication.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUJu4vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUJu4_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oUJu5PWnEdqea89UKW2qFQ" name="isStrict" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oUJu5fWnEdqea89UKW2qFQ" annotatedElement="_oUJu5PWnEdqea89UKW2qFQ">
          <body>Specifies that the Profile filtering rules for the metaclasses of the referenced metamodel shall be strictly applied.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oUJu5vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oUJu5_WnEdqea89UKW2qFQ" name="applyingPackage" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_oAfL4vWnEdqea89UKW2qFQ _oAfL9fWnEdqea89UKW2qFQ" association="_oUdQwPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUJu6PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUJu6fWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_GXI1QW10EdqniMBnIUw7ig" name="getAppliedDefinition" isQuery="true">
        <ownedComment xmi:id="_ifO5QOwkEdqYHf-imTcTdw" annotatedElement="_GXI1QW10EdqniMBnIUw7ig">
          <body>Retrieves the definition (Ecore representation) of the profile associated with this profile application.</body>
        </ownedComment>
        <ownedParameter xmi:id="_LJ9EAG10EdqniMBnIUw7ig" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53905C3F7000A"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OTQ-UW10EdqniMBnIUw7ig" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OTQ-UG10EdqniMBnIUw7ig"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_G3YEAI2_EdqipMtlOpTiHA" name="getAppliedDefinition" isQuery="true">
        <ownedComment xmi:id="_lZV58OwkEdqYHf-imTcTdw" annotatedElement="_G3YEAI2_EdqipMtlOpTiHA">
          <body>Retrieves the definition (Ecore representation) of the specified named element in the profile associated with this profile application.</body>
        </ownedComment>
        <ownedParameter xmi:id="_G3YEAY2_EdqipMtlOpTiHA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53B65CCC600FE"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_G3YEAo2_EdqipMtlOpTiHA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_G3YEA42_EdqipMtlOpTiHA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_G3YEBI2_EdqipMtlOpTiHA" name="namedElement" type="_csVgUGvtEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_skHGwGvsEdqG6fBIPwe-mw" name="Extension">
      <ownedComment xmi:id="_oUJu6vWnEdqea89UKW2qFQ" annotatedElement="_skHGwGvsEdqG6fBIPwe-mw">
        <body>An extension is used to indicate that the properties of a metaclass are extended through a stereotype, and gives the ability to flexibly add (and later remove) stereotypes to classes.</body>
      </ownedComment>
      <ownedRule xmi:id="_oUJu6_WnEdqea89UKW2qFQ" name="non_owned_end" constrainedElement="_skHGwGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oUJu7PWnEdqea89UKW2qFQ" annotatedElement="_oUJu6_WnEdqea89UKW2qFQ">
          <body>The non-owned end of an Extension is typed by a Class.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUJu7fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>metaclassEnd()->notEmpty() and metaclass()->oclIsKindOf(Class)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oUJu7vWnEdqea89UKW2qFQ" name="is_binary" constrainedElement="_skHGwGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oUTfwPWnEdqea89UKW2qFQ" annotatedElement="_oUJu7vWnEdqea89UKW2qFQ">
          <body>An Extension is binary, i.e., it has only two memberEnds.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUTfwfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>memberEnd->size() = 2</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oUTfwvWnEdqea89UKW2qFQ" general="_AwvxoGwNEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oUTfw_WnEdqea89UKW2qFQ" name="isRequired" type="_UdivYGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="_oUTfxPWnEdqea89UKW2qFQ" annotatedElement="_oUTfw_WnEdqea89UKW2qFQ">
          <body>Indicates whether an instance of the extending stereotype must be created when an instance of the extended class is created. The attribute value is derived from the multiplicity of the Property referenced by Extension::ownedEnd; a multiplicity of 1 means that isRequired is true, but otherwise it is false. Since the default multiplicity of an ExtensionEnd is 0..1, the default value of isRequired is false.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oUTfxfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oUTfxvWnEdqea89UKW2qFQ" name="metaclass" type="_00owUGvdEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" association="_oUdQzfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUTfx_WnEdqea89UKW2qFQ" annotatedElement="_oUTfxvWnEdqea89UKW2qFQ">
          <body>References the Class that is extended through an Extension. The property is derived from the type of the memberEnd that is not the ownedEnd.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUTfyPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUTfyfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oUTfyvWnEdqea89UKW2qFQ" name="ownedEnd" type="_2QuT0GvdEdq4DLWZOhbdEA" aggregation="composite" redefinedProperty="_oBFB6_WnEdqea89UKW2qFQ" association="_oUdQzvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUTfy_WnEdqea89UKW2qFQ" annotatedElement="_oUTfyvWnEdqea89UKW2qFQ">
          <body>References the end of the extension that is typed by a Stereotype.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUTfzPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUTfzfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_k1UVkJPtEdqpjIDDFZ2Hgw" name="getStereotypeEnd" isQuery="true">
        <ownedComment xmi:id="_VLzRIOwgEdqYHf-imTcTdw" annotatedElement="_k1UVkJPtEdqpjIDDFZ2Hgw">
          <body>Retrieves the extension end that is typed by a stereotype (as opposed to a metaclass).</body>
        </ownedComment>
        <ownedParameter xmi:id="_BPaXoJPuEdqpjIDDFZ2Hgw" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X2BEMZQGEdqpjIDDFZ2Hgw" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_X2BEMJQGEdqpjIDDFZ2Hgw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_6cTFEJPtEdqpjIDDFZ2Hgw" name="getStereotype" isQuery="true">
        <ownedComment xmi:id="_fNTLQOwgEdqYHf-imTcTdw" annotatedElement="_6cTFEJPtEdqpjIDDFZ2Hgw">
          <body>Retrieves the stereotype that extends a metaclass through this extension.</body>
        </ownedComment>
        <ownedParameter xmi:id="_C7cboJPuEdqpjIDDFZ2Hgw" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aF9tkZQGEdqpjIDDFZ2Hgw" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aF9tkJQGEdqpjIDDFZ2Hgw"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oUTfzvWnEdqea89UKW2qFQ" name="metaclassEnd" isQuery="true" bodyCondition="_oUTf0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUTfz_WnEdqea89UKW2qFQ" annotatedElement="_oUTfzvWnEdqea89UKW2qFQ">
          <body>The query metaclassEnd() returns the Property that is typed by a metaclass (as opposed to a stereotype).</body>
        </ownedComment>
        <ownedRule xmi:id="_oUTf0PWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oUTfzvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUTf0fWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = memberEnd->reject(ownedEnd)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oUTf0vWnEdqea89UKW2qFQ" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oUTf0_WnEdqea89UKW2qFQ" name="metaclass" isQuery="true" bodyCondition="_oUTf1fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUTf1PWnEdqea89UKW2qFQ" annotatedElement="_oUTf0_WnEdqea89UKW2qFQ">
          <body>The query metaclass() returns the metaclass that is being extended (as opposed to the extending stereotype).</body>
        </ownedComment>
        <ownedRule xmi:id="_oUTf1fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oUTf0_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUTf1vWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = metaclassEnd().type</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oUTf1_WnEdqea89UKW2qFQ" type="_00owUGvdEdq4DLWZOhbdEA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oUTf2PWnEdqea89UKW2qFQ" name="isRequired" isQuery="true" bodyCondition="_oUTf2vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUTf2fWnEdqea89UKW2qFQ" annotatedElement="_oUTf2PWnEdqea89UKW2qFQ">
          <body>The query isRequired() is true if the owned end has a multiplicity with the lower bound of 1.</body>
        </ownedComment>
        <ownedRule xmi:id="_oUTf2vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oUTf2PWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUTf2_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (ownedEnd->lowerBound() = 1)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oUTf3PWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nDq0wJPzEdqpjIDDFZ2Hgw" name="Image">
      <ownedComment xmi:id="_oUTf8_WnEdqea89UKW2qFQ" annotatedElement="_nDq0wJPzEdqpjIDDFZ2Hgw">
        <body>Physical definition of a graphical image.</body>
      </ownedComment>
      <generalization xmi:id="_oUTf9PWnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oUTf9fWnEdqea89UKW2qFQ" name="content" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oUTf9vWnEdqea89UKW2qFQ" annotatedElement="_oUTf9fWnEdqea89UKW2qFQ">
          <body>This contains the serialization of the image according to the format. The value could represent a bitmap, image such as a GIF file, or drawing 'instructions' using a standard such as Scalable Vector Graphic (SVG) (which is XML based).</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUTf9_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUTf-PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oUTf-fWnEdqea89UKW2qFQ" name="location" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oUTf-vWnEdqea89UKW2qFQ" annotatedElement="_oUTf-fWnEdqea89UKW2qFQ">
          <body>This contains a location that can be used by a tool to locate the image as an alternative to embedding it in the stereotype.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUTf-_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUTf_PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oUTf_fWnEdqea89UKW2qFQ" name="format" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oUTf_vWnEdqea89UKW2qFQ" annotatedElement="_oUTf_fWnEdqea89UKW2qFQ">
          <body>This indicates the format of the content - which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP.&#xD;
&#xD;
In addition the prefix 'MIME: ' is also reserved. This option can be used as an alternative to express the reserved values above, for example &quot;SVG&quot; could instead be expressed as &quot;MIME: image/svg+xml&quot;.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUTf__WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUTgAPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_kl90MGvbEdq4DLWZOhbdEA" name="Element" isAbstract="true">
      <ownedComment xmi:id="_oAfL6vWnEdqea89UKW2qFQ" annotatedElement="_kl90MGvbEdq4DLWZOhbdEA">
        <body>An element is a constituent of a model. As such, it has the capability of owning other elements.</body>
      </ownedComment>
      <ownedRule xmi:id="_oAfL6_WnEdqea89UKW2qFQ" name="not_own_self" constrainedElement="_kl90MGvbEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oAfL7PWnEdqea89UKW2qFQ" annotatedElement="_oAfL6_WnEdqea89UKW2qFQ">
          <body>An element may not directly or indirectly own itself.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDUddPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>not self.allOwnedElements()->includes(self)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oAfL7vWnEdqea89UKW2qFQ" name="has_owner" constrainedElement="_kl90MGvbEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oAfL7_WnEdqea89UKW2qFQ" annotatedElement="_oAfL7vWnEdqea89UKW2qFQ">
          <body>Elements that must be owned must have an owner.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDUddfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.mustBeOwned() implies owner->notEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rcp_MGvbEdq4DLWZOhbdEA">
        <general xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53903D4E40050"/>
      </generalization>
      <ownedAttribute xmi:id="_oAfL8fWnEdqea89UKW2qFQ" name="ownedElement" visibility="public" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" association="_oCuAs_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAfL8vWnEdqea89UKW2qFQ" annotatedElement="_oAfL8fWnEdqea89UKW2qFQ">
          <body>The Elements owned by this element.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDUddvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDUdd_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAfL9fWnEdqea89UKW2qFQ" name="owner" visibility="public" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_oCuAs_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAfL9vWnEdqea89UKW2qFQ" annotatedElement="_oAfL9fWnEdqea89UKW2qFQ">
          <body>The Element that owns this element.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDUdePWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDUdefWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAfL-fWnEdqea89UKW2qFQ" name="ownedComment" visibility="public" type="_oCRUyvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oC3xofWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAfL-vWnEdqea89UKW2qFQ" annotatedElement="_oAfL-fWnEdqea89UKW2qFQ">
          <body>The Comments owned by this element.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDUdevWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDUde_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_XebbkGvuEdqG6fBIPwe-mw" name="destroy">
        <ownedComment xmi:id="_skdy8ewbEdqYHf-imTcTdw" annotatedElement="_XebbkGvuEdqG6fBIPwe-mw">
          <body>Destroys this element by removing all cross references to/from it and removing it from its containing resource or object.</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_7f8qYGvgEdq4DLWZOhbdEA" name="hasKeyword" isQuery="true">
        <ownedComment xmi:id="_vBX6QOwbEdqYHf-imTcTdw" annotatedElement="_7f8qYGvgEdq4DLWZOhbdEA">
          <body>Determines whether this element has the specified keyword.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9mECUGvgEdq4DLWZOhbdEA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="__FRyUGvgEdq4DLWZOhbdEA" name="keyword" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_bx0EsGvgEdq4DLWZOhbdEA" name="getKeywords" isQuery="true">
        <ownedComment xmi:id="_0r7CQOwbEdqYHf-imTcTdw" annotatedElement="_bx0EsGvgEdq4DLWZOhbdEA">
          <body>Retrieves the keywords for this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_fZ0tMGvgEdq4DLWZOhbdEA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hyHaQWvgEdq4DLWZOhbdEA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hyHaQGvgEdq4DLWZOhbdEA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jlv7EGvgEdq4DLWZOhbdEA" name="addKeyword">
        <ownedComment xmi:id="_2oMhsOwbEdqYHf-imTcTdw" annotatedElement="_jlv7EGvgEdq4DLWZOhbdEA">
          <body>Adds the specified keyword to this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_y6GO4GvgEdq4DLWZOhbdEA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_mQqpMGvgEdq4DLWZOhbdEA" name="keyword" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_qB6tQGvgEdq4DLWZOhbdEA" name="removeKeyword">
        <ownedComment xmi:id="_4b-zgOwbEdqYHf-imTcTdw" annotatedElement="_qB6tQGvgEdq4DLWZOhbdEA">
          <body>Removes the specified keyword from this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_1_Pa4GvgEdq4DLWZOhbdEA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_3u_hQGvgEdq4DLWZOhbdEA" name="keyword" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_674ZYGvzEdq7X4sGURiZYA" name="getNearestPackage" isQuery="true">
        <ownedComment xmi:id="_8qbw8OwbEdqYHf-imTcTdw" annotatedElement="_674ZYGvzEdq7X4sGURiZYA">
          <body>Retrieves the nearest package that owns (either directly or indirectly) this element, or the element itself (if it is a package).</body>
        </ownedComment>
        <ownedParameter xmi:id="_DyktQGv0Edq7X4sGURiZYA" type="_-cvRAGvzEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1aQnEWv3Edq7X4sGURiZYA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1aQnEGv3Edq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Gv0hgGv0Edq7X4sGURiZYA" name="getModel" isQuery="true">
        <ownedComment xmi:id="__lAEoOwbEdqYHf-imTcTdw" annotatedElement="_Gv0hgGv0Edq7X4sGURiZYA">
          <body>Retrieves the model that owns (either directly or indirectly) this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_Pj1U0Gv0Edq7X4sGURiZYA" type="_NVhqMGv0Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zCjv4Wv3Edq7X4sGURiZYA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zCjv4Gv3Edq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aAC2wHFfEdqziYxiZo0YtA" name="isStereotypeApplicable" isQuery="true">
        <ownedComment xmi:id="_ErVFQOwcEdqYHf-imTcTdw" annotatedElement="_aAC2wHFfEdqziYxiZo0YtA">
          <body>Determines whether the specified stereotype is applicable to this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_dR_vsHFfEdqziYxiZo0YtA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_d5o-gHFfEdqziYxiZo0YtA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_nd4TIGv0Edq7X4sGURiZYA" name="isStereotypeRequired" isQuery="true">
        <ownedComment xmi:id="_GPxTgOwcEdqYHf-imTcTdw" annotatedElement="_nd4TIGv0Edq7X4sGURiZYA">
          <body>Determines whether the specified stereotype is required for this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_A-TZYGv1Edq7X4sGURiZYA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_0weVIGv1Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_hDDkwGv0Edq7X4sGURiZYA" name="isStereotypeApplied" isQuery="true">
        <ownedComment xmi:id="_HClQgOwcEdqYHf-imTcTdw" annotatedElement="_hDDkwGv0Edq7X4sGURiZYA">
          <body>Determines whether the specified stereotype is applied to this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_izQ-IGv0Edq7X4sGURiZYA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_jenoQGv0Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_DkmGMGv1Edq7X4sGURiZYA" name="applyStereotype">
        <ownedComment xmi:id="_KtkUgOwcEdqYHf-imTcTdw" annotatedElement="_DkmGMGv1Edq7X4sGURiZYA">
          <body>Applies the specified stereotype to this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_GGbJwGv1Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53C4F1C860123"/>
        </ownedParameter>
        <ownedParameter xmi:id="_GmnFsGv1Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_LUETUGv1Edq7X4sGURiZYA" name="unapplyStereotype">
        <ownedComment xmi:id="_MSdOsOwcEdqYHf-imTcTdw" annotatedElement="_LUETUGv1Edq7X4sGURiZYA">
          <body>Unapplies the specified stereotype from this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_NqRVsGv1Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53C4F1C860123"/>
        </ownedParameter>
        <ownedParameter xmi:id="_OI9c0Gv1Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_7oNB8Gv1Edq7X4sGURiZYA" name="getApplicableStereotypes" isQuery="true">
        <ownedComment xmi:id="_RO894OwcEdqYHf-imTcTdw" annotatedElement="_7oNB8Gv1Edq7X4sGURiZYA">
          <body>Retrieves the stereotypes that are applicable to this element, including those that are required and/or may already be applied.</body>
        </ownedComment>
        <ownedParameter xmi:id="_-J4UgGv1Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ah4GoWv2Edq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ah4GoGv2Edq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_CQI_QGv2Edq7X4sGURiZYA" name="getApplicableStereotype" isQuery="true">
        <ownedComment xmi:id="_UmbQAOwcEdqYHf-imTcTdw" annotatedElement="_CQI_QGv2Edq7X4sGURiZYA">
          <body>Retrieves the stereotype with the specified qualified name that is applicable to this element, or null if no such stereotype is applicable.</body>
        </ownedComment>
        <ownedParameter xmi:id="_FC9FIGv2Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i-hrkWv3Edq7X4sGURiZYA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_i-hrkGv3Edq7X4sGURiZYA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_FX9r0Gv2Edq7X4sGURiZYA" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_IFUr8GvgEdq4DLWZOhbdEA" name="getStereotypeApplications" isQuery="true">
        <ownedComment xmi:id="_hu_owOwcEdqYHf-imTcTdw" annotatedElement="_IFUr8GvgEdq4DLWZOhbdEA">
          <body>Retrieves the stereotype applications for this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_PAVWQGvgEdq4DLWZOhbdEA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53C4F1C860123"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJqQgWvzEdq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJqQgGvzEdq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Rw07YGv1Edq7X4sGURiZYA" name="getStereotypeApplication" isQuery="true">
        <ownedComment xmi:id="_uNjbMOwcEdqYHf-imTcTdw" annotatedElement="_Rw07YGv1Edq7X4sGURiZYA">
          <body>Retrieves the application of the specified stereotype for this element, or null if no such stereotype application exists.</body>
        </ownedComment>
        <ownedParameter xmi:id="_Uw5aIGv1Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53C4F1C860123"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4QyvUWv3Edq7X4sGURiZYA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4QyvUGv3Edq7X4sGURiZYA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_VtGjsGv1Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_ko32oHFfEdqziYxiZo0YtA" name="getRequiredStereotypes" isQuery="true">
        <ownedComment xmi:id="_57OjQOwcEdqYHf-imTcTdw" annotatedElement="_ko32oHFfEdqziYxiZo0YtA">
          <body>Retrieves the stereotypes that are required for this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_qX5O8HFfEdqziYxiZo0YtA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KSF6sXFgEdqziYxiZo0YtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_KSF6sHFgEdqziYxiZo0YtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yk3QYHFfEdqziYxiZo0YtA" name="getRequiredStereotype" isQuery="true">
        <ownedComment xmi:id="_-7KA8OwcEdqYHf-imTcTdw" annotatedElement="_yk3QYHFfEdqziYxiZo0YtA">
          <body>Retrieves the stereotype with the specified qualified name that is required for this element, or null if no such stereotype is required.</body>
        </ownedComment>
        <ownedParameter xmi:id="_8ovJEHFfEdqziYxiZo0YtA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cpo7kXFgEdqziYxiZo0YtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Cpo7kHFgEdqziYxiZo0YtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_9NGaYHFfEdqziYxiZo0YtA" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_ZR1OsGv1Edq7X4sGURiZYA" name="getAppliedStereotypes" isQuery="true">
        <ownedComment xmi:id="_Dj1cQOwdEdqYHf-imTcTdw" annotatedElement="_ZR1OsGv1Edq7X4sGURiZYA">
          <body>Retrieves the stereotypes that are applied to this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_cNu_IGv1Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_eHU-AWv1Edq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eHU-AGv1Edq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_pCV6EGv1Edq7X4sGURiZYA" name="getAppliedStereotype" isQuery="true">
        <ownedComment xmi:id="_IBy1UOwdEdqYHf-imTcTdw" annotatedElement="_pCV6EGv1Edq7X4sGURiZYA">
          <body>Retrieves the stereotype with the specified qualified name that is applied to this element, or null if no such stereotype is  applied.</body>
        </ownedComment>
        <ownedParameter xmi:id="_rLbtgGv1Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mO2M0Wv3Edq7X4sGURiZYA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mO2M0Gv3Edq7X4sGURiZYA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r4SMcGv1Edq7X4sGURiZYA" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="__s2tsGv2Edq7X4sGURiZYA" name="getAppliedSubstereotypes" isQuery="true">
        <ownedComment xmi:id="_NAYPMOwdEdqYHf-imTcTdw" annotatedElement="__s2tsGv2Edq7X4sGURiZYA">
          <body>Retrieves the substereotypes of the specified stereotype that are applied to this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="__s2tsWv2Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__s2tsmv2Edq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="__s2ts2v2Edq7X4sGURiZYA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_DJsA8Gv3Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_KpgogGv3Edq7X4sGURiZYA" name="getAppliedSubstereotype" isQuery="true">
        <ownedComment xmi:id="_P0Fs8OwdEdqYHf-imTcTdw" annotatedElement="_KpgogGv3Edq7X4sGURiZYA">
          <body>Retrieves the substereotype of the specified stereotype with the specified qualified name that is applied to this element, or null if no such stereotype is applied.</body>
        </ownedComment>
        <ownedParameter xmi:id="_KpgogWv3Edq7X4sGURiZYA" type="_A7vDAGv0Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qg4pwWv3Edq7X4sGURiZYA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qg4pwGv3Edq7X4sGURiZYA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_NcK9YGv3Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
        <ownedParameter xmi:id="_Kpgogmv3Edq7X4sGURiZYA" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_JbZFAGv2Edq7X4sGURiZYA" name="hasValue" isQuery="true">
        <ownedComment xmi:id="_b4HfgOwdEdqYHf-imTcTdw" annotatedElement="_JbZFAGv2Edq7X4sGURiZYA">
          <body>Determines whether this element has a (non-default) value for the property with the specified name in the specified stereotype.</body>
        </ownedComment>
        <ownedParameter xmi:id="_L6F8EGv2Edq7X4sGURiZYA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_MqEngGv2Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
        <ownedParameter xmi:id="_RaWfoGv2Edq7X4sGURiZYA" name="propertyName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_WGA9gGv2Edq7X4sGURiZYA" name="getValue" isQuery="true">
        <ownedComment xmi:id="_jrANAOwdEdqYHf-imTcTdw" annotatedElement="_WGA9gGv2Edq7X4sGURiZYA">
          <body>Retrieves the value of the property with the specified name in the specified stereotype for this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_dYH5MGv2Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="Ecore.uml#_439EC3AE03B53ACDF8200182"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8gS1oWv3Edq7X4sGURiZYA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_8gS1oGv3Edq7X4sGURiZYA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_g41m4Gv2Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
        <ownedParameter xmi:id="_eZGOAGv2Edq7X4sGURiZYA" name="propertyName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_nMWzYGv2Edq7X4sGURiZYA" name="setValue">
        <ownedComment xmi:id="_qqfHoOwdEdqYHf-imTcTdw" annotatedElement="_nMWzYGv2Edq7X4sGURiZYA">
          <body>Sets the value of the property with the specified name in the specified stereotype for this element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_resLQGv2Edq7X4sGURiZYA" name="stereotype" type="_A7vDAGv0Edq7X4sGURiZYA" effect="read"/>
        <ownedParameter xmi:id="_o6B2IGv2Edq7X4sGURiZYA" name="propertyName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_m5bH4GzIEdqNr-AKm4G4QQ" name="newValue" effect="read">
          <type xmi:type="uml:PrimitiveType" href="Ecore.uml#_439EC3AE03B53ACDF8200182"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_Tj6BkYbbEdq0WtDJCT4EaQ" name="createEAnnotation">
        <ownedComment xmi:id="_u8XzkOwdEdqYHf-imTcTdw" annotatedElement="_Tj6BkYbbEdq0WtDJCT4EaQ">
          <body>Creates an annotation with the specified source and this element as its model element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_YE_AEIbbEdq0WtDJCT4EaQ" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53D98A1C701AB"/>
        </ownedParameter>
        <ownedParameter xmi:id="_aXUPEIbbEdq0WtDJCT4EaQ" name="source" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_4IIuwKO_Edqi_5gqUMOQtA" name="getRelationships">
        <ownedComment xmi:id="_znllgOwdEdqYHf-imTcTdw" annotatedElement="_4IIuwKO_Edqi_5gqUMOQtA">
          <body>Retrieves the relationships in which this element is involved.</body>
        </ownedComment>
        <ownedParameter xmi:id="_OGNIkKPAEdqi_5gqUMOQtA" type="_DH62EKPAEdqi_5gqUMOQtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5soUaPAEdqi_5gqUMOQtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5soUKPAEdqi_5gqUMOQtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_UJyboKPAEdqi_5gqUMOQtA" name="getRelationships">
        <ownedComment xmi:id="_1gb9gOwdEdqYHf-imTcTdw" annotatedElement="_UJyboKPAEdqi_5gqUMOQtA">
          <body>Retrieves the relationships of the specified type in which this element is involved.</body>
        </ownedComment>
        <ownedParameter xmi:id="_UJyboaPAEdqi_5gqUMOQtA" type="_DH62EKPAEdqi_5gqUMOQtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UJyboqPAEdqi_5gqUMOQtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_UJybo6PAEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_XBN7wKPAEdqi_5gqUMOQtA" name="eClass" effect="read">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53903D5BF000A"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fBOfQKPAEdqi_5gqUMOQtA" name="getSourceDirectedRelationships">
        <ownedComment xmi:id="_5RsBkOwdEdqYHf-imTcTdw" annotatedElement="_fBOfQKPAEdqi_5gqUMOQtA">
          <body>Retrieves the directed relationships for which this element is a source.</body>
        </ownedComment>
        <ownedParameter xmi:id="_fBOfQaPAEdqi_5gqUMOQtA" type="_JBgfoKPAEdqi_5gqUMOQtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fBOfQqPAEdqi_5gqUMOQtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fBOfQ6PAEdqi_5gqUMOQtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_fBOfRKPAEdqi_5gqUMOQtA" name="getSourceDirectedRelationships">
        <ownedComment xmi:id="_63dskOwdEdqYHf-imTcTdw" annotatedElement="_fBOfRKPAEdqi_5gqUMOQtA">
          <body>Retrieves the directed relationships of the specified type for which this element is a source.</body>
        </ownedComment>
        <ownedParameter xmi:id="_fBOfRaPAEdqi_5gqUMOQtA" type="_JBgfoKPAEdqi_5gqUMOQtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fBOfRqPAEdqi_5gqUMOQtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fBOfR6PAEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_fBOfSKPAEdqi_5gqUMOQtA" name="eClass" effect="read">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53903D5BF000A"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t5G5gKPAEdqi_5gqUMOQtA" name="getTargetDirectedRelationships">
        <ownedComment xmi:id="_9qIBcOwdEdqYHf-imTcTdw" annotatedElement="_t5G5gKPAEdqi_5gqUMOQtA">
          <body>Retrieves the directed relationships for which this element is a target.</body>
        </ownedComment>
        <ownedParameter xmi:id="_t5G5gaPAEdqi_5gqUMOQtA" type="_JBgfoKPAEdqi_5gqUMOQtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t5G5gqPAEdqi_5gqUMOQtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_t5G5g6PAEdqi_5gqUMOQtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t5G5hKPAEdqi_5gqUMOQtA" name="getTargetDirectedRelationships">
        <ownedComment xmi:id="__rxJEOwdEdqYHf-imTcTdw" annotatedElement="_t5G5hKPAEdqi_5gqUMOQtA">
          <body>Retrieves the directed relationships of the specified type for which this element is a target.</body>
        </ownedComment>
        <ownedParameter xmi:id="_t5G5haPAEdqi_5gqUMOQtA" type="_JBgfoKPAEdqi_5gqUMOQtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t5G5hqPAEdqi_5gqUMOQtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_t5G5h6PAEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_t5G5iKPAEdqi_5gqUMOQtA" name="eClass" effect="read">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53903D5BF000A"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAfL_fWnEdqea89UKW2qFQ" name="allOwnedElements" visibility="public" isQuery="true" bodyCondition="_oAfL__WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAfL_vWnEdqea89UKW2qFQ" annotatedElement="_oAfL_fWnEdqea89UKW2qFQ">
          <body>The query allOwnedElements() gives all of the direct and indirect owned elements of an element.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAfL__WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAfL_fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDdnYPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAfMAfWnEdqea89UKW2qFQ" visibility="public" type="_kl90MGvbEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDdnYfWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDdnYvWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAfMBPWnEdqea89UKW2qFQ" name="mustBeOwned" visibility="public" isQuery="true" bodyCondition="_oAfMBvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAfMBfWnEdqea89UKW2qFQ" annotatedElement="_oAfMBPWnEdqea89UKW2qFQ">
          <body>The query mustBeOwned() indicates whether elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAfMBvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAfMBPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDdnY_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAfMCPWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oUdQwPWnEdqea89UKW2qFQ" name="A_profileApplication_applyingPackage" memberEnd="_oUJu5_WnEdqea89UKW2qFQ _oUJu1fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oUdQwfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oUdQwvWnEdqea89UKW2qFQ" general="_oCuAuPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oUdQw_WnEdqea89UKW2qFQ" name="A_ownedStereotype_profile" memberEnd="_oUJuyPWnEdqea89UKW2qFQ _oUdQxfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oUdQxPWnEdqea89UKW2qFQ" general="_oCuAoPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oUdQxfWnEdqea89UKW2qFQ" type="__pew8GvzEdq7X4sGURiZYA" redefinedProperty="_oC3xlvWnEdqea89UKW2qFQ" association="_oUdQw_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUdQxvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUdQx_WnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oUdQyPWnEdqea89UKW2qFQ" name="A_appliedProfile_profileApplication" memberEnd="_oUJu4PWnEdqea89UKW2qFQ _oUdQyvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oUdQyfWnEdqea89UKW2qFQ" general="_oC3xgPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oUdQyvWnEdqea89UKW2qFQ" type="_uY5yQGv5Edq7X4sGURiZYA" association="_oUdQyPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUdQy_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUdQzPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oUdQzfWnEdqea89UKW2qFQ" name="A_extension_metaclass" memberEnd="_oUTfxvWnEdqea89UKW2qFQ _oUJu2vWnEdqea89UKW2qFQ" isDerived="true"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oUdQzvWnEdqea89UKW2qFQ" name="A_ownedEnd_extension" memberEnd="_oUTfyvWnEdqea89UKW2qFQ _oUdQ0PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oUdQz_WnEdqea89UKW2qFQ" general="_oCk2mfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oUdQ0PWnEdqea89UKW2qFQ" type="_skHGwGvsEdqG6fBIPwe-mw" redefinedProperty="_oC3xlvWnEdqea89UKW2qFQ" association="_oUdQzvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUdQ0fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUdQ0vWnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oUdQ0_WnEdqea89UKW2qFQ" name="A_type_extensionEnd" memberEnd="_oUTf5fWnEdqea89UKW2qFQ _oUdQ1fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oUdQ1PWnEdqea89UKW2qFQ" general="_oCk2kPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oUdQ1fWnEdqea89UKW2qFQ" type="_2QuT0GvdEdq4DLWZOhbdEA" association="_oUdQ0_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUdQ1vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUdQ1_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oUdQ2PWnEdqea89UKW2qFQ" name="A_metaclassReference_profile" memberEnd="_oUJuzPWnEdqea89UKW2qFQ _oUdQ2vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oUdQ2fWnEdqea89UKW2qFQ" general="_oCuAmvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oUdQ2vWnEdqea89UKW2qFQ" type="__pew8GvzEdq7X4sGURiZYA" association="_oUdQ2PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUdQ2_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUdQ3PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oUmasPWnEdqea89UKW2qFQ" name="A_metamodelReference_profile" memberEnd="_oUJu0PWnEdqea89UKW2qFQ _oUmasvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oUmasfWnEdqea89UKW2qFQ" general="_oCuAnfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oUmasvWnEdqea89UKW2qFQ" type="__pew8GvzEdq7X4sGURiZYA" association="_oUmasPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUmas_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUmatPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oUmatfWnEdqea89UKW2qFQ" name="A_icon_stereotype" memberEnd="_oUAk5_WnEdqea89UKW2qFQ _oUmatvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oUmatvWnEdqea89UKW2qFQ" type="_A7vDAGv0Edq7X4sGURiZYA" association="_oUmatfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUmat_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUmauPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2QuT0GvdEdq4DLWZOhbdEA" name="ExtensionEnd">
      <ownedComment xmi:id="_oUTf3fWnEdqea89UKW2qFQ" annotatedElement="_2QuT0GvdEdq4DLWZOhbdEA">
        <body>An extension end is used to tie an extension to a stereotype when extending a metaclass.</body>
      </ownedComment>
      <ownedComment xmi:id="_oUmawfWnEdqea89UKW2qFQ" annotatedElement="_2QuT0GvdEdq4DLWZOhbdEA">
        <body>The default multiplicity of an extension end is 0..1.</body>
      </ownedComment>
      <ownedRule xmi:id="_oUTf3vWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_2QuT0GvdEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oUTf3_WnEdqea89UKW2qFQ" annotatedElement="_oUTf3vWnEdqea89UKW2qFQ">
          <body>The multiplicity of ExtensionEnd is 0..1 or 1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUTf4PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self->lowerBound() = 0 or self->lowerBound() = 1) and self->upperBound() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oUTf4fWnEdqea89UKW2qFQ" name="aggregation" constrainedElement="_2QuT0GvdEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oUTf4vWnEdqea89UKW2qFQ" annotatedElement="_oUTf4fWnEdqea89UKW2qFQ">
          <body>The aggregation of an ExtensionEnd is composite.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUTf4_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.aggregation = #composite</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oUTf5PWnEdqea89UKW2qFQ" general="_Jp_1oGveEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oUTf5fWnEdqea89UKW2qFQ" name="type" type="_A7vDAGv0Edq7X4sGURiZYA" redefinedProperty="_oA74AfWnEdqea89UKW2qFQ" association="_oUdQ0_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUTf5vWnEdqea89UKW2qFQ" annotatedElement="_oUTf5fWnEdqea89UKW2qFQ">
          <body>References the type of the ExtensionEnd. Note that this association restricts the possible types of an ExtensionEnd to only be Stereotypes.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUTf5_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUTf6PWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oUTf6fWnEdqea89UKW2qFQ" name="lower" visibility="public" type="_XqvEIGvsEdqG6fBIPwe-mw" isDerived="true" redefinedProperty="_oAoV6PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUTf6vWnEdqea89UKW2qFQ" annotatedElement="_oUTf6fWnEdqea89UKW2qFQ">
          <body>This redefinition changes the default multiplicity of association ends, since model elements are usually extended by 0 or 1 instance of the extension stereotype.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUmawvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUmaw_WnEdqea89UKW2qFQ"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_oUmaxPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_WLw30FYLEdqrn7iZ0eqieg" name="getLower" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_ZNVLYFYLEdqrn7iZ0eqieg" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_3FVzkFYkEdqB6vblk3tuMA" name="setLower" visibility="protected">
        <ownedParameter xmi:id="_4dG3wFYkEdqB6vblk3tuMA" name="newLower" visibility="protected" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oUTf7vWnEdqea89UKW2qFQ" name="lowerBound" isQuery="true" redefinedOperation="_oAoWCfWnEdqea89UKW2qFQ" bodyCondition="_oUTf8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUTf7_WnEdqea89UKW2qFQ" annotatedElement="_oUTf7vWnEdqea89UKW2qFQ">
          <body>The query lowerBound() returns the lower bound of the multiplicity as an Integer. This is a redefinition of the default&#xD;
lower bound, which normally, for MultiplicityElements, evaluates to 1 if empty.</body>
        </ownedComment>
        <ownedRule xmi:id="_oUTf8PWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oUTf7vWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUTf8fWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = lowerBound = if lowerValue->isEmpty() then 0 else lowerValue->IntegerValue() endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oUTf8vWnEdqea89UKW2qFQ" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oUwLsPWnEdqea89UKW2qFQ" name="VariableAction" isAbstract="true">
      <ownedComment xmi:id="_oUwLsfWnEdqea89UKW2qFQ" annotatedElement="_oUwLsPWnEdqea89UKW2qFQ">
        <body>VariableAction is an abstract class for actions that operate on a statically specified variable.</body>
      </ownedComment>
      <ownedRule xmi:id="_oUwLsvWnEdqea89UKW2qFQ" name="scope_of_variable" constrainedElement="_oUwLsPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUwLs_WnEdqea89UKW2qFQ" annotatedElement="_oUwLsvWnEdqea89UKW2qFQ">
          <body>The action must be in the scope of the variable.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUwLtPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.variable.isAccessibleBy(self)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oUwLtfWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oUwLtvWnEdqea89UKW2qFQ" name="variable" type="_oJIKhPWnEdqea89UKW2qFQ" association="_oVDGsPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUwLt_WnEdqea89UKW2qFQ" annotatedElement="_oUwLtvWnEdqea89UKW2qFQ">
          <body>Variable to be read.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUwLuPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUwLufWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oUwLuvWnEdqea89UKW2qFQ" name="ReadVariableAction">
      <ownedComment xmi:id="_oUwLu_WnEdqea89UKW2qFQ" annotatedElement="_oUwLuvWnEdqea89UKW2qFQ">
        <body>A read variable action is a variable action that retrieves the values of a variable.</body>
      </ownedComment>
      <ownedRule xmi:id="_oUwLvPWnEdqea89UKW2qFQ" name="type_and_ordering" constrainedElement="_oUwLuvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUwLvfWnEdqea89UKW2qFQ" annotatedElement="_oUwLvPWnEdqea89UKW2qFQ">
          <body>The type and ordering of the result output pin of a read-variable action are the same as the type and ordering of the variable.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUwLvvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.type =self.variable.type&#xA;and self.result.ordering = self.variable.ordering&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oUwLv_WnEdqea89UKW2qFQ" name="compatible_multiplicity" constrainedElement="_oUwLuvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUwLwPWnEdqea89UKW2qFQ" annotatedElement="_oUwLv_WnEdqea89UKW2qFQ">
          <body>The multiplicity of the variable must be compatible with the multiplicity of the output pin.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUwLwfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.variable.multiplicity.compatibleWith(self.result.multiplicity)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oUwLwvWnEdqea89UKW2qFQ" general="_oUwLsPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oUwLw_WnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oVDGtPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUwLxPWnEdqea89UKW2qFQ" annotatedElement="_oUwLw_WnEdqea89UKW2qFQ">
          <body>Gives the output pin on which the result is put.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUwLxfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUwLxvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oUwLx_WnEdqea89UKW2qFQ" name="WriteVariableAction" isAbstract="true">
      <ownedComment xmi:id="_oUwLyPWnEdqea89UKW2qFQ" annotatedElement="_oUwLx_WnEdqea89UKW2qFQ">
        <body>WriteVariableAction is an abstract class for variable actions that change variable values.</body>
      </ownedComment>
      <ownedRule xmi:id="_oUwLyfWnEdqea89UKW2qFQ" name="same_type" constrainedElement="_oUwLx_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUwLyvWnEdqea89UKW2qFQ" annotatedElement="_oUwLyfWnEdqea89UKW2qFQ">
          <body>The type input pin is the same as the type of the variable.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUwLy_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.value.type = self.variable.type</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oUwLzPWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oUwLx_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUwLzfWnEdqea89UKW2qFQ" annotatedElement="_oUwLzPWnEdqea89UKW2qFQ">
          <body>The multiplicity of the input pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUwLzvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.value.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oUwLz_WnEdqea89UKW2qFQ" general="_oUwLsPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oUwL0PWnEdqea89UKW2qFQ" name="value" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oVDGufWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUwL0fWnEdqea89UKW2qFQ" annotatedElement="_oUwL0PWnEdqea89UKW2qFQ">
          <body>Value to be added or removed from the variable.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUwL0vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUwL0_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oUwL1PWnEdqea89UKW2qFQ" name="ClearVariableAction">
      <ownedComment xmi:id="_oUwL1fWnEdqea89UKW2qFQ" annotatedElement="_oUwL1PWnEdqea89UKW2qFQ">
        <body>A clear variable action is a variable action that removes all values of a variable.</body>
      </ownedComment>
      <generalization xmi:id="_oUwL1vWnEdqea89UKW2qFQ" general="_oUwLsPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oU5VoPWnEdqea89UKW2qFQ" name="AddVariableValueAction">
      <ownedComment xmi:id="_oU5VofWnEdqea89UKW2qFQ" annotatedElement="_oU5VoPWnEdqea89UKW2qFQ">
        <body>An add variable value action is a write variable action for adding values to a variable.</body>
      </ownedComment>
      <ownedRule xmi:id="_oU5VovWnEdqea89UKW2qFQ" name="single_input_pin" constrainedElement="_oU5VoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oU5Vo_WnEdqea89UKW2qFQ" annotatedElement="_oU5VovWnEdqea89UKW2qFQ">
          <body>Actions adding values to ordered variables must have a single input pin for the insertion point with type UnlimtedNatural and multiplicity of 1..1, otherwise the action has no input pin for the insertion point.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oU5VpPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>let insertAtPins : Collection = self.insertAt in&#xA;if self.variable.ordering = #unordered&#xA;then insertAtPins->size() = 0&#xA;else let insertAtPin : InputPin = insertAt->asSequence()->first() in&#xA;insertAtPins->size() = 1&#xA;and insertAtPin.type = UnlimitedNatural&#xA;and insertAtPin.multiplicity.is(1,1))&#xA;endif&#xA;</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oU5VpfWnEdqea89UKW2qFQ" general="_oUwLx_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oU5VpvWnEdqea89UKW2qFQ" name="isReplaceAll" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oU5Vp_WnEdqea89UKW2qFQ" annotatedElement="_oU5VpvWnEdqea89UKW2qFQ">
          <body>Specifies whether existing values of the variable should be removed before adding the new value.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oU5VqPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oU5VqfWnEdqea89UKW2qFQ" name="insertAt" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oVDGvvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oU5VqvWnEdqea89UKW2qFQ" annotatedElement="_oU5VqfWnEdqea89UKW2qFQ">
          <body>Gives the position at which to insert a new value or move an existing value in ordered variables. The types is UnlimitedINatural, but the value cannot be zero. This pin is omitted for unordered variables.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oU5Vq_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oU5VrPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oU5VrfWnEdqea89UKW2qFQ" name="RemoveVariableValueAction">
      <ownedComment xmi:id="_oU5VrvWnEdqea89UKW2qFQ" annotatedElement="_oU5VrfWnEdqea89UKW2qFQ">
        <body>A remove variable value action is a write variable action that removes values from variables.</body>
      </ownedComment>
      <ownedRule xmi:id="_oU5Vr_WnEdqea89UKW2qFQ" name="unlimited_natural" constrainedElement="_oU5VrfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oU5VsPWnEdqea89UKW2qFQ" annotatedElement="_oU5Vr_WnEdqea89UKW2qFQ">
          <body>Actions removing a value from ordered nonunique variables must have a single removeAt input pin if isRemoveDuplicates is false. It must be of type UnlimitedNatural with multiplicity of 1..1, otherwise the action has no removeAt input pin.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oU5VsfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oU5VsvWnEdqea89UKW2qFQ" general="_oUwLx_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oU5Vs_WnEdqea89UKW2qFQ" name="isRemoveDuplicates" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oU5VtPWnEdqea89UKW2qFQ" annotatedElement="_oU5Vs_WnEdqea89UKW2qFQ">
          <body>Specifies whether to remove duplicates of the value in nonunique variables.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oU5VtfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oU5VtvWnEdqea89UKW2qFQ" name="removeAt" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oVDGw_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oU5Vt_WnEdqea89UKW2qFQ" annotatedElement="_oU5VtvWnEdqea89UKW2qFQ">
          <body>Specifies the position of an existing value to remove in ordered nonunique variables. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oU5VuPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oU5VufWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oU5VuvWnEdqea89UKW2qFQ" name="RaiseExceptionAction">
      <ownedComment xmi:id="_oU5Vu_WnEdqea89UKW2qFQ" annotatedElement="_oU5VuvWnEdqea89UKW2qFQ">
        <body>A raise exception action is an action that causes an exception to occur. The input value becomes the exception object.</body>
      </ownedComment>
      <generalization xmi:id="_oU5VvPWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oU5VvfWnEdqea89UKW2qFQ" name="exception" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oVM3oPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oU5VvvWnEdqea89UKW2qFQ" annotatedElement="_oU5VvfWnEdqea89UKW2qFQ">
          <body>An input pin whose value becomes an exception object.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oU5Vv_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oU5VwPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oVDGoPWnEdqea89UKW2qFQ" name="ActionInputPin">
      <ownedComment xmi:id="_oVDGofWnEdqea89UKW2qFQ" annotatedElement="_oVDGoPWnEdqea89UKW2qFQ">
        <body>An action input pin is a kind of pin that executes an action to determine the values to input to another.</body>
      </ownedComment>
      <ownedRule xmi:id="_oVDGovWnEdqea89UKW2qFQ" name="one_output_pin" constrainedElement="_oVDGoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVDGo_WnEdqea89UKW2qFQ" annotatedElement="_oVDGovWnEdqea89UKW2qFQ">
          <body>The fromAction of an action input pin must have exactly one output pin.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVDGpPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oVDGpfWnEdqea89UKW2qFQ" name="input_pin" constrainedElement="_oVDGoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVDGpvWnEdqea89UKW2qFQ" annotatedElement="_oVDGpfWnEdqea89UKW2qFQ">
          <body>The fromAction of an action input pin must only have action input pins as input pins.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVDGp_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oVDGqPWnEdqea89UKW2qFQ" name="no_control_or_data_flow" constrainedElement="_oVDGoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVDGqfWnEdqea89UKW2qFQ" annotatedElement="_oVDGqPWnEdqea89UKW2qFQ">
          <body>The fromAction of an action input pin cannot have control or data flows coming into or out of it or its pins.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVDGqvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oVDGq_WnEdqea89UKW2qFQ" general="_oIiUxfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oVDGrPWnEdqea89UKW2qFQ" name="fromAction" type="_oIreyPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oVDGyPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVDGrfWnEdqea89UKW2qFQ" annotatedElement="_oVDGrPWnEdqea89UKW2qFQ">
          <body>The action used to provide values.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVDGrvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVDGr_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVDGsPWnEdqea89UKW2qFQ" name="A_variable_variableAction" memberEnd="_oUwLtvWnEdqea89UKW2qFQ _oVDGsfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oVDGsfWnEdqea89UKW2qFQ" type="_oUwLsPWnEdqea89UKW2qFQ" association="_oVDGsPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVDGsvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVDGs_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVDGtPWnEdqea89UKW2qFQ" name="A_result_readVariableAction" memberEnd="_oUwLw_WnEdqea89UKW2qFQ _oVDGtvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oVDGtfWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oVDGtvWnEdqea89UKW2qFQ" type="_oUwLuvWnEdqea89UKW2qFQ" association="_oVDGtPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVDGt_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVDGuPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVDGufWnEdqea89UKW2qFQ" name="A_value_writeVariableAction" memberEnd="_oUwL0PWnEdqea89UKW2qFQ _oVDGu_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oVDGuvWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oVDGu_WnEdqea89UKW2qFQ" type="_oUwLx_WnEdqea89UKW2qFQ" association="_oVDGufWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVDGvPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVDGvfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVDGvvWnEdqea89UKW2qFQ" name="A_insertAt_addVariableValueAction" memberEnd="_oU5VqfWnEdqea89UKW2qFQ _oVDGwPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oVDGv_WnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oVDGwPWnEdqea89UKW2qFQ" type="_oU5VoPWnEdqea89UKW2qFQ" association="_oVDGvvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVDGwfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVDGwvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVDGw_WnEdqea89UKW2qFQ" name="A_removeAt_removeVariableValueAction" memberEnd="_oU5VtvWnEdqea89UKW2qFQ _oVDGxfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oVDGxPWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oVDGxfWnEdqea89UKW2qFQ" type="_oU5VrfWnEdqea89UKW2qFQ" association="_oVDGw_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVDGxvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVDGx_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVDGyPWnEdqea89UKW2qFQ" name="A_fromAction_actionInputPin" memberEnd="_oVDGrPWnEdqea89UKW2qFQ _oVDGyvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oVDGyfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oVDGyvWnEdqea89UKW2qFQ" type="_oVDGoPWnEdqea89UKW2qFQ" association="_oVDGyPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVDGy_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVDGzPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVM3oPWnEdqea89UKW2qFQ" name="A_exception_raiseExceptionAction" memberEnd="_oU5VvfWnEdqea89UKW2qFQ _oVM3ovWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oVM3ofWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oVM3ovWnEdqea89UKW2qFQ" type="_oU5VuvWnEdqea89UKW2qFQ" association="_oVM3oPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVM3o_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVM3pPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oVM3pfWnEdqea89UKW2qFQ" name="GeneralizationSet">
      <ownedComment xmi:id="_oVM3pvWnEdqea89UKW2qFQ" annotatedElement="_oVM3pfWnEdqea89UKW2qFQ">
        <body>A generalization set is a packageable element whose instances define collections of subsets of generalization relationships.</body>
      </ownedComment>
      <ownedRule xmi:id="_oVM3p_WnEdqea89UKW2qFQ" name="generalization_same_classifier" constrainedElement="_oVM3pfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVM3qPWnEdqea89UKW2qFQ" annotatedElement="_oVM3p_WnEdqea89UKW2qFQ">
          <body>Every Generalization associated with a particular GeneralizationSet must have the same general Classifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVM3qfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>generalization->collect(g | g.general)->asSet()->size() &lt;= 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oVM3qvWnEdqea89UKW2qFQ" name="maps_to_generalization_set" constrainedElement="_oVM3pfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVM3q_WnEdqea89UKW2qFQ" annotatedElement="_oVM3qvWnEdqea89UKW2qFQ">
          <body>The Classifier that maps to a GeneralizationSet may neither be a specific nor a general Classifier in any of the Generalization relationships defined for that GeneralizationSet. In other words, a power type may not be an instance of itself nor may its instances be its subclasses.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVM3rPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oVM3rfWnEdqea89UKW2qFQ" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oVM3rvWnEdqea89UKW2qFQ" name="isCovering" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oVM3r_WnEdqea89UKW2qFQ" annotatedElement="_oVM3rvWnEdqea89UKW2qFQ">
          <body>Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet.&#xD;
&#xD;
For example, Person could have two Generalization relationships each with a different specific Classifier: Male Person and Female Person. This GeneralizationSet would be covering because every instance of Person would be an instance of Male Person or Female Person. In contrast, Person could have a three Generalization relationships involving three specific Classifiers: North American Person, Asian Person, and European Person. This GeneralizationSet would not be covering because there are instances of Person for which these three specific Classifiers do not apply. The first example, then, could be read: any Person would be specialized as either being a Male Person or a Female Person and nothing else; the second could be read: any Person would be specialized as being North American Person, Asian Person, European Person, or something else.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oVM3sPWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVM3sfWnEdqea89UKW2qFQ" name="isDisjoint" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oVM3svWnEdqea89UKW2qFQ" annotatedElement="_oVM3sfWnEdqea89UKW2qFQ">
          <body>Indicates whether or not the set of specific Classifiers in a Generalization relationship have instance in common. If isDisjoint is true, the specific Classifiers for a particular GeneralizationSet have no members in common; that is, their intersection is empty. If isDisjoint is false, the specific Classifiers in a particular GeneralizationSet have one or more members in common; that is, their intersection is not empty. For example, Person could have two Generalization relationships, each with the different specific Classifier: Manager or Staff. This would be disjoint because every instance of Person must either be a Manager or Staff. In contrast, Person could have two Generalization relationships involving two specific (and non-covering) Classifiers: Sales Person and Manager. This GeneralizationSet would not be disjoint because there are instances of Person which can be a Sales Person and a Manager.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oVM3s_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVM3tPWnEdqea89UKW2qFQ" name="powertype" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oVWBmPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVM3tfWnEdqea89UKW2qFQ" annotatedElement="_oVM3tPWnEdqea89UKW2qFQ">
          <body>Designates the Classifier that is defined as the power type for the associated GeneralizationSet.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVM3tvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVM3t_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVM3uPWnEdqea89UKW2qFQ" name="generalization" type="_C7AF4GwREdq14q0ETb1t3g" association="_oVWBmfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVM3ufWnEdqea89UKW2qFQ" annotatedElement="_oVM3uPWnEdqea89UKW2qFQ">
          <body>Designates the instances of Generalization which are members of a given GeneralizationSet.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVM3uvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVM3u_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_C7AF4GwREdq14q0ETb1t3g" name="Generalization">
      <ownedComment xmi:id="_oFGmIPWnEdqea89UKW2qFQ" annotatedElement="_C7AF4GwREdq14q0ETb1t3g">
        <body>A generalization is a taxonomic relationship between a more general classifier and a more specific classifier. Each instance of the specific classifier is also an indirect instance of the general classifier. Thus, the specific classifier inherits the features of the more general classifier.</body>
      </ownedComment>
      <ownedComment xmi:id="_oVWBkPWnEdqea89UKW2qFQ" annotatedElement="_C7AF4GwREdq14q0ETb1t3g">
        <body>A generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier.</body>
      </ownedComment>
      <ownedRule xmi:id="_oVWBkfWnEdqea89UKW2qFQ" name="generalization_same_classifier" constrainedElement="_C7AF4GwREdq14q0ETb1t3g">
        <ownedComment xmi:id="_oVWBkvWnEdqea89UKW2qFQ" annotatedElement="_oVWBkfWnEdqea89UKW2qFQ">
          <body>Every Generalization associated with a given GeneralizationSet must have the same general Classifier. That is, all Generalizations for a particular GeneralizationSet must have the same superclass.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVWBk_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oFGmIfWnEdqea89UKW2qFQ" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:id="_oFGmIvWnEdqea89UKW2qFQ" name="isSubstitutable" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oFGmI_WnEdqea89UKW2qFQ" annotatedElement="_oFGmIvWnEdqea89UKW2qFQ">
          <body>Indicates whether the specific classifier can be used wherever the general classifier can be used. If true, the execution traces of the specific classifier will be a superset of the execution traces of the general classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFGmJPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFGmJfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oFGmJvWnEdqea89UKW2qFQ" name="specific" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_oAfL4vWnEdqea89UKW2qFQ _oAfL9fWnEdqea89UKW2qFQ" association="_oHMQ1vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oFGmJ_WnEdqea89UKW2qFQ" annotatedElement="_oFGmJvWnEdqea89UKW2qFQ">
          <body>References the specializing classifier in the Generalization relationship.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFGmKPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFGmKfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oFGmKvWnEdqea89UKW2qFQ" name="general" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_oAfL5vWnEdqea89UKW2qFQ" association="_oHWB0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oFGmK_WnEdqea89UKW2qFQ" annotatedElement="_oFGmKvWnEdqea89UKW2qFQ">
          <body>References the general classifier in the Generalization relationship.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFGmLPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFGmLfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVWBlPWnEdqea89UKW2qFQ" name="generalizationSet" type="_oVM3pfWnEdqea89UKW2qFQ" association="_oVWBmfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVWBlfWnEdqea89UKW2qFQ" annotatedElement="_oVWBlPWnEdqea89UKW2qFQ">
          <body>Designates a set in which instances of Generalization is considered members.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVWBlvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVWBl_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVWBmPWnEdqea89UKW2qFQ" name="A_powertypeExtent_powertype" memberEnd="_oVM3tPWnEdqea89UKW2qFQ _oVM3v_WnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVWBmfWnEdqea89UKW2qFQ" name="A_generalizationSet_generalization" memberEnd="_oVWBlPWnEdqea89UKW2qFQ _oVM3uPWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_oVfykPWnEdqea89UKW2qFQ" name="InformationItem">
      <ownedComment xmi:id="_oVfykfWnEdqea89UKW2qFQ" annotatedElement="_oVfykPWnEdqea89UKW2qFQ">
        <body>An information item is an abstraction of all kinds of information that can be exchanged between objects. It is a kind of classifier intended for representing information in a very abstract way, one which cannot be instantiated.</body>
      </ownedComment>
      <ownedRule xmi:id="_oVfykvWnEdqea89UKW2qFQ" name="sources_and_targets" constrainedElement="_oVfykPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVfyk_WnEdqea89UKW2qFQ" annotatedElement="_oVfykvWnEdqea89UKW2qFQ">
          <body>The sources and targets of an information item (its related information flows) must designate subsets of the sources and targets of the representation information item, if any.The Classifiers that can realize an information item can only be of the following kind: Class, Interface, InformationItem, Signal, Component.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVfylPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.represented->select(p | p->oclIsKindOf(InformationItem))->forAll(p |&#xD;&#xA;  p.informationFlow.source->forAll(q | self.informationFlow.source->include(q)) and&#xD;&#xA;    p.informationFlow.target->forAll(q | self.informationFlow.target->include(q)))) and&#xD;&#xA;      (self.represented->forAll(p | p->oclIsKindOf(Class) or oclIsKindOf(Interface) or&#xD;&#xA;        oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oVfylfWnEdqea89UKW2qFQ" name="has_no" constrainedElement="_oVfykPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVfylvWnEdqea89UKW2qFQ" annotatedElement="_oVfylfWnEdqea89UKW2qFQ">
          <body>An informationItem has no feature, no generalization, and no associations.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVfyl_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.generalization->isEmpty() and self.feature->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oVfymPWnEdqea89UKW2qFQ" name="not_instantiable" constrainedElement="_oVfykPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVfymfWnEdqea89UKW2qFQ" annotatedElement="_oVfymPWnEdqea89UKW2qFQ">
          <body>It is not instantiable.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVfymvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>isAbstract</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oVfym_WnEdqea89UKW2qFQ" general="_6UV2QGwJEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oVfynPWnEdqea89UKW2qFQ" name="represented" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oVpjvfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVfynfWnEdqea89UKW2qFQ" annotatedElement="_oVfynPWnEdqea89UKW2qFQ">
          <body>Determines the classifiers that will specify the structure and nature of the information. An information item represents all its represented classifiers.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVfynvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVfyn_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oVpjkPWnEdqea89UKW2qFQ" name="InformationFlow">
      <ownedComment xmi:id="_oVpjkfWnEdqea89UKW2qFQ" annotatedElement="_oVpjkPWnEdqea89UKW2qFQ">
        <body>An information flow specifies that one or more information items circulates from its sources to its targets. Information flows require some kind of information channel for transmitting information items from the source to the destination. An information channel is represented in various ways depending on the nature of its sources and targets. It may be represented by connectors, links, associations, or even dependencies. For example, if the source and destination are parts in some composite structure such as a collaboration, then the information channel is likely to be represented by a connector between them. Or, if the source and target are objects (which are a kind of instance specification), they may be represented by a link that joins the two, and so on.</body>
      </ownedComment>
      <ownedRule xmi:id="_oVpjkvWnEdqea89UKW2qFQ" name="sources_and_targets_kind" constrainedElement="_oVpjkPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVpjk_WnEdqea89UKW2qFQ" annotatedElement="_oVpjkvWnEdqea89UKW2qFQ">
          <body>The sources and targets of the information flow can only be one of the following kind: Actor, Node, UseCase, Artifact, Class, Component, Port, Property, Interface, Package, ActivityNode, ActivityPartition and InstanceSpecification except when its classifier is a relationship (i.e. it represents a link).</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVpjlPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.source->forAll(p | p->oclIsKindOf(Actor) or oclIsKindOf(Node) or&#xD;&#xA;  oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or oclIsKindOf(Class) or&#xD;&#xA;  oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or&#xD;&#xA;  oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or&#xD;&#xA;  oclIsKindOf(ActivityPartition) or oclIsKindOf(InstanceSpecification))) and&#xD;&#xA;    (self.target->forAll(p | p->oclIsKindOf(Actor) or oclIsKindOf(Node) or&#xD;&#xA;      oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or oclIsKindOf(Class) or&#xD;&#xA;      oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or&#xD;&#xA;      oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or&#xD;&#xA;      oclIsKindOf(ActivityPartition) or oclIsKindOf(InstanceSpecification)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oVpjlfWnEdqea89UKW2qFQ" name="must_conform" constrainedElement="_oVpjkPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVpjlvWnEdqea89UKW2qFQ" annotatedElement="_oVpjlfWnEdqea89UKW2qFQ">
          <body>The sources and targets of the information flow must conform with the sources and targets or conversely the targets and sources of the realization relationships.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVpjl_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oVpjmPWnEdqea89UKW2qFQ" name="convey_classifiers" constrainedElement="_oVpjkPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVpjmfWnEdqea89UKW2qFQ" annotatedElement="_oVpjmPWnEdqea89UKW2qFQ">
          <body>An information flow can only convey classifiers that are allowed to represent an information item.&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVpjmvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.conveyed.represented->forAll(p | p->oclIsKindOf(Class) or oclIsKindOf(Interface)&#xD;&#xA;  or oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oVpjm_WnEdqea89UKW2qFQ" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <generalization xmi:id="_oVpjnPWnEdqea89UKW2qFQ" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oVpjnfWnEdqea89UKW2qFQ" name="realization" type="_DH62EKPAEdqi_5gqUMOQtA" association="_oVpjufWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVpjnvWnEdqea89UKW2qFQ" annotatedElement="_oVpjnfWnEdqea89UKW2qFQ">
          <body>Determines which Relationship will realize the specified flow</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpjn_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjoPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVpjofWnEdqea89UKW2qFQ" name="conveyed" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oVpjwfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVpjovWnEdqea89UKW2qFQ" annotatedElement="_oVpjofWnEdqea89UKW2qFQ">
          <body>Specifies the information items that may circulate on this information flow.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpjo_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjpPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVpjpfWnEdqea89UKW2qFQ" name="informationSource" type="_csVgUGvtEdqG6fBIPwe-mw" subsettedProperty="_oAfL4vWnEdqea89UKW2qFQ" association="_oVpjxfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVpjpvWnEdqea89UKW2qFQ" annotatedElement="_oVpjpfWnEdqea89UKW2qFQ">
          <body>Defines from which source the conveyed InformationItems are initiated.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpjp_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjqPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVpjqfWnEdqea89UKW2qFQ" name="informationTarget" type="_csVgUGvtEdqG6fBIPwe-mw" subsettedProperty="_oAfL5vWnEdqea89UKW2qFQ" association="_oVpjyvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVpjqvWnEdqea89UKW2qFQ" annotatedElement="_oVpjqfWnEdqea89UKW2qFQ">
          <body>Defines to which target the conveyed InformationItems are directed.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpjq_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjrPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVpjrfWnEdqea89UKW2qFQ" name="realizingActivityEdge" type="_oKxJZfWnEdqea89UKW2qFQ" association="_oVytgPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVpjrvWnEdqea89UKW2qFQ" annotatedElement="_oVpjrfWnEdqea89UKW2qFQ">
          <body>Determines which ActivityEdges will realize the specified flow.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpjr_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjsPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVpjsfWnEdqea89UKW2qFQ" name="realizingConnector" type="_oKKscPWnEdqea89UKW2qFQ" association="_oVythPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVpjsvWnEdqea89UKW2qFQ" annotatedElement="_oVpjsfWnEdqea89UKW2qFQ">
          <body>Determines which Connectors will realize the specified flow.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpjs_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjtPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVpjtfWnEdqea89UKW2qFQ" name="realizingMessage" type="_gfgNwGveEdq4DLWZOhbdEA" association="_oVytiPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVpjtvWnEdqea89UKW2qFQ" annotatedElement="_oVpjtfWnEdqea89UKW2qFQ">
          <body>Determines which Messages will realize the specified flow.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpjt_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjuPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVpjufWnEdqea89UKW2qFQ" name="A_realization_abstraction" memberEnd="_oVpjnfWnEdqea89UKW2qFQ _oVpjuvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oVpjuvWnEdqea89UKW2qFQ" name="abstraction" type="_oVpjkPWnEdqea89UKW2qFQ" association="_oVpjufWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpju_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjvPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVpjvfWnEdqea89UKW2qFQ" name="A_represented_representation" memberEnd="_oVfynPWnEdqea89UKW2qFQ _oVpjvvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oVpjvvWnEdqea89UKW2qFQ" name="representation" type="_oVfykPWnEdqea89UKW2qFQ" association="_oVpjvfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpjv_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjwPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVpjwfWnEdqea89UKW2qFQ" name="A_conveyed_informationFlow" memberEnd="_oVpjofWnEdqea89UKW2qFQ _oVpjwvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oVpjwvWnEdqea89UKW2qFQ" type="_oVpjkPWnEdqea89UKW2qFQ" association="_oVpjwfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpjw_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjxPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVpjxfWnEdqea89UKW2qFQ" name="A_informationSource_informationFlow" memberEnd="_oVpjpfWnEdqea89UKW2qFQ _oVpjx_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oVpjxvWnEdqea89UKW2qFQ" general="_oCuAuPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oVpjx_WnEdqea89UKW2qFQ" type="_oVpjkPWnEdqea89UKW2qFQ" association="_oVpjxfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpjyPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjyfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVpjyvWnEdqea89UKW2qFQ" name="A_informationTarget_informationFlow" memberEnd="_oVpjqfWnEdqea89UKW2qFQ _oVpjzPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oVpjy_WnEdqea89UKW2qFQ" general="_oC3xgPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oVpjzPWnEdqea89UKW2qFQ" type="_oVpjkPWnEdqea89UKW2qFQ" association="_oVpjyvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVpjzfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVpjzvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVytgPWnEdqea89UKW2qFQ" name="A_realizingActivityEdge_informationFlow" memberEnd="_oVpjrfWnEdqea89UKW2qFQ _oVytgfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oVytgfWnEdqea89UKW2qFQ" type="_oVpjkPWnEdqea89UKW2qFQ" association="_oVytgPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVytgvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVytg_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVythPWnEdqea89UKW2qFQ" name="A_realizingConnector_informationFlow" memberEnd="_oVpjsfWnEdqea89UKW2qFQ _oVythfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oVythfWnEdqea89UKW2qFQ" type="_oVpjkPWnEdqea89UKW2qFQ" association="_oVythPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVythvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVyth_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oVytiPWnEdqea89UKW2qFQ" name="A_realizingMessage_informationFlow" memberEnd="_oVpjtfWnEdqea89UKW2qFQ _oVytifWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oVytifWnEdqea89UKW2qFQ" type="_oVpjkPWnEdqea89UKW2qFQ" association="_oVytiPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVytivWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVyti_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NVhqMGv0Edq7X4sGURiZYA" name="Model">
      <ownedComment xmi:id="_oVytjPWnEdqea89UKW2qFQ" annotatedElement="_NVhqMGv0Edq7X4sGURiZYA">
        <body>A model captures a view of a physical system. It is an abstraction of the physical system, with a certain purpose. This purpose determines what is to be included in the model and what is irrelevant. Thus the model completely describes those aspects of the physical system that are relevant to the purpose of the model, at the appropriate level of detail.</body>
      </ownedComment>
      <generalization xmi:id="_oVytjfWnEdqea89UKW2qFQ" general="_-cvRAGvzEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oVytjvWnEdqea89UKW2qFQ" name="viewpoint" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oVytj_WnEdqea89UKW2qFQ" annotatedElement="_oVytjvWnEdqea89UKW2qFQ">
          <body>The name of the viewpoint that is expressed by a model (This name may refer to a profile definition).</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVytkPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVytkfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_9nl2EGwREdq14q0ETb1t3g" name="isMetamodel" isQuery="true">
        <ownedComment xmi:id="_9s0W0OwiEdqYHf-imTcTdw" annotatedElement="_9nl2EGwREdq14q0ETb1t3g">
          <body>Determines whether this model is a metamodel.</body>
        </ownedComment>
        <ownedParameter xmi:id="__8c0oGwREdq14q0ETb1t3g" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oVytk_WnEdqea89UKW2qFQ" name="ReadExtentAction">
      <ownedComment xmi:id="_oVytlPWnEdqea89UKW2qFQ" annotatedElement="_oVytk_WnEdqea89UKW2qFQ">
        <body>A read extent action is an action that retrieves the current instances of a classifier.</body>
      </ownedComment>
      <ownedRule xmi:id="_oVytlfWnEdqea89UKW2qFQ" name="type_is_classifier" constrainedElement="_oVytk_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVytlvWnEdqea89UKW2qFQ" annotatedElement="_oVytlfWnEdqea89UKW2qFQ">
          <body>The type of the result output pin is the classifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVytl_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oVytmPWnEdqea89UKW2qFQ" name="multiplicity_of_result" constrainedElement="_oVytk_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVytmfWnEdqea89UKW2qFQ" annotatedElement="_oVytmPWnEdqea89UKW2qFQ">
          <body>The multiplicity of the result output pin is 0..*.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVytmvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.multiplicity.is(0,#null)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oVytm_WnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oVytnPWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oW_Aa_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVytnfWnEdqea89UKW2qFQ" annotatedElement="_oVytnPWnEdqea89UKW2qFQ">
          <body>The runtime instances of the classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVytnvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVytn_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVytoPWnEdqea89UKW2qFQ" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oW_AcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVytofWnEdqea89UKW2qFQ" annotatedElement="_oVytoPWnEdqea89UKW2qFQ">
          <body>The classifier whose instances are to be retrieved.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVytovWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVyto_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oV8egPWnEdqea89UKW2qFQ" name="ReclassifyObjectAction">
      <ownedComment xmi:id="_oV8egfWnEdqea89UKW2qFQ" annotatedElement="_oV8egPWnEdqea89UKW2qFQ">
        <body>A reclassify object action is an action that changes which classifiers classify an object.</body>
      </ownedComment>
      <ownedRule xmi:id="_oV8egvWnEdqea89UKW2qFQ" name="classifier_not_abstract" constrainedElement="_oV8egPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oV8eg_WnEdqea89UKW2qFQ" annotatedElement="_oV8egvWnEdqea89UKW2qFQ">
          <body>None of the new classifiers may be abstract.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oV8ehPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>not self.newClassifier->exists(isAbstract = true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oV8ehfWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oV8egPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oV8ehvWnEdqea89UKW2qFQ" annotatedElement="_oV8ehfWnEdqea89UKW2qFQ">
          <body>The multiplicity of the input pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oV8eh_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.argument.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oV8eiPWnEdqea89UKW2qFQ" name="input_pin" constrainedElement="_oV8egPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oV8eifWnEdqea89UKW2qFQ" annotatedElement="_oV8eiPWnEdqea89UKW2qFQ">
          <body>The input pin has no type.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oV8eivWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.argument.type->size() = 0</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oV8ei_WnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oV8ejPWnEdqea89UKW2qFQ" name="isReplaceAll" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oV8ejfWnEdqea89UKW2qFQ" annotatedElement="_oV8ejPWnEdqea89UKW2qFQ">
          <body>Specifies whether existing classifiers should be removed before adding the new classifiers.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oV8ejvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oV8ej_WnEdqea89UKW2qFQ" name="oldClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oW_AdPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oV8ekPWnEdqea89UKW2qFQ" annotatedElement="_oV8ej_WnEdqea89UKW2qFQ">
          <body>A set of classifiers to be removed from the classifiers of the object.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oV8ekfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oV8ekvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oV8ek_WnEdqea89UKW2qFQ" name="newClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oW_AePWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oV8elPWnEdqea89UKW2qFQ" annotatedElement="_oV8ek_WnEdqea89UKW2qFQ">
          <body>A set of classifiers to be added to the classifiers of the object.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oV8elfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oV8elvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oV8el_WnEdqea89UKW2qFQ" name="object" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oXR7U_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oV8emPWnEdqea89UKW2qFQ" annotatedElement="_oV8el_WnEdqea89UKW2qFQ">
          <body>Holds the object to be reclassified.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oV8emfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oV8emvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oWFocPWnEdqea89UKW2qFQ" name="ReadIsClassifiedObjectAction">
      <ownedComment xmi:id="_oWFocfWnEdqea89UKW2qFQ" annotatedElement="_oWFocPWnEdqea89UKW2qFQ">
        <body>A read is classified object action is an action that determines whether a runtime object is classified by a given classifier.</body>
      </ownedComment>
      <ownedRule xmi:id="_oWFocvWnEdqea89UKW2qFQ" name="multiplicity_of_input" constrainedElement="_oWFocPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWFoc_WnEdqea89UKW2qFQ" annotatedElement="_oWFocvWnEdqea89UKW2qFQ">
          <body>The multiplicity of the input pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWFodPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.object.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWFodfWnEdqea89UKW2qFQ" name="no_type" constrainedElement="_oWFocPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWFodvWnEdqea89UKW2qFQ" annotatedElement="_oWFodfWnEdqea89UKW2qFQ">
          <body>The input pin has no type.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWFod_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.object.type->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWFoePWnEdqea89UKW2qFQ" name="multiplicity_of_output" constrainedElement="_oWFocPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWFoefWnEdqea89UKW2qFQ" annotatedElement="_oWFoePWnEdqea89UKW2qFQ">
          <body>The multiplicity of the output pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWFoevWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWFoe_WnEdqea89UKW2qFQ" name="boolean_result" constrainedElement="_oWFocPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWFofPWnEdqea89UKW2qFQ" annotatedElement="_oWFoe_WnEdqea89UKW2qFQ">
          <body>The type of the output pin is Boolean</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWFoffWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.type = Boolean</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oWFofvWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oWFof_WnEdqea89UKW2qFQ" name="isDirect" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oWFogPWnEdqea89UKW2qFQ" annotatedElement="_oWFof_WnEdqea89UKW2qFQ">
          <body>Indicates whether the classifier must directly classify the input object.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oWFogfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWFogvWnEdqea89UKW2qFQ" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oW_AfPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWFog_WnEdqea89UKW2qFQ" annotatedElement="_oWFogvWnEdqea89UKW2qFQ">
          <body>The classifier against which the classification of the input object is tested.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWFohPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWFohfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWFohvWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oW_AfvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWFoh_WnEdqea89UKW2qFQ" annotatedElement="_oWFohvWnEdqea89UKW2qFQ">
          <body>After termination of the action, will hold the result of the test.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWFoiPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWFoifWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWFoivWnEdqea89UKW2qFQ" name="object" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oW_Ag_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWFoi_WnEdqea89UKW2qFQ" annotatedElement="_oWFoivWnEdqea89UKW2qFQ">
          <body>Holds the object whose classification is to be tested.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWFojPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWFojfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oWFojvWnEdqea89UKW2qFQ" name="StartClassifierBehaviorAction">
      <ownedComment xmi:id="_oWFoj_WnEdqea89UKW2qFQ" annotatedElement="_oWFojvWnEdqea89UKW2qFQ">
        <body>A start classifier behavior action is an action that starts the classifier behavior of the input.</body>
      </ownedComment>
      <ownedRule xmi:id="_oWFokPWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oWFojvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWFokfWnEdqea89UKW2qFQ" annotatedElement="_oWFokPWnEdqea89UKW2qFQ">
          <body>The multiplicity of the input pin is 1..1</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWFokvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWFok_WnEdqea89UKW2qFQ" name="type_has_classifier" constrainedElement="_oWFojvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWFolPWnEdqea89UKW2qFQ" annotatedElement="_oWFok_WnEdqea89UKW2qFQ">
          <body>If the input pin has a type, then the type must have a classifier behavior.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWFolfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oWFolvWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oWFol_WnEdqea89UKW2qFQ" name="object" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oXIxUPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWFomPWnEdqea89UKW2qFQ" annotatedElement="_oWFol_WnEdqea89UKW2qFQ">
          <body>Holds the object on which to start the owned behavior.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWFomfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWFomvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oWPZcPWnEdqea89UKW2qFQ" name="QualifierValue">
      <ownedComment xmi:id="_oWPZcfWnEdqea89UKW2qFQ" annotatedElement="_oWPZcPWnEdqea89UKW2qFQ">
        <body>A qualifier value is not an action. It is an element that identifies links. It gives a single qualifier within a link end data specification.</body>
      </ownedComment>
      <ownedRule xmi:id="_oWPZcvWnEdqea89UKW2qFQ" name="qualifier_attribute" constrainedElement="_oWPZcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWPZc_WnEdqea89UKW2qFQ" annotatedElement="_oWPZcvWnEdqea89UKW2qFQ">
          <body>The qualifier attribute must be a qualifier of the association end of the link-end data.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWPZdPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.LinkEndData.end->collect(qualifier)->includes(self.qualifier)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWPZdfWnEdqea89UKW2qFQ" name="type_of_qualifier" constrainedElement="_oWPZcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWPZdvWnEdqea89UKW2qFQ" annotatedElement="_oWPZdfWnEdqea89UKW2qFQ">
          <body>The type of the qualifier value input pin is the same as the type of the qualifier attribute.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWPZd_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.value.type = self.qualifier.type</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWPZePWnEdqea89UKW2qFQ" name="multiplicity_of_qualifier" constrainedElement="_oWPZcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWPZefWnEdqea89UKW2qFQ" annotatedElement="_oWPZePWnEdqea89UKW2qFQ">
          <body>The multiplicity of the qualifier value input pin is &quot;1..1&quot;.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWPZevWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.value.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oWPZe_WnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oWPZfPWnEdqea89UKW2qFQ" name="qualifier" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_oXIxWfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWPZffWnEdqea89UKW2qFQ" annotatedElement="_oWPZfPWnEdqea89UKW2qFQ">
          <body>Attribute representing the qualifier for which the value is to be specified.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWPZfvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWPZf_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWPZgPWnEdqea89UKW2qFQ" name="value" type="_oIiUxfWnEdqea89UKW2qFQ" association="_oXIxXfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWPZgfWnEdqea89UKW2qFQ" annotatedElement="_oWPZgPWnEdqea89UKW2qFQ">
          <body>Input pin from which the specified value for the qualifier is taken.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWPZgvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWPZg_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oQIKYPWnEdqea89UKW2qFQ" name="LinkEndData">
      <ownedComment xmi:id="_oQIKYfWnEdqea89UKW2qFQ" annotatedElement="_oQIKYPWnEdqea89UKW2qFQ">
        <body>A link end data is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of a link action. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, if any. This requires more than one piece of data, namely, the statically-specified end in the user model, the object on the end, and the qualifier values for that end, if any. These pieces are brought together around a link end data. Each association end is identified separately with an instance of the LinkEndData class.</body>
      </ownedComment>
      <ownedRule xmi:id="_oQIKYvWnEdqea89UKW2qFQ" name="property_is_association_end" constrainedElement="_oQIKYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQIKY_WnEdqea89UKW2qFQ" annotatedElement="_oQIKYvWnEdqea89UKW2qFQ">
          <body>The property must be an association end.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQIKZPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.end.association->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQIKZfWnEdqea89UKW2qFQ" name="same_type" constrainedElement="_oQIKYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQIKZvWnEdqea89UKW2qFQ" annotatedElement="_oQIKZfWnEdqea89UKW2qFQ">
          <body>The type of the end object input pin is the same as the type of the association end.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQIKZ_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.value.type = self.end.type</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQIKaPWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oQIKYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQIKafWnEdqea89UKW2qFQ" annotatedElement="_oQIKaPWnEdqea89UKW2qFQ">
          <body>The multiplicity of the end object input pin must be 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQIKavWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.value.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWPZhPWnEdqea89UKW2qFQ" name="qualifiers" constrainedElement="_oQIKYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWPZhfWnEdqea89UKW2qFQ" annotatedElement="_oWPZhPWnEdqea89UKW2qFQ">
          <body>The qualifiers include all and only the qualifiers of the association end.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWPZhvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.qualifier->collect(qualifier) = self.end.qualifier</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWPZh_WnEdqea89UKW2qFQ" name="end_object_input_pin" constrainedElement="_oQIKYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWPZiPWnEdqea89UKW2qFQ" annotatedElement="_oWPZh_WnEdqea89UKW2qFQ">
          <body>The end object input pin is not also a qualifier value input pin.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWPZifWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.value->excludesAll(self.qualifier.value)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oQIKa_WnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oQIKbPWnEdqea89UKW2qFQ" name="value" type="_oIiUxfWnEdqea89UKW2qFQ" association="_oQ4YVPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQIKbfWnEdqea89UKW2qFQ" annotatedElement="_oQIKbPWnEdqea89UKW2qFQ">
          <body>Input pin that provides the specified object for the given end. This pin is omitted if the link-end data specifies an 'open' end for reading.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQIKbvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQIKb_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oQIKcPWnEdqea89UKW2qFQ" name="end" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_oQ4YWPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oQIKcfWnEdqea89UKW2qFQ" annotatedElement="_oQIKcPWnEdqea89UKW2qFQ">
          <body>Association end for which this link-end data specifies values.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQIKcvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oQIKc_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWPZivWnEdqea89UKW2qFQ" name="qualifier" type="_oWPZcPWnEdqea89UKW2qFQ" aggregation="composite" association="_oXIxVfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWPZi_WnEdqea89UKW2qFQ" annotatedElement="_oWPZivWnEdqea89UKW2qFQ">
          <body>List of qualifier values</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWPZjPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWPZjfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oWZKcPWnEdqea89UKW2qFQ" name="ReadLinkObjectEndAction">
      <ownedComment xmi:id="_oWZKcfWnEdqea89UKW2qFQ" annotatedElement="_oWZKcPWnEdqea89UKW2qFQ">
        <body>A read link object end action is an action that retrieves an end object from a link object.</body>
      </ownedComment>
      <ownedRule xmi:id="_oWZKcvWnEdqea89UKW2qFQ" name="property" constrainedElement="_oWZKcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKc_WnEdqea89UKW2qFQ" annotatedElement="_oWZKcvWnEdqea89UKW2qFQ">
          <body>The property must be an association end.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKdPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.end.association.notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKdfWnEdqea89UKW2qFQ" name="association_of_association" constrainedElement="_oWZKcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKdvWnEdqea89UKW2qFQ" annotatedElement="_oWZKdfWnEdqea89UKW2qFQ">
          <body>The association of the association end must be an association class.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKd_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.end.Association.oclIsKindOf(AssociationClass)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKePWnEdqea89UKW2qFQ" name="ends_of_association" constrainedElement="_oWZKcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKefWnEdqea89UKW2qFQ" annotatedElement="_oWZKePWnEdqea89UKW2qFQ">
          <body>The ends of the association must not be static.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKevWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.end.association.memberEnd->forall(e | not e.isStatic)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKe_WnEdqea89UKW2qFQ" name="type_of_object" constrainedElement="_oWZKcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKfPWnEdqea89UKW2qFQ" annotatedElement="_oWZKe_WnEdqea89UKW2qFQ">
          <body>The type of the object input pin is the association class that owns the association end.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKffWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.object.type = self.end.association</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKfvWnEdqea89UKW2qFQ" name="multiplicity_of_object" constrainedElement="_oWZKcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKf_WnEdqea89UKW2qFQ" annotatedElement="_oWZKfvWnEdqea89UKW2qFQ">
          <body>The multiplicity of the object input pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKgPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.object.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKgfWnEdqea89UKW2qFQ" name="type_of_result" constrainedElement="_oWZKcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKgvWnEdqea89UKW2qFQ" annotatedElement="_oWZKgfWnEdqea89UKW2qFQ">
          <body>The type of the result output pin is the same as the type of the association end.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKg_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.type = self.end.type</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKhPWnEdqea89UKW2qFQ" name="multiplicity_of_result" constrainedElement="_oWZKcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKhfWnEdqea89UKW2qFQ" annotatedElement="_oWZKhPWnEdqea89UKW2qFQ">
          <body>The multiplicity of the result output pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKhvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oWZKh_WnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oWZKiPWnEdqea89UKW2qFQ" name="object" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oXIxYfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKifWnEdqea89UKW2qFQ" annotatedElement="_oWZKiPWnEdqea89UKW2qFQ">
          <body>Gives the input pin from which the link object is obtained.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWZKivWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWZKi_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWZKjPWnEdqea89UKW2qFQ" name="end" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_oXIxZvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKjfWnEdqea89UKW2qFQ" annotatedElement="_oWZKjPWnEdqea89UKW2qFQ">
          <body>Link end to be read.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWZKjvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWZKj_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWZKkPWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oXIxavWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKkfWnEdqea89UKW2qFQ" annotatedElement="_oWZKkPWnEdqea89UKW2qFQ">
          <body>Pin where the result value is placed</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWZKkvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWZKk_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oWZKlPWnEdqea89UKW2qFQ" name="ReadLinkObjectEndQualifierAction">
      <ownedComment xmi:id="_oWZKlfWnEdqea89UKW2qFQ" annotatedElement="_oWZKlPWnEdqea89UKW2qFQ">
        <body>A read link object end qualifier action is an action that retrieves a qualifier end value from a link object.</body>
      </ownedComment>
      <ownedRule xmi:id="_oWZKlvWnEdqea89UKW2qFQ" name="qualifier_attribute" constrainedElement="_oWZKlPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKl_WnEdqea89UKW2qFQ" annotatedElement="_oWZKlvWnEdqea89UKW2qFQ">
          <body>The qualifier attribute must be a qualifier attribute of an association end.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKmPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.qualifier.associationEnd->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKmfWnEdqea89UKW2qFQ" name="association_of_association" constrainedElement="_oWZKlPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKmvWnEdqea89UKW2qFQ" annotatedElement="_oWZKmfWnEdqea89UKW2qFQ">
          <body>The association of the association end of the qualifier attribute must be an association class.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKm_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.qualifier.associationEnd.association.oclIsKindOf(AssociationClass)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKnPWnEdqea89UKW2qFQ" name="ends_of_association" constrainedElement="_oWZKlPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKnfWnEdqea89UKW2qFQ" annotatedElement="_oWZKnPWnEdqea89UKW2qFQ">
          <body>The ends of the association must not be static.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKnvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.qualifier.associationEnd.association.memberEnd->forall(e | not e.isStatic)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKn_WnEdqea89UKW2qFQ" name="type_of_object" constrainedElement="_oWZKlPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKoPWnEdqea89UKW2qFQ" annotatedElement="_oWZKn_WnEdqea89UKW2qFQ">
          <body>The type of the object input pin is the association class that owns the association end that has the given qualifier attribute.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKofWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.object.type = self.qualifier.associationEnd.association</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKovWnEdqea89UKW2qFQ" name="multiplicity_of_qualifier" constrainedElement="_oWZKlPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKo_WnEdqea89UKW2qFQ" annotatedElement="_oWZKovWnEdqea89UKW2qFQ">
          <body>The multiplicity of the qualifier attribute is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKpPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.qualifier.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKpfWnEdqea89UKW2qFQ" name="multiplicity_of_object" constrainedElement="_oWZKlPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKpvWnEdqea89UKW2qFQ" annotatedElement="_oWZKpfWnEdqea89UKW2qFQ">
          <body>The multiplicity of the object input pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKp_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.object.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKqPWnEdqea89UKW2qFQ" name="same_type" constrainedElement="_oWZKlPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKqfWnEdqea89UKW2qFQ" annotatedElement="_oWZKqPWnEdqea89UKW2qFQ">
          <body>The type of the result output pin is the same as the type of the qualifier attribute.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKqvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.type = self.qualifier.type</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWZKq_WnEdqea89UKW2qFQ" name="multiplicity_of_result" constrainedElement="_oWZKlPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKrPWnEdqea89UKW2qFQ" annotatedElement="_oWZKq_WnEdqea89UKW2qFQ">
          <body>The multiplicity of the result output pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWZKrfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oWZKrvWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oWZKr_WnEdqea89UKW2qFQ" name="object" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oXR7QPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKsPWnEdqea89UKW2qFQ" annotatedElement="_oWZKr_WnEdqea89UKW2qFQ">
          <body>(Specialized from Action:input) Gives the input pin from which the link object is obtained.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWZKsfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWZKsvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWZKs_WnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oXR7RfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKtPWnEdqea89UKW2qFQ" annotatedElement="_oWZKs_WnEdqea89UKW2qFQ">
          <body>Pin where the result value is placed</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWZKtfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWZKtvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWZKt_WnEdqea89UKW2qFQ" name="qualifier" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_oXR7SvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWZKuPWnEdqea89UKW2qFQ" annotatedElement="_oWZKt_WnEdqea89UKW2qFQ">
          <body>The attribute representing the qualifier to be read.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWZKufWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWZKuvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oWiUYPWnEdqea89UKW2qFQ" name="CreateLinkObjectAction">
      <ownedComment xmi:id="_oWiUYfWnEdqea89UKW2qFQ" annotatedElement="_oWiUYPWnEdqea89UKW2qFQ">
        <body>A create link object action creates a link object.</body>
      </ownedComment>
      <ownedRule xmi:id="_oWiUYvWnEdqea89UKW2qFQ" name="association_class" constrainedElement="_oWiUYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWiUY_WnEdqea89UKW2qFQ" annotatedElement="_oWiUYvWnEdqea89UKW2qFQ">
          <body>The association must be an association class.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWiUZPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.association().oclIsKindOf(Class)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWiUZfWnEdqea89UKW2qFQ" name="type_of_result" constrainedElement="_oWiUYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWiUZvWnEdqea89UKW2qFQ" annotatedElement="_oWiUZfWnEdqea89UKW2qFQ">
          <body>The type of the result pin must be the same as the association of the action.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWiUZ_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.type = self.association()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWiUaPWnEdqea89UKW2qFQ" name="multiplicity" constrainedElement="_oWiUYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWiUafWnEdqea89UKW2qFQ" annotatedElement="_oWiUaPWnEdqea89UKW2qFQ">
          <body>The multiplicity of the output pin is 1..1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWiUavWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.result.multiplicity.is(1,1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oWiUa_WnEdqea89UKW2qFQ" general="_oQR7cPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oWiUbPWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oXR7TvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWiUbfWnEdqea89UKW2qFQ" annotatedElement="_oWiUbPWnEdqea89UKW2qFQ">
          <body>Gives the output pin on which the result is put.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWiUbvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWiUb_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oWiUcPWnEdqea89UKW2qFQ" name="AcceptEventAction">
      <ownedComment xmi:id="_oWiUcfWnEdqea89UKW2qFQ" annotatedElement="_oWiUcPWnEdqea89UKW2qFQ">
        <body>A accept event action is an action that waits for the occurrence of an event meeting specified conditions.</body>
      </ownedComment>
      <ownedRule xmi:id="_oWiUcvWnEdqea89UKW2qFQ" name="no_input_pins" constrainedElement="_oWiUcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWiUc_WnEdqea89UKW2qFQ" annotatedElement="_oWiUcvWnEdqea89UKW2qFQ">
          <body>AcceptEventActions may have no input pins.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWiUdPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWiUdfWnEdqea89UKW2qFQ" name="no_output_pins" constrainedElement="_oWiUcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWiUdvWnEdqea89UKW2qFQ" annotatedElement="_oWiUdfWnEdqea89UKW2qFQ">
          <body>There are no output pins if the trigger events are only ChangeEvents, or if they are only CallEvents when this action is an instance of AcceptEventAction and not an instance of a descendant of AcceptEventAction (such as AcceptCallAction).</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWiUd_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWiUePWnEdqea89UKW2qFQ" name="trigger_events" constrainedElement="_oWiUcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWiUefWnEdqea89UKW2qFQ" annotatedElement="_oWiUePWnEdqea89UKW2qFQ">
          <body>If the trigger events are all TimeEvents, there is exactly one output pin.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWiUevWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWiUe_WnEdqea89UKW2qFQ" name="unmarshall_signal_events" constrainedElement="_oWiUcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWiUfPWnEdqea89UKW2qFQ" annotatedElement="_oWiUe_WnEdqea89UKW2qFQ">
          <body>If isUnmarshall is true, there must be exactly one trigger for events of type SignalEvent. The number of result output pins must be the same as the number of attributes of the signal. The type and ordering of each result output pin must be the same as the corresponding attribute of the signal. The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding attribute.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWiUffWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oWiUfvWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oWiUf_WnEdqea89UKW2qFQ" name="isUnmarshall" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oWiUgPWnEdqea89UKW2qFQ" annotatedElement="_oWiUf_WnEdqea89UKW2qFQ">
          <body>Indicates whether there is a single output pin for the event, or multiple output pins for attributes of the event.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oWiUgfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWiUgvWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oXR7VvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWiUg_WnEdqea89UKW2qFQ" annotatedElement="_oWiUgvWnEdqea89UKW2qFQ">
          <body>Pins holding the received event objects or their attributes. Event objects may be copied in transmission, so identity might not be preserved.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWiUhPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWiUhfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWiUhvWnEdqea89UKW2qFQ" name="trigger" type="_oMtDCvWnEdqea89UKW2qFQ" aggregation="composite" association="_oXbsWfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWiUh_WnEdqea89UKW2qFQ" annotatedElement="_oWiUhvWnEdqea89UKW2qFQ">
          <body>The type of events accepted by the action, as specified by triggers. For triggers with signal events, a signal of the specified type or any subtype of the specified signal type is accepted.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWiUiPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWiUifWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oWsFYPWnEdqea89UKW2qFQ" name="AcceptCallAction">
      <ownedComment xmi:id="_oWsFYfWnEdqea89UKW2qFQ" annotatedElement="_oWsFYPWnEdqea89UKW2qFQ">
        <body>An accept call action is an accept event action representing the receipt of a synchronous call request. In addition to the normal operation parameters, the action produces an output that is needed later to supply the information to the reply action necessary to return control to the caller. This action is for synchronous calls. If it is used to handle an asynchronous call, execution of the subsequent reply action will complete immediately with no effects.</body>
      </ownedComment>
      <ownedRule xmi:id="_oWsFYvWnEdqea89UKW2qFQ" name="result_pins" constrainedElement="_oWsFYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWsFY_WnEdqea89UKW2qFQ" annotatedElement="_oWsFYvWnEdqea89UKW2qFQ">
          <body>The result pins must match the in and inout parameters of the operation specified by the trigger event in number, type, and order.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWsFZPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWsFZfWnEdqea89UKW2qFQ" name="trigger_call_event" constrainedElement="_oWsFYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWsFZvWnEdqea89UKW2qFQ" annotatedElement="_oWsFZfWnEdqea89UKW2qFQ">
          <body>The trigger event must be a CallEvent.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWsFZ_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>trigger.event.oclIsKindOf(CallEvent)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWsFaPWnEdqea89UKW2qFQ" name="unmarshall" constrainedElement="_oWsFYPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWsFafWnEdqea89UKW2qFQ" annotatedElement="_oWsFaPWnEdqea89UKW2qFQ">
          <body>isUnmrashall must be true for an AcceptCallAction.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWsFavWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>isUnmarshall = true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oWsFa_WnEdqea89UKW2qFQ" general="_oWiUcPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oWsFbPWnEdqea89UKW2qFQ" name="returnInformation" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oXR7WfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWsFbfWnEdqea89UKW2qFQ" annotatedElement="_oWsFbPWnEdqea89UKW2qFQ">
          <body>Pin where a value is placed containing sufficient information to perform a subsequent reply and return control to the caller. The contents of this value are opaque. It can be passed and copied but it cannot be manipulated by the model.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWsFbvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWsFb_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oWsFcPWnEdqea89UKW2qFQ" name="ReplyAction">
      <ownedComment xmi:id="_oWsFcfWnEdqea89UKW2qFQ" annotatedElement="_oWsFcPWnEdqea89UKW2qFQ">
        <body>A reply action is an action that accepts a set of return values and a value containing return information produced by a previous accept call action. The reply action returns the values to the caller of the previous call, completing execution of the call.</body>
      </ownedComment>
      <ownedRule xmi:id="_oWsFcvWnEdqea89UKW2qFQ" name="pins_match_parameter" constrainedElement="_oWsFcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWsFc_WnEdqea89UKW2qFQ" annotatedElement="_oWsFcvWnEdqea89UKW2qFQ">
          <body>The reply value pins must match the return, out, and inout parameters of the operation on the event on the trigger in number, type, and order.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWsFdPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWsFdfWnEdqea89UKW2qFQ" name="event_on_reply_to_call_trigger" constrainedElement="_oWsFcPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWsFdvWnEdqea89UKW2qFQ" annotatedElement="_oWsFdfWnEdqea89UKW2qFQ">
          <body>The event on replyToCall trigger must be a CallEvent replyToCallEvent.oclIsKindOf(CallEvent)</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWsFd_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>replyToCallEvent.oclIsKindOf(CallEvent)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oWsFePWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oWsFefWnEdqea89UKW2qFQ" name="replyToCall" type="_oMtDCvWnEdqea89UKW2qFQ" association="_oXR7XPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWsFevWnEdqea89UKW2qFQ" annotatedElement="_oWsFefWnEdqea89UKW2qFQ">
          <body>The trigger specifying the operation whose call is being replied to.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWsFe_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWsFfPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWsFffWnEdqea89UKW2qFQ" name="returnInformation" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oXbsT_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWsFfvWnEdqea89UKW2qFQ" annotatedElement="_oWsFffWnEdqea89UKW2qFQ">
          <body>A pin containing the return information value produced by an earlier AcceptCallAction.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWsFf_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWsFgPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oWsFgfWnEdqea89UKW2qFQ" name="replyValue" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oXbsVPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oWsFgvWnEdqea89UKW2qFQ" annotatedElement="_oWsFgfWnEdqea89UKW2qFQ">
          <body>A list of pins containing the reply values of the operation. These values are returned to the caller.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oWsFg_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oWsFhPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oW12YPWnEdqea89UKW2qFQ" name="UnmarshallAction">
      <ownedComment xmi:id="_oW12YfWnEdqea89UKW2qFQ" annotatedElement="_oW12YPWnEdqea89UKW2qFQ">
        <body>An unmarshall action is an action that breaks an object of a known type into outputs each of which is equal to a value from a structural feature of the object.</body>
      </ownedComment>
      <ownedRule xmi:id="_oW12YvWnEdqea89UKW2qFQ" name="same_type" constrainedElement="_oW12YPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW12Y_WnEdqea89UKW2qFQ" annotatedElement="_oW12YvWnEdqea89UKW2qFQ">
          <body>The type of the object input pin must be the same as the unmarshall classifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oW12ZPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oW12ZfWnEdqea89UKW2qFQ" name="multiplicity_of_object" constrainedElement="_oW12YPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW12ZvWnEdqea89UKW2qFQ" annotatedElement="_oW12ZfWnEdqea89UKW2qFQ">
          <body>The multiplicity of the object input pin is 1..1</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oW12Z_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oW12aPWnEdqea89UKW2qFQ" name="number_of_result" constrainedElement="_oW12YPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW12afWnEdqea89UKW2qFQ" annotatedElement="_oW12aPWnEdqea89UKW2qFQ">
          <body>The number of result output pins must be the same as the number of structural features of the unmarshall classifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oW12avWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oW12a_WnEdqea89UKW2qFQ" name="type_and_ordering" constrainedElement="_oW12YPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW12bPWnEdqea89UKW2qFQ" annotatedElement="_oW12a_WnEdqea89UKW2qFQ">
          <body>The type and ordering of each result output pin must be the same as the corresponding structural feature of the unmarshall classifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oW12bfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oW12bvWnEdqea89UKW2qFQ" name="multiplicity_of_result" constrainedElement="_oW12YPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW12b_WnEdqea89UKW2qFQ" annotatedElement="_oW12bvWnEdqea89UKW2qFQ">
          <body>The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding structural features of the unmarshall classifier.&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oW12cPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oW12cfWnEdqea89UKW2qFQ" name="structural_feature" constrainedElement="_oW12YPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW12cvWnEdqea89UKW2qFQ" annotatedElement="_oW12cfWnEdqea89UKW2qFQ">
          <body>The unmarshall classifier must have at least one structural feature.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oW12c_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oW12dPWnEdqea89UKW2qFQ" name="unmarshallType_is_classifier" constrainedElement="_oW12YPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW12dfWnEdqea89UKW2qFQ" annotatedElement="_oW12dPWnEdqea89UKW2qFQ">
          <body>unmarshallType must be a Classifier with ordered attributes</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oW12dvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oW12d_WnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oW12ePWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oXbsQfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW12efWnEdqea89UKW2qFQ" annotatedElement="_oW12ePWnEdqea89UKW2qFQ">
          <body>The values of the structural features of the input object.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW12evWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW12e_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oW12fPWnEdqea89UKW2qFQ" name="unmarshallType" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oXbsRvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW12ffWnEdqea89UKW2qFQ" annotatedElement="_oW12fPWnEdqea89UKW2qFQ">
          <body>The type of the object to be unmarshalled.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW12fvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW12f_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oW12gPWnEdqea89UKW2qFQ" name="object" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oXbsSvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW12gfWnEdqea89UKW2qFQ" annotatedElement="_oW12gPWnEdqea89UKW2qFQ">
          <body>The object to be unmarshalled.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW12gvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW12g_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oW_AUPWnEdqea89UKW2qFQ" name="ReduceAction">
      <ownedComment xmi:id="_oW_AUfWnEdqea89UKW2qFQ" annotatedElement="_oW_AUPWnEdqea89UKW2qFQ">
        <body>A reduce action is an action that reduces a collection to a single value by combining the elements of the collection.</body>
      </ownedComment>
      <ownedRule xmi:id="_oW_AUvWnEdqea89UKW2qFQ" name="input_type_is_collection" constrainedElement="_oW_AUPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW_AU_WnEdqea89UKW2qFQ" annotatedElement="_oW_AUvWnEdqea89UKW2qFQ">
          <body>The type of the input must be a collection.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oW_AVPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oW_AVfWnEdqea89UKW2qFQ" name="output_types_are_compatible" constrainedElement="_oW_AUPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW_AVvWnEdqea89UKW2qFQ" annotatedElement="_oW_AVfWnEdqea89UKW2qFQ">
          <body>The type of the output must be compatible with the type of the output of the reducer behavior.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oW_AV_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oW_AWPWnEdqea89UKW2qFQ" name="reducer_inputs_output" constrainedElement="_oW_AUPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW_AWfWnEdqea89UKW2qFQ" annotatedElement="_oW_AWPWnEdqea89UKW2qFQ">
          <body>The reducer behavior must have two input parameters and one output parameter, of types compatible with the types of elements of the input collection.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oW_AWvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oW_AW_WnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oW_AXPWnEdqea89UKW2qFQ" name="reducer" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oXldRvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW_AXfWnEdqea89UKW2qFQ" annotatedElement="_oW_AXPWnEdqea89UKW2qFQ">
          <body>Behavior that is applied to two elements of the input collection to produce a value that is the same type as elements of the collection.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW_AXvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW_AX_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oW_AYPWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oXldQPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW_AYfWnEdqea89UKW2qFQ" annotatedElement="_oW_AYPWnEdqea89UKW2qFQ">
          <body>Gives the output pin on which the result is put.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW_AYvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW_AY_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oW_AZPWnEdqea89UKW2qFQ" name="collection" type="_oIiUxfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oXldQ_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oW_AZfWnEdqea89UKW2qFQ" annotatedElement="_oW_AZPWnEdqea89UKW2qFQ">
          <body>The collection to be reduced.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW_AZvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW_AZ_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oW_AaPWnEdqea89UKW2qFQ" name="isOrdered" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oW_AafWnEdqea89UKW2qFQ" annotatedElement="_oW_AaPWnEdqea89UKW2qFQ">
          <body>Tells whether the order of the input collection should determine the order in which the behavior is applied to its elements.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oW_AavWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oW_Aa_WnEdqea89UKW2qFQ" name="A_result_readExtentAction" memberEnd="_oVytnPWnEdqea89UKW2qFQ _oW_AbfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oW_AbPWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oW_AbfWnEdqea89UKW2qFQ" type="_oVytk_WnEdqea89UKW2qFQ" association="_oW_Aa_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW_AbvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW_Ab_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oW_AcPWnEdqea89UKW2qFQ" name="A_classifier_readExtentAction" memberEnd="_oVytoPWnEdqea89UKW2qFQ _oW_AcfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oW_AcfWnEdqea89UKW2qFQ" type="_oVytk_WnEdqea89UKW2qFQ" association="_oW_AcPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW_AcvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW_Ac_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oW_AdPWnEdqea89UKW2qFQ" name="A_oldClassifier_reclassifyObjectAction" memberEnd="_oV8ej_WnEdqea89UKW2qFQ _oW_AdfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oW_AdfWnEdqea89UKW2qFQ" type="_oV8egPWnEdqea89UKW2qFQ" association="_oW_AdPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW_AdvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW_Ad_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oW_AePWnEdqea89UKW2qFQ" name="A_newClassifier_reclassifyObjectAction" memberEnd="_oV8ek_WnEdqea89UKW2qFQ _oW_AefWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oW_AefWnEdqea89UKW2qFQ" type="_oV8egPWnEdqea89UKW2qFQ" association="_oW_AePWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW_AevWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW_Ae_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oW_AfPWnEdqea89UKW2qFQ" name="A_classifier_readIsClassifiedObjectAction" memberEnd="_oWFogvWnEdqea89UKW2qFQ _oW_AffWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oW_AffWnEdqea89UKW2qFQ" type="_oWFocPWnEdqea89UKW2qFQ" association="_oW_AfPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oW_AfvWnEdqea89UKW2qFQ" name="A_result_readIsClassifiedObjectAction" memberEnd="_oWFohvWnEdqea89UKW2qFQ _oW_AgPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oW_Af_WnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oW_AgPWnEdqea89UKW2qFQ" type="_oWFocPWnEdqea89UKW2qFQ" association="_oW_AfvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW_AgfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW_AgvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oW_Ag_WnEdqea89UKW2qFQ" name="A_object_readIsClassifiedObjectAction" memberEnd="_oWFoivWnEdqea89UKW2qFQ _oW_AhfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oW_AhPWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oW_AhfWnEdqea89UKW2qFQ" type="_oWFocPWnEdqea89UKW2qFQ" association="_oW_Ag_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oW_AhvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oW_Ah_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXIxUPWnEdqea89UKW2qFQ" name="A_object_startClassifierBehaviorAction" memberEnd="_oWFol_WnEdqea89UKW2qFQ _oXIxUvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXIxUfWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXIxUvWnEdqea89UKW2qFQ" type="_oWFojvWnEdqea89UKW2qFQ" association="_oXIxUPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXIxU_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXIxVPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXIxVfWnEdqea89UKW2qFQ" name="A_qualifier_linkEndData" memberEnd="_oWPZivWnEdqea89UKW2qFQ _oXIxVvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oXIxVvWnEdqea89UKW2qFQ" type="_oQIKYPWnEdqea89UKW2qFQ" association="_oXIxVfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXIxV_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXIxWPWnEdqea89UKW2qFQ" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXIxWfWnEdqea89UKW2qFQ" name="A_qualifier_qualifierValue" memberEnd="_oWPZfPWnEdqea89UKW2qFQ _oXIxWvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oXIxWvWnEdqea89UKW2qFQ" type="_oWPZcPWnEdqea89UKW2qFQ" association="_oXIxWfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXIxW_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXIxXPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXIxXfWnEdqea89UKW2qFQ" name="A_value_qualifierValue" memberEnd="_oWPZgPWnEdqea89UKW2qFQ _oXIxXvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oXIxXvWnEdqea89UKW2qFQ" type="_oWPZcPWnEdqea89UKW2qFQ" association="_oXIxXfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXIxX_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXIxYPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXIxYfWnEdqea89UKW2qFQ" name="A_object_readLinkObjectEndAction" memberEnd="_oWZKiPWnEdqea89UKW2qFQ _oXIxY_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXIxYvWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXIxY_WnEdqea89UKW2qFQ" type="_oWZKcPWnEdqea89UKW2qFQ" association="_oXIxYfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXIxZPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXIxZfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXIxZvWnEdqea89UKW2qFQ" name="A_end_readLinkObjectEndAction" memberEnd="_oWZKjPWnEdqea89UKW2qFQ _oXIxZ_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oXIxZ_WnEdqea89UKW2qFQ" type="_oWZKcPWnEdqea89UKW2qFQ" association="_oXIxZvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXIxaPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXIxafWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXIxavWnEdqea89UKW2qFQ" name="A_result_readLinkObjectEndAction" memberEnd="_oWZKkPWnEdqea89UKW2qFQ _oXIxbPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXIxa_WnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXIxbPWnEdqea89UKW2qFQ" type="_oWZKcPWnEdqea89UKW2qFQ" association="_oXIxavWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXIxbfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXIxbvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXR7QPWnEdqea89UKW2qFQ" name="A_object_readLinkObjectEndQualifierAction" memberEnd="_oWZKr_WnEdqea89UKW2qFQ _oXR7QvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXR7QfWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXR7QvWnEdqea89UKW2qFQ" type="_oWZKlPWnEdqea89UKW2qFQ" association="_oXR7QPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXR7Q_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXR7RPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXR7RfWnEdqea89UKW2qFQ" name="A_result_readLinkObjectEndQualifierAction" memberEnd="_oWZKs_WnEdqea89UKW2qFQ _oXR7R_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXR7RvWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXR7R_WnEdqea89UKW2qFQ" type="_oWZKlPWnEdqea89UKW2qFQ" association="_oXR7RfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXR7SPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXR7SfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXR7SvWnEdqea89UKW2qFQ" name="A_qualifier_readLinkObjectEndQualifierAction" memberEnd="_oWZKt_WnEdqea89UKW2qFQ _oXR7S_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oXR7S_WnEdqea89UKW2qFQ" type="_oWZKlPWnEdqea89UKW2qFQ" association="_oXR7SvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXR7TPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXR7TfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXR7TvWnEdqea89UKW2qFQ" name="A_result_createLinkObjectAction" memberEnd="_oWiUbPWnEdqea89UKW2qFQ _oXR7UPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXR7T_WnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXR7UPWnEdqea89UKW2qFQ" type="_oWiUYPWnEdqea89UKW2qFQ" association="_oXR7TvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXR7UfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXR7UvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXR7U_WnEdqea89UKW2qFQ" name="A_reclassifyObjectAction_object" memberEnd="_oV8el_WnEdqea89UKW2qFQ _oXR7VfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXR7VPWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXR7VfWnEdqea89UKW2qFQ" type="_oV8egPWnEdqea89UKW2qFQ" redefinedProperty="_oI1Pr_WnEdqea89UKW2qFQ" association="_oXR7U_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXR7VvWnEdqea89UKW2qFQ" name="A_result_acceptEventAction" memberEnd="_oWiUgvWnEdqea89UKW2qFQ _oXR7WPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXR7V_WnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXR7WPWnEdqea89UKW2qFQ" type="_oWiUcPWnEdqea89UKW2qFQ" redefinedProperty="_oI1PqvWnEdqea89UKW2qFQ" association="_oXR7VvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXR7WfWnEdqea89UKW2qFQ" name="A_returnInformation_acceptCallAction" memberEnd="_oWsFbPWnEdqea89UKW2qFQ _oXR7W_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXR7WvWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXR7W_WnEdqea89UKW2qFQ" type="_oWsFYPWnEdqea89UKW2qFQ" redefinedProperty="_oI1PqvWnEdqea89UKW2qFQ" association="_oXR7WfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXR7XPWnEdqea89UKW2qFQ" name="A_replyToCall_replyAction" memberEnd="_oWsFefWnEdqea89UKW2qFQ _oXbsQPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oXbsQPWnEdqea89UKW2qFQ" type="_oWsFcPWnEdqea89UKW2qFQ" association="_oXR7XPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXbsQfWnEdqea89UKW2qFQ" name="A_result_unmarshallAction" memberEnd="_oW12ePWnEdqea89UKW2qFQ _oXbsQ_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXbsQvWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXbsQ_WnEdqea89UKW2qFQ" type="_oW12YPWnEdqea89UKW2qFQ" association="_oXbsQfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXbsRPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXbsRfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXbsRvWnEdqea89UKW2qFQ" name="A_unmarshallType_unmarshallAction" memberEnd="_oW12fPWnEdqea89UKW2qFQ _oXbsR_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oXbsR_WnEdqea89UKW2qFQ" type="_oW12YPWnEdqea89UKW2qFQ" association="_oXbsRvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXbsSPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXbsSfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXbsSvWnEdqea89UKW2qFQ" name="A_object_unmarshallAction" memberEnd="_oW12gPWnEdqea89UKW2qFQ _oXbsTPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXbsS_WnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXbsTPWnEdqea89UKW2qFQ" type="_oW12YPWnEdqea89UKW2qFQ" association="_oXbsSvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXbsTfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXbsTvWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXbsT_WnEdqea89UKW2qFQ" name="A_returnInformation_replyAction" memberEnd="_oWsFffWnEdqea89UKW2qFQ _oXbsUfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXbsUPWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXbsUfWnEdqea89UKW2qFQ" type="_oWsFcPWnEdqea89UKW2qFQ" association="_oXbsT_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXbsUvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXbsU_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXbsVPWnEdqea89UKW2qFQ" name="A_replyValue_replyAction" memberEnd="_oWsFgfWnEdqea89UKW2qFQ _oXbsVvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXbsVfWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXbsVvWnEdqea89UKW2qFQ" type="_oWsFcPWnEdqea89UKW2qFQ" association="_oXbsVPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXbsV_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXbsWPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXbsWfWnEdqea89UKW2qFQ" name="A_trigger_acceptEventAction" memberEnd="_oWiUhvWnEdqea89UKW2qFQ _oXbsWvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oXbsWvWnEdqea89UKW2qFQ" type="_oWiUcPWnEdqea89UKW2qFQ" association="_oXbsWfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXbsW_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXbsXPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXldQPWnEdqea89UKW2qFQ" name="A_result_reduceAction" memberEnd="_oW_AYPWnEdqea89UKW2qFQ _oXldQvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXldQfWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXldQvWnEdqea89UKW2qFQ" type="_oW_AUPWnEdqea89UKW2qFQ" redefinedProperty="_oI1PqvWnEdqea89UKW2qFQ" association="_oXldQPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXldQ_WnEdqea89UKW2qFQ" name="A_collection_reduceAction" memberEnd="_oW_AZPWnEdqea89UKW2qFQ _oXldRfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oXldRPWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oXldRfWnEdqea89UKW2qFQ" type="_oW_AUPWnEdqea89UKW2qFQ" redefinedProperty="_oI1Pr_WnEdqea89UKW2qFQ" association="_oXldQ_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oXldRvWnEdqea89UKW2qFQ" name="A_reducer_reduceAction" memberEnd="_oW_AXPWnEdqea89UKW2qFQ _oXldR_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oXldR_WnEdqea89UKW2qFQ" type="_oW_AUPWnEdqea89UKW2qFQ" association="_oXldRvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oNcp8PWnEdqea89UKW2qFQ" name="JoinNode">
      <ownedComment xmi:id="_oNcp8fWnEdqea89UKW2qFQ" annotatedElement="_oNcp8PWnEdqea89UKW2qFQ">
        <body>A join node is a control node that synchronizes multiple flows.</body>
      </ownedComment>
      <ownedComment xmi:id="_oXldSPWnEdqea89UKW2qFQ" annotatedElement="_oNcp8PWnEdqea89UKW2qFQ">
        <body>Join nodes have a Boolean value specification using the names of the incoming edges to specify the conditions under which the join will emit a token.</body>
      </ownedComment>
      <ownedRule xmi:id="_oXldSfWnEdqea89UKW2qFQ" name="one_outgoing_edge" constrainedElement="_oNcp8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oXldSvWnEdqea89UKW2qFQ" annotatedElement="_oXldSfWnEdqea89UKW2qFQ">
          <body>A join node has one outgoing edge.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oXldS_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.outgoing->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oXldTPWnEdqea89UKW2qFQ" name="incoming_object_flow" constrainedElement="_oNcp8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oXldTfWnEdqea89UKW2qFQ" annotatedElement="_oXldTPWnEdqea89UKW2qFQ">
          <body>If a join node has an incoming object flow, it must have an outgoing object flow, otherwise, it must have an outgoing control flow.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oXldTvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.incoming.select(e | e.isTypeOf(ObjectFlow)->notEmpty() implies&#xD;&#xA;  self.outgoing.isTypeOf(ObjectFlow)) and&#xD;&#xA;    (self.incoming.select(e | e.isTypeOf(ObjectFlow)->empty() implies&#xD;&#xA;      self.outgoing.isTypeOf(ControlFlow))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oNcp8vWnEdqea89UKW2qFQ" general="_oKxJYvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oXldT_WnEdqea89UKW2qFQ" name="isCombineDuplicate" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oXldUPWnEdqea89UKW2qFQ" annotatedElement="_oXldT_WnEdqea89UKW2qFQ">
          <body>Tells whether tokens having objects with the same identity are combined into one by the join.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oXldUfWnEdqea89UKW2qFQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oXunMPWnEdqea89UKW2qFQ" name="joinSpec" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oYn_GvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oXunMfWnEdqea89UKW2qFQ" annotatedElement="_oXunMPWnEdqea89UKW2qFQ">
          <body>A specification giving the conditions under which the join with emit a token. Default is &quot;and&quot;.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXunMvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXunM_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oXunNPWnEdqea89UKW2qFQ" name="DataStoreNode">
      <ownedComment xmi:id="_oXunNfWnEdqea89UKW2qFQ" annotatedElement="_oXunNPWnEdqea89UKW2qFQ">
        <body>A data store node is a central buffer node for non-transient information.</body>
      </ownedComment>
      <generalization xmi:id="_oXunNvWnEdqea89UKW2qFQ" general="_oNJu8_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oK66RvWnEdqea89UKW2qFQ" name="ObjectFlow">
      <ownedComment xmi:id="_oK66R_WnEdqea89UKW2qFQ" annotatedElement="_oK66RvWnEdqea89UKW2qFQ">
        <body>An object flow is an activity edge that can have objects or data passing along it.</body>
      </ownedComment>
      <ownedComment xmi:id="_oXunN_WnEdqea89UKW2qFQ" annotatedElement="_oK66RvWnEdqea89UKW2qFQ">
        <body>Object flows have support for multicast/receive, token selection from object nodes, and transformation of tokens.</body>
      </ownedComment>
      <ownedRule xmi:id="_oK66SPWnEdqea89UKW2qFQ" name="no_actions" constrainedElement="_oK66RvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66SfWnEdqea89UKW2qFQ" annotatedElement="_oK66SPWnEdqea89UKW2qFQ">
          <body>Object flows may not have actions at either end.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66SvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oK66S_WnEdqea89UKW2qFQ" name="compatible_types" constrainedElement="_oK66RvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66TPWnEdqea89UKW2qFQ" annotatedElement="_oK66S_WnEdqea89UKW2qFQ">
          <body>Object nodes connected by an object flow, with optionally intervening control nodes, must have compatible types. In particular, the downstream object node type must be the same or a supertype of the upstream object node type.&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66TfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oK66TvWnEdqea89UKW2qFQ" name="same_upper_bounds" constrainedElement="_oK66RvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66T_WnEdqea89UKW2qFQ" annotatedElement="_oK66TvWnEdqea89UKW2qFQ">
          <body>Object nodes connected by an object flow, with optionally intervening control nodes, must have the same upper bounds.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66UPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oXunOPWnEdqea89UKW2qFQ" name="target" constrainedElement="_oK66RvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oXunOfWnEdqea89UKW2qFQ" annotatedElement="_oXunOPWnEdqea89UKW2qFQ">
          <body>An edge with constant weight may not target an object node, or lead to an object node downstream with no intervening actions, that has an upper bound less than the weight.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oXunOvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oXunO_WnEdqea89UKW2qFQ" name="transformation_behaviour" constrainedElement="_oK66RvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oXunPPWnEdqea89UKW2qFQ" annotatedElement="_oXunO_WnEdqea89UKW2qFQ">
          <body>A transformation behavior has one input parameter and one output parameter. The input parameter must be the same as or a supertype of the type of object token coming from the source end. The output parameter must be the same or a subtype of the type of object token expected downstream. The behavior cannot have side effects.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oXunPfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oXunPvWnEdqea89UKW2qFQ" name="selection_behaviour" constrainedElement="_oK66RvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oXunP_WnEdqea89UKW2qFQ" annotatedElement="_oXunPvWnEdqea89UKW2qFQ">
          <body>An object flow may have a selection behavior only if has an object node as a source.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oXunQPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oXunQfWnEdqea89UKW2qFQ" name="input_and_output_parameter" constrainedElement="_oK66RvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oXunQvWnEdqea89UKW2qFQ" annotatedElement="_oXunQfWnEdqea89UKW2qFQ">
          <body>A selection behavior has one input parameter and one output parameter. The input parameter must be a bag of elements of the same as or a supertype of the type of source object node. The output parameter must be the same or a subtype of the type of source object node. The behavior cannot have side effects.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oXunQ_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oXunRPWnEdqea89UKW2qFQ" name="is_multicast_or_is_multireceive" constrainedElement="_oK66RvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oXunRfWnEdqea89UKW2qFQ" annotatedElement="_oXunRPWnEdqea89UKW2qFQ">
          <body>isMulticast and isMultireceive cannot both be true.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oXunRvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oK66UfWnEdqea89UKW2qFQ" general="_oKxJZfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oXunR_WnEdqea89UKW2qFQ" name="isMulticast" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oXunSPWnEdqea89UKW2qFQ" annotatedElement="_oXunR_WnEdqea89UKW2qFQ">
          <body>Tells whether the objects in the flow are passed by multicasting.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oXunSfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oXunSvWnEdqea89UKW2qFQ" name="isMultireceive" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oXunS_WnEdqea89UKW2qFQ" annotatedElement="_oXunSvWnEdqea89UKW2qFQ">
          <body>Tells whether the objects in the flow are gathered from respondents to multicasting.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oXunTPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oXunTfWnEdqea89UKW2qFQ" name="transformation" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oYeOEPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oXunTvWnEdqea89UKW2qFQ" annotatedElement="_oXunTfWnEdqea89UKW2qFQ">
          <body>Changes or replaces data tokens flowing along edge.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXunT_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXunUPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oXunUfWnEdqea89UKW2qFQ" name="selection" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oYeOHfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oXunUvWnEdqea89UKW2qFQ" annotatedElement="_oXunUfWnEdqea89UKW2qFQ">
          <body>Selects tokens from a source object node.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oXunU_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oXunVPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oKxJWPWnEdqea89UKW2qFQ" name="ObjectNode" isAbstract="true">
      <ownedComment xmi:id="_oKxJWfWnEdqea89UKW2qFQ" annotatedElement="_oKxJWPWnEdqea89UKW2qFQ">
        <body>An object node is an abstract activity node that is part of defining object flow in an activity.</body>
      </ownedComment>
      <ownedComment xmi:id="_oX4YOPWnEdqea89UKW2qFQ" annotatedElement="_oKxJWPWnEdqea89UKW2qFQ">
        <body>Object nodes have support for token selection, limitation on the number of tokens, specifying the state required for tokens, and carrying control values.</body>
      </ownedComment>
      <ownedRule xmi:id="_oKxJWvWnEdqea89UKW2qFQ" name="object_flow_edges" constrainedElement="_oKxJWPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKxJW_WnEdqea89UKW2qFQ" annotatedElement="_oKxJWvWnEdqea89UKW2qFQ">
          <body>All edges coming into or going out of object nodes must be object flow edges.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKxJXPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oKxJXfWnEdqea89UKW2qFQ" name="not_unique" constrainedElement="_oKxJWPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKxJXvWnEdqea89UKW2qFQ" annotatedElement="_oKxJXfWnEdqea89UKW2qFQ">
          <body>Object nodes are not unique typed elements</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKxJX_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>isUnique = false</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oX4YOfWnEdqea89UKW2qFQ" name="selection_behavior" constrainedElement="_oKxJWPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oX4YOvWnEdqea89UKW2qFQ" annotatedElement="_oX4YOfWnEdqea89UKW2qFQ">
          <body>If an object node has a selection behavior, then the ordering of the object node is ordered, and vice versa.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oX4YO_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oX4YPPWnEdqea89UKW2qFQ" name="input_output_parameter" constrainedElement="_oKxJWPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oX4YPfWnEdqea89UKW2qFQ" annotatedElement="_oX4YPPWnEdqea89UKW2qFQ">
          <body>A selection behavior has one input parameter and one output parameter. The input parameter must be a bag of elements of the same type as the object node or a supertype of the type of object node. The output parameter must be the same or a subtype of the type of object node. The behavior cannot have side effects.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oX4YPvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oKxJYPWnEdqea89UKW2qFQ" general="_oI-Zo_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oKxJYfWnEdqea89UKW2qFQ" general="_oA73_vWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oX4YP_WnEdqea89UKW2qFQ" name="ordering" type="_oYVEIvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oX4YQPWnEdqea89UKW2qFQ" annotatedElement="_oX4YP_WnEdqea89UKW2qFQ">
          <body>Tells whether and how the tokens in the object node are ordered for selection to traverse edges outgoing from the object node.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oX4YQfWnEdqea89UKW2qFQ" instance="_oYVEJ_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oX4YQvWnEdqea89UKW2qFQ" name="isControlType" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oX4YQ_WnEdqea89UKW2qFQ" annotatedElement="_oX4YQvWnEdqea89UKW2qFQ">
          <body>Tells whether the type of the object node is to be treated as control.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oX4YRPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oX4YRfWnEdqea89UKW2qFQ" name="upperBound" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oYVEMfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oX4YRvWnEdqea89UKW2qFQ" annotatedElement="_oX4YRfWnEdqea89UKW2qFQ">
          <body>The maximum number of tokens allowed in the node. Objects cannot flow into the node if the upper bound is reached.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oX4YR_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oX4YSPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oX4YSfWnEdqea89UKW2qFQ" name="inState" type="_oSqhAPWnEdqea89UKW2qFQ" association="_oYVENvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oX4YSvWnEdqea89UKW2qFQ" annotatedElement="_oX4YSfWnEdqea89UKW2qFQ">
          <body>The required states of the object available at this point in the activity.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oX4YS_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oX4YTPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oX4YTfWnEdqea89UKW2qFQ" name="selection" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oYeOIfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oX4YTvWnEdqea89UKW2qFQ" annotatedElement="_oX4YTfWnEdqea89UKW2qFQ">
          <body>Selects tokens for outgoing edges.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oX4YT_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oX4YUPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oYCJMPWnEdqea89UKW2qFQ" name="ParameterSet">
      <ownedComment xmi:id="_oYCJMfWnEdqea89UKW2qFQ" annotatedElement="_oYCJMPWnEdqea89UKW2qFQ">
        <body>A parameter set is an element that provides alternative sets of inputs or outputs that a behavior may use.</body>
      </ownedComment>
      <ownedRule xmi:id="_oYCJMvWnEdqea89UKW2qFQ" name="same_parameterized_entity" constrainedElement="_oYCJMPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYCJM_WnEdqea89UKW2qFQ" annotatedElement="_oYCJMvWnEdqea89UKW2qFQ">
          <body>The parameters in a parameter set must all be inputs or all be outputs of the same parameterized entity, and the parameter set is owned by that entity.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYCJNPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYCJNfWnEdqea89UKW2qFQ" name="input" constrainedElement="_oYCJMPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYCJNvWnEdqea89UKW2qFQ" annotatedElement="_oYCJNfWnEdqea89UKW2qFQ">
          <body>If a behavior has input parameters that are in a parameter set, then any inputs that are not in a parameter set must be streaming. Same for output parameters.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYCJN_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYCJOPWnEdqea89UKW2qFQ" name="two_parameter_sets" constrainedElement="_oYCJMPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYCJOfWnEdqea89UKW2qFQ" annotatedElement="_oYCJOPWnEdqea89UKW2qFQ">
          <body>Two parameter sets cannot have exactly the same set of parameters.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYCJOvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oYCJO_WnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_oYCJPPWnEdqea89UKW2qFQ" name="parameter" type="_KyaPMGveEdq4DLWZOhbdEA" association="_oYVEOvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYCJPfWnEdqea89UKW2qFQ" annotatedElement="_oYCJPPWnEdqea89UKW2qFQ">
          <body>Parameters in the parameter set.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYCJPvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYCJP_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYCJQPWnEdqea89UKW2qFQ" name="condition" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oYeOJfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYCJQfWnEdqea89UKW2qFQ" annotatedElement="_oYCJQPWnEdqea89UKW2qFQ">
          <body>Constraint that should be satisfied for the owner of the parameters in an input parameter set to start execution using the values provided for those parameters, or the owner of the parameters in an output parameter set to end execution providing the values for those parameters, if all preconditions and conditions on input parameter sets were satisfied.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYCJQvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYCJQ_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oI-ZgPWnEdqea89UKW2qFQ" name="Activity">
      <ownedComment xmi:id="_oI-ZgfWnEdqea89UKW2qFQ" annotatedElement="_oI-ZgPWnEdqea89UKW2qFQ">
        <body>An activity is the specification of parameterized behavior as the coordinated sequencing of subordinate units whose individual elements are actions.</body>
      </ownedComment>
      <ownedRule xmi:id="_oI-ZgvWnEdqea89UKW2qFQ" name="no_supergroups" constrainedElement="_oI-ZgPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oI-Zg_WnEdqea89UKW2qFQ" annotatedElement="_oI-ZgvWnEdqea89UKW2qFQ">
          <body>The groups of an activity have no supergroups.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oI-ZhPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLEEPvWnEdqea89UKW2qFQ" name="activity_parameter_node" constrainedElement="_oI-ZgPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLEEP_WnEdqea89UKW2qFQ" annotatedElement="_oLEEPvWnEdqea89UKW2qFQ">
          <body>The nodes of the activity must include one ActivityParameterNode for each parameter.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLEEQPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLEEQfWnEdqea89UKW2qFQ" name="autonomous" constrainedElement="_oI-ZgPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLEEQvWnEdqea89UKW2qFQ" annotatedElement="_oLEEQfWnEdqea89UKW2qFQ">
          <body>An activity cannot be autonomous and have a classifier or behavioral feature context at the same time.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLEEQ_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oI-ZhfWnEdqea89UKW2qFQ" general="_TUPtYGveEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oJR7sPWnEdqea89UKW2qFQ" name="structuredNode" type="_oJIKmfWnEdqea89UKW2qFQ" isReadOnly="true" isDerived="true" aggregation="composite" subsettedProperty="_oI-ZhvWnEdqea89UKW2qFQ _oI-ZivWnEdqea89UKW2qFQ" association="_oJk2lvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7sfWnEdqea89UKW2qFQ" annotatedElement="_oJR7sPWnEdqea89UKW2qFQ">
          <body>Top-level structured nodes in the activity.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7svWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7s_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJR7tPWnEdqea89UKW2qFQ" name="variable" type="_oJIKhPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oJk2mfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7tfWnEdqea89UKW2qFQ" annotatedElement="_oJR7tPWnEdqea89UKW2qFQ">
          <body>Top-level variables in the activity.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7tvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7t_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oI-ZhvWnEdqea89UKW2qFQ" name="node" visibility="public" type="_oI-Zo_WnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oI-ZrvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oI-Zh_WnEdqea89UKW2qFQ" annotatedElement="_oI-ZhvWnEdqea89UKW2qFQ">
          <body>Nodes coordinated by the activity.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7uvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7u_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLEERPWnEdqea89UKW2qFQ" name="isReadOnly" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oLEERfWnEdqea89UKW2qFQ" annotatedElement="_oLEERPWnEdqea89UKW2qFQ">
          <body>If true, this activity must not make any changes to variables outside the activity or to objects. (This is an assertion, not an executable property. It may be used by an execution engine to optimize model execution. If the assertion is violated by the action, then the model is ill-formed.) The default is false (an activity may make nonlocal changes).</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oLEERvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLEER_WnEdqea89UKW2qFQ" name="edge" type="_oKxJZfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oLEETvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLEESPWnEdqea89UKW2qFQ" annotatedElement="_oLEER_WnEdqea89UKW2qFQ">
          <body>Edges expressing flow between nodes of the activity.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLEESfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLEESvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNcp9_WnEdqea89UKW2qFQ" name="partition" type="_oNTf4PWnEdqea89UKW2qFQ" subsettedProperty="_oI-ZivWnEdqea89UKW2qFQ" association="_oNma4_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNcp-PWnEdqea89UKW2qFQ" annotatedElement="_oNcp9_WnEdqea89UKW2qFQ">
          <body>Top-level partitions in the activity.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNcp-fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNcp-vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oI-ZivWnEdqea89UKW2qFQ" name="group" visibility="public" type="_oI-ZjvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oI-ZsfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oI-Zi_WnEdqea89UKW2qFQ" annotatedElement="_oI-ZivWnEdqea89UKW2qFQ">
          <body>Top-level groups in the activity.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNma0PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNma0fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYCJRPWnEdqea89UKW2qFQ" name="isSingleExecution" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oYCJRfWnEdqea89UKW2qFQ" annotatedElement="_oYCJRPWnEdqea89UKW2qFQ">
          <body>If true, all invocations of the activity are handled by the same execution.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oYCJRvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KyaPMGveEdq4DLWZOhbdEA" name="Parameter">
      <ownedComment xmi:id="_oB0orvWnEdqea89UKW2qFQ" annotatedElement="_KyaPMGveEdq4DLWZOhbdEA">
        <body>A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature.</body>
      </ownedComment>
      <ownedComment xmi:id="_oKnYZfWnEdqea89UKW2qFQ" annotatedElement="_KyaPMGveEdq4DLWZOhbdEA">
        <body>Parameters are allowed to be treated as connectable elements.</body>
      </ownedComment>
      <ownedComment xmi:id="_oYCJR_WnEdqea89UKW2qFQ" annotatedElement="_KyaPMGveEdq4DLWZOhbdEA">
        <body>Parameters have support for streaming, exceptions, and parameter sets.</body>
      </ownedComment>
      <ownedRule xmi:id="_oKnYZvWnEdqea89UKW2qFQ" name="connector_end" constrainedElement="_KyaPMGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oKnYZ_WnEdqea89UKW2qFQ" annotatedElement="_oKnYZvWnEdqea89UKW2qFQ">
          <body>A parameter may only be associated with a connector end within the context of a collaboration.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKnYaPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.end.notEmpty() implies self.collaboration.notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYCJSPWnEdqea89UKW2qFQ" name="stream_and_exception" constrainedElement="_KyaPMGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oYCJSfWnEdqea89UKW2qFQ" annotatedElement="_oYCJSPWnEdqea89UKW2qFQ">
          <body>A parameter cannot be a stream and exception at the same time.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYCJSvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYCJS_WnEdqea89UKW2qFQ" name="not_exception" constrainedElement="_KyaPMGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oYCJTPWnEdqea89UKW2qFQ" annotatedElement="_oYCJS_WnEdqea89UKW2qFQ">
          <body>An input parameter cannot be an exception.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYCJTfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYCJTvWnEdqea89UKW2qFQ" name="reentrant_behaviors" constrainedElement="_KyaPMGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oYCJT_WnEdqea89UKW2qFQ" annotatedElement="_oYCJTvWnEdqea89UKW2qFQ">
          <body>Reentrant behaviors cannot have stream parameters.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYCJUPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYCJUfWnEdqea89UKW2qFQ" name="in_and_out" constrainedElement="_KyaPMGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oYCJUvWnEdqea89UKW2qFQ" annotatedElement="_oYCJUfWnEdqea89UKW2qFQ">
          <body>Only in and inout parameters may have a delete effect. Only out, inout, and return parameters may have a create effect.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYCJU_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oB0osPWnEdqea89UKW2qFQ" general="_Gjgl0GveEdq4DLWZOhbdEA"/>
      <generalization xmi:id="_oKnYafWnEdqea89UKW2qFQ" general="_oKUdZfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oB0otfWnEdqea89UKW2qFQ" name="direction" visibility="public" type="_oCbFkPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB0otvWnEdqea89UKW2qFQ" annotatedElement="_oB0otfWnEdqea89UKW2qFQ">
          <body>Indicates whether a parameter is being sent into or out of a behavioral element.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oFGmNPWnEdqea89UKW2qFQ" instance="_oCbFkvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oB0osfWnEdqea89UKW2qFQ" name="default" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw" isDerived="true">
        <ownedComment xmi:id="_oB0osvWnEdqea89UKW2qFQ" annotatedElement="_oB0osfWnEdqea89UKW2qFQ">
          <body>Specifies a String that represents a value to be used when no argument is supplied for the Parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFGmNfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFGmNvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oFGmN_WnEdqea89UKW2qFQ" name="defaultValue" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oHfLxfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oFGmOPWnEdqea89UKW2qFQ" annotatedElement="_oFGmN_WnEdqea89UKW2qFQ">
          <body>Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFGmOfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFGmOvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oB0ouPWnEdqea89UKW2qFQ" name="operation" visibility="public" type="_M4X2IGveEdq4DLWZOhbdEA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oC3xn_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB0oufWnEdqea89UKW2qFQ" annotatedElement="_oB0ouPWnEdqea89UKW2qFQ">
          <body>References the Operation for which this is a formal parameter.</body>
        </ownedComment>
        <ownedComment xmi:id="_oFGmO_WnEdqea89UKW2qFQ" annotatedElement="_oB0ouPWnEdqea89UKW2qFQ">
          <body>References the Operation owning this parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFGmPPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFGmPfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYCJVPWnEdqea89UKW2qFQ" name="isException" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oYCJVfWnEdqea89UKW2qFQ" annotatedElement="_oYCJVPWnEdqea89UKW2qFQ">
          <body>Tells whether an output parameter may emit a value to the exclusion of the other outputs.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oYCJVvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYCJV_WnEdqea89UKW2qFQ" name="isStream" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oYCJWPWnEdqea89UKW2qFQ" annotatedElement="_oYCJV_WnEdqea89UKW2qFQ">
          <body>Tells whether an input parameter may accept values while its behavior is executing, or whether an output parameter post values while the behavior is executing.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oYCJWfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYCJWvWnEdqea89UKW2qFQ" name="effect" type="_oYVEKPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYCJW_WnEdqea89UKW2qFQ" annotatedElement="_oYCJWvWnEdqea89UKW2qFQ">
          <body>Specifies the effect that the owner of the parameter has on values passed in or out of the parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYCJXPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYCJXfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYCJXvWnEdqea89UKW2qFQ" name="parameterSet" type="_oYCJMPWnEdqea89UKW2qFQ" association="_oYVEOvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYCJX_WnEdqea89UKW2qFQ" annotatedElement="_oYCJXvWnEdqea89UKW2qFQ">
          <body>The parameter sets containing the parameter. See ParameterSet.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYCJYPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYCJYfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_7UJKkFYJEdqrn7iZ0eqieg" name="getDefault" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_-PwAEFYJEdqrn7iZ0eqieg" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4VLgQVYjEdqB6vblk3tuMA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4VLgQFYjEdqB6vblk3tuMA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_QKbgcWXCEdqEJs8umHJc9g" name="isSetDefault" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_TKzhMGXCEdqEJs8umHJc9g" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_5FAasFYjEdqB6vblk3tuMA" name="setDefault" visibility="protected">
        <ownedParameter xmi:id="_7D0QwFYjEdqB6vblk3tuMA" name="newDefault" visibility="protected" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_VQnXIGXCEdqEJs8umHJc9g" name="unsetDefault" visibility="protected"/>
      <ownedOperation xmi:id="_kKuPgK6_EdqjppZik4kD8A" name="setBooleanDefaultValue">
        <ownedComment xmi:id="_TCrd8OwfEdqYHf-imTcTdw" annotatedElement="_kKuPgK6_EdqjppZik4kD8A">
          <body>Sets the default value for this parameter to the specified Boolean value.</body>
        </ownedComment>
        <ownedParameter xmi:id="_kKuPga6_EdqjppZik4kD8A" name="value" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_kKuPgq6_EdqjppZik4kD8A" name="setIntegerDefaultValue">
        <ownedComment xmi:id="_UB3DAOwfEdqYHf-imTcTdw" annotatedElement="_kKuPgq6_EdqjppZik4kD8A">
          <body>Sets the default value for this parameter to the specified integer value.</body>
        </ownedComment>
        <ownedParameter xmi:id="_kKuPg66_EdqjppZik4kD8A" name="value" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_kK3ZcK6_EdqjppZik4kD8A" name="setStringDefaultValue">
        <ownedComment xmi:id="_Z2PccOwfEdqYHf-imTcTdw" annotatedElement="_kK3ZcK6_EdqjppZik4kD8A">
          <body>Sets the default value for this parameter to the specified string value.</body>
        </ownedComment>
        <ownedParameter xmi:id="_kK3Zca6_EdqjppZik4kD8A" name="value" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_kK3Zcq6_EdqjppZik4kD8A" name="setUnlimitedNaturalDefaultValue">
        <ownedComment xmi:id="_asyC4OwfEdqYHf-imTcTdw" annotatedElement="_kK3Zcq6_EdqjppZik4kD8A">
          <body>Sets the default value for this parameter to the specified unlimited natural value.</body>
        </ownedComment>
        <ownedParameter xmi:id="_kK3Zc66_EdqjppZik4kD8A" name="value" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_kK3ZdK6_EdqjppZik4kD8A" name="setNullDefaultValue">
        <ownedComment xmi:id="_c7hyYOwfEdqYHf-imTcTdw" annotatedElement="_kK3ZdK6_EdqjppZik4kD8A">
          <body>Sets the default value for this parameter to the null value.</body>
        </ownedComment>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIreyPWnEdqea89UKW2qFQ" name="Action" isAbstract="true">
      <ownedComment xmi:id="_oIreyfWnEdqea89UKW2qFQ" annotatedElement="_oIreyPWnEdqea89UKW2qFQ">
        <body>An action is a named element that is the fundamental unit of executable functionality. The execution of an action represents some transformation or processing in the modeled system, be it a computer system or otherwise.</body>
      </ownedComment>
      <ownedComment xmi:id="_oI-ZofWnEdqea89UKW2qFQ" annotatedElement="_oIreyPWnEdqea89UKW2qFQ">
        <body>An action represents a single step within an activity, that is, one that is not further decomposed within the activity.</body>
      </ownedComment>
      <ownedComment xmi:id="_oYCJYvWnEdqea89UKW2qFQ" annotatedElement="_oIreyPWnEdqea89UKW2qFQ">
        <body>An action has pre- and post-conditions.</body>
      </ownedComment>
      <generalization xmi:id="_oJbFd_WnEdqea89UKW2qFQ" general="_oJR7yPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oIrey_WnEdqea89UKW2qFQ" name="output" type="_oIiUwvWnEdqea89UKW2qFQ" isOrdered="true" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oI1PqPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIrezPWnEdqea89UKW2qFQ" annotatedElement="_oIrey_WnEdqea89UKW2qFQ">
          <body>The ordered set of output pins connected to the Action. The action places its results onto pins in this set.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIrezfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIrezvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIrez_WnEdqea89UKW2qFQ" name="input" type="_oIiUxfWnEdqea89UKW2qFQ" isOrdered="true" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oI1PrfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIre0PWnEdqea89UKW2qFQ" annotatedElement="_oIrez_WnEdqea89UKW2qFQ">
          <body>The ordered set of input pins connected to the Action. These are among the total set of inputs.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIre0fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIre0vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIre0_WnEdqea89UKW2qFQ" name="context" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" association="_oI1PtvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIre1PWnEdqea89UKW2qFQ" annotatedElement="_oIre0_WnEdqea89UKW2qFQ">
          <body>The classifier that owns the behavior of which this action is a part.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIre1fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIre1vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYCJY_WnEdqea89UKW2qFQ" name="localPrecondition" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oYeOFPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYCJZPWnEdqea89UKW2qFQ" annotatedElement="_oYCJY_WnEdqea89UKW2qFQ">
          <body>Constraint that must be satisfied when execution is started.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYCJZfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYCJZvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYCJZ_WnEdqea89UKW2qFQ" name="localPostcondition" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oYeOF_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYCJaPWnEdqea89UKW2qFQ" annotatedElement="_oYCJZ_WnEdqea89UKW2qFQ">
          <body>Constraint that must be satisfied when executed is completed.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYCJafWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYCJavWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oYLTIPWnEdqea89UKW2qFQ" name="InterruptibleActivityRegion">
      <ownedComment xmi:id="_oYLTIfWnEdqea89UKW2qFQ" annotatedElement="_oYLTIPWnEdqea89UKW2qFQ">
        <body>An interruptible activity region is an activity group that supports termination of tokens flowing in the portions of an activity.</body>
      </ownedComment>
      <ownedRule xmi:id="_oYLTIvWnEdqea89UKW2qFQ" name="interrupting_edges" constrainedElement="_oYLTIPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYLTI_WnEdqea89UKW2qFQ" annotatedElement="_oYLTIvWnEdqea89UKW2qFQ">
          <body>Interrupting edges of a region must have their source node in the region and their target node outside the region in the same activity containing the region.&#xD;
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYLTJPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oYLTJfWnEdqea89UKW2qFQ" general="_oI-ZjvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oYLTJvWnEdqea89UKW2qFQ" name="interruptingEdge" type="_oKxJZfWnEdqea89UKW2qFQ" association="_oYeOGvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYLTJ_WnEdqea89UKW2qFQ" annotatedElement="_oYLTJvWnEdqea89UKW2qFQ">
          <body>The edges leaving the region that will abort other tokens flowing in the region.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYLTKPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYLTKfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYLTKvWnEdqea89UKW2qFQ" name="node" type="_oI-Zo_WnEdqea89UKW2qFQ" subsettedProperty="_oI-ZkfWnEdqea89UKW2qFQ" association="_oYeOG_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYLTK_WnEdqea89UKW2qFQ" annotatedElement="_oYLTKvWnEdqea89UKW2qFQ">
          <body>Nodes immediately contained in the group.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYLTLPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYLTLfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oI-Zo_WnEdqea89UKW2qFQ" name="ActivityNode" isAbstract="true">
      <ownedComment xmi:id="_oI-ZpPWnEdqea89UKW2qFQ" annotatedElement="_oI-Zo_WnEdqea89UKW2qFQ">
        <body>ActivityNode is an abstract class for points in the flow of an activity connected by edges.</body>
      </ownedComment>
      <ownedRule xmi:id="_oJR7vPWnEdqea89UKW2qFQ" name="owned_structured_node" constrainedElement="_oI-Zo_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7vfWnEdqea89UKW2qFQ" annotatedElement="_oJR7vPWnEdqea89UKW2qFQ">
          <body>Activity nodes may be owned by at most one structured node.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oJR7vvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oK66gfWnEdqea89UKW2qFQ" name="owned" constrainedElement="_oI-Zo_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66gvWnEdqea89UKW2qFQ" annotatedElement="_oK66gfWnEdqea89UKW2qFQ">
          <body>Activity nodes can only be owned by activities or groups.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66g_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oJR7v_WnEdqea89UKW2qFQ" general="_oA731vWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oJR7wPWnEdqea89UKW2qFQ" name="inStructuredNode" type="_oJIKmfWnEdqea89UKW2qFQ" subsettedProperty="_oI-ZqvWnEdqea89UKW2qFQ" association="_oJk2cvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7wfWnEdqea89UKW2qFQ" annotatedElement="_oJR7wPWnEdqea89UKW2qFQ">
          <body>Structured activity node containing the node.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7wvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7w_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oI-ZpvWnEdqea89UKW2qFQ" name="activity" visibility="public" type="_oI-ZgPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oI-ZrvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oI-Zp_WnEdqea89UKW2qFQ" annotatedElement="_oI-ZpvWnEdqea89UKW2qFQ">
          <body>Activity containing the node.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7xvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7x_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLEEMPWnEdqea89UKW2qFQ" name="outgoing" type="_oKxJZfWnEdqea89UKW2qFQ" association="_oLEEUPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLEEMfWnEdqea89UKW2qFQ" annotatedElement="_oLEEMPWnEdqea89UKW2qFQ">
          <body>Edges that have the node as source.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLEEMvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLEEM_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLEENPWnEdqea89UKW2qFQ" name="incoming" type="_oKxJZfWnEdqea89UKW2qFQ" association="_oLEEUfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLEENfWnEdqea89UKW2qFQ" annotatedElement="_oLEENPWnEdqea89UKW2qFQ">
          <body>Edges that have the node as target.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLEENvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLEEN_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oLEEOPWnEdqea89UKW2qFQ" name="redefinedNode" type="_oI-Zo_WnEdqea89UKW2qFQ" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oLEEVfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oLEEOfWnEdqea89UKW2qFQ" annotatedElement="_oLEEOPWnEdqea89UKW2qFQ">
          <body>Inherited nodes replaced by this node in a specialization of the activity.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLEEOvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oLEEO_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNTgFfWnEdqea89UKW2qFQ" name="inPartition" type="_oNTf4PWnEdqea89UKW2qFQ" subsettedProperty="_oI-ZqvWnEdqea89UKW2qFQ" association="_oNma1PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTgFvWnEdqea89UKW2qFQ" annotatedElement="_oNTgFfWnEdqea89UKW2qFQ">
          <body>Partitions containing the node.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNTgF_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNTgGPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYLTLvWnEdqea89UKW2qFQ" name="inInterruptibleRegion" type="_oYLTIPWnEdqea89UKW2qFQ" subsettedProperty="_oI-ZqvWnEdqea89UKW2qFQ" association="_oYeOG_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYLTL_WnEdqea89UKW2qFQ" annotatedElement="_oYLTLvWnEdqea89UKW2qFQ">
          <body>Interruptible regions containing the node.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYLTMPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYLTMfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oI-ZqvWnEdqea89UKW2qFQ" name="inGroup" visibility="public" type="_oI-ZjvWnEdqea89UKW2qFQ" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_oI-ZsPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oI-Zq_WnEdqea89UKW2qFQ" annotatedElement="_oI-ZqvWnEdqea89UKW2qFQ">
          <body>Groups containing the node. Multiplicity specialized to [0..1] for StructuredActivity-Group.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYLTMvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYLTM_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rHT3YKOsEdqi_5gqUMOQtA" name="BehavioralFeature" isAbstract="true">
      <ownedComment xmi:id="_oB0ovPWnEdqea89UKW2qFQ" annotatedElement="_rHT3YKOsEdqi_5gqUMOQtA">
        <body>A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances.</body>
      </ownedComment>
      <ownedComment xmi:id="_oIOyoPWnEdqea89UKW2qFQ" annotatedElement="_rHT3YKOsEdqi_5gqUMOQtA">
        <body>A behavioral feature is implemented (realized) by a behavior. A behavioral feature specifies that a classifier will respond to a designated request by invoking its implementing method.</body>
      </ownedComment>
      <ownedComment xmi:id="_oYLTNPWnEdqea89UKW2qFQ" annotatedElement="_rHT3YKOsEdqi_5gqUMOQtA">
        <body>A behavioral feature owns zero or more parameter sets.</body>
      </ownedComment>
      <generalization xmi:id="_oB0ovfWnEdqea89UKW2qFQ" general="_oAoV0PWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oB0ovvWnEdqea89UKW2qFQ" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oB0ov_WnEdqea89UKW2qFQ" name="ownedParameter" visibility="public" type="_KyaPMGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oCuAivWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB0owPWnEdqea89UKW2qFQ" annotatedElement="_oB0ov_WnEdqea89UKW2qFQ">
          <body>Specifies the ordered set of formal parameters of this BehavioralFeature.</body>
        </ownedComment>
        <ownedComment xmi:id="_oFGmLvWnEdqea89UKW2qFQ" annotatedElement="_oB0ov_WnEdqea89UKW2qFQ">
          <body>Specifies the ordered set of formal parameters owned by this BehavioralFeature. The parameter direction can be 'in', 'inout', 'out', pr 'return' to specify input, output, or return parameters.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFGmL_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFGmMPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIOyofWnEdqea89UKW2qFQ" name="isAbstract" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oIOyovWnEdqea89UKW2qFQ" annotatedElement="_oIOyofWnEdqea89UKW2qFQ">
          <body>If true, then the behavioral feature does not have an implementation, and one must be supplied by a more specific element. If false, the behavioral feature must have an implementation in the classifier or one must be inherited from a more general element.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oIOyo_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIOypPWnEdqea89UKW2qFQ" name="method" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oIYjuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIOypfWnEdqea89UKW2qFQ" annotatedElement="_oIOypPWnEdqea89UKW2qFQ">
          <body>A behavioral description that implements the behavioral feature. There may be at most one behavior for a particular pairing of a classifier (as owner of the behavior) and a behavioral feature (as specification of the behavior).</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIOypvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIOyp_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMjSDvWnEdqea89UKW2qFQ" name="concurrency" type="_oM_94PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMjSD_WnEdqea89UKW2qFQ" annotatedElement="_oMjSDvWnEdqea89UKW2qFQ">
          <body>Specifies the semantics of concurrent calls to the same passive instance (i.e., an instance originating from a class with isActive being false). Active instances control access to their own behavioral features.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oMjSEPWnEdqea89UKW2qFQ" type="_oM_94PWnEdqea89UKW2qFQ" instance="_oM_94vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oB0ow_WnEdqea89UKW2qFQ" name="raisedException" visibility="public" type="_ynRtoGvtEdqG6fBIPwe-mw" association="_oCuAj_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB0oxPWnEdqea89UKW2qFQ" annotatedElement="_oB0ow_WnEdqea89UKW2qFQ">
          <body>References the Types representing exceptions that may be raised during an invocation of this feature.</body>
        </ownedComment>
        <ownedComment xmi:id="_oMjSEfWnEdqea89UKW2qFQ" annotatedElement="_oB0ow_WnEdqea89UKW2qFQ">
          <body>The signals that the behavioral feature raises as exceptions.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMjSEvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMjSE_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYLTNfWnEdqea89UKW2qFQ" name="ownedParameterSet" type="_oYCJMPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oYn_EPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYLTNvWnEdqea89UKW2qFQ" annotatedElement="_oYLTNfWnEdqea89UKW2qFQ">
          <body>The ParameterSets owned by this BehavioralFeature.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYLTN_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYLTOPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_3Y0aYKOuEdqi_5gqUMOQtA" name="createReturnResult">
        <ownedParameter xmi:id="_8N3dwKOuEdqi_5gqUMOQtA" type="_KyaPMGveEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_ESyWcKOvEdqi_5gqUMOQtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__VyJkaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="__VyJkKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="__sC00KOuEdqi_5gqUMOQtA" name="type" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BJHvcaOyEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_BJHvcKOyEdqi_5gqUMOQtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oB0ox_WnEdqea89UKW2qFQ" name="isDistinguishableFrom" visibility="public" isQuery="true" redefinedOperation="_oCRUsvWnEdqea89UKW2qFQ" bodyCondition="_oB0oyfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB0oyPWnEdqea89UKW2qFQ" annotatedElement="_oB0ox_WnEdqea89UKW2qFQ">
          <body>The query isDistinguishableFrom() determines whether two BehavioralFeatures may coexist in the same Namespace. It specifies that they have to have different signatures.</body>
        </ownedComment>
        <ownedRule xmi:id="_oB0oyfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oB0ox_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFGmM_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if n.oclIsKindOf(BehavioralFeature)&#xA;then&#xA;  if ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->notEmpty()&#xA;  then Set{}->including(self)->including(n)->isUnique(bf | bf.ownedParameter->collect(type))&#xA;  else true&#xA;  endif&#xA;else true&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oB0oy_WnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oB0ozPWnEdqea89UKW2qFQ" name="n" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw"/>
        <ownedParameter xmi:id="_oB0ozfWnEdqea89UKW2qFQ" name="ns" visibility="public" type="_ZiwkoGwLEdq7X4sGURiZYA"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TUPtYGveEdq4DLWZOhbdEA" name="Behavior" isAbstract="true">
      <ownedComment xmi:id="_oIFosPWnEdqea89UKW2qFQ" annotatedElement="_TUPtYGveEdq4DLWZOhbdEA">
        <body>Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution.</body>
      </ownedComment>
      <ownedComment xmi:id="_oYLTOfWnEdqea89UKW2qFQ" annotatedElement="_TUPtYGveEdq4DLWZOhbdEA">
        <body>A behavior owns zero or more parameter sets.</body>
      </ownedComment>
      <ownedRule xmi:id="_oIFosfWnEdqea89UKW2qFQ" name="parameters_match" constrainedElement="_TUPtYGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oIFosvWnEdqea89UKW2qFQ" annotatedElement="_oIFosfWnEdqea89UKW2qFQ">
          <body>The parameters of the behavior must match the parameters of the implemented behavioral feature.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIFos_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIFotPWnEdqea89UKW2qFQ" name="feature_of_context_classifier" constrainedElement="_TUPtYGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oIFotfWnEdqea89UKW2qFQ" annotatedElement="_oIFotPWnEdqea89UKW2qFQ">
          <body>The implemented behavioral feature must be a feature (possibly inherited) of the context classifier of the behavior.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIFotvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIFot_WnEdqea89UKW2qFQ" name="must_realize" constrainedElement="_TUPtYGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oIFouPWnEdqea89UKW2qFQ" annotatedElement="_oIFot_WnEdqea89UKW2qFQ">
          <body>If the implemented behavioral feature has been redefined in the ancestors of the owner of the behavior, then the behavior must realize the latest redefining behavioral feature.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIFoufWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIFouvWnEdqea89UKW2qFQ" name="most_one_behaviour" constrainedElement="_TUPtYGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oIFou_WnEdqea89UKW2qFQ" annotatedElement="_oIFouvWnEdqea89UKW2qFQ">
          <body>There may be at most one behavior for a given pairing of classifier (as owner of the behavior) and behavioral feature (as specification of the behavior).</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIFovPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIFovfWnEdqea89UKW2qFQ" general="_00owUGvdEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oIFovvWnEdqea89UKW2qFQ" name="isReentrant" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oIFov_WnEdqea89UKW2qFQ" annotatedElement="_oIFovvWnEdqea89UKW2qFQ">
          <body>Tells whether the behavior can be invoked while it is still executing from a previous invocation.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oIFowPWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIFowfWnEdqea89UKW2qFQ" name="redefinedBehavior" type="_TUPtYGveEdq4DLWZOhbdEA" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oIYjs_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIFowvWnEdqea89UKW2qFQ" annotatedElement="_oIFowfWnEdqea89UKW2qFQ">
          <body>References a behavior that this behavior redefines. A subtype of Behavior may redefine any other subtype of Behavior. If the behavior implements a behavioral feature, it replaces the redefined behavior. If the behavior is a classifier behavior, it extends the redefined behavior.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIFow_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIFoxPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIFoxfWnEdqea89UKW2qFQ" name="specification" type="_rHT3YKOsEdqi_5gqUMOQtA" association="_oIYjuPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIFoxvWnEdqea89UKW2qFQ" annotatedElement="_oIFoxfWnEdqea89UKW2qFQ">
          <body>Designates a behavioral feature that the behavior implements. The behavioral feature must be owned by the classifier that owns the behavior or be inherited by it. The parameters of the behavioral feature and the implementing behavior must match. If a behavior does not have a specification, it is directly associated with a classifier (i.e., it is the behavior of the classifier as a whole).</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIFox_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIFoyPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIFoyfWnEdqea89UKW2qFQ" name="ownedParameter" type="_KyaPMGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oIYjufWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIFoyvWnEdqea89UKW2qFQ" annotatedElement="_oIFoyfWnEdqea89UKW2qFQ">
          <body>References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavior completes its execution.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIFoy_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIFozPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIFozfWnEdqea89UKW2qFQ" name="context" type="_iY7sMGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" subsettedProperty="_oA733_WnEdqea89UKW2qFQ" association="_oIYjxvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oIFozvWnEdqea89UKW2qFQ" annotatedElement="_oIFozfWnEdqea89UKW2qFQ">
          <body>The classifier that is the context for the execution of the behavior. If the behavior is owned by a BehavioredClassifier, that classifier is the context. Otherwise, the context is the first BehavioredClassifier reached by following the chain of owner relationships. For example, following this algorithm, the context of an entry action in a state machine is the classifier that owns the state machine. The features of the context classifier as well as the elements visible to the context classifier are visible to the behavior.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIFoz_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIFo0PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIFo0fWnEdqea89UKW2qFQ" name="precondition" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" association="_oIYjy_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIFo0vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIFo0_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oIFo1PWnEdqea89UKW2qFQ" name="postcondition" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" association="_oIYj0PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIFo1fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oIFo1vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYLTOvWnEdqea89UKW2qFQ" name="ownedParameterSet" type="_oYCJMPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oYn_FfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYLTO_WnEdqea89UKW2qFQ" annotatedElement="_oYLTOvWnEdqea89UKW2qFQ">
          <body>The ParameterSets owned by this Behavior.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYLTPPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYLTPfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_Zp2iwFYgEdqB6vblk3tuMA" name="getContext" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_flYtEFYgEdqB6vblk3tuMA" type="_iY7sMGvsEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FIHcsVYjEdqB6vblk3tuMA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FIHcsFYjEdqB6vblk3tuMA"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oIiUtPWnEdqea89UKW2qFQ" name="Pin">
      <ownedComment xmi:id="_oIiUtfWnEdqea89UKW2qFQ" annotatedElement="_oIiUtPWnEdqea89UKW2qFQ">
        <body>A pin is a typed element and multiplicity element that provides values to actions and accept result values from them.</body>
      </ownedComment>
      <ownedComment xmi:id="_oLEEPPWnEdqea89UKW2qFQ" annotatedElement="_oIiUtPWnEdqea89UKW2qFQ">
        <body>A pin is an object node for inputs and outputs to actions.</body>
      </ownedComment>
      <ownedRule xmi:id="_oYLTPvWnEdqea89UKW2qFQ" name="control_pins" constrainedElement="_oIiUtPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYLTP_WnEdqea89UKW2qFQ" annotatedElement="_oYLTPvWnEdqea89UKW2qFQ">
          <body>Control pins have a control type</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYLTQPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>isControl implies isControlType</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oIiUt_WnEdqea89UKW2qFQ" general="_Gjgl0GveEdq4DLWZOhbdEA"/>
      <generalization xmi:id="_oLEEPfWnEdqea89UKW2qFQ" general="_oKxJWPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oYLTQfWnEdqea89UKW2qFQ" name="isControl" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oYLTQvWnEdqea89UKW2qFQ" annotatedElement="_oYLTQfWnEdqea89UKW2qFQ">
          <body>Tells whether the pins provide data to the actions, or just controls when it executes it.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oYLTQ_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_oYVEIvWnEdqea89UKW2qFQ" name="ObjectNodeOrderingKind">
      <ownedComment xmi:id="_oYVEI_WnEdqea89UKW2qFQ" annotatedElement="_oYVEIvWnEdqea89UKW2qFQ">
        <body>ObjectNodeOrderingKind is an enumeration indicating queuing order within a node.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_oYVEJPWnEdqea89UKW2qFQ" name="unordered"/>
      <ownedLiteral xmi:id="_oYVEJfWnEdqea89UKW2qFQ" name="ordered"/>
      <ownedLiteral xmi:id="_oYVEJvWnEdqea89UKW2qFQ" name="LIFO"/>
      <ownedLiteral xmi:id="_oYVEJ_WnEdqea89UKW2qFQ" name="FIFO"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_oYVEKPWnEdqea89UKW2qFQ" name="ParameterEffectKind">
      <ownedComment xmi:id="_oYVEKfWnEdqea89UKW2qFQ" annotatedElement="_oYVEKPWnEdqea89UKW2qFQ">
        <body>The datatype ParameterEffectKind is an enumeration that indicates the effect of a behavior on values passed in or out of its parameters.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_oYVEKvWnEdqea89UKW2qFQ" name="create"/>
      <ownedLiteral xmi:id="_oYVEK_WnEdqea89UKW2qFQ" name="read"/>
      <ownedLiteral xmi:id="_oYVELPWnEdqea89UKW2qFQ" name="update"/>
      <ownedLiteral xmi:id="_oYVELfWnEdqea89UKW2qFQ" name="delete"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYVELvWnEdqea89UKW2qFQ" name="A_weight_activityEdge" memberEnd="_oX4YMPWnEdqea89UKW2qFQ _oYVEMPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oYVEL_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oYVEMPWnEdqea89UKW2qFQ" type="_oKxJZfWnEdqea89UKW2qFQ" association="_oYVELvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYVEMfWnEdqea89UKW2qFQ" name="A_upperBound_objectNode" memberEnd="_oX4YRfWnEdqea89UKW2qFQ _oYVEM_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oYVEMvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oYVEM_WnEdqea89UKW2qFQ" type="_oKxJWPWnEdqea89UKW2qFQ" association="_oYVEMfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYVENPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYVENfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYVENvWnEdqea89UKW2qFQ" name="A_inState_objectNode" memberEnd="_oX4YSfWnEdqea89UKW2qFQ _oYVEN_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oYVEN_WnEdqea89UKW2qFQ" type="_oKxJWPWnEdqea89UKW2qFQ" association="_oYVENvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYVEOPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYVEOfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYVEOvWnEdqea89UKW2qFQ" name="A_parameterSet_parameter" memberEnd="_oYCJPPWnEdqea89UKW2qFQ _oYCJXvWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYeOEPWnEdqea89UKW2qFQ" name="A_transformation_objectFlow" memberEnd="_oXunTfWnEdqea89UKW2qFQ _oYeOEfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oYeOEfWnEdqea89UKW2qFQ" type="_oK66RvWnEdqea89UKW2qFQ" association="_oYeOEPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYeOEvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYeOE_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYeOFPWnEdqea89UKW2qFQ" name="A_action_localPrecondition" memberEnd="_oYCJY_WnEdqea89UKW2qFQ _oYeOFvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oYeOFfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oYeOFvWnEdqea89UKW2qFQ" type="_oIreyPWnEdqea89UKW2qFQ" association="_oYeOFPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYeOF_WnEdqea89UKW2qFQ" name="A_action_localPostcondition" memberEnd="_oYCJZ_WnEdqea89UKW2qFQ _oYeOGfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oYeOGPWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oYeOGfWnEdqea89UKW2qFQ" type="_oIreyPWnEdqea89UKW2qFQ" association="_oYeOF_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYeOGvWnEdqea89UKW2qFQ" name="A_interruptingEdge_interrupts" memberEnd="_oX4YNPWnEdqea89UKW2qFQ _oYLTJvWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYeOG_WnEdqea89UKW2qFQ" name="A_inInterruptibleRegion_node" memberEnd="_oYLTLvWnEdqea89UKW2qFQ _oYLTKvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oYeOHPWnEdqea89UKW2qFQ" general="_oI-ZsPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYeOHfWnEdqea89UKW2qFQ" name="A_selection_objectFlow" memberEnd="_oXunUfWnEdqea89UKW2qFQ _oYeOHvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oYeOHvWnEdqea89UKW2qFQ" type="_oK66RvWnEdqea89UKW2qFQ" association="_oYeOHfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYeOH_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYeOIPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYeOIfWnEdqea89UKW2qFQ" name="A_selection_objectNode" memberEnd="_oX4YTfWnEdqea89UKW2qFQ _oYeOIvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oYeOIvWnEdqea89UKW2qFQ" type="_oKxJWPWnEdqea89UKW2qFQ" association="_oYeOIfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYeOI_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYeOJPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYeOJfWnEdqea89UKW2qFQ" name="A_condition_parameterSet" memberEnd="_oYCJQPWnEdqea89UKW2qFQ _oYeOJ_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oYeOJvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oYeOJ_WnEdqea89UKW2qFQ" type="_oYCJMPWnEdqea89UKW2qFQ" association="_oYeOJfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYn_EPWnEdqea89UKW2qFQ" name="A_ownedParameterSet_behavioralFeature" memberEnd="_oYLTNfWnEdqea89UKW2qFQ _oYn_EvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oYn_EfWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oYn_EvWnEdqea89UKW2qFQ" type="_rHT3YKOsEdqi_5gqUMOQtA" association="_oYn_EPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYn_E_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYn_FPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYn_FfWnEdqea89UKW2qFQ" name="A_ownedParameterSet_behavior" memberEnd="_oYLTOvWnEdqea89UKW2qFQ _oYn_F_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oYn_FvWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oYn_F_WnEdqea89UKW2qFQ" type="_TUPtYGveEdq4DLWZOhbdEA" association="_oYn_FfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYn_GPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYn_GfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oI-ZsPWnEdqea89UKW2qFQ" name="A_containedNode_inGroup" memberEnd="_oI-ZqvWnEdqea89UKW2qFQ _oI-ZkfWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oYn_GvWnEdqea89UKW2qFQ" name="A_joinSpec_joinNode" memberEnd="_oXunMPWnEdqea89UKW2qFQ _oYn_HPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oYn_G_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oYn_HPWnEdqea89UKW2qFQ" type="_oNcp8PWnEdqea89UKW2qFQ" association="_oYn_GvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJIKqvWnEdqea89UKW2qFQ" name="ConditionalNode">
      <ownedComment xmi:id="_oJIKq_WnEdqea89UKW2qFQ" annotatedElement="_oJIKqvWnEdqea89UKW2qFQ">
        <body>A conditional node is a structured activity node that represents an exclusive choice among some number of alternatives.</body>
      </ownedComment>
      <ownedRule xmi:id="_oYn_HvWnEdqea89UKW2qFQ" name="result_no_incoming" constrainedElement="_oJIKqvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYn_H_WnEdqea89UKW2qFQ" annotatedElement="_oYn_HvWnEdqea89UKW2qFQ">
          <body>The result output pins have no incoming edges.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYn_IPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oJIKrPWnEdqea89UKW2qFQ" general="_oJIKmfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oJIKrfWnEdqea89UKW2qFQ" name="isDeterminate" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oJIKrvWnEdqea89UKW2qFQ" annotatedElement="_oJIKrfWnEdqea89UKW2qFQ">
          <body>If true, the modeler asserts that at most one test will succeed.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oJIKr_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJIKsPWnEdqea89UKW2qFQ" name="isAssured" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oJIKsfWnEdqea89UKW2qFQ" annotatedElement="_oJIKsPWnEdqea89UKW2qFQ">
          <body>If true, the modeler asserts that at least one test will succeed.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oJIKsvWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJIKs_WnEdqea89UKW2qFQ" name="clause" type="_oJR7lvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oJk2hfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJIKtPWnEdqea89UKW2qFQ" annotatedElement="_oJIKs_WnEdqea89UKW2qFQ">
          <body>Set of clauses composing the conditional.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJIKtfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJIKtvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYn_IfWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oY66APWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYn_IvWnEdqea89UKW2qFQ" annotatedElement="_oYn_IfWnEdqea89UKW2qFQ">
          <body>A list of output pins that constitute the data flow outputs of the conditional.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYn_I_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYn_JPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJIKmfWnEdqea89UKW2qFQ" name="StructuredActivityNode">
      <ownedComment xmi:id="_oJIKmvWnEdqea89UKW2qFQ" annotatedElement="_oJIKmfWnEdqea89UKW2qFQ">
        <body>A structured activity node is an executable activity node that may have an expansion into subordinate nodes as an activity group. The subordinate nodes must belong to only one structured activity node, although they may be nested.</body>
      </ownedComment>
      <ownedComment xmi:id="_oYn_JfWnEdqea89UKW2qFQ" annotatedElement="_oJIKmfWnEdqea89UKW2qFQ">
        <body>Because of the concurrent nature of the execution of actions within and across activities, it can be difficult to guarantee the consistent access and modification of object memory. In order to avoid race conditions or other concurrency-related problems, it is sometimes necessary to isolate the effects of a group of actions from the effects of actions outside the group. This may be indicated by setting the mustIsolate attribute to true on a structured activity node. If a structured activity node is &quot;isolated,&quot; then any object used by an action within the node cannot be accessed by any action outside the node until the structured activity node as a whole completes. Any concurrent actions that would result in accessing such objects are required to have their execution deferred until the completion of the node.</body>
      </ownedComment>
      <ownedRule xmi:id="_oYn_JvWnEdqea89UKW2qFQ" name="edges" constrainedElement="_oJIKmfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYn_J_WnEdqea89UKW2qFQ" annotatedElement="_oYn_JvWnEdqea89UKW2qFQ">
          <body>The edges owned by a structured node must have source and target nodes in the structured node, and vice versa.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYn_KPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oJIKnfWnEdqea89UKW2qFQ" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
      <generalization xmi:id="_oYn_KfWnEdqea89UKW2qFQ" general="_oIreyPWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oJIKm_WnEdqea89UKW2qFQ" general="_oI-ZjvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oJIKnvWnEdqea89UKW2qFQ" name="variable" type="_oJIKhPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oJk2cPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJIKn_WnEdqea89UKW2qFQ" annotatedElement="_oJIKnvWnEdqea89UKW2qFQ">
          <body>A variable defined in the scope of the structured activity node. It has no value and may not be accessed</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJIKoPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJIKofWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJIKovWnEdqea89UKW2qFQ" name="node" type="_oI-Zo_WnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oI-ZkfWnEdqea89UKW2qFQ" association="_oJk2cvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJIKo_WnEdqea89UKW2qFQ" annotatedElement="_oJIKovWnEdqea89UKW2qFQ">
          <body>Nodes immediately contained in the group.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJIKpPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJIKpfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJIKpvWnEdqea89UKW2qFQ" name="activity" type="_oI-ZgPWnEdqea89UKW2qFQ" redefinedProperty="_oI-ZpvWnEdqea89UKW2qFQ _oI-ZlfWnEdqea89UKW2qFQ" association="_oJk2lvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJIKp_WnEdqea89UKW2qFQ" annotatedElement="_oJIKpvWnEdqea89UKW2qFQ">
          <body>Activity immediately containing the node.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJIKqPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJIKqfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYn_KvWnEdqea89UKW2qFQ" name="mustIsolate" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oYn_K_WnEdqea89UKW2qFQ" annotatedElement="_oYn_KvWnEdqea89UKW2qFQ">
          <body>If true, then the actions in the node execute in isolation from actions outside the node.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oYn_LPWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYn_LfWnEdqea89UKW2qFQ" name="edge" type="_oKxJZfWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oK66Z_WnEdqea89UKW2qFQ" association="_oZErBfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYn_LvWnEdqea89UKW2qFQ" annotatedElement="_oYn_LfWnEdqea89UKW2qFQ">
          <body>Edges immediately contained in the structured node.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYn_L_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYn_MPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJR7gPWnEdqea89UKW2qFQ" name="LoopNode">
      <ownedComment xmi:id="_oJR7gfWnEdqea89UKW2qFQ" annotatedElement="_oJR7gPWnEdqea89UKW2qFQ">
        <body>A loop node is a structured activity node that represents a loop with setup, test, and body sections.</body>
      </ownedComment>
      <ownedRule xmi:id="_oYxwEPWnEdqea89UKW2qFQ" name="input_edges" constrainedElement="_oJR7gPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYxwEfWnEdqea89UKW2qFQ" annotatedElement="_oYxwEPWnEdqea89UKW2qFQ">
          <body>Loop variable inputs must not have outgoing edges.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYxwEvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYxwE_WnEdqea89UKW2qFQ" name="body_output_pins" constrainedElement="_oJR7gPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYxwFPWnEdqea89UKW2qFQ" annotatedElement="_oYxwE_WnEdqea89UKW2qFQ">
          <body>The bodyOutput pins are output pins on actions in the body of the loop node.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYxwFfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYxwFvWnEdqea89UKW2qFQ" name="result_no_incoming" constrainedElement="_oJR7gPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYxwF_WnEdqea89UKW2qFQ" annotatedElement="_oYxwFvWnEdqea89UKW2qFQ">
          <body>The result output pins have no incoming edges.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYxwGPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oJR7gvWnEdqea89UKW2qFQ" general="_oJIKmfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oJR7g_WnEdqea89UKW2qFQ" name="isTestedFirst" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oJR7hPWnEdqea89UKW2qFQ" annotatedElement="_oJR7g_WnEdqea89UKW2qFQ">
          <body>If true, the test is performed before the first execution of the body.
If false, the body is executed once before the test is performed.
</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oJR7hfWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJR7hvWnEdqea89UKW2qFQ" name="bodyPart" type="_oJR7yPWnEdqea89UKW2qFQ" association="_oJk2ffWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7h_WnEdqea89UKW2qFQ" annotatedElement="_oJR7hvWnEdqea89UKW2qFQ">
          <body>The set of nodes and edges that perform the repetitive computations of the loop. The body section is executed as long as the test section produces a true value.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7iPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7ifWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJR7ivWnEdqea89UKW2qFQ" name="setupPart" type="_oJR7yPWnEdqea89UKW2qFQ" association="_oJk2gfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7i_WnEdqea89UKW2qFQ" annotatedElement="_oJR7ivWnEdqea89UKW2qFQ">
          <body>The set of nodes and edges that initialize values or perform other setup computations for the loop.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7jPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7jfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJR7jvWnEdqea89UKW2qFQ" name="decider" type="_oIiUwvWnEdqea89UKW2qFQ" association="_oJk2jvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7j_WnEdqea89UKW2qFQ" annotatedElement="_oJR7jvWnEdqea89UKW2qFQ">
          <body>An output pin within the test fragment the value of which is examined after execution of the test to determine whether to execute the loop body.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7kPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7kfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJR7kvWnEdqea89UKW2qFQ" name="test" type="_oJR7yPWnEdqea89UKW2qFQ" association="_oJk2kvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7k_WnEdqea89UKW2qFQ" annotatedElement="_oJR7kvWnEdqea89UKW2qFQ">
          <body>The set of nodes, edges, and designated value that compute a Boolean value to determine if another execution of the body will be performed.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7lPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7lfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYxwGfWnEdqea89UKW2qFQ" name="result" type="_oIiUwvWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" subsettedProperty="_oIrey_WnEdqea89UKW2qFQ" association="_oY66BfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYxwGvWnEdqea89UKW2qFQ" annotatedElement="_oYxwGfWnEdqea89UKW2qFQ">
          <body>A list of output pins that constitute the data flow output of the entire loop.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYxwG_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYxwHPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYxwHfWnEdqea89UKW2qFQ" name="loopVariable" type="_oIiUwvWnEdqea89UKW2qFQ" isOrdered="true" association="_oY66CvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYxwHvWnEdqea89UKW2qFQ" annotatedElement="_oYxwHfWnEdqea89UKW2qFQ">
          <body>A list of output pins that hold the values of the loop variables during an execution of the loop. When the test fails, the values are movied to the result pins of the loop.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYxwH_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYxwIPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYxwIfWnEdqea89UKW2qFQ" name="bodyOutput" type="_oIiUwvWnEdqea89UKW2qFQ" isOrdered="true" association="_oY66DvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYxwIvWnEdqea89UKW2qFQ" annotatedElement="_oYxwIfWnEdqea89UKW2qFQ">
          <body>A list of output pins within the body fragment the values of which are moved to the loop variable pins after completion of execution of the body, before the next iteration of the loop begins or before the loop exits.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYxwI_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYxwJPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYxwJfWnEdqea89UKW2qFQ" name="loopVariableInput" type="_oIiUxfWnEdqea89UKW2qFQ" isOrdered="true" aggregation="composite" subsettedProperty="_oIrez_WnEdqea89UKW2qFQ" association="_oZErAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYxwJvWnEdqea89UKW2qFQ" annotatedElement="_oYxwJfWnEdqea89UKW2qFQ">
          <body>A list of values that are moved into the loop variable pins before the first iteration of the loop.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYxwJ_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYxwKPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJR7lvWnEdqea89UKW2qFQ" name="Clause">
      <ownedComment xmi:id="_oJR7l_WnEdqea89UKW2qFQ" annotatedElement="_oJR7lvWnEdqea89UKW2qFQ">
        <body>A clause is an element that represents a single branch of a conditional construct, including a test and a body section. The body section is executed only if (but not necessarily if) the test section evaluates true.</body>
      </ownedComment>
      <ownedRule xmi:id="_oJR7mPWnEdqea89UKW2qFQ" name="decider_output" constrainedElement="_oJR7lvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7mfWnEdqea89UKW2qFQ" annotatedElement="_oJR7mPWnEdqea89UKW2qFQ">
          <body>The decider output pin must be for the test body or a node contained by the test body as a structured node.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oJR7mvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYxwKfWnEdqea89UKW2qFQ" name="body_output_pins" constrainedElement="_oJR7lvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYxwKvWnEdqea89UKW2qFQ" annotatedElement="_oYxwKfWnEdqea89UKW2qFQ">
          <body>The bodyOutput pins are output pins on actions in the body of the clause.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYxwK_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oJR7m_WnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oJR7nPWnEdqea89UKW2qFQ" name="test" type="_oJR7yPWnEdqea89UKW2qFQ" association="_oJk2dPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7nfWnEdqea89UKW2qFQ" annotatedElement="_oJR7nPWnEdqea89UKW2qFQ">
          <body>A nested activity fragment with a designated output pin that specifies the result of the test.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7nvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7n_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJR7oPWnEdqea89UKW2qFQ" name="body" type="_oJR7yPWnEdqea89UKW2qFQ" association="_oJk2ePWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7ofWnEdqea89UKW2qFQ" annotatedElement="_oJR7oPWnEdqea89UKW2qFQ">
          <body>A nested activity fragment that is executed if the test evaluates to true and the clause is chosen over any concurrent clauses that also evaluate to true.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7ovWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7o_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJR7pPWnEdqea89UKW2qFQ" name="predecessorClause" type="_oJR7lvWnEdqea89UKW2qFQ" association="_oJk2fPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7pfWnEdqea89UKW2qFQ" annotatedElement="_oJR7pPWnEdqea89UKW2qFQ">
          <body>A set of clauses whose tests must all evaluate false before the current clause can be tested.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7pvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7p_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJR7qPWnEdqea89UKW2qFQ" name="successorClause" type="_oJR7lvWnEdqea89UKW2qFQ" association="_oJk2fPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7qfWnEdqea89UKW2qFQ" annotatedElement="_oJR7qPWnEdqea89UKW2qFQ">
          <body>A set of clauses which may not be tested unless the current clause tests false.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7qvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7q_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJR7rPWnEdqea89UKW2qFQ" name="decider" type="_oIiUwvWnEdqea89UKW2qFQ" association="_oJk2ivWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJR7rfWnEdqea89UKW2qFQ" annotatedElement="_oJR7rPWnEdqea89UKW2qFQ">
          <body>An output pin within the test fragment the value of which is examined after execution of the test to determine whether the body should be executed.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJR7rvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJR7r_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYxwLPWnEdqea89UKW2qFQ" name="bodyOutput" type="_oIiUwvWnEdqea89UKW2qFQ" isOrdered="true" association="_oY66EvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYxwLfWnEdqea89UKW2qFQ" annotatedElement="_oYxwLPWnEdqea89UKW2qFQ">
          <body>A list of output pins within the body fragment whose values are moved to the result pins of the containing conditional node after execution of the clause body.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYxwLvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYxwL_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oKxJZfWnEdqea89UKW2qFQ" name="ActivityEdge" isAbstract="true">
      <ownedComment xmi:id="_oKxJZvWnEdqea89UKW2qFQ" annotatedElement="_oKxJZfWnEdqea89UKW2qFQ">
        <body>An activity edge is an abstract class for directed connections between two activity nodes.</body>
      </ownedComment>
      <ownedComment xmi:id="_oXunVfWnEdqea89UKW2qFQ" annotatedElement="_oKxJZfWnEdqea89UKW2qFQ">
        <body>Activity edges can be contained in interruptible regions.</body>
      </ownedComment>
      <ownedRule xmi:id="_oKxJZ_WnEdqea89UKW2qFQ" name="source_and_target" constrainedElement="_oKxJZfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKxJaPWnEdqea89UKW2qFQ" annotatedElement="_oKxJZ_WnEdqea89UKW2qFQ">
          <body>The source and target of an edge must be in the same activity as the edge.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKxJafWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oKxJavWnEdqea89UKW2qFQ" name="owned" constrainedElement="_oKxJZfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKxJa_WnEdqea89UKW2qFQ" annotatedElement="_oKxJavWnEdqea89UKW2qFQ">
          <body>Activity edges may be owned only by activities or groups.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKxJbPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYxwMPWnEdqea89UKW2qFQ" name="structured_node" constrainedElement="_oKxJZfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYxwMfWnEdqea89UKW2qFQ" annotatedElement="_oYxwMPWnEdqea89UKW2qFQ">
          <body>Activity edges may be owned by at most one structured node.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYxwMvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oKxJbfWnEdqea89UKW2qFQ" general="_oA731vWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oKxJbvWnEdqea89UKW2qFQ" name="activity" type="_oI-ZgPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oLEETvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKxJb_WnEdqea89UKW2qFQ" annotatedElement="_oKxJbvWnEdqea89UKW2qFQ">
          <body>Activity containing the edge.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKxJcPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKxJcfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKxJcvWnEdqea89UKW2qFQ" name="source" type="_oI-Zo_WnEdqea89UKW2qFQ" association="_oLEEUPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKxJc_WnEdqea89UKW2qFQ" annotatedElement="_oKxJcvWnEdqea89UKW2qFQ">
          <body>Node from which tokens are taken when they traverse the edge.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKxJdPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKxJdfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKxJdvWnEdqea89UKW2qFQ" name="target" type="_oI-Zo_WnEdqea89UKW2qFQ" association="_oLEEUfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKxJd_WnEdqea89UKW2qFQ" annotatedElement="_oKxJdvWnEdqea89UKW2qFQ">
          <body>Node to which tokens are put when they traverse the edge.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKxJePWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKxJefWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKxJfvWnEdqea89UKW2qFQ" name="redefinedEdge" type="_oKxJZfWnEdqea89UKW2qFQ" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oLN1MPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKxJf_WnEdqea89UKW2qFQ" annotatedElement="_oKxJfvWnEdqea89UKW2qFQ">
          <body>Inherited edges replaced by this edge in a specialization of the activity.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKxJgPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKxJgfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNTgCvWnEdqea89UKW2qFQ" name="inPartition" type="_oNTf4PWnEdqea89UKW2qFQ" subsettedProperty="_oKxJevWnEdqea89UKW2qFQ" association="_oNma0vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTgC_WnEdqea89UKW2qFQ" annotatedElement="_oNTgCvWnEdqea89UKW2qFQ">
          <body>Partitions containing the edge.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNTgDPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNTgDfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNTgDvWnEdqea89UKW2qFQ" name="guard" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oNma3PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNTgD_WnEdqea89UKW2qFQ" annotatedElement="_oNTgDvWnEdqea89UKW2qFQ">
          <body>Specification evaluated at runtime to determine if the edge can be traversed.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNTgEPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNTgEfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oX4YMPWnEdqea89UKW2qFQ" name="weight" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oYVELvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oX4YMfWnEdqea89UKW2qFQ" annotatedElement="_oX4YMPWnEdqea89UKW2qFQ">
          <body>Number of tokens consumed from the source node on each traversal.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oX4YMvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oX4YM_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oX4YNPWnEdqea89UKW2qFQ" name="interrupts" type="_oYLTIPWnEdqea89UKW2qFQ" association="_oYeOGvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oX4YNfWnEdqea89UKW2qFQ" annotatedElement="_oX4YNPWnEdqea89UKW2qFQ">
          <body>Region that the edge can interrupt.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oX4YNvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oX4YN_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oYxwM_WnEdqea89UKW2qFQ" name="inStructuredNode" type="_oJIKmfWnEdqea89UKW2qFQ" subsettedProperty="_oKxJevWnEdqea89UKW2qFQ" association="_oZErBfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oYxwNPWnEdqea89UKW2qFQ" annotatedElement="_oYxwM_WnEdqea89UKW2qFQ">
          <body>Structured activity node containing the edge.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYxwNfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYxwNvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKxJevWnEdqea89UKW2qFQ" name="inGroup" visibility="public" type="_oI-ZjvWnEdqea89UKW2qFQ" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_oLEEUvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKxJe_WnEdqea89UKW2qFQ" annotatedElement="_oKxJevWnEdqea89UKW2qFQ">
          <body>Groups containing the edge. Multiplicity specialized to [0..1] for StructuredActivityGroup.</body>
        </ownedComment>
        <ownedComment xmi:id="_oNTgEvWnEdqea89UKW2qFQ" annotatedElement="_oKxJevWnEdqea89UKW2qFQ">
          <body>Groups containing the edge. Multiplicity specialized to [0..1] for StructuredActivity-Group.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYxwN_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYxwOPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oI-ZjvWnEdqea89UKW2qFQ" name="ActivityGroup" isAbstract="true">
      <ownedComment xmi:id="_oI-Zj_WnEdqea89UKW2qFQ" annotatedElement="_oI-ZjvWnEdqea89UKW2qFQ">
        <body>ActivityGroup is an abstract class for defining sets of nodes and edges in an activity.</body>
      </ownedComment>
      <ownedRule xmi:id="_oK66XvWnEdqea89UKW2qFQ" name="nodes_and_edges" constrainedElement="_oI-ZjvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66X_WnEdqea89UKW2qFQ" annotatedElement="_oK66XvWnEdqea89UKW2qFQ">
          <body>All nodes and edges of the group must be in the same activity as the group.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66YPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oK66YfWnEdqea89UKW2qFQ" name="not_contained" constrainedElement="_oI-ZjvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66YvWnEdqea89UKW2qFQ" annotatedElement="_oK66YfWnEdqea89UKW2qFQ">
          <body>No node or edge in a group may be contained by its subgroups or its containing groups, transitively.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66Y_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oK66ZPWnEdqea89UKW2qFQ" name="group_owned" constrainedElement="_oI-ZjvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66ZfWnEdqea89UKW2qFQ" annotatedElement="_oK66ZPWnEdqea89UKW2qFQ">
          <body>Groups may only be owned by activities or groups.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oK66ZvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oI-ZkPWnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oI-ZmfWnEdqea89UKW2qFQ" name="subgroup" type="_oI-ZjvWnEdqea89UKW2qFQ" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oI-Zs_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oI-ZmvWnEdqea89UKW2qFQ" annotatedElement="_oI-ZmfWnEdqea89UKW2qFQ">
          <body>Groups immediately contained in the group.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oI-Zm_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oI-ZnPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oI-ZnfWnEdqea89UKW2qFQ" name="superGroup" type="_oI-ZjvWnEdqea89UKW2qFQ" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oI-Zs_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oI-ZnvWnEdqea89UKW2qFQ" annotatedElement="_oI-ZnfWnEdqea89UKW2qFQ">
          <body>Group immediately containing the group.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oI-Zn_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oI-ZoPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oI-ZlfWnEdqea89UKW2qFQ" name="inActivity" visibility="public" type="_oI-ZgPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oI-ZsfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oI-ZlvWnEdqea89UKW2qFQ" annotatedElement="_oI-ZlfWnEdqea89UKW2qFQ">
          <body>Activity containing the group.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNcp9fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNcp9vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oI-ZkfWnEdqea89UKW2qFQ" name="containedNode" visibility="public" type="_oI-Zo_WnEdqea89UKW2qFQ" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_oI-ZsPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oI-ZkvWnEdqea89UKW2qFQ" annotatedElement="_oI-ZkfWnEdqea89UKW2qFQ">
          <body>Nodes immediately contained in the group.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYVEIPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYVEIfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oK66Z_WnEdqea89UKW2qFQ" name="containedEdge" visibility="public" type="_oKxJZfWnEdqea89UKW2qFQ" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_oLEEUvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oK66aPWnEdqea89UKW2qFQ" annotatedElement="_oK66Z_WnEdqea89UKW2qFQ">
          <body>Edges immediately contained in the group.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYxwOfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oYxwOvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oY66APWnEdqea89UKW2qFQ" name="A_result_conditionalNode" memberEnd="_oYn_IfWnEdqea89UKW2qFQ _oY66AvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oY66AfWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oY66AvWnEdqea89UKW2qFQ" type="_oJIKqvWnEdqea89UKW2qFQ" association="_oY66APWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oY66A_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oY66BPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oY66BfWnEdqea89UKW2qFQ" name="A_result_loopNode" memberEnd="_oYxwGfWnEdqea89UKW2qFQ _oY66B_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oY66BvWnEdqea89UKW2qFQ" general="_oI1PqPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oY66B_WnEdqea89UKW2qFQ" type="_oJR7gPWnEdqea89UKW2qFQ" association="_oY66BfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oY66CPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oY66CfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oY66CvWnEdqea89UKW2qFQ" name="A_loopVariable_loopNode" memberEnd="_oYxwHfWnEdqea89UKW2qFQ _oY66C_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oY66C_WnEdqea89UKW2qFQ" type="_oJR7gPWnEdqea89UKW2qFQ" association="_oY66CvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oY66DPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oY66DfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oY66DvWnEdqea89UKW2qFQ" name="A_bodyOutput_loopNode" memberEnd="_oYxwIfWnEdqea89UKW2qFQ _oY66D_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oY66D_WnEdqea89UKW2qFQ" type="_oJR7gPWnEdqea89UKW2qFQ" association="_oY66DvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oY66EPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oY66EfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oY66EvWnEdqea89UKW2qFQ" name="A_bodyOutput_clause" memberEnd="_oYxwLPWnEdqea89UKW2qFQ _oY66E_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oY66E_WnEdqea89UKW2qFQ" type="_oJR7lvWnEdqea89UKW2qFQ" association="_oY66EvWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oY66FPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oY66FfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oZErAPWnEdqea89UKW2qFQ" name="A_loopVariableInput_loopNode" memberEnd="_oYxwJfWnEdqea89UKW2qFQ _oZErAvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oZErAfWnEdqea89UKW2qFQ" general="_oI1PrfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oZErAvWnEdqea89UKW2qFQ" type="_oJR7gPWnEdqea89UKW2qFQ" association="_oZErAPWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZErA_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZErBPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oZErBfWnEdqea89UKW2qFQ" name="A_edge_inStructuredNode" memberEnd="_oYn_LfWnEdqea89UKW2qFQ _oYxwM_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oZErBvWnEdqea89UKW2qFQ" general="_oLEEUvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oLEEUvWnEdqea89UKW2qFQ" name="A_containedEdge_inGroup" memberEnd="_oKxJevWnEdqea89UKW2qFQ _oK66Z_WnEdqea89UKW2qFQ" isDerived="true"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_oZErB_WnEdqea89UKW2qFQ" name="ExpansionNode">
      <ownedComment xmi:id="_oZErCPWnEdqea89UKW2qFQ" annotatedElement="_oZErB_WnEdqea89UKW2qFQ">
        <body>An expansion node is an object node used to indicate a flow across the boundary of an expansion region. A flow into a region contains a collection that is broken into its individual elements inside the region, which is executed once per element. A flow out of a region combines individual elements into a collection for use outside the region.</body>
      </ownedComment>
      <generalization xmi:id="_oZErCfWnEdqea89UKW2qFQ" general="_oKxJWPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oZErCvWnEdqea89UKW2qFQ" name="regionAsOutput" type="_oZErEvWnEdqea89UKW2qFQ" association="_oZXmF_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZErC_WnEdqea89UKW2qFQ" annotatedElement="_oZErCvWnEdqea89UKW2qFQ">
          <body>The expansion region for which the node is an output.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZErDPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZErDfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZErDvWnEdqea89UKW2qFQ" name="regionAsInput" type="_oZErEvWnEdqea89UKW2qFQ" association="_oZXmGPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZErD_WnEdqea89UKW2qFQ" annotatedElement="_oZErDvWnEdqea89UKW2qFQ">
          <body>The expansion region for which the node is an input.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZErEPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZErEfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oZErEvWnEdqea89UKW2qFQ" name="ExpansionRegion">
      <ownedComment xmi:id="_oZErE_WnEdqea89UKW2qFQ" annotatedElement="_oZErEvWnEdqea89UKW2qFQ">
        <body>An expansion region is a structured activity region that executes multiple times corresponding to elements of an input collection.</body>
      </ownedComment>
      <ownedRule xmi:id="_oZErFPWnEdqea89UKW2qFQ" name="expansion_nodes" constrainedElement="_oZErEvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZErFfWnEdqea89UKW2qFQ" annotatedElement="_oZErFPWnEdqea89UKW2qFQ">
          <body>An ExpansionRegion must have one or more argument ExpansionNodes and zero or more result ExpansionNodes.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZErFvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oZErF_WnEdqea89UKW2qFQ" general="_oJIKmfWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oZErGPWnEdqea89UKW2qFQ" name="mode" type="_oZXmD_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZErGfWnEdqea89UKW2qFQ" annotatedElement="_oZErGPWnEdqea89UKW2qFQ">
          <body>The way in which the executions interact:&#xD;
parallel: all interactions are independent&#xD;
iterative: the interactions occur in order of the elements&#xD;
stream: a stream of values flows into a single execution&#xD;
</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oZOcAPWnEdqea89UKW2qFQ" type="_oZXmD_WnEdqea89UKW2qFQ" instance="_oZXmE_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZOcAfWnEdqea89UKW2qFQ" name="outputElement" type="_oZErB_WnEdqea89UKW2qFQ" association="_oZXmF_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZOcAvWnEdqea89UKW2qFQ" annotatedElement="_oZOcAfWnEdqea89UKW2qFQ">
          <body>An object node that accepts a separate element of the output collection during each of the multiple executions of the region. The values are formed into a collection that is available when the execution of the region is complete.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZOcA_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZOcBPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZOcBfWnEdqea89UKW2qFQ" name="inputElement" type="_oZErB_WnEdqea89UKW2qFQ" association="_oZXmGPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZOcBvWnEdqea89UKW2qFQ" annotatedElement="_oZOcBfWnEdqea89UKW2qFQ">
          <body>An object node that holds a separate element of the input collection during each of the multiple executions of the region.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZOcB_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZOcCPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJR7yPWnEdqea89UKW2qFQ" name="ExecutableNode" isAbstract="true">
      <ownedComment xmi:id="_oJR7yfWnEdqea89UKW2qFQ" annotatedElement="_oJR7yPWnEdqea89UKW2qFQ">
        <body>An executable node is an abstract class for activity nodes that may be executed. It is used as an attachment point for exception handlers.</body>
      </ownedComment>
      <generalization xmi:id="_oJR7yvWnEdqea89UKW2qFQ" general="_oI-Zo_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oZOcCfWnEdqea89UKW2qFQ" name="handler" type="_oZXl8PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oZXmGfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZOcCvWnEdqea89UKW2qFQ" annotatedElement="_oZOcCfWnEdqea89UKW2qFQ">
          <body>A set of exception handlers that are examined if an uncaught exception propagates to the outer level of the executable node.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZOcC_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZOcDPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oZXl8PWnEdqea89UKW2qFQ" name="ExceptionHandler">
      <ownedComment xmi:id="_oZXl8fWnEdqea89UKW2qFQ" annotatedElement="_oZXl8PWnEdqea89UKW2qFQ">
        <body>An exception handler is an element that specifies a body to execute in case the specified exception occurs during the execution of the protected node.</body>
      </ownedComment>
      <ownedRule xmi:id="_oZXl8vWnEdqea89UKW2qFQ" name="exception_body" constrainedElement="_oZXl8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZXl8_WnEdqea89UKW2qFQ" annotatedElement="_oZXl8vWnEdqea89UKW2qFQ">
          <body>The exception handler and its input object node are not the source or target of any edge.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZXl9PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZXl9fWnEdqea89UKW2qFQ" name="result_pins" constrainedElement="_oZXl8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZXl9vWnEdqea89UKW2qFQ" annotatedElement="_oZXl9fWnEdqea89UKW2qFQ">
          <body>The result pins of the exception handler body must correspond in number and types to the result pins of the protected node.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZXl9_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZXl-PWnEdqea89UKW2qFQ" name="one_input" constrainedElement="_oZXl8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZXl-fWnEdqea89UKW2qFQ" annotatedElement="_oZXl-PWnEdqea89UKW2qFQ">
          <body>The handler body has one input, and that input is the same as the exception input.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZXl-vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZXl-_WnEdqea89UKW2qFQ" name="edge_source_target" constrainedElement="_oZXl8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZXl_PWnEdqea89UKW2qFQ" annotatedElement="_oZXl-_WnEdqea89UKW2qFQ">
          <body>An edge that has a source in an exception handler structured node must have its target in the handler also, and vice versa.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZXl_fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oZXl_vWnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oZXl__WnEdqea89UKW2qFQ" name="protectedNode" type="_oJR7yPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oZXmGfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZXmAPWnEdqea89UKW2qFQ" annotatedElement="_oZXl__WnEdqea89UKW2qFQ">
          <body>The node protected by the handler. The handler is examined if an exception propagates to the outside of the node.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZXmAfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZXmAvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZXmA_WnEdqea89UKW2qFQ" name="handlerBody" type="_oJR7yPWnEdqea89UKW2qFQ" association="_oZXmG_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZXmBPWnEdqea89UKW2qFQ" annotatedElement="_oZXmA_WnEdqea89UKW2qFQ">
          <body>A node that is executed if the handler satisfies an uncaught exception.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZXmBfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZXmBvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZXmB_WnEdqea89UKW2qFQ" name="exceptionInput" type="_oKxJWPWnEdqea89UKW2qFQ" association="_oZXmHfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZXmCPWnEdqea89UKW2qFQ" annotatedElement="_oZXmB_WnEdqea89UKW2qFQ">
          <body>An object node within the handler body. When the handler catches an exception, the exception token is placed in this node, causing the body to execute.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZXmCfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZXmCvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZXmC_WnEdqea89UKW2qFQ" name="exceptionType" type="_6UV2QGwJEdq7X4sGURiZYA" association="_oZXmH_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZXmDPWnEdqea89UKW2qFQ" annotatedElement="_oZXmC_WnEdqea89UKW2qFQ">
          <body>The kind of instances that the handler catches. If an exception occurs whose type is any of the classifiers in the set, the handler catches the exception and executes its body.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZXmDfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZXmDvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_oZXmD_WnEdqea89UKW2qFQ" name="ExpansionKind">
      <ownedComment xmi:id="_oZXmEPWnEdqea89UKW2qFQ" annotatedElement="_oZXmD_WnEdqea89UKW2qFQ">
        <body>ExpansionKind is an enumeration type used to specify how multiple executions of an expansion region interact.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_oZXmEfWnEdqea89UKW2qFQ" name="parallel">
        <ownedComment xmi:id="_oZXmEvWnEdqea89UKW2qFQ" annotatedElement="_oZXmEfWnEdqea89UKW2qFQ">
          <body>The executions are independent. They may be executed concurrently.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oZXmE_WnEdqea89UKW2qFQ" name="iterative">
        <ownedComment xmi:id="_oZXmFPWnEdqea89UKW2qFQ" annotatedElement="_oZXmE_WnEdqea89UKW2qFQ">
          <body>The executions are dependent and must be executed one at a time, in order of the collection elements.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_oZXmFfWnEdqea89UKW2qFQ" name="stream">
        <ownedComment xmi:id="_oZXmFvWnEdqea89UKW2qFQ" annotatedElement="_oZXmFfWnEdqea89UKW2qFQ">
          <body>A stream of collection elements flows into a single execution, in order of the collection elements.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oZXmF_WnEdqea89UKW2qFQ" name="A_outputElement_regionAsOutput" memberEnd="_oZErCvWnEdqea89UKW2qFQ _oZOcAfWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oZXmGPWnEdqea89UKW2qFQ" name="A_inputElement_regionAsInput" memberEnd="_oZOcBfWnEdqea89UKW2qFQ _oZErDvWnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_oZXmGfWnEdqea89UKW2qFQ" name="A_handler_protectedNode" memberEnd="_oZXl__WnEdqea89UKW2qFQ _oZOcCfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oZXmGvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oZXmG_WnEdqea89UKW2qFQ" name="A_handlerBody_exceptionHandler" memberEnd="_oZXmA_WnEdqea89UKW2qFQ _oZXmHPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oZXmHPWnEdqea89UKW2qFQ" type="_oZXl8PWnEdqea89UKW2qFQ" association="_oZXmG_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oZXmHfWnEdqea89UKW2qFQ" name="A_exceptionInput_exceptionHandler" memberEnd="_oZXmB_WnEdqea89UKW2qFQ _oZXmHvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oZXmHvWnEdqea89UKW2qFQ" type="_oZXl8PWnEdqea89UKW2qFQ" association="_oZXmHfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oZXmH_WnEdqea89UKW2qFQ" name="A_exceptionType_exceptionHandler" memberEnd="_oZXmC_WnEdqea89UKW2qFQ _oZXmIPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oZXmIPWnEdqea89UKW2qFQ" type="_oZXl8PWnEdqea89UKW2qFQ" association="_oZXmH_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DAbfwa69EdqjppZik4kD8A" name="Component">
      <ownedComment xmi:id="_oN5V1PWnEdqea89UKW2qFQ" annotatedElement="_DAbfwa69EdqjppZik4kD8A">
        <body>A component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.</body>
      </ownedComment>
      <ownedComment xmi:id="_oZhW8PWnEdqea89UKW2qFQ" annotatedElement="_DAbfwa69EdqjppZik4kD8A">
        <body>In the namespace of a component, all model elements that are involved in or related to its definition are either owned or imported explicitly. This may include, for example, use cases and dependencies (e.g. mappings), packages, components, and artifacts.</body>
      </ownedComment>
      <generalization xmi:id="_oN5V1fWnEdqea89UKW2qFQ" general="_00owUGvdEdq4DLWZOhbdEA"/>
      <generalization xmi:id="_oZhW8fWnEdqea89UKW2qFQ" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oN5V1_WnEdqea89UKW2qFQ" name="isIndirectlyInstantiated" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oN5V2PWnEdqea89UKW2qFQ" annotatedElement="_oN5V1_WnEdqea89UKW2qFQ">
          <body>The kind of instantiation that applies to a Component. If false, the component is instantiated as an addressable object. If true, the Component is defined at design-time, but at runtime (or execution-time) an object specified by the Component does not exist, that is, the component is instantiated indirectly, through the instantiation of its realizing classifiers or parts. Several standard stereotypes use this meta attribute, e.g. «specification», «focus», «subsystem».</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oN5V2fWnEdqea89UKW2qFQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oN5V2vWnEdqea89UKW2qFQ" name="required" type="_8Ugn8GvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_oOMQsPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oN5V2_WnEdqea89UKW2qFQ" annotatedElement="_oN5V2vWnEdqea89UKW2qFQ">
          <body>The interfaces that the component requires from other components in its environment in order to be able to offer its full set of provided functionality. These interfaces may be Used by the Component or any of its realizingClassifiers, or they may be the Interfaces that are required by its public Ports.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oN5V3PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oN5V3fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oN5V3vWnEdqea89UKW2qFQ" name="provided" type="_8Ugn8GvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_oOMQsvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oN5V3_WnEdqea89UKW2qFQ" annotatedElement="_oN5V3vWnEdqea89UKW2qFQ">
          <body>The interfaces that the component exposes to its environment. These interfaces may be Realized by the Component or any of its realizingClassifiers, or they may be the Interfaces that are provided by its public Ports.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oN5V4PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oN5V4fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oN5V4vWnEdqea89UKW2qFQ" name="realization" type="_oODGzPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oOMQtPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oN5V4_WnEdqea89UKW2qFQ" annotatedElement="_oN5V4vWnEdqea89UKW2qFQ">
          <body>The set of Realizations owned by the Component. Realizations reference the Classifiers of which the Component is an abstraction; i.e., that realize its behavior.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oN5V5PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oN5V5fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZhW8vWnEdqea89UKW2qFQ" name="packagedElement" type="_jKxnwGwLEdq7X4sGURiZYA" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oZhW9vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZhW8_WnEdqea89UKW2qFQ" annotatedElement="_oZhW8vWnEdqea89UKW2qFQ">
          <body>The set of PackageableElements that a Component owns. In the namespace of a component, all model elements that are involved in or related to its definition may be owned or imported explicitly. These may include e.g. Classes, Interfaces, Components, Packages, Use cases, Dependencies (e.g. mappings), and Artifacts.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZhW9PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZhW9fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_IJwKAK69EdqjppZik4kD8A" name="createOwnedClass">
        <ownedParameter xmi:id="_IJwKAa69EdqjppZik4kD8A" type="_00owUGvdEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_IJwKAq69EdqjppZik4kD8A" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_IJwKA669EdqjppZik4kD8A" name="isAbstract" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_IJwKBK69EdqjppZik4kD8A" name="createOwnedEnumeration">
        <ownedParameter xmi:id="_IJwKBa69EdqjppZik4kD8A" type="_I6N3UGwGEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:id="_IJwKBq69EdqjppZik4kD8A" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_IJwKB669EdqjppZik4kD8A" name="createOwnedPrimitiveType">
        <ownedParameter xmi:id="_IJwKCK69EdqjppZik4kD8A" type="_V6vuYGwGEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:id="_IJwKCa69EdqjppZik4kD8A" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_IJwKCq69EdqjppZik4kD8A" name="createOwnedInterface">
        <ownedParameter xmi:id="_IJwKC669EdqjppZik4kD8A" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_IJwKDK69EdqjppZik4kD8A" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oN5V5vWnEdqea89UKW2qFQ" name="realizedInterfaces" isQuery="true" bodyCondition="_oN5V6PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oN5V5_WnEdqea89UKW2qFQ" annotatedElement="_oN5V5vWnEdqea89UKW2qFQ">
          <body>Utility returning the set of realized interfaces of a component:</body>
        </ownedComment>
        <ownedRule xmi:id="_oN5V6PWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oN5V5vWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oN5V6fWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (classifier.clientDependency->&#xA;select(dependency|dependency.oclIsKindOf(Realization) and dependency.supplier.oclIsKindOf(Interface)))->&#xA;collect(dependency|dependency.client)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oN5V6vWnEdqea89UKW2qFQ" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oN5V6_WnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oN5V7PWnEdqea89UKW2qFQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oN5V7fWnEdqea89UKW2qFQ" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oN5V7vWnEdqea89UKW2qFQ" name="usedInterfaces" isQuery="true" bodyCondition="_oN5V8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oN5V7_WnEdqea89UKW2qFQ" annotatedElement="_oN5V7vWnEdqea89UKW2qFQ">
          <body>Utility returning the set of used interfaces of a component:</body>
        </ownedComment>
        <ownedRule xmi:id="_oN5V8PWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oN5V7vWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oN5V8fWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (classifier.supplierDependency->&#xA;select(dependency|dependency.oclIsKindOf(Usage) and dependency.supplier.oclIsKindOf(interface)))->&#xA;collect(dependency|dependency.supplier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oN5V8vWnEdqea89UKW2qFQ" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oN5V8_WnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oN5V9PWnEdqea89UKW2qFQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oN5V9fWnEdqea89UKW2qFQ" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oODGwPWnEdqea89UKW2qFQ" name="required" isQuery="true" bodyCondition="_oODGwfWnEdqea89UKW2qFQ">
        <ownedRule xmi:id="_oODGwfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oODGwPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oODGwvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = let usedInterfaces = UsedInterfaces(self) and&#xD;&#xA;  let realizingClassifierUsedInterfaces = UsedInterfaces(self.realizingClassifier) and&#xD;&#xA;  let typesOfUsedPorts = self.ownedPort.required in&#xD;&#xA;    ((usedInterfaces->union(realizingClassifierUsedInterfaces))->&#xD;&#xA;      union(typesOfUsedPorts))->asSet()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oODGw_WnEdqea89UKW2qFQ" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oODGxPWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oODGxfWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oODGxvWnEdqea89UKW2qFQ" name="provided" isQuery="true" bodyCondition="_oODGx_WnEdqea89UKW2qFQ">
        <ownedRule xmi:id="_oODGx_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oODGxvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oODGyPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = let implementedInterfaces = self.implementation->collect(impl|impl.contract) and&#xD;&#xA;  let realizedInterfaces = RealizedInterfaces(self) and&#xD;&#xA;  let realizingClassifierInterfaces = RealizedInterfaces(self.realizingClassifier) and&#xD;&#xA;  let typesOfRequiredPorts = self.ownedPort.provided in&#xD;&#xA;    (((implementedInterfaces->union(realizedInterfaces)->union(realizingClassifierInterfaces))->&#xD;&#xA;      union(typesOfRequiredPorts))->asSet()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oODGyfWnEdqea89UKW2qFQ" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oODGyvWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oODGy_WnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oZhW9vWnEdqea89UKW2qFQ" name="A_component_packagedElement" memberEnd="_oZhW8vWnEdqea89UKW2qFQ _oZhW-PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oZhW9_WnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oZhW-PWnEdqea89UKW2qFQ" type="_DAbfwa69EdqjppZik4kD8A" association="_oZhW9vWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZhW-fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZhW-vWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oOWBzPWnEdqea89UKW2qFQ" name="Deployment">
      <ownedComment xmi:id="_oOWBzfWnEdqea89UKW2qFQ" annotatedElement="_oOWBzPWnEdqea89UKW2qFQ">
        <body>A deployment is the allocation of an artifact or artifact instance to a deployment target.</body>
      </ownedComment>
      <ownedComment xmi:id="_oZhW-_WnEdqea89UKW2qFQ" annotatedElement="_oOWBzPWnEdqea89UKW2qFQ">
        <body>A component deployment is the deployment of one or more artifacts or artifact instances to a deployment target, optionally parameterized by a deployment specification. Examples are executables and configuration files.</body>
      </ownedComment>
      <generalization xmi:id="_oOWBzvWnEdqea89UKW2qFQ" general="_rEDGkGwKEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oOWBz_WnEdqea89UKW2qFQ" name="deployedArtifact" type="_oOfyx_WnEdqea89UKW2qFQ" subsettedProperty="_oJunfvWnEdqea89UKW2qFQ" association="_oOo8pPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOWB0PWnEdqea89UKW2qFQ" annotatedElement="_oOWBz_WnEdqea89UKW2qFQ">
          <body>The Artifacts that are deployed onto a Node. This association specializes the supplier association.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOWB0fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOWB0vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oOWB0_WnEdqea89UKW2qFQ" name="location" type="_oOfytvWnEdqea89UKW2qFQ" subsettedProperty="_oJungvWnEdqea89UKW2qFQ" association="_oOo8qfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oOWB1PWnEdqea89UKW2qFQ" annotatedElement="_oOWB0_WnEdqea89UKW2qFQ">
          <body>The DeployedTarget which is the target of a Deployment.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOWB1fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oOWB1vWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZhW_PWnEdqea89UKW2qFQ" name="configuration" type="_oZqg4PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oZqg9fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZhW_fWnEdqea89UKW2qFQ" annotatedElement="_oZhW_PWnEdqea89UKW2qFQ">
          <body>The specification of properties that parameterize the deployment and execution of one or more Artifacts. This association is specialized from the ownedMember association.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZhW_vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZhW__WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oZqg4PWnEdqea89UKW2qFQ" name="DeploymentSpecification">
      <ownedComment xmi:id="_oZqg4fWnEdqea89UKW2qFQ" annotatedElement="_oZqg4PWnEdqea89UKW2qFQ">
        <body>A deployment specification specifies a set of properties that determine execution parameters of a component artifact that is deployed on a node. A deployment specification can be aimed at a specific type of container. An artifact that reifies or implements deployment specification properties is a deployment descriptor.</body>
      </ownedComment>
      <ownedRule xmi:id="_oZqg4vWnEdqea89UKW2qFQ" name="deployed_elements" constrainedElement="_oZqg4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZqg4_WnEdqea89UKW2qFQ" annotatedElement="_oZqg4vWnEdqea89UKW2qFQ">
          <body>The deployedElements of a DeploymentTarget that are involved in a Deployment that has an associated Deployment-Specification is a kind of Component (i.e. the configured components).</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZqg5PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.deployment->forAll (d | d.location.deployedElements->forAll (de |&#xD;&#xA;  de.oclIsKindOf(Component)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZqg5fWnEdqea89UKW2qFQ" name="deployment_target" constrainedElement="_oZqg4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZqg5vWnEdqea89UKW2qFQ" annotatedElement="_oZqg5fWnEdqea89UKW2qFQ">
          <body>The DeploymentTarget of a DeploymentSpecification is a kind of ExecutionEnvironment.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZqg5_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>result = self.deployment->forAll (d | d.location..oclIsKindOf(ExecutionEnvironment))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oZqg6PWnEdqea89UKW2qFQ" general="_-lGRgHLzEdqziYxiZo0YtA"/>
      <ownedAttribute xmi:id="_oZqg6fWnEdqea89UKW2qFQ" name="deploymentLocation" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oZqg6vWnEdqea89UKW2qFQ" annotatedElement="_oZqg6fWnEdqea89UKW2qFQ">
          <body>The location where an Artifact is deployed onto a Node. This is typically a 'directory' or 'memory address'.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZqg6_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZqg7PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZqg7fWnEdqea89UKW2qFQ" name="executionLocation" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oZqg7vWnEdqea89UKW2qFQ" annotatedElement="_oZqg7fWnEdqea89UKW2qFQ">
          <body>The location where a component Artifact executes. This may be a local or remote location.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZqg7_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZqg8PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZqg8fWnEdqea89UKW2qFQ" name="deployment" type="_oOWBzPWnEdqea89UKW2qFQ" association="_oZqg9fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZqg8vWnEdqea89UKW2qFQ" annotatedElement="_oZqg8fWnEdqea89UKW2qFQ">
          <body>The deployment with which the DeploymentSpecification is associated.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZqg8_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZqg9PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oZqg9fWnEdqea89UKW2qFQ" name="A_configuration_deployment" memberEnd="_oZhW_PWnEdqea89UKW2qFQ _oZqg8fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oZqg9vWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oZqg-fWnEdqea89UKW2qFQ" name="ProtocolConformance">
      <ownedComment xmi:id="_oZqg-vWnEdqea89UKW2qFQ" annotatedElement="_oZqg-fWnEdqea89UKW2qFQ">
        <body>Protocol state machines can be redefined into more specific protocol state machines, or into behavioral state machines. Protocol conformance declares that the specific protocol state machine specifies a protocol that conforms to the general state machine one, or that the specific behavioral state machine abide by the protocol of the general protocol state machine.</body>
      </ownedComment>
      <generalization xmi:id="_oZqg-_WnEdqea89UKW2qFQ" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:id="_oZqg_PWnEdqea89UKW2qFQ" name="specificMachine" type="_oZ-C4PWnEdqea89UKW2qFQ" subsettedProperty="_oAfL4vWnEdqea89UKW2qFQ _oAfL9fWnEdqea89UKW2qFQ" association="_oaHM1fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZqg_fWnEdqea89UKW2qFQ" annotatedElement="_oZqg_PWnEdqea89UKW2qFQ">
          <body>Specifies the state machine which conforms to the general state machine.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZqg_vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZqg__WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZqhAPWnEdqea89UKW2qFQ" name="generalMachine" type="_oZ-C4PWnEdqea89UKW2qFQ" subsettedProperty="_oAfL5vWnEdqea89UKW2qFQ" association="_oaHM5_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZqhAfWnEdqea89UKW2qFQ" annotatedElement="_oZqhAPWnEdqea89UKW2qFQ">
          <body>Specifies the protocol state machine to which the specific state machine conforms.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZqhAvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZqhA_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_8Ugn8GvtEdqG6fBIPwe-mw" name="Interface">
      <ownedComment xmi:id="_oJ3xd_WnEdqea89UKW2qFQ" annotatedElement="_8Ugn8GvtEdqG6fBIPwe-mw">
        <body>An interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. An interface specifies a contract; any instance of a classifier that realizes the interface must fulfill that contract. The obligations that may be associated with an interface are in the form of various kinds of constraints (such as pre- and post-conditions) or protocol specifications, which may impose ordering restrictions on interactions through the interface.</body>
      </ownedComment>
      <ownedComment xmi:id="_oMtDEfWnEdqea89UKW2qFQ" annotatedElement="_8Ugn8GvtEdqG6fBIPwe-mw">
        <body>Interfaces may include receptions (in addition to operations).</body>
      </ownedComment>
      <ownedComment xmi:id="_oZqhBPWnEdqea89UKW2qFQ" annotatedElement="_8Ugn8GvtEdqG6fBIPwe-mw">
        <body>Since an interface specifies conformance characteristics, it does not own detailed behavior specifications. Instead, interfaces may own a protocol state machine that specifies event sequences and pre/post conditions for the operations and receptions described by the interface.</body>
      </ownedComment>
      <ownedRule xmi:id="_oJ3xePWnEdqea89UKW2qFQ" name="visibility" constrainedElement="_8Ugn8GvtEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oJ3xefWnEdqea89UKW2qFQ" annotatedElement="_oJ3xePWnEdqea89UKW2qFQ">
          <body>The visibility of all features owned by an interface must be public.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKBiYPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.feature->forAll(f | f.visibility = #public)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oKBiYfWnEdqea89UKW2qFQ" general="_6UV2QGwJEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oKBiYvWnEdqea89UKW2qFQ" name="ownedAttribute" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oACf8vWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oKBihvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKBiY_WnEdqea89UKW2qFQ" annotatedElement="_oKBiYvWnEdqea89UKW2qFQ">
          <body>The attributes (i.e. the properties) owned by the class.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKBiZPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKBiZfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKBiZvWnEdqea89UKW2qFQ" name="ownedOperation" type="_M4X2IGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oAMQ8PWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oKBijPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKBiZ_WnEdqea89UKW2qFQ" annotatedElement="_oKBiZvWnEdqea89UKW2qFQ">
          <body>The operations owned by the class.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKBiaPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKBiafWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKBiavWnEdqea89UKW2qFQ" name="nestedClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" isOrdered="true" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oKKsWPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKBia_WnEdqea89UKW2qFQ" annotatedElement="_oKBiavWnEdqea89UKW2qFQ">
          <body>References all the Classifiers that are defined (nested) within the Class.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKBibPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKBibfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKBibvWnEdqea89UKW2qFQ" name="redefinedInterface" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oKKsXvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKBib_WnEdqea89UKW2qFQ" annotatedElement="_oKBibvWnEdqea89UKW2qFQ">
          <body>References all the Interfaces redefined by this Interface.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKBicPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKBicfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMtDEvWnEdqea89UKW2qFQ" name="ownedReception" type="_oM2z8PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAMQ8PWnEdqea89UKW2qFQ _oAyG4fWnEdqea89UKW2qFQ" association="_oM_99PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMtDE_WnEdqea89UKW2qFQ" annotatedElement="_oMtDEvWnEdqea89UKW2qFQ">
          <body>Receptions that objects providing this interface are willing to accept.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMtDFPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMtDFfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZqhBfWnEdqea89UKW2qFQ" name="protocol" type="_oZ-C4PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oaHM4fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZqhBvWnEdqea89UKW2qFQ" annotatedElement="_oZqhBfWnEdqea89UKW2qFQ">
          <body>References a protocol state machine specifying the legal sequences of the invocation of the behavioral features described in the interface.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZqhB_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZqhCPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_FzLo0HL0EdqziYxiZo0YtA" name="createOwnedOperation">
        <ownedComment xmi:id="_59cM8OwgEdqYHf-imTcTdw" annotatedElement="_FzLo0HL0EdqziYxiZo0YtA">
          <body>Creates an operation with the specified name, parameter names, parameter types, and return type (or null) as an owned operation of this interface.</body>
        </ownedComment>
        <ownedParameter xmi:id="_FzLo0XL0EdqziYxiZo0YtA" type="_M4X2IGveEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_FzLo0nL0EdqziYxiZo0YtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7NjlYaOwEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7NjlYKOwEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_FzLo1HL0EdqziYxiZo0YtA" name="parameterNames" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FzLo1XL0EdqziYxiZo0YtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FzLo1nL0EdqziYxiZo0YtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_FzLo13L0EdqziYxiZo0YtA" name="parameterTypes" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FzLo2HL0EdqziYxiZo0YtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FzLo2XL0EdqziYxiZo0YtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_FzLo03L0EdqziYxiZo0YtA" name="returnType" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__G_8IaOwEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="__G_8IKOwEdqi_5gqUMOQtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_XUC3gHL0EdqziYxiZo0YtA" name="createOwnedAttribute">
        <ownedComment xmi:id="_-2N5wOwgEdqYHf-imTcTdw" annotatedElement="_XUC3gHL0EdqziYxiZo0YtA">
          <body>Creates a property with the specified name, type, lower bound, and upper bound as an owned attribute of this interface.</body>
        </ownedComment>
        <ownedParameter xmi:id="_XUC3gXL0EdqziYxiZo0YtA" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_XUC3gnL0EdqziYxiZo0YtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EKqDQaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EKqDQKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_XUC3g3L0EdqziYxiZo0YtA" name="type" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IuRYYaOxEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_IuRYYKOxEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_XUC3hHL0EdqziYxiZo0YtA" name="lower" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_XUC3hXL0EdqziYxiZo0YtA" name="upper" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZAuvEGveEdq4DLWZOhbdEA" name="Port">
      <ownedComment xmi:id="_oNvkwPWnEdqea89UKW2qFQ" annotatedElement="_ZAuvEGveEdq4DLWZOhbdEA">
        <body>A port is a property of a classifier that specifies a distinct interaction point between that classifier and its environment or between the (behavior of the) classifier and its internal parts. Ports are connected to properties of the classifier by connectors through which requests can be made to invoke the behavioral features of a classifier. A Port may specify the services a classifier provides (offers) to its environment as well as the services that a classifier expects (requires) of its environment.</body>
      </ownedComment>
      <ownedComment xmi:id="_oZqhCfWnEdqea89UKW2qFQ" annotatedElement="_ZAuvEGveEdq4DLWZOhbdEA">
        <body>A port has an associated protocol state machine.</body>
      </ownedComment>
      <ownedRule xmi:id="_oNvkwfWnEdqea89UKW2qFQ" name="required_interfaces" constrainedElement="_ZAuvEGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oNvkwvWnEdqea89UKW2qFQ" annotatedElement="_oNvkwfWnEdqea89UKW2qFQ">
          <body>The required interfaces of a port must be provided by elements to which the port is connected.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNvkw_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNvkxPWnEdqea89UKW2qFQ" name="port_aggregation" constrainedElement="_ZAuvEGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oNvkxfWnEdqea89UKW2qFQ" annotatedElement="_oNvkxPWnEdqea89UKW2qFQ">
          <body>Port.aggregation must be composite.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNvkxvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNvkx_WnEdqea89UKW2qFQ" name="port_destroyed" constrainedElement="_ZAuvEGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oNvkyPWnEdqea89UKW2qFQ" annotatedElement="_oNvkx_WnEdqea89UKW2qFQ">
          <body>When a port is destroyed, all connectors attached to this port will be destroyed also.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNvkyfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNvkyvWnEdqea89UKW2qFQ" name="default_value" constrainedElement="_ZAuvEGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oNvky_WnEdqea89UKW2qFQ" annotatedElement="_oNvkyvWnEdqea89UKW2qFQ">
          <body>A defaultValue for port cannot be specified when the type of the Port is an Interface</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNvkzPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oNvkzfWnEdqea89UKW2qFQ" general="_Jp_1oGveEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oNvkzvWnEdqea89UKW2qFQ" name="isBehavior" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oNvkz_WnEdqea89UKW2qFQ" annotatedElement="_oNvkzvWnEdqea89UKW2qFQ">
          <body>Specifies whether requests arriving at this port are sent to the classifier behavior of this classifier. Such ports are referred to as behavior port. Any invocation of a behavioral feature targeted at a behavior port will be handled by the instance of the owning classifier itself, rather than by any instances that this classifier may contain.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oNvk0PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNvk0fWnEdqea89UKW2qFQ" name="isService" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oNvk0vWnEdqea89UKW2qFQ" annotatedElement="_oNvk0fWnEdqea89UKW2qFQ">
          <body>If true indicates that this port is used to provide the published functionality of a classifier; if false, this port is used to implement the classifier but is not part of the essential externally-visible functionality of the classifier and can, therefore, be altered or deleted along with the internal implementation of the classifier and other properties that are considered part of its implementation.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oNvk0_WnEdqea89UKW2qFQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNvk1PWnEdqea89UKW2qFQ" name="required" type="_8Ugn8GvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_oN5VwPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNvk1fWnEdqea89UKW2qFQ" annotatedElement="_oNvk1PWnEdqea89UKW2qFQ">
          <body>References the interfaces specifying the set of operations and receptions which the classifier expects its environment to handle. This association is derived as the set of interfaces required by the type of the port or its supertypes.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNvk1vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNvk1_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNvk2PWnEdqea89UKW2qFQ" name="redefinedPort" type="_ZAuvEGveEdq4DLWZOhbdEA" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oN5VxPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNvk2fWnEdqea89UKW2qFQ" annotatedElement="_oNvk2PWnEdqea89UKW2qFQ">
          <body>A port may be redefined when its containing classifier is specialized. The redefining port may have additional interfaces to those that are associated with the redefined port or it may replace an interface by one of its subtypes.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNvk2vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNvk2_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oNvk3PWnEdqea89UKW2qFQ" name="provided" type="_8Ugn8GvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" association="_oN5VyfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oNvk3fWnEdqea89UKW2qFQ" annotatedElement="_oNvk3PWnEdqea89UKW2qFQ">
          <body>References the interfaces specifying the set of operations and receptions which the classifier offers to its environment, and which it will handle either directly or by forwarding it to a part of its internal structure. This association is derived from the interfaces realized by the type of the port or by the type of the port, if the port was typed by an interface.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNvk3vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oNvk3_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZqhCvWnEdqea89UKW2qFQ" name="protocol" type="_oZ-C4PWnEdqea89UKW2qFQ" association="_oaHM2PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZqhC_WnEdqea89UKW2qFQ" annotatedElement="_oZqhCvWnEdqea89UKW2qFQ">
          <body>References an optional protocol state machine which describes valid interactions at this interaction point.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZqhDPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZqhDfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_gtr8cFYhEdqB6vblk3tuMA" name="getProvideds" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_jIqKEFYhEdqB6vblk3tuMA" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k2x4wVYhEdqB6vblk3tuMA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k2x4wFYhEdqB6vblk3tuMA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mxt7cFYhEdqB6vblk3tuMA" name="getRequireds" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_osMrIFYhEdqB6vblk3tuMA" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pyY3IVYhEdqB6vblk3tuMA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pyY3IFYhEdqB6vblk3tuMA"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oZ0R4PWnEdqea89UKW2qFQ" name="ProtocolTransition">
      <ownedComment xmi:id="_oZ0R4fWnEdqea89UKW2qFQ" annotatedElement="_oZ0R4PWnEdqea89UKW2qFQ">
        <body>A protocol transition specifies a legal transition for an operation. Transitions of protocol state machines have the following information: a pre condition (guard), on trigger, and a post condition. Every protocol transition is associated to zero or one operation (referred BehavioralFeature) that belongs to the context classifier of the protocol state machine.</body>
      </ownedComment>
      <ownedRule xmi:id="_oZ0R4vWnEdqea89UKW2qFQ" name="belongs_to_psm" constrainedElement="_oZ0R4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ0R4_WnEdqea89UKW2qFQ" annotatedElement="_oZ0R4vWnEdqea89UKW2qFQ">
          <body>A protocol transition always belongs to a protocol state machine.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZ0R5PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>container.belongsToPSM()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZ0R5fWnEdqea89UKW2qFQ" name="associated_actions" constrainedElement="_oZ0R4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ0R5vWnEdqea89UKW2qFQ" annotatedElement="_oZ0R5fWnEdqea89UKW2qFQ">
          <body>A protocol transition never has associated actions.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZ0R5_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>effect->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZ0R6PWnEdqea89UKW2qFQ" name="refers_to_operation" constrainedElement="_oZ0R4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ0R6fWnEdqea89UKW2qFQ" annotatedElement="_oZ0R6PWnEdqea89UKW2qFQ">
          <body>If a protocol transition refers to an operation (i. e. has a call trigger corresponding to an operation), then that operation should apply to the context classifier of the state machine of the protocol transition.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZ0R6vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oZ0R6_WnEdqea89UKW2qFQ" general="_oS9b8PWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oZ0R7PWnEdqea89UKW2qFQ" name="postCondition" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG6fWnEdqea89UKW2qFQ" association="_oaHM3PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ0R7fWnEdqea89UKW2qFQ" annotatedElement="_oZ0R7PWnEdqea89UKW2qFQ">
          <body>Specifies the post condition of the transition which is the condition that should be obtained once the transition is triggered. This post condition is part of the post condition of the operation connected to the transition.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZ0R7vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZ0R7_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZ0R8PWnEdqea89UKW2qFQ" name="referred" type="_M4X2IGveEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" association="_oaQ90PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ0R8fWnEdqea89UKW2qFQ" annotatedElement="_oZ0R8PWnEdqea89UKW2qFQ">
          <body>This association refers to the associated operation. It is derived from the operation of the call trigger when applicable.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZ0R8vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZ0R8_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oZ0R9PWnEdqea89UKW2qFQ" name="preCondition" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oS9cHPWnEdqea89UKW2qFQ" association="_oaQ91PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ0R9fWnEdqea89UKW2qFQ" annotatedElement="_oZ0R9PWnEdqea89UKW2qFQ">
          <body>Specifies the precondition of the transition. It specifies the condition that should be verified before triggering the transition. This guard condition added to the source state will be evaluated as part of the precondition of the operation referred by the transition if any.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZ0R9vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZ0R9_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oZ-C4PWnEdqea89UKW2qFQ" name="ProtocolStateMachine">
      <ownedComment xmi:id="_oZ-C4fWnEdqea89UKW2qFQ" annotatedElement="_oZ-C4PWnEdqea89UKW2qFQ">
        <body>A protocol state machine is always defined in the context of a classifier. It specifies which operations of the classifier can be called in which state and under which condition, thus specifying the allowed call sequences on the classifier's operations. A protocol state machine presents the possible and permitted transitions on the instances of its context classifier, together with the operations which carry the transitions. In this manner, an instance lifecycle can be created for a classifier, by specifying the order in which the operations can be activated and the states through which an instance progresses during its existence.</body>
      </ownedComment>
      <ownedRule xmi:id="_oZ-C4vWnEdqea89UKW2qFQ" name="classifier_context" constrainedElement="_oZ-C4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ-C4_WnEdqea89UKW2qFQ" annotatedElement="_oZ-C4vWnEdqea89UKW2qFQ">
          <body>A protocol state machine must only have a classifier context, not a behavioral feature context.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZ-C5PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(not context->isEmpty( )) and specification->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZ-C5fWnEdqea89UKW2qFQ" name="protocol_transitions" constrainedElement="_oZ-C4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ-C5vWnEdqea89UKW2qFQ" annotatedElement="_oZ-C5fWnEdqea89UKW2qFQ">
          <body>All transitions of a protocol state machine must be protocol transitions. (transitions as extended by the ProtocolStateMachines package)</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZ-C5_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>region->forAll(r | r.transition->forAll(t | t.oclIsTypeOf(ProtocolTransition)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZ-C6PWnEdqea89UKW2qFQ" name="entry_exit_do" constrainedElement="_oZ-C4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ-C6fWnEdqea89UKW2qFQ" annotatedElement="_oZ-C6PWnEdqea89UKW2qFQ">
          <body>The states of a protocol state machine cannot have entry, exit, or do activity actions.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZ-C6vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>region->forAll(r | r.subvertex->forAll(v | v.oclIsKindOf(State) implies&#xA;(v.entry->isEmpty() and v.exit->isEmpty() and v.doActivity->isEmpty())))&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZ-C6_WnEdqea89UKW2qFQ" name="deep_or_shallow_history" constrainedElement="_oZ-C4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ-C7PWnEdqea89UKW2qFQ" annotatedElement="_oZ-C6_WnEdqea89UKW2qFQ">
          <body>Protocol state machines cannot have deep or shallow history pseudostates.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZ-C7fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>region->forAll (r | r.subvertex->forAll (v | v.oclIsKindOf(Psuedostate) implies&#xA;((v.kind &lt;> #deepHistory) and (v.kind &lt;> #shallowHistory)))))&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZ-C7vWnEdqea89UKW2qFQ" name="ports_connected" constrainedElement="_oZ-C4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ-C7_WnEdqea89UKW2qFQ" annotatedElement="_oZ-C7vWnEdqea89UKW2qFQ">
          <body>If two ports are connected, then the protocol state machine of the required interface (if defined) must be conformant to the protocol state machine of the provided interface (if defined).</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZ-C8PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oZ-C8fWnEdqea89UKW2qFQ" general="_oSXmEPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oZ-C8vWnEdqea89UKW2qFQ" name="conformance" type="_oZqg-fWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oaHM1fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oZ-C8_WnEdqea89UKW2qFQ" annotatedElement="_oZ-C8vWnEdqea89UKW2qFQ">
          <body>Conformance between protocol state machines.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZ-C9PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZ-C9fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oSqhAPWnEdqea89UKW2qFQ" name="State">
      <ownedComment xmi:id="_oSqhAfWnEdqea89UKW2qFQ" annotatedElement="_oSqhAPWnEdqea89UKW2qFQ">
        <body>A state models a situation during which some (usually implicit) invariant condition holds.</body>
      </ownedComment>
      <ownedComment xmi:id="_oZ-C9vWnEdqea89UKW2qFQ" annotatedElement="_oSqhAPWnEdqea89UKW2qFQ">
        <body>The states of protocol state machines are exposed to the users of their context classifiers. A protocol state represents an exposed stable situation of its context classifier: when an instance of the classifier is not processing any operation, users of this instance can always know its state configuration.</body>
      </ownedComment>
      <ownedRule xmi:id="_oSqhAvWnEdqea89UKW2qFQ" name="submachine_states" constrainedElement="_oSqhAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhA_WnEdqea89UKW2qFQ" annotatedElement="_oSqhAvWnEdqea89UKW2qFQ">
          <body>Only submachine states can have connection point references.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhBPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>isSubmachineState implies connection->notEmpty ( )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oSqhBfWnEdqea89UKW2qFQ" name="destinations_or_sources_of_transitions" constrainedElement="_oSqhAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhBvWnEdqea89UKW2qFQ" annotatedElement="_oSqhBfWnEdqea89UKW2qFQ">
          <body>The connection point references used as destinations/sources of transitions associated with a submachine state must be defined as entry/exit points in the submachine state machine.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhB_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.isSubmachineState implies (self.connection->forAll (cp |&#xD;&#xA;cp.entry->forAll (p | p.statemachine = self.submachine) and&#xD;&#xA;cp.exit->forAll (p | p.statemachine = self.submachine)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oSqhCPWnEdqea89UKW2qFQ" name="submachine_or_regions" constrainedElement="_oSqhAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhCfWnEdqea89UKW2qFQ" annotatedElement="_oSqhCPWnEdqea89UKW2qFQ">
          <body>A state is not allowed to have both a submachine and regions.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhCvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>isComposite implies not isSubmachineState</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oSqhC_WnEdqea89UKW2qFQ" name="composite_states" constrainedElement="_oSqhAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhDPWnEdqea89UKW2qFQ" annotatedElement="_oSqhC_WnEdqea89UKW2qFQ">
          <body>Only composite states can have entry or exit pseudostates defined.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhDfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>connectionPoint->notEmpty() implies isComoposite</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oSqhDvWnEdqea89UKW2qFQ" name="entry_or_exit" constrainedElement="_oSqhAPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhD_WnEdqea89UKW2qFQ" annotatedElement="_oSqhDvWnEdqea89UKW2qFQ">
          <body>Only entry or exit pseudostates can serve as connection points.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhEPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>connectionPoint->forAll(cp|cp.kind = #entry or cp.kind = #exit)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oSqhEfWnEdqea89UKW2qFQ" general="_oS9cPvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oSqhEvWnEdqea89UKW2qFQ" general="_oA731vWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oSqhE_WnEdqea89UKW2qFQ" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oSqhFPWnEdqea89UKW2qFQ" name="isComposite" type="_UdivYGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="_oSqhFfWnEdqea89UKW2qFQ" annotatedElement="_oSqhFPWnEdqea89UKW2qFQ">
          <body>A state with isComposite=true is said to be a composite state. A composite state is a state that contains at least one region.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oSqhFvWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhF_WnEdqea89UKW2qFQ" name="isOrthogonal" type="_UdivYGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="_oSqhGPWnEdqea89UKW2qFQ" annotatedElement="_oSqhF_WnEdqea89UKW2qFQ">
          <body>A state with isOrthogonal=true is said to be an orthogonal composite state. An orthogonal composite state contains two or more regions.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oSqhGfWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhGvWnEdqea89UKW2qFQ" name="isSimple" type="_UdivYGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="_oSqhG_WnEdqea89UKW2qFQ" annotatedElement="_oSqhGvWnEdqea89UKW2qFQ">
          <body>A state with isSimple=true is said to be a simple state. A simple state does not have any regions and it does not refer to any submachine state machine.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oSqhHPWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhHfWnEdqea89UKW2qFQ" name="isSubmachineState" type="_UdivYGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="_oSqhHvWnEdqea89UKW2qFQ" annotatedElement="_oSqhHfWnEdqea89UKW2qFQ">
          <body>A state with isSubmachineState=true is said to be a submachine state. Such a state refers to a state machine (submachine).</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oSqhH_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhIPWnEdqea89UKW2qFQ" name="submachine" type="_oSXmEPWnEdqea89UKW2qFQ" association="_oTj49PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhIfWnEdqea89UKW2qFQ" annotatedElement="_oSqhIPWnEdqea89UKW2qFQ">
          <body>The state machine that is to be inserted in place of the (submachine) state.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSqhIvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSqhI_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhJPWnEdqea89UKW2qFQ" name="connection" type="_oTQ98PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oTj4-fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhJfWnEdqea89UKW2qFQ" annotatedElement="_oSqhJPWnEdqea89UKW2qFQ">
          <body>The entry and exit connection points used in conjunction with this (submachine) state, i.e. as targets and sources, respectively, in the region with the submachine state. A connection point reference references the corresponding definition of a connection point pseudostate in the statemachine referenced by the submachinestate.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSqhJvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSqhJ_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhKPWnEdqea89UKW2qFQ" name="redefinedState" type="_oSqhAPWnEdqea89UKW2qFQ" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oTj4-_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhKfWnEdqea89UKW2qFQ" annotatedElement="_oSqhKPWnEdqea89UKW2qFQ">
          <body>The state of which this state is a redefinition.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSqhKvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSqhK_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhLPWnEdqea89UKW2qFQ" name="region" type="_oTaH4PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oTtC2PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhLfWnEdqea89UKW2qFQ" annotatedElement="_oSqhLPWnEdqea89UKW2qFQ">
          <body>The regions owned directly by the state.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSqhLvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSqhL_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhMPWnEdqea89UKW2qFQ" name="redefinitionContext" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" redefinedProperty="_oA733_WnEdqea89UKW2qFQ" association="_oT2z0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhMfWnEdqea89UKW2qFQ" annotatedElement="_oSqhMPWnEdqea89UKW2qFQ">
          <body>References the classifier in which context this element may be redefined.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSqhMvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSqhM_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhNPWnEdqea89UKW2qFQ" name="stateInvariant" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oT2z2vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhNfWnEdqea89UKW2qFQ" annotatedElement="_oSqhNPWnEdqea89UKW2qFQ">
          <body>Specifies conditions that are always true when this state is the current state. In protocol state machines, state invariants are additional conditions to the preconditions of the outgoing transitions, and to the postcondition of the incoming transitions.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSqhNvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSqhN_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhOPWnEdqea89UKW2qFQ" name="entry" type="_TUPtYGveEdq4DLWZOhbdEA" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oT2z5PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhOfWnEdqea89UKW2qFQ" annotatedElement="_oSqhOPWnEdqea89UKW2qFQ">
          <body>An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any internal behavior or transitions performed within the state.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSqhOvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSqhO_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhPPWnEdqea89UKW2qFQ" name="exit" type="_TUPtYGveEdq4DLWZOhbdEA" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oT2z6fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhPfWnEdqea89UKW2qFQ" annotatedElement="_oSqhPPWnEdqea89UKW2qFQ">
          <body>An optional behavior that is executed whenever this state is exited regardless of which transition was taken out of the state. If defined, exit actions are always executed to completion only after all internal activities and transition actions have completed execution.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSqhPvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSqhP_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhQPWnEdqea89UKW2qFQ" name="doActivity" type="_TUPtYGveEdq4DLWZOhbdEA" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oT2z7vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhQfWnEdqea89UKW2qFQ" annotatedElement="_oSqhQPWnEdqea89UKW2qFQ">
          <body>An optional behavior that is executed while being in the state. The execution starts when this state is entered, and stops either by itself, or when the state is exited, whichever comes first.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSqhQvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSqhQ_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhRPWnEdqea89UKW2qFQ" name="connectionPoint" type="_oTHM8PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oT2z8_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhRfWnEdqea89UKW2qFQ" annotatedElement="_oSqhRPWnEdqea89UKW2qFQ">
          <body>The entry and exit pseudostates of a composite state. These can only be entry or exit Pseudostates, and they must have different names. They can only be defined for composite states.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSqhRvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSqhR_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oSqhSPWnEdqea89UKW2qFQ" name="deferrableTrigger" type="_oMtDCvWnEdqea89UKW2qFQ" aggregation="composite" association="_oUAk1PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhSfWnEdqea89UKW2qFQ" annotatedElement="_oSqhSPWnEdqea89UKW2qFQ">
          <body>A list of triggers that are candidates to be retained by the state machine if they trigger no transitions out of the state (not consumed). A deferred trigger is retained until the state machine reaches a state configuration where it is no longer deferred.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSqhSvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oSqhS_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oSqhTPWnEdqea89UKW2qFQ" name="isSimple" isQuery="true" bodyCondition="_oSqhTvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhTfWnEdqea89UKW2qFQ" annotatedElement="_oSqhTPWnEdqea89UKW2qFQ">
          <body>A simple state is a state without any regions.</body>
        </ownedComment>
        <ownedRule xmi:id="_oSqhTvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSqhTPWnEdqea89UKW2qFQ _oSqhGvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhT_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = region.isEmpty()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSqhUPWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oSqhUfWnEdqea89UKW2qFQ" name="isComposite" isQuery="true" bodyCondition="_oSqhU_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhUvWnEdqea89UKW2qFQ" annotatedElement="_oSqhUfWnEdqea89UKW2qFQ">
          <body>A composite state is a state with at least one region.</body>
        </ownedComment>
        <ownedRule xmi:id="_oSqhU_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSqhUfWnEdqea89UKW2qFQ _oSqhFPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhVPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = region.notEmpty()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSqhVfWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oSqhVvWnEdqea89UKW2qFQ" name="isOrthogonal" isQuery="true" bodyCondition="_oSqhWPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhV_WnEdqea89UKW2qFQ" annotatedElement="_oSqhVvWnEdqea89UKW2qFQ">
          <body>An orthogonal state is a composite state with at least 2 regions</body>
        </ownedComment>
        <ownedRule xmi:id="_oSqhWPWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSqhVvWnEdqea89UKW2qFQ _oSqhF_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhWfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (region->size () > 1)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSqhWvWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oSqhW_WnEdqea89UKW2qFQ" name="isSubmachineState" isQuery="true" bodyCondition="_oSqhXfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhXPWnEdqea89UKW2qFQ" annotatedElement="_oSqhW_WnEdqea89UKW2qFQ">
          <body>Only submachine states can have a reference statemachine.</body>
        </ownedComment>
        <ownedRule xmi:id="_oSqhXfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSqhW_WnEdqea89UKW2qFQ _oSqhHfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhXvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = submachine.notEmpty()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSqhX_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oSqhYPWnEdqea89UKW2qFQ" name="redefinitionContext" isQuery="true" bodyCondition="_oSqhYvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhYfWnEdqea89UKW2qFQ" annotatedElement="_oSqhYPWnEdqea89UKW2qFQ">
          <body>The redefinition context of a state is the nearest containing statemachine.</body>
        </ownedComment>
        <ownedRule xmi:id="_oSqhYvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSqhYPWnEdqea89UKW2qFQ _oSqhMPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhY_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = let sm = containingStateMachine() in&#xA;if sm.context->isEmpty() or sm.general->notEmpty() then&#xA;sm&#xA;else&#xA;sm.context&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSqhZPWnEdqea89UKW2qFQ" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oSqhZfWnEdqea89UKW2qFQ" name="isRedefinitionContextValid" isQuery="true" redefinedOperation="_oA737fWnEdqea89UKW2qFQ" bodyCondition="_oSqhZ_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhZvWnEdqea89UKW2qFQ" annotatedElement="_oSqhZfWnEdqea89UKW2qFQ">
          <body>The query isRedefinitionContextValid() specifies whether the redefinition contexts of a state are properly related to the redefinition contexts of the specified state to allow this element to redefine the other. The containing region of a redefining state must redefine the containing region of the redefined state.</body>
        </ownedComment>
        <ownedRule xmi:id="_oSqhZ_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSqhZfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhaPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSqhafWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oSqhavWnEdqea89UKW2qFQ" name="redefined" type="_oSqhAPWnEdqea89UKW2qFQ" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oSqha_WnEdqea89UKW2qFQ" name="isConsistentWith" isQuery="true" redefinedOperation="_oA735_WnEdqea89UKW2qFQ" bodyCondition="_oSqhbfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhbPWnEdqea89UKW2qFQ" annotatedElement="_oSqha_WnEdqea89UKW2qFQ">
          <body>The query isConsistentWith() specifies that a redefining state is consistent with a redefined state provided that the redefining state is an extension of the redefined state: A simple state can be redefined (extended) to become a composite state (by adding a region) and a composite state can be redefined (extended) by adding regions and by adding vertices, states, and transitions to inherited regions. All states may add or replace entry, exit, and 'doActivity' actions.</body>
        </ownedComment>
        <ownedRule xmi:id="_oSqhbfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSqha_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhbvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSqhb_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oSqhcPWnEdqea89UKW2qFQ" name="redefinee" type="_oA731vWnEdqea89UKW2qFQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oSqhcfWnEdqea89UKW2qFQ" name="containingStateMachine" isQuery="true" redefinedOperation="_oS9cTfWnEdqea89UKW2qFQ" bodyCondition="_oSqhc_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oSqhcvWnEdqea89UKW2qFQ" annotatedElement="_oSqhcfWnEdqea89UKW2qFQ">
          <body>The query containingStateMachine() returns the state machine that contains the state either directly or transitively.</body>
        </ownedComment>
        <ownedRule xmi:id="_oSqhc_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oSqhcfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSqhdPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = container.containingStateMachine()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSqhdfWnEdqea89UKW2qFQ" type="_oSXmEPWnEdqea89UKW2qFQ" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oTaH4PWnEdqea89UKW2qFQ" name="Region">
      <ownedComment xmi:id="_oTaH4fWnEdqea89UKW2qFQ" annotatedElement="_oTaH4PWnEdqea89UKW2qFQ">
        <body>A region is an orthogonal part of either a composite state or a state machine. It contains states and transitions.</body>
      </ownedComment>
      <ownedRule xmi:id="_oTaH4vWnEdqea89UKW2qFQ" name="initial_vertex" constrainedElement="_oTaH4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaH4_WnEdqea89UKW2qFQ" annotatedElement="_oTaH4vWnEdqea89UKW2qFQ">
          <body>A region can have at most one initial vertex</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTaH5PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.subvertex->select (v | v.oclIsKindOf(Pseudostate))->&#xA;select(p : Pseudostate | p.kind = #initial)->size() &lt;= 1&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTaH5fWnEdqea89UKW2qFQ" name="deep_history_vertex" constrainedElement="_oTaH4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaH5vWnEdqea89UKW2qFQ" annotatedElement="_oTaH5fWnEdqea89UKW2qFQ">
          <body>A region can have at most one deep history vertex</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTaH5_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.subvertex->select (v | v.oclIsKindOf(Pseudostate))->&#xA;select(p : Pseudostate | p.kind = #deepHistory)->size() &lt;= 1&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTaH6PWnEdqea89UKW2qFQ" name="shallow_history_vertex" constrainedElement="_oTaH4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaH6fWnEdqea89UKW2qFQ" annotatedElement="_oTaH6PWnEdqea89UKW2qFQ">
          <body>A region can have at most one shallow history vertex</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTaH6vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.subvertex->select(v | v.oclIsKindOf(Pseudostate))->&#xA;select(p : Pseudostate | p.kind = #shallowHistory)->size() &lt;= 1&#xA;</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTaH6_WnEdqea89UKW2qFQ" name="owned" constrainedElement="_oTaH4PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaH7PWnEdqea89UKW2qFQ" annotatedElement="_oTaH6_WnEdqea89UKW2qFQ">
          <body>If a Region is owned by a StateMachine, then it cannot also be owned by a State and vice versa.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTaH7fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(stateMachine->notEmpty() implies state->isEmpty()) and (state->notEmpty() implies stateMachine->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oTaH7vWnEdqea89UKW2qFQ" general="_oA731vWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oTaH7_WnEdqea89UKW2qFQ" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oTaH8PWnEdqea89UKW2qFQ" name="subvertex" type="_oS9cPvWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oTj47vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaH8fWnEdqea89UKW2qFQ" annotatedElement="_oTaH8PWnEdqea89UKW2qFQ">
          <body>The set of vertices that are owned by this region.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTaH8vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTaH8_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oTaH9PWnEdqea89UKW2qFQ" name="transition" type="_oS9b8PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oTj48PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaH9fWnEdqea89UKW2qFQ" annotatedElement="_oTaH9PWnEdqea89UKW2qFQ">
          <body>The set of transitions owned by the region. Note that internal transitions are owned by a region, but applies to the source state.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTaH9vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTaH9_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oTaH-PWnEdqea89UKW2qFQ" name="stateMachine" type="_oSXmEPWnEdqea89UKW2qFQ" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oTtC1PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaH-fWnEdqea89UKW2qFQ" annotatedElement="_oTaH-PWnEdqea89UKW2qFQ">
          <body>The StateMachine that owns the Region. If a Region is owned by a StateMachine, then it cannot also be owned by a State.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTaH-vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTaH-_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oTaH_PWnEdqea89UKW2qFQ" name="state" type="_oSqhAPWnEdqea89UKW2qFQ" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oTtC2PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaH_fWnEdqea89UKW2qFQ" annotatedElement="_oTaH_PWnEdqea89UKW2qFQ">
          <body>The State that owns the Region. If a Region is owned by a State, then it cannot also be owned by a StateMachine.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTaH_vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTaH__WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oTaIAPWnEdqea89UKW2qFQ" name="extendedRegion" type="_oTaH4PWnEdqea89UKW2qFQ" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oTtC2vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaIAfWnEdqea89UKW2qFQ" annotatedElement="_oTaIAPWnEdqea89UKW2qFQ">
          <body>The region of which this region is an extension.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTaIAvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTaIA_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oTaIBPWnEdqea89UKW2qFQ" name="redefinitionContext" type="_6UV2QGwJEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" redefinedProperty="_oA733_WnEdqea89UKW2qFQ" association="_oTtC6fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaIBfWnEdqea89UKW2qFQ" annotatedElement="_oTaIBPWnEdqea89UKW2qFQ">
          <body>References the classifier in which context this element may be redefined.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTaIBvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oTaIB_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oTaICPWnEdqea89UKW2qFQ" name="redefinitionContext" isQuery="true" bodyCondition="_oTaICvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaICfWnEdqea89UKW2qFQ" annotatedElement="_oTaICPWnEdqea89UKW2qFQ">
          <body>The redefinition context of a region is the nearest containing statemachine</body>
        </ownedComment>
        <ownedRule xmi:id="_oTaICvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oTaICPWnEdqea89UKW2qFQ _oTaIBPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTaIC_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = let sm = containingStateMachine() in&#xA;if sm.context->isEmpty() or sm.general->notEmpty() then&#xA;sm&#xA;else&#xA;sm.context&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oTaIDPWnEdqea89UKW2qFQ" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oTaIDfWnEdqea89UKW2qFQ" name="isRedefinitionContextValid" isQuery="true" redefinedOperation="_oA737fWnEdqea89UKW2qFQ" bodyCondition="_oTaID_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaIDvWnEdqea89UKW2qFQ" annotatedElement="_oTaIDfWnEdqea89UKW2qFQ">
          <body>The query isRedefinitionContextValid() specifies whether the redefinition contexts of a region are properly related to the redefinition contexts of the specified region to allow this element to redefine the other. The containing statemachine/state of a redefining region must redefine the containing statemachine/state of the redefined region.</body>
        </ownedComment>
        <ownedRule xmi:id="_oTaID_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oTaIDfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTaIEPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oTaIEfWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oTaIEvWnEdqea89UKW2qFQ" name="redefined" type="_oTaH4PWnEdqea89UKW2qFQ" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oTaIE_WnEdqea89UKW2qFQ" name="isConsistentWith" isQuery="true" redefinedOperation="_oA735_WnEdqea89UKW2qFQ" bodyCondition="_oTaIFfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaIFPWnEdqea89UKW2qFQ" annotatedElement="_oTaIE_WnEdqea89UKW2qFQ">
          <body>The query isConsistentWith() specifies that a redefining region is consistent with a redefined region provided that the redefining region is an extension of the redefined region, i.e. it adds vertices and transitions and it redefines states and transitions of the redefined region.</body>
        </ownedComment>
        <ownedRule xmi:id="_oTaIFfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oTaIE_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTaIFvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oTaIF_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oTaIGPWnEdqea89UKW2qFQ" name="redefinee" type="_oA731vWnEdqea89UKW2qFQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oTaIGfWnEdqea89UKW2qFQ" name="containingStateMachine" isQuery="true" bodyCondition="_oTaIG_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oTaIGvWnEdqea89UKW2qFQ" annotatedElement="_oTaIGfWnEdqea89UKW2qFQ">
          <body>The operation containingStateMachine() returns the sate machine in which this Region is defined</body>
        </ownedComment>
        <ownedRule xmi:id="_oTaIG_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oTaIGfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTaIHPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if stateMachine->isEmpty() &#xA;then&#xA;state.containingStateMachine()&#xA;else&#xA;stateMachine&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oTaIHfWnEdqea89UKW2qFQ" type="_oSXmEPWnEdqea89UKW2qFQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oaHM0PWnEdqea89UKW2qFQ" name="belongsToPSM" isQuery="true" bodyCondition="_oaHM0vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaHM0fWnEdqea89UKW2qFQ" annotatedElement="_oaHM0PWnEdqea89UKW2qFQ">
          <body>The operation belongsToPSM () checks if the region belongs to a protocol state machine</body>
        </ownedComment>
        <ownedRule xmi:id="_oaHM0vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oaHM0PWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oaHM0_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if not stateMachine->isEmpty() then&#xA;oclIsTypeOf(ProtocolStateMachine)&#xA;else if not state->isEmpty() then&#xA;state.container.belongsToPSM ()&#xA;else false</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oaHM1PWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oaHM1fWnEdqea89UKW2qFQ" name="A_conformance_specificMachine" memberEnd="_oZ-C8vWnEdqea89UKW2qFQ _oZqg_PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oaHM1vWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oaHM1_WnEdqea89UKW2qFQ" general="_oCuAuPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oaHM2PWnEdqea89UKW2qFQ" name="A_protocol_port" memberEnd="_oZqhCvWnEdqea89UKW2qFQ _oaHM2fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oaHM2fWnEdqea89UKW2qFQ" type="_ZAuvEGveEdq4DLWZOhbdEA" association="_oaHM2PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaHM2vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaHM2_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oaHM3PWnEdqea89UKW2qFQ" name="A_postCondition_owningTransition" memberEnd="_oZ0R7PWnEdqea89UKW2qFQ _oaHM3vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oaHM3fWnEdqea89UKW2qFQ" general="_oC3xuPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oaHM3vWnEdqea89UKW2qFQ" name="owningTransition" type="_oZ0R4PWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oaHM3PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaHM3_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaHM4PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oaHM4fWnEdqea89UKW2qFQ" name="A_protocol_interface" memberEnd="_oZqhBfWnEdqea89UKW2qFQ _oaHM4_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_oaHM4vWnEdqea89UKW2qFQ" general="_oC3xkvWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oaHM4_WnEdqea89UKW2qFQ" name="interface" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oaHM4fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaHM5PWnEdqea89UKW2qFQ" annotatedElement="_oaHM4_WnEdqea89UKW2qFQ">
          <body>Specifies the namespace in which the protocol state machine is defined.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaHM5fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaHM5vWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oaHM5_WnEdqea89UKW2qFQ" name="A_generalMachine_protocolConformance" memberEnd="_oZqhAPWnEdqea89UKW2qFQ _oaHM6fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oaHM6PWnEdqea89UKW2qFQ" general="_oC3xgPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oaHM6fWnEdqea89UKW2qFQ" type="_oZqg-fWnEdqea89UKW2qFQ" association="_oaHM5_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaHM6vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaHM6_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oaQ90PWnEdqea89UKW2qFQ" name="A_referred_protocolTransition" memberEnd="_oZ0R8PWnEdqea89UKW2qFQ _oaQ90fWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_oaQ90fWnEdqea89UKW2qFQ" type="_oZ0R4PWnEdqea89UKW2qFQ" association="_oaQ90PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaQ90vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaQ90_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oaQ91PWnEdqea89UKW2qFQ" name="A_preCondition_protocolTransition" memberEnd="_oZ0R9PWnEdqea89UKW2qFQ _oaQ91vWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oaQ91fWnEdqea89UKW2qFQ" general="_oTtC5PWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_oaQ91vWnEdqea89UKW2qFQ" type="_oZ0R4PWnEdqea89UKW2qFQ" redefinedProperty="_oTtC5vWnEdqea89UKW2qFQ" association="_oaQ91PWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaQ91_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaQ92PWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oaQ92vWnEdqea89UKW2qFQ" name="AssociationClass">
      <ownedComment xmi:id="_oaQ92_WnEdqea89UKW2qFQ" annotatedElement="_oaQ92vWnEdqea89UKW2qFQ">
        <body>A model element that has both association and class properties. An AssociationClass can be seen as an association that also has class properties, or as a class that also has association properties. It not only connects a set of classifiers but also defines a set of features that belong to the relationship itself and not to any of the classifiers.</body>
      </ownedComment>
      <ownedRule xmi:id="_oaQ93PWnEdqea89UKW2qFQ" name="cannot_be_defined" constrainedElement="_oaQ92vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaQ93fWnEdqea89UKW2qFQ" annotatedElement="_oaQ93PWnEdqea89UKW2qFQ">
          <body>An AssociationClass cannot be defined between itself and something else.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oaQ93vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.endType->excludes(self) and self.endType>collect(et|et.allparents()->excludes(self))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oaQ93_WnEdqea89UKW2qFQ" general="_AwvxoGwNEdq7X4sGURiZYA"/>
      <generalization xmi:id="_oaQ94PWnEdqea89UKW2qFQ" general="_00owUGvdEdq4DLWZOhbdEA"/>
      <ownedOperation xmi:id="_oaQ94fWnEdqea89UKW2qFQ" name="allConnections" isQuery="true" bodyCondition="_oaQ94_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaQ94vWnEdqea89UKW2qFQ" annotatedElement="_oaQ94fWnEdqea89UKW2qFQ">
          <body>The operation allConnections results in the set of all AssociationEnds of the Association.</body>
        </ownedComment>
        <ownedRule xmi:id="_oaQ94_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oaQ94fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oaQ95PWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = memberEnd->union ( self.parents ()->collect (p | p.allConnections () )</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oaQ95fWnEdqea89UKW2qFQ" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaQ95vWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaQ95_WnEdqea89UKW2qFQ" value="2"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_oaau0PWnEdqea89UKW2qFQ" name="A_qualifier_associationEnd" memberEnd="_oaQ97fWnEdqea89UKW2qFQ _oaQ96fWnEdqea89UKW2qFQ">
      <generalization xmi:id="_oaau0fWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oaau0vWnEdqea89UKW2qFQ" name="TemplateSignature">
      <ownedComment xmi:id="_oaau0_WnEdqea89UKW2qFQ" annotatedElement="_oaau0vWnEdqea89UKW2qFQ">
        <body>A template signature bundles the set of formal template parameters for a templated element.</body>
      </ownedComment>
      <ownedRule xmi:id="_oaau1PWnEdqea89UKW2qFQ" name="own_elements" constrainedElement="_oaau0vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaau1fWnEdqea89UKW2qFQ" annotatedElement="_oaau1PWnEdqea89UKW2qFQ">
          <body>Parameters must own the elements they parameter or those elements must be owned by the element being templated.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oaau1vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>templatedElement.ownedElement->includesAll(parameter.parameteredElement - parameter.ownedParameteredElement)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oaau1_WnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oaau2PWnEdqea89UKW2qFQ" name="parameter" type="_KxRzgGvuEdqG6fBIPwe-mw" isOrdered="true" association="_obnBoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaau2fWnEdqea89UKW2qFQ" annotatedElement="_oaau2PWnEdqea89UKW2qFQ">
          <body>The ordered set of all formal template parameters for this template signature.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaau2vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaau2_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oaau3PWnEdqea89UKW2qFQ" name="ownedParameter" type="_KxRzgGvuEdqG6fBIPwe-mw" isOrdered="true" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ _oaau2PWnEdqea89UKW2qFQ" association="_obnBovWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaau3fWnEdqea89UKW2qFQ" annotatedElement="_oaau3PWnEdqea89UKW2qFQ">
          <body>The formal template parameters that are owned by this template signature.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaau3vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaau3_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oaau4PWnEdqea89UKW2qFQ" name="template" type="_oa2zxvWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_obwLkPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaau4fWnEdqea89UKW2qFQ" annotatedElement="_oaau4PWnEdqea89UKW2qFQ">
          <body>The element that owns this template signature.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaau4vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaau4_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_csVgUGvtEdqG6fBIPwe-mw" name="NamedElement" isAbstract="true">
      <ownedComment xmi:id="_oCRUkPWnEdqea89UKW2qFQ" annotatedElement="_csVgUGvtEdqG6fBIPwe-mw">
        <body>A named element is an element in a model that may have a name.</body>
      </ownedComment>
      <ownedComment xmi:id="_oaau5PWnEdqea89UKW2qFQ" annotatedElement="_csVgUGvtEdqG6fBIPwe-mw">
        <body>A named element supports using a string expression to specify its name. This allows names of model elements to involve template parameters. The actual name is evaluated from the string expression only when it is sensible to do so (e.g., when a template is bound).</body>
      </ownedComment>
      <ownedRule xmi:id="_oCRUkfWnEdqea89UKW2qFQ" name="has_no_qualified_name" constrainedElement="_csVgUGvtEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oCRUkvWnEdqea89UKW2qFQ" annotatedElement="_oCRUkfWnEdqea89UKW2qFQ">
          <body>If there is no name, or one of the containing namespaces has no name, there is no qualified name.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDnYZvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())&#xD;&#xA;  implies self.qualifiedName->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oCRUlPWnEdqea89UKW2qFQ" name="has_qualified_name" constrainedElement="_csVgUGvtEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oCRUlfWnEdqea89UKW2qFQ" annotatedElement="_oCRUlPWnEdqea89UKW2qFQ">
          <body>When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDnYZ_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()) implies&#xA;  self.qualifiedName = self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oCRUl_WnEdqea89UKW2qFQ" name="visibility_needs_ownership" constrainedElement="_csVgUGvtEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oCRUmPWnEdqea89UKW2qFQ" annotatedElement="_oCRUl_WnEdqea89UKW2qFQ">
          <body>If a NamedElement is not owned by a Namespace, it does not have a visibility.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDnYaPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>namespace->isEmpty() implies visibility->isEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oCRUmvWnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oCRUm_WnEdqea89UKW2qFQ" name="name" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oCRUnPWnEdqea89UKW2qFQ" annotatedElement="_oCRUm_WnEdqea89UKW2qFQ">
          <body>The name of the NamedElement.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDnYafWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDnYavWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oCRUn_WnEdqea89UKW2qFQ" name="visibility" visibility="public" type="_AyM_oGwMEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oCRUoPWnEdqea89UKW2qFQ" annotatedElement="_oCRUn_WnEdqea89UKW2qFQ">
          <body>Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDnYa_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDnYbPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oCRUp_WnEdqea89UKW2qFQ" name="qualifiedName" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="_oCRUqPWnEdqea89UKW2qFQ" annotatedElement="_oCRUp_WnEdqea89UKW2qFQ">
          <body>A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDnYbfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDnYbvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJunmfWnEdqea89UKW2qFQ" name="clientDependency" type="_rEDGkGwKEdq7X4sGURiZYA" association="_oJ3xdfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJunmvWnEdqea89UKW2qFQ" annotatedElement="_oJunmfWnEdqea89UKW2qFQ">
          <body>Indicates the dependencies that reference the client.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJunm_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJunnPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oCRUo_WnEdqea89UKW2qFQ" name="namespace" visibility="public" type="_ZiwkoGwLEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oC3xkvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCRUpPWnEdqea89UKW2qFQ" annotatedElement="_oCRUo_WnEdqea89UKW2qFQ">
          <body>Specifies the namespace that owns the NamedElement.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJunnfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJunnvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oaau5fWnEdqea89UKW2qFQ" name="nameExpression" type="_oaj42fWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_ob58lfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaau5vWnEdqea89UKW2qFQ" annotatedElement="_oaau5fWnEdqea89UKW2qFQ">
          <body>The string expression used to define the name of this named element.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaau5_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaau6PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_o2CW4GwKEdq7X4sGURiZYA" name="createDependency">
        <ownedComment xmi:id="_kZ5L8OwgEdqYHf-imTcTdw" annotatedElement="_o2CW4GwKEdq7X4sGURiZYA">
          <body>Creates a dependency between this named element and the specified supplier, owned by this named element's nearest package.</body>
        </ownedComment>
        <ownedParameter xmi:id="_us8f4GwKEdq7X4sGURiZYA" type="_rEDGkGwKEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:id="_vYdiEGwKEdq7X4sGURiZYA" name="supplier" type="_csVgUGvtEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_z4f-wGwKEdq7X4sGURiZYA" name="getLabel" isQuery="true">
        <ownedComment xmi:id="_pnOzgOwgEdqYHf-imTcTdw" annotatedElement="_z4f-wGwKEdq7X4sGURiZYA">
          <body>Retrieves a localized label for this named element.</body>
        </ownedComment>
        <ownedParameter xmi:id="_1p5q8GwKEdq7X4sGURiZYA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_34WfgWwKEdq7X4sGURiZYA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_34WfgGwKEdq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_5KmxkGwKEdq7X4sGURiZYA" name="getLabel" isQuery="true">
        <ownedComment xmi:id="_rCa_IOwgEdqYHf-imTcTdw" annotatedElement="_5KmxkGwKEdq7X4sGURiZYA">
          <body>Retrieves a label for this named element, localized if indicated.</body>
        </ownedComment>
        <ownedParameter xmi:id="_5KmxkWwKEdq7X4sGURiZYA" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5KmxkmwKEdq7X4sGURiZYA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5Kmxk2wKEdq7X4sGURiZYA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_6FwyQGwKEdq7X4sGURiZYA" name="localize" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oCRUvvWnEdqea89UKW2qFQ" name="qualifiedName" isQuery="true" bodyCondition="_oCRUwPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCRUv_WnEdqea89UKW2qFQ" annotatedElement="_oCRUvvWnEdqea89UKW2qFQ">
          <body>When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.</body>
        </ownedComment>
        <ownedRule xmi:id="_oCRUwPWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oCRUvvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oCRUwfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()&#xA;then &#xA;    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))&#xA;else&#xA;    Set{}&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCRUwvWnEdqea89UKW2qFQ" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oCRUq_WnEdqea89UKW2qFQ" name="allNamespaces" visibility="public" isQuery="true" bodyCondition="_oCRUrfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCRUrPWnEdqea89UKW2qFQ" annotatedElement="_oCRUq_WnEdqea89UKW2qFQ">
          <body>The query allNamespaces() gives the sequence of namespaces in which the NamedElement is nested, working outwards.</body>
        </ownedComment>
        <ownedRule xmi:id="_oCRUrfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oCRUq_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDxJYPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if self.namespace->isEmpty()&#xA;then Sequence{}&#xA;else self.namespace.allNamespaces()->prepend(self.namespace)&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCRUr_WnEdqea89UKW2qFQ" visibility="public" type="_ZiwkoGwLEdq7X4sGURiZYA" isOrdered="true" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDxJYfWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oDxJYvWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oCRUsvWnEdqea89UKW2qFQ" name="isDistinguishableFrom" visibility="public" isQuery="true" bodyCondition="_oCRUtPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCRUs_WnEdqea89UKW2qFQ" annotatedElement="_oCRUsvWnEdqea89UKW2qFQ">
          <body>The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names.</body>
        </ownedComment>
        <ownedRule xmi:id="_oCRUtPWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oCRUsvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDxJY_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)&#xA;then ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()&#xA;else true&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCRUtvWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oCRUt_WnEdqea89UKW2qFQ" name="n" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw"/>
        <ownedParameter xmi:id="_oCRUuPWnEdqea89UKW2qFQ" name="ns" visibility="public" type="_ZiwkoGwLEdq7X4sGURiZYA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oCRUufWnEdqea89UKW2qFQ" name="separator" visibility="public" isQuery="true" bodyCondition="_oCRUu_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCRUuvWnEdqea89UKW2qFQ" annotatedElement="_oCRUufWnEdqea89UKW2qFQ">
          <body>The query separator() gives the string that is used to separate names when constructing a qualified name.</body>
        </ownedComment>
        <ownedRule xmi:id="_oCRUu_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oCRUufWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDxJZPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = '::'</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCRUvfWnEdqea89UKW2qFQ" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oUTgAfWnEdqea89UKW2qFQ" name="allOwningPackages" isQuery="true" bodyCondition="_oUTgA_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUTgAvWnEdqea89UKW2qFQ" annotatedElement="_oUTgAfWnEdqea89UKW2qFQ">
          <body>The query allOwningPackages() returns all the directly or indirectly owning packages.</body>
        </ownedComment>
        <ownedRule xmi:id="_oUTgA_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oUTgAfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUTgBPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = self.namespace->select(p | p.oclIsKindOf(Package))->union(p.allOwningPackages())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oUTgBfWnEdqea89UKW2qFQ" type="_-cvRAGvzEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUTgBvWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUTgB_WnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KxRzgGvuEdqG6fBIPwe-mw" name="TemplateParameter">
      <ownedComment xmi:id="_oaj4wPWnEdqea89UKW2qFQ" annotatedElement="_KxRzgGvuEdqG6fBIPwe-mw">
        <body>A template parameter exposes a parameterable element as a formal template parameter of a template.</body>
      </ownedComment>
      <ownedRule xmi:id="_oaj4wfWnEdqea89UKW2qFQ" name="must_be_compatible" constrainedElement="_KxRzgGvuEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oaj4wvWnEdqea89UKW2qFQ" annotatedElement="_oaj4wfWnEdqea89UKW2qFQ">
          <body>The default must be compatible with the formal template parameter.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oaj4w_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>default->notEmpty() implies default->isCompatibleWith(parameteredElement)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oaj4xPWnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oaj4xfWnEdqea89UKW2qFQ" name="signature" type="_oaau0vWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_obnBovWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaj4xvWnEdqea89UKW2qFQ" annotatedElement="_oaj4xfWnEdqea89UKW2qFQ">
          <body>The template signature that owns this template parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaj4x_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaj4yPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oaj4yfWnEdqea89UKW2qFQ" name="parameteredElement" type="_obAksPWnEdqea89UKW2qFQ" association="_obnBsfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaj4yvWnEdqea89UKW2qFQ" annotatedElement="_oaj4yfWnEdqea89UKW2qFQ">
          <body>The element exposed by this template parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaj4y_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaj4zPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oaj4zfWnEdqea89UKW2qFQ" name="ownedParameteredElement" type="_obAksPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ _oaj4yfWnEdqea89UKW2qFQ" association="_obwLkvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaj4zvWnEdqea89UKW2qFQ" annotatedElement="_oaj4zfWnEdqea89UKW2qFQ">
          <body>The element that is owned by this template parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaj4z_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaj40PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oaj40fWnEdqea89UKW2qFQ" name="default" type="_obAksPWnEdqea89UKW2qFQ" association="_obwLlfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaj40vWnEdqea89UKW2qFQ" annotatedElement="_oaj40fWnEdqea89UKW2qFQ">
          <body>The element that is the default for this formal template parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaj40_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaj41PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oaj41fWnEdqea89UKW2qFQ" name="ownedDefault" type="_obAksPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oaj40fWnEdqea89UKW2qFQ _oAfL8fWnEdqea89UKW2qFQ" association="_obwLl_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaj41vWnEdqea89UKW2qFQ" annotatedElement="_oaj41fWnEdqea89UKW2qFQ">
          <body>The element that is owned by this template parameter for the purpose of providing a default.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaj41_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaj42PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oaj42fWnEdqea89UKW2qFQ" name="StringExpression">
      <ownedComment xmi:id="_oaj42vWnEdqea89UKW2qFQ" annotatedElement="_oaj42fWnEdqea89UKW2qFQ">
        <body>An expression that specifies a string value that is derived by concatenating a set of sub string expressions, some of which might be template parameters.</body>
      </ownedComment>
      <ownedRule xmi:id="_oaj42_WnEdqea89UKW2qFQ" name="operands" constrainedElement="_oaj42fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaj43PWnEdqea89UKW2qFQ" annotatedElement="_oaj42_WnEdqea89UKW2qFQ">
          <body>All the operands of a StringExpression must be LiteralStrings</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oaj43fWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>operand->forAll (op | op.oclIsKindOf (LiteralString))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oaj43vWnEdqea89UKW2qFQ" name="subexpressions" constrainedElement="_oaj42fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaj43_WnEdqea89UKW2qFQ" annotatedElement="_oaj43vWnEdqea89UKW2qFQ">
          <body>If a StringExpression has sub-expressions, it cannot have operands and vice versa (this avoids the problem of having to
define a collating sequence between operands and subexpressions).
</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oaj44PWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>if subExpression->notEmpty() then operand->isEmpty() else operand->notEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oaj44fWnEdqea89UKW2qFQ" general="_oa2zxvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oaj44vWnEdqea89UKW2qFQ" general="_oCRUw_WnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oaj44_WnEdqea89UKW2qFQ" name="subExpression" type="_oaj42fWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_obnBsvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaj45PWnEdqea89UKW2qFQ" annotatedElement="_oaj44_WnEdqea89UKW2qFQ">
          <body>The StringExpressions that constitute this StringExpression.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaj45fWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaj45vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oaj45_WnEdqea89UKW2qFQ" name="owningExpression" type="_oaj42fWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_obnBsvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaj46PWnEdqea89UKW2qFQ" annotatedElement="_oaj45_WnEdqea89UKW2qFQ">
          <body>The string expression of which this expression is a substring.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaj46fWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaj46vWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oaj46_WnEdqea89UKW2qFQ" name="stringValue" isQuery="true" redefinedOperation="_oBFB0_WnEdqea89UKW2qFQ" bodyCondition="_oaj47fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaj47PWnEdqea89UKW2qFQ" annotatedElement="_oaj46_WnEdqea89UKW2qFQ">
          <body>The query stringValue() returns the string that concatenates, in order, all the component string literals of all the subexpressions that are part of the StringExpression.&#xD;
</body>
        </ownedComment>
        <ownedRule xmi:id="_oaj47fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oaj46_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oaj47vWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if subExpression->notEmpty()&#xA;then subExpression->iterate(se; stringValue = | stringValue.concat(se.stringValue()))&#xA;else operand->iterate()(op; stringValue =  | stringValue.concat(op.value))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oaj47_WnEdqea89UKW2qFQ" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oatpwPWnEdqea89UKW2qFQ" name="TemplateBinding">
      <ownedComment xmi:id="_oatpwfWnEdqea89UKW2qFQ" annotatedElement="_oatpwPWnEdqea89UKW2qFQ">
        <body>A template binding represents a relationship between a templateable element and a template. A template binding specifies the substitutions of actual parameters for the formal parameters of the template.</body>
      </ownedComment>
      <ownedRule xmi:id="_oatpwvWnEdqea89UKW2qFQ" name="parameter_substitution_formal" constrainedElement="_oatpwPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oatpw_WnEdqea89UKW2qFQ" annotatedElement="_oatpwvWnEdqea89UKW2qFQ">
          <body>Each parameter substitution must refer to a formal template parameter of the target template signature.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oatpxPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>parameterSubstitution->forAll(b | template.parameter->includes(b.formal))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oatpxfWnEdqea89UKW2qFQ" name="one_parameter_substitution" constrainedElement="_oatpwPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oatpxvWnEdqea89UKW2qFQ" annotatedElement="_oatpxfWnEdqea89UKW2qFQ">
          <body>A binding contains at most one parameter substitution for each formal template parameter of the target template signature.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oatpx_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>template.parameter->forAll(p | parameterSubstitution->select(b | b.formal = p)->size() &lt;= 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oatpyPWnEdqea89UKW2qFQ" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:id="_oatpyfWnEdqea89UKW2qFQ" name="boundElement" type="_oa2zxvWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ _oAfL4vWnEdqea89UKW2qFQ" association="_obnBpfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oatpyvWnEdqea89UKW2qFQ" annotatedElement="_oatpyfWnEdqea89UKW2qFQ">
          <body>The element that is bound by this binding.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oatpy_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oatpzPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oatpzfWnEdqea89UKW2qFQ" name="signature" type="_oaau0vWnEdqea89UKW2qFQ" subsettedProperty="_oAfL5vWnEdqea89UKW2qFQ" association="_obnBqvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oatpzvWnEdqea89UKW2qFQ" annotatedElement="_oatpzfWnEdqea89UKW2qFQ">
          <body>The template signature for the template that is the target of the binding.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oatpz_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oatp0PWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oatp0fWnEdqea89UKW2qFQ" name="parameterSubstitution" type="_oa2zsPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_obnBrfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oatp0vWnEdqea89UKW2qFQ" annotatedElement="_oatp0fWnEdqea89UKW2qFQ">
          <body>The parameter substitutions owned by this template binding.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oatp0_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oatp1PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oa2zsPWnEdqea89UKW2qFQ" name="TemplateParameterSubstitution">
      <ownedComment xmi:id="_oa2zsfWnEdqea89UKW2qFQ" annotatedElement="_oa2zsPWnEdqea89UKW2qFQ">
        <body>A template parameter substitution relates the actual parameter(s) to a formal template parameter as part of a template binding.</body>
      </ownedComment>
      <ownedRule xmi:id="_oa2zsvWnEdqea89UKW2qFQ" name="must_be_compatible" constrainedElement="_oa2zsPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oa2zs_WnEdqea89UKW2qFQ" annotatedElement="_oa2zsvWnEdqea89UKW2qFQ">
          <body>The actual parameter must be compatible with the formal template parameter, e.g. the actual parameter for a class template parameter must be a class.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oa2ztPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>actual->forAll(a | a.isCompatibleWith(formal.parameteredElement))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oa2ztfWnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oa2ztvWnEdqea89UKW2qFQ" name="formal" type="_KxRzgGvuEdqG6fBIPwe-mw" association="_obnBqPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oa2zt_WnEdqea89UKW2qFQ" annotatedElement="_oa2ztvWnEdqea89UKW2qFQ">
          <body>The formal template parameter that is associated with this substitution.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oa2zuPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oa2zufWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oa2zuvWnEdqea89UKW2qFQ" name="templateBinding" type="_oatpwPWnEdqea89UKW2qFQ" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_obnBrfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oa2zu_WnEdqea89UKW2qFQ" annotatedElement="_oa2zuvWnEdqea89UKW2qFQ">
          <body>The optional bindings from this element to templates.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oa2zvPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oa2zvfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oa2zvvWnEdqea89UKW2qFQ" name="actual" type="_obAksPWnEdqea89UKW2qFQ" association="_obnBr_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oa2zv_WnEdqea89UKW2qFQ" annotatedElement="_oa2zvvWnEdqea89UKW2qFQ">
          <body>The elements that are the actual parameters for this substitution.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oa2zwPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oa2zwfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oa2zwvWnEdqea89UKW2qFQ" name="ownedActual" type="_obAksPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oa2zvvWnEdqea89UKW2qFQ _oAfL8fWnEdqea89UKW2qFQ" association="_obwLnfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oa2zw_WnEdqea89UKW2qFQ" annotatedElement="_oa2zwvWnEdqea89UKW2qFQ">
          <body>The actual parameters that are owned by this substitution.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oa2zxPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oa2zxfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oa2zxvWnEdqea89UKW2qFQ" name="TemplateableElement" isAbstract="true">
      <ownedComment xmi:id="_oa2zx_WnEdqea89UKW2qFQ" annotatedElement="_oa2zxvWnEdqea89UKW2qFQ">
        <body>A templateable element is an element that can optionally be defined as a template and bound to other templates.</body>
      </ownedComment>
      <generalization xmi:id="_oa2zyPWnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_oa2zyfWnEdqea89UKW2qFQ" name="templateBinding" type="_oatpwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_obnBpfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oa2zyvWnEdqea89UKW2qFQ" annotatedElement="_oa2zyfWnEdqea89UKW2qFQ">
          <body>The optional bindings from this element to templates.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oa2zy_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oa2zzPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oa2zzfWnEdqea89UKW2qFQ" name="ownedTemplateSignature" type="_oaau0vWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_obwLkPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oa2zzvWnEdqea89UKW2qFQ" annotatedElement="_oa2zzfWnEdqea89UKW2qFQ">
          <body>The optional template signature specifying the formal template parameters.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oa2zz_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oa2z0PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oa2z0fWnEdqea89UKW2qFQ" name="parameterableElements" isQuery="true" bodyCondition="_oa2z0_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oa2z0vWnEdqea89UKW2qFQ" annotatedElement="_oa2z0fWnEdqea89UKW2qFQ">
          <body>The query parameterableElements() returns the set of elements that may be used as the parametered elements for a template parameter of this templateable element. By default, this set includes all the owned elements. Subclasses may override this operation if they choose to restrict the set of parameterable elements.</body>
        </ownedComment>
        <ownedRule xmi:id="_oa2z0_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oa2z0fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oa2z1PWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = allOwnedElements->select(oclIsKindOf(ParameterableElement))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oa2z1fWnEdqea89UKW2qFQ" type="_obAksPWnEdqea89UKW2qFQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oa2z1vWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oa2z1_WnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oa2z2PWnEdqea89UKW2qFQ" name="isTemplate" isQuery="true" bodyCondition="_oa2z2vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oa2z2fWnEdqea89UKW2qFQ" annotatedElement="_oa2z2PWnEdqea89UKW2qFQ">
          <body>The query isTemplate() returns whether this templateable element is actually a template.</body>
        </ownedComment>
        <ownedRule xmi:id="_oa2z2vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oa2z2PWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oa2z2_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = ownedTemplateSignature->notEmpty()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oa2z3PWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_obAksPWnEdqea89UKW2qFQ" name="ParameterableElement" isAbstract="true">
      <ownedComment xmi:id="_obAksfWnEdqea89UKW2qFQ" annotatedElement="_obAksPWnEdqea89UKW2qFQ">
        <body>A parameterable element is an element that can be exposed as a formal template parameter for a template, or specified as an actual parameter in a binding of a template.</body>
      </ownedComment>
      <generalization xmi:id="_obAksvWnEdqea89UKW2qFQ" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:id="_obAks_WnEdqea89UKW2qFQ" name="templateParameter" type="_KxRzgGvuEdqG6fBIPwe-mw" association="_obnBsfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obAktPWnEdqea89UKW2qFQ" annotatedElement="_obAks_WnEdqea89UKW2qFQ">
          <body>The template parameter that exposes this element as a formal parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obAktfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obAktvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_obAkt_WnEdqea89UKW2qFQ" name="owningTemplateParameter" type="_KxRzgGvuEdqG6fBIPwe-mw" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ _obAks_WnEdqea89UKW2qFQ" association="_obwLkvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obAkuPWnEdqea89UKW2qFQ" annotatedElement="_obAkt_WnEdqea89UKW2qFQ">
          <body>The formal template parameter that owns this element.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obAkufWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obAkuvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_obAku_WnEdqea89UKW2qFQ" name="isCompatibleWith" isQuery="true" bodyCondition="_obAkvfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obAkvPWnEdqea89UKW2qFQ" annotatedElement="_obAku_WnEdqea89UKW2qFQ">
          <body>The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. Subclasses should override this operation to specify different compatibility constraints.</body>
        </ownedComment>
        <ownedRule xmi:id="_obAkvfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_obAku_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_obAkvvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = p->oclIsKindOf(self.oclType)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_obAkv_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_obAkwPWnEdqea89UKW2qFQ" name="p" type="_obAksPWnEdqea89UKW2qFQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_obAkwfWnEdqea89UKW2qFQ" name="isTemplateParameter" isQuery="true" bodyCondition="_obAkw_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obAkwvWnEdqea89UKW2qFQ" annotatedElement="_obAkwfWnEdqea89UKW2qFQ">
          <body>The query isTemplateParameter() determines if this parameterable element is exposed as a formal template parameter.</body>
        </ownedComment>
        <ownedRule xmi:id="_obAkw_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_obAkwfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_obAkxPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = templateParameter->notEmpty()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_obAkxfWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Jp_1oGveEdq4DLWZOhbdEA" name="Property">
      <ownedComment xmi:id="_oBOy2_WnEdqea89UKW2qFQ" annotatedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <body>A property is a structural feature of a classifier that characterizes instances of the classifier. A property related by ownedAttribute to a classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the class to a value or set of values of the type of the attribute. A property related by memberEnd or its specializations to an association represents an end of the association. The type of the property is the type of the end of the association.</body>
      </ownedComment>
      <ownedComment xmi:id="_oKKsiPWnEdqea89UKW2qFQ" annotatedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <body>A property represents a set of instances that are owned by a containing classifier instance.</body>
      </ownedComment>
      <ownedComment xmi:id="_oOfy0PWnEdqea89UKW2qFQ" annotatedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <body>A property has the capability of being a deployment target in a deployment relationship. This enables modeling the deployment to hierarchical nodes that have properties functioning as internal parts.</body>
      </ownedComment>
      <ownedComment xmi:id="_oaQ96PWnEdqea89UKW2qFQ" annotatedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <body>Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association. The range of valid values represented by the property can be controlled by setting the property's type.</body>
      </ownedComment>
      <ownedComment xmi:id="_obAkxvWnEdqea89UKW2qFQ" annotatedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <body>Property specializes ParameterableElement to specify that a property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.</body>
      </ownedComment>
      <ownedRule xmi:id="_oBOy3PWnEdqea89UKW2qFQ" name="multiplicity_of_composite" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oBOy3fWnEdqea89UKW2qFQ" annotatedElement="_oBOy3PWnEdqea89UKW2qFQ">
          <body>A multiplicity of a composite aggregation must not have an upper bound greater than 1.</body>
        </ownedComment>
        <ownedComment xmi:id="_oF2ND_WnEdqea89UKW2qFQ" annotatedElement="_oBOy3PWnEdqea89UKW2qFQ">
          <body>A multiplicity on an aggregate end of a composite aggregation must not have an upper bound greater than 1.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF2NEPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>isComposite implies (upperBound()->isEmpty() or upperBound() &lt;= 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBOy3_WnEdqea89UKW2qFQ" name="subsetting_context_conforms" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oBOy4PWnEdqea89UKW2qFQ" annotatedElement="_oBOy3_WnEdqea89UKW2qFQ">
          <body>Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF2NEfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.subsettedProperty->notEmpty() implies&#xA;  (self.subsettingContext()->notEmpty() and self.subsettingContext()->forAll (sc |&#xA;    self.subsettedProperty->forAll(sp |&#xA;      sp.subsettingContext()->exists(c | sc.conformsTo(c)))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBOy4vWnEdqea89UKW2qFQ" name="redefined_property_inherited" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oBOy4_WnEdqea89UKW2qFQ" annotatedElement="_oBOy4vWnEdqea89UKW2qFQ">
          <body>A redefined property must be inherited from a more general classifier containing the redefining property.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF2NEvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>if (redefinedProperty->notEmpty()) then&#xD;&#xA;  (redefinitionContext->notEmpty() and&#xD;&#xA;      redefinedProperty->forAll(rp|&#xD;&#xA;        ((redefinitionContext->collect(fc|&#xD;&#xA;          fc.allParents()))->asSet())->collect(c| c.allFeatures())->asSet()->includes(rp))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBOy5fWnEdqea89UKW2qFQ" name="subsetting_rules" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oBOy5vWnEdqea89UKW2qFQ" annotatedElement="_oBOy5fWnEdqea89UKW2qFQ">
          <body>A subsetting property may strengthen the type of the subsetted property, and its upper bound may be less.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF2NE_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.subsettedProperty->forAll(sp |&#xA;  self.type.conformsTo(sp.type) and&#xA;    ((self.upperBound()->notEmpty() and sp.upperBound()->notEmpty()) implies&#xA;      self.upperBound()&lt;=sp.upperBound() ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBOy6PWnEdqea89UKW2qFQ" name="navigable_readonly" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oBOy6fWnEdqea89UKW2qFQ" annotatedElement="_oBOy6PWnEdqea89UKW2qFQ">
          <body>Only a navigable property can be marked as readOnly.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF2NFPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>isReadOnly implies isNavigable()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBOy6_WnEdqea89UKW2qFQ" name="derived_union_is_derived" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oBOy7PWnEdqea89UKW2qFQ" annotatedElement="_oBOy6_WnEdqea89UKW2qFQ">
          <body>A derived union is derived.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF2NFfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>isDerivedUnion implies isDerived</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oF2NFvWnEdqea89UKW2qFQ" name="derived_union_is_read_only" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oF2NF_WnEdqea89UKW2qFQ" annotatedElement="_oF2NFvWnEdqea89UKW2qFQ">
          <body>A derived union is read only.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF2NGPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>isDerivedUnion implies isReadOnly</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBOy7vWnEdqea89UKW2qFQ" name="subsetted_property_names" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oBOy7_WnEdqea89UKW2qFQ" annotatedElement="_oBOy7vWnEdqea89UKW2qFQ">
          <body>A property may not subset a property with the same name.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF2NGfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOfy0fWnEdqea89UKW2qFQ" name="deployment_target" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oOfy0vWnEdqea89UKW2qFQ" annotatedElement="_oOfy0fWnEdqea89UKW2qFQ">
          <body>A Property can be a DeploymentTarget if it is a kind of Node and functions as a part in the internal structure of an encompassing Node.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOfy0_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_obAkx_WnEdqea89UKW2qFQ" name="binding_to_attribute" constrainedElement="_Jp_1oGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_obAkyPWnEdqea89UKW2qFQ" annotatedElement="_obAkx_WnEdqea89UKW2qFQ">
          <body>A binding of a property template parameter representing an attribute must be to an attribute.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_obAkyfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>(isAttribute(self) and (templateParameterSubstitution->notEmpty())&#xD;&#xA;  implies (templateParameterSubstitution->forAll(ts | isAttribute(ts.formal)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oKKsifWnEdqea89UKW2qFQ" general="_oKUdZfWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oOfy1PWnEdqea89UKW2qFQ" general="_oOfytvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oBOy8fWnEdqea89UKW2qFQ" general="_oA73-fWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_obAky_WnEdqea89UKW2qFQ" general="_oa2zxvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oBOy_PWnEdqea89UKW2qFQ" name="isDerived" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oBOy_fWnEdqea89UKW2qFQ" annotatedElement="_oBOy_PWnEdqea89UKW2qFQ">
          <body>If isDerived is true, the value of the attribute is derived from information elsewhere.</body>
        </ownedComment>
        <ownedComment xmi:id="_oF2NGvWnEdqea89UKW2qFQ" annotatedElement="_oBOy_PWnEdqea89UKW2qFQ">
          <body>Specifies whether the Property is derived, i.e., whether its value or values can be computed from other information.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oF2NG_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBOy8vWnEdqea89UKW2qFQ" name="isReadOnly" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" redefinedProperty="_oFQXIfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBOy8_WnEdqea89UKW2qFQ" annotatedElement="_oBOy8vWnEdqea89UKW2qFQ">
          <body>This redefines the corresponding attribute in Basic::Property and Abstractions::StructuralFeature.</body>
        </ownedComment>
        <ownedComment xmi:id="_oF2NHPWnEdqea89UKW2qFQ" annotatedElement="_oBOy8vWnEdqea89UKW2qFQ">
          <body>If true, the attribute may only be read, and not written.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oF2NHfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBOy__WnEdqea89UKW2qFQ" name="isDerivedUnion" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oBOzAPWnEdqea89UKW2qFQ" annotatedElement="_oBOy__WnEdqea89UKW2qFQ">
          <body>Specifies whether the property is derived as the union of all of the properties that are constrained to subset it.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oF2NHvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBOy9fWnEdqea89UKW2qFQ" name="default" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw" isDerived="true">
        <ownedComment xmi:id="_oBOy9vWnEdqea89UKW2qFQ" annotatedElement="_oBOy9fWnEdqea89UKW2qFQ">
          <body>Specifies a String that represents a value to be used when no argument is supplied for the Property.</body>
        </ownedComment>
        <ownedComment xmi:id="_oF2NH_WnEdqea89UKW2qFQ" annotatedElement="_oBOy9fWnEdqea89UKW2qFQ">
          <body>A String that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF2NIPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF_-APWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oF_-AfWnEdqea89UKW2qFQ" name="aggregation" type="_B3q9cGwNEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oF_-AvWnEdqea89UKW2qFQ" annotatedElement="_oF_-AfWnEdqea89UKW2qFQ">
          <body>Specifies the kind of aggregation that applies to the Property.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oF_-A_WnEdqea89UKW2qFQ" instance="_oHCf7PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBOy-fWnEdqea89UKW2qFQ" name="isComposite" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" isDerived="true">
        <ownedComment xmi:id="_oBOy-vWnEdqea89UKW2qFQ" annotatedElement="_oBOy-fWnEdqea89UKW2qFQ">
          <body>If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute.</body>
        </ownedComment>
        <ownedComment xmi:id="_oF_-BPWnEdqea89UKW2qFQ" annotatedElement="_oBOy-fWnEdqea89UKW2qFQ">
          <body>This is a derived value, indicating whether the aggregation of the Property is composite or not.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oBOy-_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBOzAvWnEdqea89UKW2qFQ" name="class" visibility="public" type="_00owUGvdEdq4DLWZOhbdEA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ _oAoV0_WnEdqea89UKW2qFQ _oCk2oPWnEdqea89UKW2qFQ" association="_oCk2kvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBOzA_WnEdqea89UKW2qFQ" annotatedElement="_oBOzAvWnEdqea89UKW2qFQ">
          <body>References the Class that owns the Property.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF_-BfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF_-BvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBYjxPWnEdqea89UKW2qFQ" name="redefinedProperty" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oCk2o_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBYjxfWnEdqea89UKW2qFQ" annotatedElement="_oBYjxPWnEdqea89UKW2qFQ">
          <body>References the properties that are redefined by this property.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF_-B_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF_-CPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBYjwPWnEdqea89UKW2qFQ" name="owningAssociation" visibility="public" type="_AwvxoGwNEdq7X4sGURiZYA" subsettedProperty="_oBYj1PWnEdqea89UKW2qFQ _oCRUo_WnEdqea89UKW2qFQ _oAoV0_WnEdqea89UKW2qFQ" association="_oCk2mfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBYjwfWnEdqea89UKW2qFQ" annotatedElement="_oBYjwPWnEdqea89UKW2qFQ">
          <body>References the owning association of this property, if any.</body>
        </ownedComment>
        <ownedComment xmi:id="_oF_-CfWnEdqea89UKW2qFQ" annotatedElement="_oBYjwPWnEdqea89UKW2qFQ">
          <body>References the owning association of this property.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF_-CvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF_-C_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBYj0PWnEdqea89UKW2qFQ" name="datatype" visibility="public" type="__1ap4HLzEdqziYxiZo0YtA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ _oAoV0_WnEdqea89UKW2qFQ _oCk2oPWnEdqea89UKW2qFQ" association="_oCk2svWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBYj0fWnEdqea89UKW2qFQ" annotatedElement="_oBYj0PWnEdqea89UKW2qFQ">
          <body>The DataType that owns this Operation.</body>
        </ownedComment>
        <ownedComment xmi:id="_oF_-DPWnEdqea89UKW2qFQ" annotatedElement="_oBYj0PWnEdqea89UKW2qFQ">
          <body>The DataType that owns this Property.&#xD;
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF_-DfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF_-DvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oF_-D_WnEdqea89UKW2qFQ" name="defaultValue" type="_oBFBwPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oHfLyvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oF_-EPWnEdqea89UKW2qFQ" annotatedElement="_oF_-D_WnEdqea89UKW2qFQ">
          <body>A ValueSpecification that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF_-EfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF_-EvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBYjzPWnEdqea89UKW2qFQ" name="opposite" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" isDerived="true" association="_oCk2qPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBYjzfWnEdqea89UKW2qFQ" annotatedElement="_oBYjzPWnEdqea89UKW2qFQ">
          <body>In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF_-E_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF_-FPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBYjyPWnEdqea89UKW2qFQ" name="subsettedProperty" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" association="_oCk2pvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBYjyfWnEdqea89UKW2qFQ" annotatedElement="_oBYjyPWnEdqea89UKW2qFQ">
          <body>References the properties of which this property is constrained to be a subset.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF_-FfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF_-FvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBYj1PWnEdqea89UKW2qFQ" name="association" visibility="public" type="_AwvxoGwNEdq7X4sGURiZYA" association="_oCuAp_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBYj1fWnEdqea89UKW2qFQ" annotatedElement="_oBYj1PWnEdqea89UKW2qFQ">
          <body>References the association of which this property is a member, if any.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oF_-F_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oF_-GPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oaQ96fWnEdqea89UKW2qFQ" name="qualifier" type="_Jp_1oGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oaau0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaQ96vWnEdqea89UKW2qFQ" annotatedElement="_oaQ96fWnEdqea89UKW2qFQ">
          <body>An optional list of ordered qualifier attributes for the end. If the list is empty, then the Association is not qualified.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaQ96_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaQ97PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oaQ97fWnEdqea89UKW2qFQ" name="associationEnd" type="_Jp_1oGveEdq4DLWZOhbdEA" subsettedProperty="_oAfL9fWnEdqea89UKW2qFQ" association="_oaau0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oaQ97vWnEdqea89UKW2qFQ" annotatedElement="_oaQ97fWnEdqea89UKW2qFQ">
          <body>Designates the optional association end that owns a qualifier attribute.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaQ97_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oaQ98PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_oLamMFYJEdqrn7iZ0eqieg" name="getDefault" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_vkrSwFYJEdqrn7iZ0eqieg" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uJsjsVYjEdqB6vblk3tuMA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uJsjsFYjEdqB6vblk3tuMA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_f-9wMGXCEdqEJs8umHJc9g" name="isSetDefault" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_iAwBwGXCEdqEJs8umHJc9g" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_vbp60FYjEdqB6vblk3tuMA" name="setDefault" visibility="protected">
        <ownedParameter xmi:id="_xXxpQFYjEdqB6vblk3tuMA" name="newDefault" visibility="protected" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_d8dDkFYkEdqB6vblk3tuMA" name="setIsComposite" visibility="protected">
        <ownedParameter xmi:id="_gOfXoFYkEdqB6vblk3tuMA" name="newIsComposite" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_sJdfYFYlEdqB6vblk3tuMA" name="setOpposite" visibility="protected">
        <ownedParameter xmi:id="_tesM8FYlEdqB6vblk3tuMA" name="newOpposite" visibility="protected" type="_Jp_1oGveEdq4DLWZOhbdEA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_kGtosGXCEdqEJs8umHJc9g" name="unsetDefault" visibility="protected"/>
      <ownedOperation xmi:id="_SzqSgK6-EdqjppZik4kD8A" name="setIsNavigable">
        <ownedComment xmi:id="_7VJRoOweEdqYHf-imTcTdw" annotatedElement="_SzqSgK6-EdqjppZik4kD8A">
          <body>Sets the navigability of this property as indicated.</body>
        </ownedComment>
        <ownedParameter xmi:id="_VzI7YK6-EdqjppZik4kD8A" name="isNavigable" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_bAUx8K6-EdqjppZik4kD8A" name="getOtherEnd">
        <ownedComment xmi:id="__u7VUOweEdqYHf-imTcTdw" annotatedElement="_bAUx8K6-EdqjppZik4kD8A">
          <body>Retrieves the other end of the (binary) association in which this property is a member end.</body>
        </ownedComment>
        <ownedParameter xmi:id="_eTnusK6-EdqjppZik4kD8A" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f6Sxka6-EdqjppZik4kD8A" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_f6SxkK6-EdqjppZik4kD8A"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lYUggK6-EdqjppZik4kD8A" name="setBooleanDefaultValue">
        <ownedComment xmi:id="_GdHroOwfEdqYHf-imTcTdw" annotatedElement="_lYUggK6-EdqjppZik4kD8A">
          <body>Sets the default value for this property to the specified Boolean value.</body>
        </ownedComment>
        <ownedParameter xmi:id="_4BKD4K6-EdqjppZik4kD8A" name="value" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_94N94K6-EdqjppZik4kD8A" name="setIntegerDefaultValue">
        <ownedComment xmi:id="_Js2XAOwfEdqYHf-imTcTdw" annotatedElement="_94N94K6-EdqjppZik4kD8A">
          <body>Sets the default value for this property to the specified integer value.</body>
        </ownedComment>
        <ownedParameter xmi:id="_94N94a6-EdqjppZik4kD8A" name="value" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_GW7PkK6_EdqjppZik4kD8A" name="setStringDefaultValue">
        <ownedComment xmi:id="_LLBlMOwfEdqYHf-imTcTdw" annotatedElement="_GW7PkK6_EdqjppZik4kD8A">
          <body>Sets the default value for this property to the specified string value.</body>
        </ownedComment>
        <ownedParameter xmi:id="_GW7Pka6_EdqjppZik4kD8A" name="value" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_NXJxEK6_EdqjppZik4kD8A" name="setUnlimitedNaturalDefaultValue">
        <ownedComment xmi:id="_NTqssOwfEdqYHf-imTcTdw" annotatedElement="_NXJxEK6_EdqjppZik4kD8A">
          <body>Sets the default value for this property to the specified unlimited natural value.</body>
        </ownedComment>
        <ownedParameter xmi:id="_NXJxEa6_EdqjppZik4kD8A" name="value" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_WU_10K6_EdqjppZik4kD8A" name="setNullDefaultValue">
        <ownedComment xmi:id="_O5cXsOwfEdqYHf-imTcTdw" annotatedElement="_WU_10K6_EdqjppZik4kD8A">
          <body>Sets the default value for this property to the null value.</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_oBYj8fWnEdqea89UKW2qFQ" name="isAttribute" visibility="public" isQuery="true" bodyCondition="_oBYj8_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBYj8vWnEdqea89UKW2qFQ" annotatedElement="_oBYj8fWnEdqea89UKW2qFQ">
          <body>The query isAttribute() is true if the Property is defined as an attribute of some classifier.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBYj8_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBYj8fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF_-GfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = Classifier.allInstances->exists(c | c.attribute->includes(p))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBYj9fWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oBYj9vWnEdqea89UKW2qFQ" name="p" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBYj2PWnEdqea89UKW2qFQ" name="opposite" visibility="public" isQuery="true" bodyCondition="_oBYj2vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBYj2fWnEdqea89UKW2qFQ" annotatedElement="_oBYj2PWnEdqea89UKW2qFQ">
          <body>If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBYj2vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBYj2PWnEdqea89UKW2qFQ _oBYjzPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF_-GvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if owningAssociation->isEmpty() and association.memberEnd->size() = 2&#xA;  then&#xA;    let otherEnd = (association.memberEnd - self)->any() in&#xA;      if otherEnd.owningAssociation->isEmpty() then otherEnd else Set{} endif&#xA;    else Set {}&#xA;    endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBYj3PWnEdqea89UKW2qFQ" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oF_-G_WnEdqea89UKW2qFQ" name="isComposite" isQuery="true" bodyCondition="_oF_-HfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oF_-HPWnEdqea89UKW2qFQ" annotatedElement="_oF_-G_WnEdqea89UKW2qFQ">
          <body>The value of isComposite is true only if aggregation is composite.</body>
        </ownedComment>
        <ownedRule xmi:id="_oF_-HfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oF_-G_WnEdqea89UKW2qFQ _oBOy-fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF_-HvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (self.aggregation = #composite)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oF_-H_WnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBYj3fWnEdqea89UKW2qFQ" name="isConsistentWith" visibility="public" isQuery="true" precondition="_oBYj3_WnEdqea89UKW2qFQ" redefinedOperation="_oA735_WnEdqea89UKW2qFQ" bodyCondition="_oBYj4fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBYj3vWnEdqea89UKW2qFQ" annotatedElement="_oBYj3fWnEdqea89UKW2qFQ">
          <body>The query isConsistentWith() specifies, for any two Properties in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining property is consistent with a redefined property if the type of the redefining property conforms to the type of the redefined property, the multiplicity of the redefining property (if specified) is contained in the multiplicity of the redefined property, and the redefining property is derived if the redefined property is derived.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBYj3_WnEdqea89UKW2qFQ" constrainedElement="_oBYj3fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF_-IPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>redefinee.isRedefinitionContextValid(self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oBYj4fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBYj3fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oF_-IfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = redefinee.oclIsKindOf(Property) and &#xA;  let prop : Property = redefinee.oclAsType(Property) in &#xA;  (prop.type.conformsTo(self.type) and &#xA;  ((prop.lowerBound()->notEmpty() and self.lowerBound()->notEmpty()) implies prop.lowerBound() >= self.lowerBound()) and &#xA;  ((prop.upperBound()->notEmpty() and self.upperBound()->notEmpty()) implies prop.lowerBound() &lt;= self.lowerBound()) and &#xA;  (self.isDerived implies prop.isDerived) and&#xA;  (self.isComposite implies prop.isComposite))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBYj4_WnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oBYj5PWnEdqea89UKW2qFQ" name="redefinee" visibility="public" type="_oA731vWnEdqea89UKW2qFQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBYj5fWnEdqea89UKW2qFQ" name="subsettingContext" visibility="public" isQuery="true" bodyCondition="_oBYj5_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBYj5vWnEdqea89UKW2qFQ" annotatedElement="_oBYj5fWnEdqea89UKW2qFQ">
          <body>The query subsettingContext() gives the context for subsetting a property. It consists, in the case of an attribute, of the corresponding classifier, and in the case of an association end, all of the classifiers at the other ends.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBYj5_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBYj5fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGJvAPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if association->notEmpty()&#xA;then association.endType-type&#xA;else if classifier->notEmpty() then Set{classifier} else Set{} endif&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBYj6fWnEdqea89UKW2qFQ" visibility="public" type="_ynRtoGvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGJvAfWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGJvAvWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oBYj7PWnEdqea89UKW2qFQ" name="isNavigable" visibility="public" isQuery="true" bodyCondition="_oBYj7vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBYj7fWnEdqea89UKW2qFQ" annotatedElement="_oBYj7PWnEdqea89UKW2qFQ">
          <body>The query isNavigable() indicates whether it is possible to navigate across the property.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBYj7vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBYj7PWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGJvA_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = not classifier->isEmpty() or association.owningAssociation.navigableOwnedEnd->includes(self)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBYj8PWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_obAkzPWnEdqea89UKW2qFQ" name="isCompatibleWith" isQuery="true" redefinedOperation="_obAku_WnEdqea89UKW2qFQ" bodyCondition="_obAkzvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obAkzfWnEdqea89UKW2qFQ" annotatedElement="_obAkzPWnEdqea89UKW2qFQ">
          <body>The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. In addition, for properties, the type must be conformant with the type of the specified parameterable element.&#xD;
</body>
        </ownedComment>
        <ownedRule xmi:id="_obAkzvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_obAkzPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_obAkz_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = p->oclIsKindOf(self.oclType) and self.type.conformsTo(p.oclAsType(TypedElement).type)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_obAk0PWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_obAk0fWnEdqea89UKW2qFQ" name="p" type="_obAksPWnEdqea89UKW2qFQ"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oBFBwPWnEdqea89UKW2qFQ" name="ValueSpecification" isAbstract="true">
      <ownedComment xmi:id="_oBFBwfWnEdqea89UKW2qFQ" annotatedElement="_oBFBwPWnEdqea89UKW2qFQ">
        <body>A value specification is the specification of a (possibly empty) set of instances, including both objects and data values.</body>
      </ownedComment>
      <ownedComment xmi:id="_obKVsPWnEdqea89UKW2qFQ" annotatedElement="_oBFBwPWnEdqea89UKW2qFQ">
        <body>ValueSpecification specializes ParameterableElement to specify that a value specification can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.</body>
      </ownedComment>
      <generalization xmi:id="_oBFBwvWnEdqea89UKW2qFQ" general="_oA73_vWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oBFBw_WnEdqea89UKW2qFQ" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <ownedOperation xmi:id="_oBFBxPWnEdqea89UKW2qFQ" name="isComputable" visibility="public" isQuery="true" bodyCondition="_oBFBxvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBFBxfWnEdqea89UKW2qFQ" annotatedElement="_oBFBxPWnEdqea89UKW2qFQ">
          <body>The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBFBxvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBFBxPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oG5V4PWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = false</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBFByPWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBFByfWnEdqea89UKW2qFQ" name="integerValue" visibility="public" isQuery="true" bodyCondition="_oBFBy_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBFByvWnEdqea89UKW2qFQ" annotatedElement="_oBFByfWnEdqea89UKW2qFQ">
          <body>The query integerValue() gives a single Integer value when one can be computed.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBFBy_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBFByfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oG5V4fWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = Set{}</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBFBzfWnEdqea89UKW2qFQ" visibility="public" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBFBzvWnEdqea89UKW2qFQ" name="booleanValue" visibility="public" isQuery="true" bodyCondition="_oBFB0PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBFBz_WnEdqea89UKW2qFQ" annotatedElement="_oBFBzvWnEdqea89UKW2qFQ">
          <body>The query booleanValue() gives a single Boolean value when one can be computed.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBFB0PWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBFBzvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oG5V4vWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = Set{}</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBFB0vWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBFB0_WnEdqea89UKW2qFQ" name="stringValue" visibility="public" isQuery="true" bodyCondition="_oBFB1fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBFB1PWnEdqea89UKW2qFQ" annotatedElement="_oBFB0_WnEdqea89UKW2qFQ">
          <body>The query stringValue() gives a single String value when one can be computed.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBFB1fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBFB0_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oG5V4_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = Set{}</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBFB1_WnEdqea89UKW2qFQ" visibility="public" type="_aAyVgGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBFB2PWnEdqea89UKW2qFQ" name="unlimitedValue" visibility="public" isQuery="true" bodyCondition="_oBFB2vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBFB2fWnEdqea89UKW2qFQ" annotatedElement="_oBFB2PWnEdqea89UKW2qFQ">
          <body>The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBFB2vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBFB2PWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oG5V5PWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = Set{}</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBFB3PWnEdqea89UKW2qFQ" visibility="public" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBFB3fWnEdqea89UKW2qFQ" name="isNull" visibility="public" isQuery="true" bodyCondition="_oBFB3_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBFB3vWnEdqea89UKW2qFQ" annotatedElement="_oBFB3fWnEdqea89UKW2qFQ">
          <body>The query isNull() returns true when it can be computed that the value is null.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBFB3_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBFB3fWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oG5V5fWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = false</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBFB4fWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_obKVsvWnEdqea89UKW2qFQ" name="isCompatibleWith" isQuery="true" redefinedOperation="_obAku_WnEdqea89UKW2qFQ" bodyCondition="_obKVtPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obKVs_WnEdqea89UKW2qFQ" annotatedElement="_obKVsvWnEdqea89UKW2qFQ">
          <body>The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. In addition, for ValueSpecification, the type must be conformant with the type of the specified parameterable element.&#xD;
</body>
        </ownedComment>
        <ownedRule xmi:id="_obKVtPWnEdqea89UKW2qFQ" name="spec" constrainedElement="_obKVsvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_obKVtfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = p->oclIsKindOf(self.oclType) and self.type.conformsTo(p.oclAsType(TypedElement).type)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_obKVtvWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_obKVt_WnEdqea89UKW2qFQ" name="p" type="_obAksPWnEdqea89UKW2qFQ"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_M4X2IGveEdq4DLWZOhbdEA" name="Operation">
      <ownedComment xmi:id="_oBresPWnEdqea89UKW2qFQ" annotatedElement="_M4X2IGveEdq4DLWZOhbdEA">
        <body>An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior.</body>
      </ownedComment>
      <ownedComment xmi:id="_oM20HPWnEdqea89UKW2qFQ" annotatedElement="_M4X2IGveEdq4DLWZOhbdEA">
        <body>An operation may invoke both the execution of method behaviors as well as other behavioral responses.</body>
      </ownedComment>
      <ownedComment xmi:id="_obKVuPWnEdqea89UKW2qFQ" annotatedElement="_M4X2IGveEdq4DLWZOhbdEA">
        <body>Operation specializes TemplateableElement in order to support specification of template operations and bound operations. Operation specializes ParameterableElement to specify that an operation can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.</body>
      </ownedComment>
      <ownedRule xmi:id="_oBretPWnEdqea89UKW2qFQ" name="at_most_one_return" constrainedElement="_M4X2IGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oBretfWnEdqea89UKW2qFQ" annotatedElement="_oBretPWnEdqea89UKW2qFQ">
          <body>An operation can have at most one return parameter; i.e., an owned parameter with the direction set to 'return'</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGJvBPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.ownedParameter->select(par | par.direction = #return)->size() &lt;= 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBresfWnEdqea89UKW2qFQ" name="only_body_for_query" constrainedElement="_M4X2IGveEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_oBresvWnEdqea89UKW2qFQ" annotatedElement="_oBresfWnEdqea89UKW2qFQ">
          <body>A bodyCondition can only be specified for a query operation.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGJvBfWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>bodyCondition->notEmpty() implies isQuery</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oBret_WnEdqea89UKW2qFQ" general="_rHT3YKOsEdqi_5gqUMOQtA"/>
      <generalization xmi:id="_obKVufWnEdqea89UKW2qFQ" general="_obAksPWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_obKVuvWnEdqea89UKW2qFQ" general="_oa2zxvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oBreuPWnEdqea89UKW2qFQ" name="isQuery" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oBreufWnEdqea89UKW2qFQ" annotatedElement="_oBreuPWnEdqea89UKW2qFQ">
          <body>Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false).</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oGJvBvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBreu_WnEdqea89UKW2qFQ" name="isOrdered" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" isDerived="true">
        <ownedComment xmi:id="_oBrevPWnEdqea89UKW2qFQ" annotatedElement="_oBreu_WnEdqea89UKW2qFQ">
          <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGJvB_WnEdqea89UKW2qFQ" annotatedElement="_oBreu_WnEdqea89UKW2qFQ">
          <body>Specifies whether the return parameter is ordered or not, if present.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oGJvCPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBrevvWnEdqea89UKW2qFQ" name="isUnique" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" isDerived="true">
        <ownedComment xmi:id="_oBrev_WnEdqea89UKW2qFQ" annotatedElement="_oBrevvWnEdqea89UKW2qFQ">
          <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGJvCfWnEdqea89UKW2qFQ" annotatedElement="_oBrevvWnEdqea89UKW2qFQ">
          <body>Specifies whether the return parameter is unique or not, if present.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oGJvCvWnEdqea89UKW2qFQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBrewfWnEdqea89UKW2qFQ" name="lower" visibility="public" type="_XqvEIGvsEdqG6fBIPwe-mw" isDerived="true">
        <ownedComment xmi:id="_oBrewvWnEdqea89UKW2qFQ" annotatedElement="_oBrewfWnEdqea89UKW2qFQ">
          <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGJvC_WnEdqea89UKW2qFQ" annotatedElement="_oBrewfWnEdqea89UKW2qFQ">
          <body>Specifies the lower multiplicity of the return parameter, if present.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGJvDPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGJvDfWnEdqea89UKW2qFQ"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_oGJvDvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBrexvWnEdqea89UKW2qFQ" name="upper" visibility="public" type="_dRZxsGvsEdqG6fBIPwe-mw" isDerived="true">
        <ownedComment xmi:id="_oBrex_WnEdqea89UKW2qFQ" annotatedElement="_oBrexvWnEdqea89UKW2qFQ">
          <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGJvD_WnEdqea89UKW2qFQ" annotatedElement="_oBrexvWnEdqea89UKW2qFQ">
          <body>Specifies the upper multiplicity of the return parameter, if present.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGS48PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGS48fWnEdqea89UKW2qFQ"/>
        <defaultValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGS48vWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBrey_WnEdqea89UKW2qFQ" name="class" visibility="public" type="_00owUGvdEdq4DLWZOhbdEA" subsettedProperty="_oA733_WnEdqea89UKW2qFQ _oCRUo_WnEdqea89UKW2qFQ _oAoV0_WnEdqea89UKW2qFQ" association="_oCk2lfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBrezPWnEdqea89UKW2qFQ" annotatedElement="_oBrey_WnEdqea89UKW2qFQ">
          <body>The class that owns the operation.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGS48_WnEdqea89UKW2qFQ" annotatedElement="_oBrey_WnEdqea89UKW2qFQ">
          <body>The class that owns this operation.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGS49PWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGS49fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBre4_WnEdqea89UKW2qFQ" name="precondition" visibility="public" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG6fWnEdqea89UKW2qFQ" association="_oC3xqfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oGS49vWnEdqea89UKW2qFQ" annotatedElement="_oBre4_WnEdqea89UKW2qFQ">
          <body>An optional set of Constraints on the state of the system when the Operation is invoked.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGS49_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGS4-PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBre5vWnEdqea89UKW2qFQ" name="postcondition" visibility="public" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG6fWnEdqea89UKW2qFQ" association="_oC3xrvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oGS4-fWnEdqea89UKW2qFQ" annotatedElement="_oBre5vWnEdqea89UKW2qFQ">
          <body>An optional set of Constraints specifying the state of the system when the Operation is completed.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGS4-vWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGS4-_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBre1_WnEdqea89UKW2qFQ" name="redefinedOperation" visibility="public" type="_M4X2IGveEdq4DLWZOhbdEA" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oCuAh_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBre2PWnEdqea89UKW2qFQ" annotatedElement="_oBre1_WnEdqea89UKW2qFQ">
          <body>References the Operations that are redefined by this Operation.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGS4_PWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGS4_fWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBrez_WnEdqea89UKW2qFQ" name="datatype" visibility="public" type="__1ap4HLzEdqziYxiZo0YtA" subsettedProperty="_oA733_WnEdqea89UKW2qFQ _oCRUo_WnEdqea89UKW2qFQ _oAoV0_WnEdqea89UKW2qFQ" association="_oCuAgPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBre0PWnEdqea89UKW2qFQ" annotatedElement="_oBrez_WnEdqea89UKW2qFQ">
          <body>The DataType that owns this Operation.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGS4_vWnEdqea89UKW2qFQ" annotatedElement="_oBrez_WnEdqea89UKW2qFQ">
          <body>The DataType that owns this Property.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGS4__WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGS5APWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBre6fWnEdqea89UKW2qFQ" name="bodyCondition" visibility="public" type="_oBht0PWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG6fWnEdqea89UKW2qFQ" association="_oC3xs_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oGS5AfWnEdqea89UKW2qFQ" annotatedElement="_oBre6fWnEdqea89UKW2qFQ">
          <body>An optional Constraint on the result values of an invocation of this Operation.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGS5AvWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGS5A_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBre2_WnEdqea89UKW2qFQ" name="type" visibility="public" type="_ynRtoGvtEdqG6fBIPwe-mw" isDerived="true" association="_oCuAq_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBre3PWnEdqea89UKW2qFQ" annotatedElement="_oBre2_WnEdqea89UKW2qFQ">
          <body>Redefines the corresponding property from Basic to derive this information from the return result for this Operation.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGS5BPWnEdqea89UKW2qFQ" annotatedElement="_oBre2_WnEdqea89UKW2qFQ">
          <body>Specifies the return result of the operation, if present.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGS5BfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGS5BvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBre3_WnEdqea89UKW2qFQ" name="ownedParameter" visibility="public" type="_KyaPMGveEdq4DLWZOhbdEA" isOrdered="true" aggregation="composite" redefinedProperty="_oB0ov_WnEdqea89UKW2qFQ" association="_oC3xn_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBre4PWnEdqea89UKW2qFQ" annotatedElement="_oBre3_WnEdqea89UKW2qFQ">
          <body>Specifies the ordered set of formal parameters of this BehavioralFeature.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGS5B_WnEdqea89UKW2qFQ" annotatedElement="_oBre3_WnEdqea89UKW2qFQ">
          <body>Specifies the parameters owned by this Operation.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGS5CPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGS5CfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oBre0_WnEdqea89UKW2qFQ" name="raisedException" visibility="public" type="_ynRtoGvtEdqG6fBIPwe-mw" redefinedProperty="_oB0ow_WnEdqea89UKW2qFQ" association="_oCuAhPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBre1PWnEdqea89UKW2qFQ" annotatedElement="_oBre0_WnEdqea89UKW2qFQ">
          <body>References the Types representing exceptions that may be raised during an invocation of this operation.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGS5CvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGS5C_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKBigvWnEdqea89UKW2qFQ" name="interface" type="_8Ugn8GvtEdqG6fBIPwe-mw" subsettedProperty="_oA733_WnEdqea89UKW2qFQ" association="_oKBijPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKBig_WnEdqea89UKW2qFQ" annotatedElement="_oKBigvWnEdqea89UKW2qFQ">
          <body>The Interface that owns this Operation.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKBihPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKBihfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_obKVu_WnEdqea89UKW2qFQ" name="templateParameter" type="_obKVv_WnEdqea89UKW2qFQ" redefinedProperty="_obAks_WnEdqea89UKW2qFQ" association="_ob58mvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obKVvPWnEdqea89UKW2qFQ" annotatedElement="_obKVu_WnEdqea89UKW2qFQ">
          <body>The template parameter that exposes this element as a formal parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obKVvfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obKVvvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_ho5pgFYLEdqrn7iZ0eqieg" name="getLower" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_jukVgFYLEdqrn7iZ0eqieg" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_ljsEEFYLEdqrn7iZ0eqieg" name="getUpper" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_pAh-YFYLEdqrn7iZ0eqieg" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_LgBIAFYlEdqB6vblk3tuMA" name="setIsOrdered" visibility="protected">
        <ownedParameter xmi:id="_NIoEkFYlEdqB6vblk3tuMA" name="newIsOrdered" visibility="protected" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_QTIRsFYlEdqB6vblk3tuMA" name="setIsUnique" visibility="protected">
        <ownedParameter xmi:id="_SFRkwFYlEdqB6vblk3tuMA" name="newIsUnique" visibility="protected" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_VrpOgFYlEdqB6vblk3tuMA" name="setLower" visibility="protected">
        <ownedParameter xmi:id="_XdMrsFYlEdqB6vblk3tuMA" name="newLower" visibility="protected" type="_XqvEIGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_kqFjwFYlEdqB6vblk3tuMA" name="setType" visibility="protected">
        <ownedParameter xmi:id="_l2PN0FYlEdqB6vblk3tuMA" name="newType" visibility="protected" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_arIAQFYlEdqB6vblk3tuMA" name="setUpper" visibility="protected">
        <ownedParameter xmi:id="_b-4HIFYlEdqB6vblk3tuMA" name="newUpper" visibility="protected" type="_dRZxsGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_HxDswKOyEdqi_5gqUMOQtA" name="getReturnResult">
        <ownedComment xmi:id="_tVUrUOwfEdqYHf-imTcTdw" annotatedElement="_HxDswKOyEdqi_5gqUMOQtA">
          <body>Retrieves the (only) return result parameter for this operation.</body>
        </ownedComment>
        <ownedParameter xmi:id="_MiYGsKOyEdqi_5gqUMOQtA" type="_KyaPMGveEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OvfegaOyEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OvfegKOyEdqi_5gqUMOQtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oBre7PWnEdqea89UKW2qFQ" name="isOrdered" visibility="public" isQuery="true" bodyCondition="_oBre7vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBre7fWnEdqea89UKW2qFQ" annotatedElement="_oBre7PWnEdqea89UKW2qFQ">
          <body>If this operation has a return parameter, isOrdered equals the value of isOrdered for that parameter. Otherwise isOrdered is false.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBre7vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBre7PWnEdqea89UKW2qFQ _oBreu_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGS5DPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if returnResult()->notEmpty() then returnResult()->any().isOrdered else false endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBre8PWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBre8fWnEdqea89UKW2qFQ" name="isUnique" visibility="public" isQuery="true" bodyCondition="_oBre8_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBre8vWnEdqea89UKW2qFQ" annotatedElement="_oBre8fWnEdqea89UKW2qFQ">
          <body>If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGS5DfWnEdqea89UKW2qFQ" annotatedElement="_oBre8fWnEdqea89UKW2qFQ">
          <body>If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.&#xD;
</body>
        </ownedComment>
        <ownedRule xmi:id="_oBre8_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBre8fWnEdqea89UKW2qFQ _oBrevvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGS5DvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if returnResult()->notEmpty() then returnResult()->any().isUnique else true endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBre9fWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBre9vWnEdqea89UKW2qFQ" name="lower" visibility="public" isQuery="true" bodyCondition="_oBre-PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBre9_WnEdqea89UKW2qFQ" annotatedElement="_oBre9vWnEdqea89UKW2qFQ">
          <body>If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGS5D_WnEdqea89UKW2qFQ" annotatedElement="_oBre9vWnEdqea89UKW2qFQ">
          <body>If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.&#xD;
</body>
        </ownedComment>
        <ownedRule xmi:id="_oBre-PWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBre9vWnEdqea89UKW2qFQ _oBrewfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGS5EPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if returnResult()->notEmpty() then returnResult()->any().lower else Set{} endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBre-vWnEdqea89UKW2qFQ" visibility="public" type="_XqvEIGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBre-_WnEdqea89UKW2qFQ" name="upper" visibility="public" isQuery="true" bodyCondition="_oBre_fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBre_PWnEdqea89UKW2qFQ" annotatedElement="_oBre-_WnEdqea89UKW2qFQ">
          <body>If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGS5EfWnEdqea89UKW2qFQ" annotatedElement="_oBre-_WnEdqea89UKW2qFQ">
          <body>If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.&#xD;
</body>
        </ownedComment>
        <ownedRule xmi:id="_oBre_fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBre-_WnEdqea89UKW2qFQ _oBrexvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGS5EvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if returnResult()->notEmpty() then returnResult()->any().upper else Set{} endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBre__WnEdqea89UKW2qFQ" visibility="public" type="_dRZxsGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oBrfAPWnEdqea89UKW2qFQ" name="type" visibility="public" isQuery="true" bodyCondition="_oBrfAvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oBrfAfWnEdqea89UKW2qFQ" annotatedElement="_oBrfAPWnEdqea89UKW2qFQ">
          <body>If this operation has a return parameter, type equals the value of type for that parameter. Otherwise type is not defined.</body>
        </ownedComment>
        <ownedRule xmi:id="_oBrfAvWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oBrfAPWnEdqea89UKW2qFQ _oBre2_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGcp8PWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if returnResult()->notEmpty() then returnResult()->any().type else Set{} endif</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBrfBPWnEdqea89UKW2qFQ" visibility="public" type="_ynRtoGvtEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oB0ooPWnEdqea89UKW2qFQ" name="isConsistentWith" visibility="public" isQuery="true" precondition="_oB0oovWnEdqea89UKW2qFQ" redefinedOperation="_oA735_WnEdqea89UKW2qFQ" bodyCondition="_oB0opPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB0oofWnEdqea89UKW2qFQ" annotatedElement="_oB0ooPWnEdqea89UKW2qFQ">
          <body>The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be consistent in the sense of maintaining type covariance. Other senses of consistency may be required, for example to determine consistency in the sense of contravariance. Users may define alternative queries under names different from 'isConsistentWith()', as for example, users may define a query named 'isContravariantWith()'.</body>
        </ownedComment>
        <ownedComment xmi:id="_oGcp8fWnEdqea89UKW2qFQ" annotatedElement="_oB0ooPWnEdqea89UKW2qFQ">
          <body>The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining operation is consistent with a redefined operation if it has the same number of owned parameters, and the type of each owned parameter conforms to the type of the corresponding redefined parameter. </body>
        </ownedComment>
        <ownedRule xmi:id="_oB0oovWnEdqea89UKW2qFQ" constrainedElement="_oB0ooPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGcp8vWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>redefinee.isRedefinitionContextValid(self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oB0opPWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oB0ooPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGcp8_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (redefinee.oclIsKindOf(Operation) and&#xA;let op: Operation = redefinee.oclAsType(Operation) in&#xA;self.ownedParameter.size() = op.ownedParameter.size() and&#xA;forAll(i | op.ownedParameter[i].type.conformsTo(self.ownedParameter[i].type))&#xA;)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oB0opvWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oB0op_WnEdqea89UKW2qFQ" name="redefinee" visibility="public" type="_oA731vWnEdqea89UKW2qFQ"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oB0oqPWnEdqea89UKW2qFQ" name="returnResult" visibility="public" isQuery="true" bodyCondition="_oB0oqfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oGcp9PWnEdqea89UKW2qFQ" annotatedElement="_oB0oqPWnEdqea89UKW2qFQ">
          <body>The query returnResult() returns the set containing the return parameter of the Operation if one exists, otherwise, it returns an empty set</body>
        </ownedComment>
        <ownedRule xmi:id="_oB0oqfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oB0oqPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGcp9fWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = ownedParameter->select (par | par.direction = #return)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oB0oq_WnEdqea89UKW2qFQ" visibility="public" type="_KyaPMGveEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGcp9vWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oGcp9_WnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_obKVv_WnEdqea89UKW2qFQ" name="OperationTemplateParameter">
      <ownedComment xmi:id="_obKVwPWnEdqea89UKW2qFQ" annotatedElement="_obKVv_WnEdqea89UKW2qFQ">
        <body>An operation template parameter exposes an operation as a formal parameter for a template.</body>
      </ownedComment>
      <generalization xmi:id="_obKVwfWnEdqea89UKW2qFQ" general="_KxRzgGvuEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_obKVwvWnEdqea89UKW2qFQ" name="parameteredElement" type="_M4X2IGveEdq4DLWZOhbdEA" redefinedProperty="_oaj4yfWnEdqea89UKW2qFQ" association="_ob58mvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obKVw_WnEdqea89UKW2qFQ" annotatedElement="_obKVwvWnEdqea89UKW2qFQ">
          <body>The operation for this template parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obKVxPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obKVxfWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jKxnwGwLEdq7X4sGURiZYA" name="PackageableElement" isAbstract="true">
      <ownedComment xmi:id="_oA731PWnEdqea89UKW2qFQ" annotatedElement="_jKxnwGwLEdq7X4sGURiZYA">
        <body>A packageable element indicates a named element that may be owned directly by a package.</body>
      </ownedComment>
      <ownedComment xmi:id="_obKVxvWnEdqea89UKW2qFQ" annotatedElement="_jKxnwGwLEdq7X4sGURiZYA">
        <body>Packageable elements are able to serve as a template parameter.</body>
      </ownedComment>
      <generalization xmi:id="_oA731fWnEdqea89UKW2qFQ" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <generalization xmi:id="_obKVx_WnEdqea89UKW2qFQ" general="_obAksPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oDxJZfWnEdqea89UKW2qFQ" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA" redefinedProperty="_oCRUn_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oDxJZvWnEdqea89UKW2qFQ" annotatedElement="_oDxJZfWnEdqea89UKW2qFQ">
          <body>Indicates that packageable elements must always have a visibility, i.e., visibility is not optional.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_oDxJZ_WnEdqea89UKW2qFQ" type="_AyM_oGwMEdq7X4sGURiZYA" instance="_oCbFo_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6UV2QGwJEdq7X4sGURiZYA" name="Classifier" isAbstract="true">
      <ownedComment xmi:id="_n_vlAPWnEdqea89UKW2qFQ" annotatedElement="_6UV2QGwJEdq7X4sGURiZYA">
        <body>A classifier is a classification of instances - it describes a set of instances that have features in common. A classifier can specify a generalization hierarchy by referencing its general classifiers.</body>
      </ownedComment>
      <ownedComment xmi:id="_oKUdbPWnEdqea89UKW2qFQ" annotatedElement="_6UV2QGwJEdq7X4sGURiZYA">
        <body>A classifier has the capability to own collaboration uses. These collaboration uses link a collaboration with the classifier to give a description of the workings of the classifier.</body>
      </ownedComment>
      <ownedComment xmi:id="_oMaIMPWnEdqea89UKW2qFQ" annotatedElement="_6UV2QGwJEdq7X4sGURiZYA">
        <body>A classifier has the capability to own use cases. Although the owning classifier typically represents the subject to which the owned use cases apply, this is not necessarily the case. In principle, the same use case can be applied to multiple subjects, as identified by the subject association role of a use case.</body>
      </ownedComment>
      <ownedComment xmi:id="_obKVyPWnEdqea89UKW2qFQ" annotatedElement="_6UV2QGwJEdq7X4sGURiZYA">
        <body>Classifier is defined to be a kind of templateable element so that a classifier can be parameterized. It is also defined to be a kind of parameterable element so that a classifier can be a formal template parameter.</body>
      </ownedComment>
      <ownedRule xmi:id="_n_4u8PWnEdqea89UKW2qFQ" name="no_cycles_in_generalization" constrainedElement="_6UV2QGwJEdq7X4sGURiZYA">
        <ownedComment xmi:id="_n_4u8fWnEdqea89UKW2qFQ" annotatedElement="_n_4u8PWnEdqea89UKW2qFQ">
          <body>Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n_4u8vWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>not self.allParents()->includes(self)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oEgwTPWnEdqea89UKW2qFQ" name="generalization_hierarchies" constrainedElement="_6UV2QGwJEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oEgwTfWnEdqea89UKW2qFQ" annotatedElement="_oEgwTPWnEdqea89UKW2qFQ">
          <body>Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEgwTvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>not self.allParents()->includes(self)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n_4u8_WnEdqea89UKW2qFQ" name="specialize_type" constrainedElement="_6UV2QGwJEdq7X4sGURiZYA">
        <ownedComment xmi:id="_n_4u9PWnEdqea89UKW2qFQ" annotatedElement="_n_4u8_WnEdqea89UKW2qFQ">
          <body>A classifier may only specialize classifiers of a valid type.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEgwT_WnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.parents()->forAll(c | self.maySpecializeType(c))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oVM3vPWnEdqea89UKW2qFQ" name="maps_to_generalization_set" constrainedElement="_6UV2QGwJEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oVM3vfWnEdqea89UKW2qFQ" annotatedElement="_oVM3vPWnEdqea89UKW2qFQ">
          <body>The Classifier that maps to a GeneralizationSet may neither be a specific nor a general Classifier in any of the Generalization relationships defined for that GeneralizationSet. In other words, a power type may not be an instance of itself nor may its instances also be its subclasses.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVM3vvWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oEgwUPWnEdqea89UKW2qFQ" general="_oA731vWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oACf8fWnEdqea89UKW2qFQ" general="_ynRtoGvtEdqG6fBIPwe-mw"/>
      <generalization xmi:id="_obTfoPWnEdqea89UKW2qFQ" general="_oa2zxvWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_oACf8PWnEdqea89UKW2qFQ" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:id="_oEp6MPWnEdqea89UKW2qFQ" name="isAbstract" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_oEp6MfWnEdqea89UKW2qFQ" annotatedElement="_oEp6MPWnEdqea89UKW2qFQ">
          <body>If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.&#xD;
</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_oEp6MvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oEp6M_WnEdqea89UKW2qFQ" name="generalization" type="_C7AF4GwREdq14q0ETb1t3g" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oHMQ1vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEp6NPWnEdqea89UKW2qFQ" annotatedElement="_oEp6M_WnEdqea89UKW2qFQ">
          <body>Specifies the Generalization relationships for this Classifier. These Generalizations navigaten to more general classifiers in the generalization hierarchy.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEp6NfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEp6NvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAMQ8PWnEdqea89UKW2qFQ" name="feature" visibility="public" type="_oAoV0PWnEdqea89UKW2qFQ" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_oAyG5fWnEdqea89UKW2qFQ" association="_oC3xh_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAMQ8fWnEdqea89UKW2qFQ" annotatedElement="_oAMQ8PWnEdqea89UKW2qFQ">
          <body>Redefines the corresponding association in Abstractions.  Note that there may be members of the Classifier that are of the type Feature but are not included in this association, e.g. inherited features.</body>
        </ownedComment>
        <ownedComment xmi:id="_oEp6N_WnEdqea89UKW2qFQ" annotatedElement="_oAMQ8PWnEdqea89UKW2qFQ">
          <body>Specifies each feature defined in the classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEp6OPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEp6OfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAMQ-PWnEdqea89UKW2qFQ" name="inheritedMember" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" subsettedProperty="_oAyG5fWnEdqea89UKW2qFQ" association="_oC3xpvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAMQ-fWnEdqea89UKW2qFQ" annotatedElement="_oAMQ-PWnEdqea89UKW2qFQ">
          <body>Specifies all elements inherited by this classifier from the general classifiers.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEp6OvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEp6O_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oEp6PvWnEdqea89UKW2qFQ" name="redefinedClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_oHfLwPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oEp6P_WnEdqea89UKW2qFQ" annotatedElement="_oEp6PvWnEdqea89UKW2qFQ">
          <body>References the Classifiers that are redefined by this Classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEp6QPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEp6QfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oAMQ9PWnEdqea89UKW2qFQ" name="general" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA" isDerived="true" association="_oC3xkPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAMQ9fWnEdqea89UKW2qFQ" annotatedElement="_oAMQ9PWnEdqea89UKW2qFQ">
          <body>References the general classifier in the Generalization relationship.</body>
        </ownedComment>
        <ownedComment xmi:id="_oEp6QvWnEdqea89UKW2qFQ" annotatedElement="_oAMQ9PWnEdqea89UKW2qFQ">
          <body>Specifies the general Classifiers for this Classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEp6Q_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEp6RPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oJunlfWnEdqea89UKW2qFQ" name="substitution" type="_oJunifWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ _oJunmfWnEdqea89UKW2qFQ" association="_oJ3xbPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oJunlvWnEdqea89UKW2qFQ" annotatedElement="_oJunlfWnEdqea89UKW2qFQ">
          <body>References the substitutions that are owned by this Classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJunl_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJunmPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oACf8vWnEdqea89UKW2qFQ" name="attribute" visibility="public" type="_Jp_1oGveEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_oAMQ8PWnEdqea89UKW2qFQ" association="_oCk2nfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oACf8_WnEdqea89UKW2qFQ" annotatedElement="_oACf8vWnEdqea89UKW2qFQ">
          <body>Refers to all of the Properties that are direct (i.e. not inherited or imported) attributes of the classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKUdbfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKUdbvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKnYXfWnEdqea89UKW2qFQ" name="representation" type="_oKnYQPWnEdqea89UKW2qFQ" subsettedProperty="_oKnYYfWnEdqea89UKW2qFQ" association="_oKxJSfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKnYXvWnEdqea89UKW2qFQ" annotatedElement="_oKnYXfWnEdqea89UKW2qFQ">
          <body>References a collaboration use which indicates the collaboration that represents this classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKnYX_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKnYYPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oKnYYfWnEdqea89UKW2qFQ" name="collaborationUse" type="_oKnYQPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oKxJTvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKnYYvWnEdqea89UKW2qFQ" annotatedElement="_oKnYYfWnEdqea89UKW2qFQ">
          <body>References the collaboration uses owned by the classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKnYY_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKnYZPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMaIMfWnEdqea89UKW2qFQ" name="ownedUseCase" type="_oMaIAPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oMjSCPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaIMvWnEdqea89UKW2qFQ" annotatedElement="_oMaIMfWnEdqea89UKW2qFQ">
          <body>References the use cases owned by this classifier.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMaIM_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMaINPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oMaINfWnEdqea89UKW2qFQ" name="useCase" type="_oMaIAPWnEdqea89UKW2qFQ" association="_oMjSDfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oMaINvWnEdqea89UKW2qFQ" annotatedElement="_oMaINfWnEdqea89UKW2qFQ">
          <body>The set of use cases for which this Classifier is the subject.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oMaIN_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oMaIOPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oVM3v_WnEdqea89UKW2qFQ" name="powertypeExtent" type="_oVM3pfWnEdqea89UKW2qFQ" association="_oVWBmPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oVM3wPWnEdqea89UKW2qFQ" annotatedElement="_oVM3v_WnEdqea89UKW2qFQ">
          <body>Designates the GeneralizationSet of which the associated Classifier is a power type.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVM3wfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oVM3wvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_obTfovWnEdqea89UKW2qFQ" name="ownedTemplateSignature" type="_9keOQGvdEdq4DLWZOhbdEA" aggregation="composite" redefinedProperty="_oa2zzfWnEdqea89UKW2qFQ" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_obwLo_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obTfo_WnEdqea89UKW2qFQ" annotatedElement="_obTfovWnEdqea89UKW2qFQ">
          <body>The optional template signature specifying the formal template parameters.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obTfpPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obTfpfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_obTfpvWnEdqea89UKW2qFQ" name="templateParameter" type="_obdQoPWnEdqea89UKW2qFQ" redefinedProperty="_obAks_WnEdqea89UKW2qFQ" association="_ob58k_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obTfp_WnEdqea89UKW2qFQ" annotatedElement="_obTfpvWnEdqea89UKW2qFQ">
          <body>The template parameter that exposes this element as a formal parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obTfqPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obTfqfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_KjT7EGwREdq14q0ETb1t3g" name="getAllAttributes" isQuery="true">
        <ownedComment xmi:id="_osV7wOwkEdqYHf-imTcTdw" annotatedElement="_KjT7EGwREdq14q0ETb1t3g">
          <body>Retrieves all the attributes of this classifier, including those inherited from its parents.</body>
        </ownedComment>
        <ownedParameter xmi:id="_OXZQsGwREdq14q0ETb1t3g" type="_Jp_1oGveEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q1zM0WwREdq14q0ETb1t3g" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q1zM0GwREdq14q0ETb1t3g"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_XVsBYGwREdq14q0ETb1t3g" name="getOperations" isQuery="true">
        <ownedComment xmi:id="_wywpQOwkEdqYHf-imTcTdw" annotatedElement="_XVsBYGwREdq14q0ETb1t3g">
          <body>Retrieves the operations of this classifier.</body>
        </ownedComment>
        <ownedParameter xmi:id="_ZvULMGwREdq14q0ETb1t3g" type="_M4X2IGveEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cOT9MWwREdq14q0ETb1t3g" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_cOT9MGwREdq14q0ETb1t3g"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_d5JuYGwREdq14q0ETb1t3g" name="getAllOperations" isQuery="true">
        <ownedComment xmi:id="_yDq3gOwkEdqYHf-imTcTdw" annotatedElement="_d5JuYGwREdq14q0ETb1t3g">
          <body>Retrieves all the operations of this classifier, including those inherited from its parents.</body>
        </ownedComment>
        <ownedParameter xmi:id="_d5JuYWwREdq14q0ETb1t3g" type="_M4X2IGveEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_d5JuYmwREdq14q0ETb1t3g" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_d5JuY2wREdq14q0ETb1t3g"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_hw6gIHFhEdqziYxiZo0YtA" name="getOperation" isQuery="true">
        <ownedComment xmi:id="_-qt3kOwkEdqYHf-imTcTdw" annotatedElement="_hw6gIHFhEdqziYxiZo0YtA">
          <body>Retrieves the first operation with the specified name, parameter names, and parameter types from this classifier.</body>
        </ownedComment>
        <ownedParameter xmi:id="_ls4mcHFhEdqziYxiZo0YtA" type="_M4X2IGveEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_skn6UXFhEdqziYxiZo0YtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_skn6UHFhEdqziYxiZo0YtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_usha8HFhEdqziYxiZo0YtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UQSfgaOwEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_UQSfgKOwEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_LgAVoKOwEdqi_5gqUMOQtA" name="parameterNames" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vz1V4aOwEdqi_5gqUMOQtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Vz1V4KOwEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_s8hlMKOvEdqi_5gqUMOQtA" name="parameterTypes" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XhDssaOwEdqi_5gqUMOQtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XhDssKOwEdqi_5gqUMOQtA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_aGT3sKOwEdqi_5gqUMOQtA" name="getOperation" isQuery="true">
        <ownedComment xmi:id="_-8cgwOwkEdqYHf-imTcTdw" annotatedElement="_aGT3sKOwEdqi_5gqUMOQtA">
          <body>Retrieves the first operation with the specified name, parameter names, and parameter types from this classifier, ignoring case if indicated.</body>
        </ownedComment>
        <ownedParameter xmi:id="_aGT3saOwEdqi_5gqUMOQtA" type="_M4X2IGveEdq4DLWZOhbdEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aGT3sqOwEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aGT3s6OwEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_aGT3tKOwEdqi_5gqUMOQtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aGT3taOwEdqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aGT3tqOwEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_aGT3t6OwEdqi_5gqUMOQtA" name="parameterNames" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aGT3uKOwEdqi_5gqUMOQtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aGT3uaOwEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_aGT3uqOwEdqi_5gqUMOQtA" name="parameterTypes" type="_ynRtoGvtEdqG6fBIPwe-mw" effect="read">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aGT3u6OwEdqi_5gqUMOQtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aGT3vKOwEdqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_c2vX8KOwEdqi_5gqUMOQtA" name="ignoreCase" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_8OsQwK69EdqjppZik4kD8A" name="getUsedInterfaces">
        <ownedComment xmi:id="_IHZ0cOwlEdqYHf-imTcTdw" annotatedElement="_8OsQwK69EdqjppZik4kD8A">
          <body>Retrieves the interfaces on which this classifier has a usage dependency.</body>
        </ownedComment>
        <ownedParameter xmi:id="_GDE78K6-EdqjppZik4kD8A" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_J92vca6-EdqjppZik4kD8A" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_J92vcK6-EdqjppZik4kD8A"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_MH_rwK6-EdqjppZik4kD8A" name="getAllUsedInterfaces">
        <ownedComment xmi:id="_LQH44OwlEdqYHf-imTcTdw" annotatedElement="_MH_rwK6-EdqjppZik4kD8A">
          <body>Retrieves all the interfaces on which this classifier or any of its parents has a usage dependency.</body>
        </ownedComment>
        <ownedParameter xmi:id="_MH_rwa6-EdqjppZik4kD8A" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MH_rwq6-EdqjppZik4kD8A" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MH_rw66-EdqjppZik4kD8A"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAVa5_WnEdqea89UKW2qFQ" name="general" visibility="public" isQuery="true" bodyCondition="_oAVa6fWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAVa6PWnEdqea89UKW2qFQ" annotatedElement="_oAVa5_WnEdqea89UKW2qFQ">
          <body>The general classifiers are the classifiers referenced by the generalization relationships.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAVa6fWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAVa5_WnEdqea89UKW2qFQ _oAMQ9PWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEp6RfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = self.parents()</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAVa6_WnEdqea89UKW2qFQ" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEp6RvWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEp6R_WnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAVa9fWnEdqea89UKW2qFQ" name="inheritedMember" visibility="public" isQuery="true" bodyCondition="_oAVa9_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAVa9vWnEdqea89UKW2qFQ" annotatedElement="_oAVa9fWnEdqea89UKW2qFQ">
          <body>The inheritedMember association is derived by inheriting the inheritable members of the parents.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAVa9_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAVa9fWnEdqea89UKW2qFQ _oAMQ-PWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEp6SPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = self.inherit(self.parents()->collect(p | p.inheritableMembers(self))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAVa-fWnEdqea89UKW2qFQ" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEp6SfWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEp6SvWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAVa4PWnEdqea89UKW2qFQ" name="allFeatures" visibility="public" isQuery="true" bodyCondition="_oAVa4vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAVa4fWnEdqea89UKW2qFQ" annotatedElement="_oAVa4PWnEdqea89UKW2qFQ">
          <body>The query allFeatures() gives all of the features in the namespace of the classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAVa4vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAVa4PWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEp6S_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = member->select(oclIsKindOf(Feature))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAVa5PWnEdqea89UKW2qFQ" visibility="public" type="_oAoV0PWnEdqea89UKW2qFQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEp6TPWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEp6TfWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAVa7vWnEdqea89UKW2qFQ" name="parents" visibility="public" isQuery="true" bodyCondition="_oAVa8PWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAVa7_WnEdqea89UKW2qFQ" annotatedElement="_oAVa7vWnEdqea89UKW2qFQ">
          <body>The query parents() gives all of the immediate ancestors of a generalized Classifier.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAVa8PWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAVa7vWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEp6TvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = generalization.general</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAVa8vWnEdqea89UKW2qFQ" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEzrMPWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEzrMfWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAVbA_WnEdqea89UKW2qFQ" name="inheritableMembers" visibility="public" isQuery="true" precondition="_oAVbBfWnEdqea89UKW2qFQ" postcondition="_oAVbBfWnEdqea89UKW2qFQ" bodyCondition="_oAVbB_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAVbBPWnEdqea89UKW2qFQ" annotatedElement="_oAVbA_WnEdqea89UKW2qFQ">
          <body>The query inheritableMembers() gives all of the members of a classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAVbBfWnEdqea89UKW2qFQ" constrainedElement="_oAVbA_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEzrM_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>c.allParents()->includes(self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oAVbB_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAVbA_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEzrNPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = member->select(m | c.hasVisibilityOf(m))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAVbCfWnEdqea89UKW2qFQ" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEzrNfWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEzrNvWnEdqea89UKW2qFQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oAVbDPWnEdqea89UKW2qFQ" name="c" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oAVbDfWnEdqea89UKW2qFQ" name="hasVisibilityOf" visibility="public" isQuery="true" precondition="_oAVbD_WnEdqea89UKW2qFQ" bodyCondition="_oAVbEfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAVbDvWnEdqea89UKW2qFQ" annotatedElement="_oAVbDfWnEdqea89UKW2qFQ">
          <body>The query hasVisibilityOf() determines whether a named element is visible in the classifier. By default all are visible. It is only called when the argument is something owned by a parent.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAVbD_WnEdqea89UKW2qFQ" constrainedElement="_oAVbDfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEzrN_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>self.allParents()->collect(c | c.member)->includes(n)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oAVbEfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAVbDfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEzrOPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = if (self.inheritedMember->includes(n)) then (n.visibility &lt;> #private) else true</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAVbE_WnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oAVbFPWnEdqea89UKW2qFQ" name="n" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oAMQ_PWnEdqea89UKW2qFQ" name="conformsTo" visibility="public" isQuery="true" redefinedOperation="_oCIK1vWnEdqea89UKW2qFQ" bodyCondition="_oAMQ_vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAMQ_fWnEdqea89UKW2qFQ" annotatedElement="_oAMQ_PWnEdqea89UKW2qFQ">
          <body>The query conformsTo() gives true for a classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAMQ_vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAMQ_PWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEzrOfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (self=other) or (self.allParents()->includes(other))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAMRAPWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oAMRAfWnEdqea89UKW2qFQ" name="other" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oAVbFfWnEdqea89UKW2qFQ" name="inherit" visibility="public" isQuery="true" bodyCondition="_oAVbF_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAVbFvWnEdqea89UKW2qFQ" annotatedElement="_oAVbFfWnEdqea89UKW2qFQ">
          <body>The inherit operation is overridden to exclude redefined properties.</body>
        </ownedComment>
        <ownedComment xmi:id="_oEzrOvWnEdqea89UKW2qFQ" annotatedElement="_oAVbFfWnEdqea89UKW2qFQ">
          <body>The query inherit() defines how to inherit a set of elements. Here the operation is defined to inherit them all. It is intended to be redefined in circumstances where inheritance is affected by redefinition.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAVbF_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAVbFfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEzrO_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = inhs</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAVbGfWnEdqea89UKW2qFQ" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEzrPPWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEzrPfWnEdqea89UKW2qFQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="_oAVbHPWnEdqea89UKW2qFQ" name="inhs" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEzrPvWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEzrP_WnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAVbH_WnEdqea89UKW2qFQ" name="maySpecializeType" visibility="public" isQuery="true" bodyCondition="_oAVbIfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAVbIPWnEdqea89UKW2qFQ" annotatedElement="_oAVbH_WnEdqea89UKW2qFQ">
          <body>The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAVbIfWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAVbH_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEzrQPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = self.oclIsKindOf(c.oclType)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAVbI_WnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oAVbJPWnEdqea89UKW2qFQ" name="c" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oAVa_PWnEdqea89UKW2qFQ" name="allParents" visibility="public" isQuery="true" bodyCondition="_oAVa_vWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oAVa_fWnEdqea89UKW2qFQ" annotatedElement="_oAVa_PWnEdqea89UKW2qFQ">
          <body>The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier.</body>
        </ownedComment>
        <ownedRule xmi:id="_oAVa_vWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oAVa_PWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEzrQfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = self.parents()->union(self.parents()->collect(p | p.allParents())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAVbAPWnEdqea89UKW2qFQ" visibility="public" type="_6UV2QGwJEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEzrQvWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oEzrQ_WnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_obTfqvWnEdqea89UKW2qFQ" name="isTemplate" isQuery="true" redefinedOperation="_oa2z2PWnEdqea89UKW2qFQ" bodyCondition="_obTfrPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obTfq_WnEdqea89UKW2qFQ" annotatedElement="_obTfqvWnEdqea89UKW2qFQ">
          <body>The query isTemplate() returns whether this templateable element is actually a template.</body>
        </ownedComment>
        <ownedRule xmi:id="_obTfrPWnEdqea89UKW2qFQ" name="spec" constrainedElement="_obTfqvWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_obTfrfWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = oclAsType(TemplatableElement).isTemplate() or general->exists(g | g.isTemplate())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_obTfrvWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_obdQoPWnEdqea89UKW2qFQ" name="ClassifierTemplateParameter">
      <ownedComment xmi:id="_obdQofWnEdqea89UKW2qFQ" annotatedElement="_obdQoPWnEdqea89UKW2qFQ">
        <body>A classifier template parameter exposes a classifier as a formal template parameter.</body>
      </ownedComment>
      <ownedRule xmi:id="_obdQovWnEdqea89UKW2qFQ" name="has_constraining_classifier" constrainedElement="_obdQoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obdQo_WnEdqea89UKW2qFQ" annotatedElement="_obdQovWnEdqea89UKW2qFQ">
          <body>If &quot;allowSubstitutable&quot; is true, then there must be a constrainingClassifier.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_obdQpPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>allowSubstitutable implies constrainingClassifier->notEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_obdQpfWnEdqea89UKW2qFQ" general="_KxRzgGvuEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_obdQpvWnEdqea89UKW2qFQ" name="allowSubstitutable" type="_UdivYGvsEdqG6fBIPwe-mw">
        <ownedComment xmi:id="_obdQp_WnEdqea89UKW2qFQ" annotatedElement="_obdQpvWnEdqea89UKW2qFQ">
          <body>Constrains the required relationship between an actual parameter and the parameteredElement for this formal parameter.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_obdQqPWnEdqea89UKW2qFQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_obdQqfWnEdqea89UKW2qFQ" name="parameteredElement" type="_6UV2QGwJEdq7X4sGURiZYA" redefinedProperty="_oaj4yfWnEdqea89UKW2qFQ" association="_ob58k_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obdQqvWnEdqea89UKW2qFQ" annotatedElement="_obdQqfWnEdqea89UKW2qFQ">
          <body>The parameterable classifier for this template parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obdQq_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obdQrPWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_obdQrfWnEdqea89UKW2qFQ" name="defaultClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_ob58nvWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obdQrvWnEdqea89UKW2qFQ" annotatedElement="_obdQrfWnEdqea89UKW2qFQ">
          <body>The classifier that is used by default if no argument is provided during template binding. If this property is empty, then there is no default.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obdQr_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obdQsPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_obdQsfWnEdqea89UKW2qFQ" name="constrainingClassifier" type="_6UV2QGwJEdq7X4sGURiZYA" association="_ob58oPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obdQsvWnEdqea89UKW2qFQ" annotatedElement="_obdQsfWnEdqea89UKW2qFQ">
          <body>The classifier that constrains the argument that can be used for the parameter. If the allowSubstitutable attribute is true, then any classifier that is compatible with this constraining classifier can be substituted, otherwise it must be either this classifier or one of its subclasses. If this property is empty, there are no constraints on the classifier that can be used as an argument.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obdQs_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obdQtPWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9keOQGvdEdq4DLWZOhbdEA" name="RedefinableTemplateSignature">
      <ownedComment xmi:id="_obdQtfWnEdqea89UKW2qFQ" annotatedElement="_9keOQGvdEdq4DLWZOhbdEA">
        <body>A redefinable template signature supports the addition of formal template parameters in a specialization of a template classifier.</body>
      </ownedComment>
      <ownedRule xmi:id="_obdQtvWnEdqea89UKW2qFQ" name="inherited_parameters" constrainedElement="_9keOQGvdEdq4DLWZOhbdEA">
        <ownedComment xmi:id="_obdQt_WnEdqea89UKW2qFQ" annotatedElement="_obdQtvWnEdqea89UKW2qFQ">
          <body>The inherited parameters are the parameters of the extended template signature.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_obdQuPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>if extendedSignature->isEmpty() then Set{} else extendedSignature.parameter endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_obdQufWnEdqea89UKW2qFQ" general="_oA731vWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_obdQuvWnEdqea89UKW2qFQ" general="_oaau0vWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_obdQu_WnEdqea89UKW2qFQ" name="classifier" type="_6UV2QGwJEdq7X4sGURiZYA" subsettedProperty="_oA733_WnEdqea89UKW2qFQ" association="_obwLo_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obdQvPWnEdqea89UKW2qFQ" annotatedElement="_obdQu_WnEdqea89UKW2qFQ">
          <body>The classifier that owns this template signature.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obdQvfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obdQvvWnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_obdQv_WnEdqea89UKW2qFQ" name="extendedSignature" type="_9keOQGvdEdq4DLWZOhbdEA" subsettedProperty="_oA734_WnEdqea89UKW2qFQ" association="_obwLp_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obdQwPWnEdqea89UKW2qFQ" annotatedElement="_obdQv_WnEdqea89UKW2qFQ">
          <body>The template signature that is extended by this template signature.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obdQwfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obdQwvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_obdQw_WnEdqea89UKW2qFQ" name="inheritedParameter" type="_KxRzgGvuEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" subsettedProperty="_oaau2PWnEdqea89UKW2qFQ" association="_ob58kPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obdQxPWnEdqea89UKW2qFQ" annotatedElement="_obdQw_WnEdqea89UKW2qFQ">
          <body>The formal template parameters of the extendedSignature.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obdQxfWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obdQxvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_FvJUYFYLEdqrn7iZ0eqieg" name="getInheritedParameters" visibility="protected" isQuery="true">
        <ownedParameter xmi:id="_Jbx-MFYLEdqrn7iZ0eqieg" type="_KxRzgGvuEdqG6fBIPwe-mw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LQdA0VYLEdqrn7iZ0eqieg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LQdA0FYLEdqrn7iZ0eqieg"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_obdQx_WnEdqea89UKW2qFQ" name="isConsistentWith" isQuery="true" precondition="_obdQyfWnEdqea89UKW2qFQ" redefinedOperation="_oA735_WnEdqea89UKW2qFQ" bodyCondition="_obdQy_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obdQyPWnEdqea89UKW2qFQ" annotatedElement="_obdQx_WnEdqea89UKW2qFQ">
          <body>The query isConsistentWith() specifies, for any two RedefinableTemplateSignatures in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining template signature is always consistent with a redefined template signature, since redefinition only adds new formal parameters.</body>
        </ownedComment>
        <ownedRule xmi:id="_obdQyfWnEdqea89UKW2qFQ" constrainedElement="_obdQx_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_obdQyvWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>redefinee.isRedefinitionContextValid(self)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_obdQy_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_obdQx_WnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_obdQzPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = redefinee.oclIsKindOf(RedefineableTemplateSignature)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_obdQzfWnEdqea89UKW2qFQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_obdQzvWnEdqea89UKW2qFQ" name="redefinee" type="_oA731vWnEdqea89UKW2qFQ"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oKUdZfWnEdqea89UKW2qFQ" name="ConnectableElement" isAbstract="true">
      <ownedComment xmi:id="_oKUdZvWnEdqea89UKW2qFQ" annotatedElement="_oKUdZfWnEdqea89UKW2qFQ">
        <body>ConnectableElement is an abstract metaclass representing a set of instances that play roles of a classifier. Connectable elements may be joined by attached connectors and specify configurations of linked instances to be created within an instance of the containing classifier.</body>
      </ownedComment>
      <ownedComment xmi:id="_obdQz_WnEdqea89UKW2qFQ" annotatedElement="_oKUdZfWnEdqea89UKW2qFQ">
        <body>A connectable element may be exposed as a connectable element template parameter.</body>
      </ownedComment>
      <generalization xmi:id="_oKUdZ_WnEdqea89UKW2qFQ" general="_oA73_vWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_obdQ0PWnEdqea89UKW2qFQ" general="_obAksPWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oKUdaPWnEdqea89UKW2qFQ" name="end" type="_aOgw0GveEdq4DLWZOhbdEA" isOrdered="true" association="_oKeOdfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oKUdafWnEdqea89UKW2qFQ" annotatedElement="_oKUdaPWnEdqea89UKW2qFQ">
          <body>Denotes a connector that attaches to this connectable element.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKUdavWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oKUda_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_obdQ0fWnEdqea89UKW2qFQ" name="templateParameter" type="_obdQ1fWnEdqea89UKW2qFQ" redefinedProperty="_obAks_WnEdqea89UKW2qFQ" association="_ob58nPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obdQ0vWnEdqea89UKW2qFQ" annotatedElement="_obdQ0fWnEdqea89UKW2qFQ">
          <body>The ConnectableElementTemplateParameter for this ConnectableElement parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obdQ0_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obdQ1PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_obdQ1fWnEdqea89UKW2qFQ" name="ConnectableElementTemplateParameter">
      <ownedComment xmi:id="_obdQ1vWnEdqea89UKW2qFQ" annotatedElement="_obdQ1fWnEdqea89UKW2qFQ">
        <body>A connectable element template parameter exposes a connectable element as a formal parameter for a template.</body>
      </ownedComment>
      <generalization xmi:id="_obdQ1_WnEdqea89UKW2qFQ" general="_KxRzgGvuEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:id="_obdQ2PWnEdqea89UKW2qFQ" name="parameteredElement" type="_oKUdZfWnEdqea89UKW2qFQ" redefinedProperty="_oaj4yfWnEdqea89UKW2qFQ" association="_ob58nPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_obdQ2fWnEdqea89UKW2qFQ" annotatedElement="_obdQ2PWnEdqea89UKW2qFQ">
          <body>The ConnectableElement for this template parameter.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obdQ2vWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obdQ2_WnEdqea89UKW2qFQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-cvRAGvzEdq7X4sGURiZYA" name="Package">
      <ownedComment xmi:id="_oB-ZvPWnEdqea89UKW2qFQ" annotatedElement="_-cvRAGvzEdq7X4sGURiZYA">
        <body>A package is used to group elements, and provides a namespace for the grouped elements.</body>
      </ownedComment>
      <ownedComment xmi:id="_oUJu1PWnEdqea89UKW2qFQ" annotatedElement="_-cvRAGvzEdq7X4sGURiZYA">
        <body>A package can have one or more profile applications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.</body>
      </ownedComment>
      <ownedComment xmi:id="_obdQ3PWnEdqea89UKW2qFQ" annotatedElement="_-cvRAGvzEdq7X4sGURiZYA">
        <body>Package specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter.</body>
      </ownedComment>
      <ownedRule xmi:id="_oB-ZvfWnEdqea89UKW2qFQ" name="elements_public_or_private" constrainedElement="_-cvRAGvzEdq7X4sGURiZYA">
        <ownedComment xmi:id="_oB-ZvvWnEdqea89UKW2qFQ" annotatedElement="_oB-ZvfWnEdqea89UKW2qFQ">
          <body>If an element that is owned by a package has visibility, it is public or private.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFQXSPWnEdqea89UKW2qFQ">
          <language>OCL</language>
          <body>self.ownedElements->forAll(e | e.visibility->notEmpty() implies e.visbility = #public or e.visibility = #private)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oB-ZwPWnEdqea89UKW2qFQ" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <generalization xmi:id="_oB-ZwfWnEdqea89UKW2qFQ" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
      <generalization xmi:id="_obdQ3fWnEdqea89UKW2qFQ" general="_oa2zxvWnEdqea89UKW2qFQ"/>
      <ownedAttribute xmi:id="_oB-Z0vWnEdqea89UKW2qFQ" name="packageMerge" visibility="public" type="_oCIKxPWnEdqea89UKW2qFQ" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oCuArfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB-Z0_WnEdqea89UKW2qFQ" annotatedElement="_oB-Z0vWnEdqea89UKW2qFQ">
          <body>References the PackageMerges that are owned by this Package.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFjSEPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFjSEfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oB-ZwvWnEdqea89UKW2qFQ" name="packagedElement" visibility="public" type="_jKxnwGwLEdq7X4sGURiZYA" aggregation="composite" subsettedProperty="_oAyG4fWnEdqea89UKW2qFQ" association="_oCuAoPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB-Zw_WnEdqea89UKW2qFQ" annotatedElement="_oB-ZwvWnEdqea89UKW2qFQ">
          <body>Specifies the packageable elements that are owned by this Package.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFjSEvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFjSE_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oB-ZxvWnEdqea89UKW2qFQ" name="ownedType" visibility="public" type="_ynRtoGvtEdqG6fBIPwe-mw" isDerived="true" aggregation="composite" subsettedProperty="_oB-ZwvWnEdqea89UKW2qFQ" association="_oCuApfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB-Zx_WnEdqea89UKW2qFQ" annotatedElement="_oB-ZxvWnEdqea89UKW2qFQ">
          <body>References the packaged elements that are Types.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFjSFPWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFjSFfWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oB-ZyvWnEdqea89UKW2qFQ" name="nestedPackage" visibility="public" type="_-cvRAGvzEdq7X4sGURiZYA" isDerived="true" aggregation="composite" subsettedProperty="_oB-ZwvWnEdqea89UKW2qFQ" association="_oCuAqfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB-Zy_WnEdqea89UKW2qFQ" annotatedElement="_oB-ZyvWnEdqea89UKW2qFQ">
          <body>References the packaged elements that are Packages.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFjSFvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFjSF_WnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oB-ZzvWnEdqea89UKW2qFQ" name="nestingPackage" visibility="public" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_oCRUo_WnEdqea89UKW2qFQ" association="_oCuAqfWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oB-Zz_WnEdqea89UKW2qFQ" annotatedElement="_oB-ZzvWnEdqea89UKW2qFQ">
          <body>References the owning package of a package.</body>
        </ownedComment>
        <ownedComment xmi:id="_oFjSGPWnEdqea89UKW2qFQ" annotatedElement="_oB-ZzvWnEdqea89UKW2qFQ">
          <body>References the Package that owns this Package.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFjSGfWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFjSGvWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oUJu1fWnEdqea89UKW2qFQ" name="profileApplication" type="_uY5yQGv5Edq7X4sGURiZYA" aggregation="composite" subsettedProperty="_oAfL8fWnEdqea89UKW2qFQ" association="_oUdQwPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oUJu1vWnEdqea89UKW2qFQ" annotatedElement="_oUJu1fWnEdqea89UKW2qFQ">
          <body>References the ProfileApplications that indicate which profiles have been applied to the Package.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUJu1_WnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oUJu2PWnEdqea89UKW2qFQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_4JyAAGwFEdq7X4sGURiZYA" name="createOwnedClass">
        <ownedComment xmi:id="_RcX8kOwhEdqYHf-imTcTdw" annotatedElement="_4JyAAGwFEdq7X4sGURiZYA">
          <body>Creates a(n) (abstract) class with the specified name as an owned type of this package.</body>
        </ownedComment>
        <ownedParameter xmi:id="_94M7YGwFEdq7X4sGURiZYA" type="_00owUGvdEdq4DLWZOhbdEA" direction="return"/>
        <ownedParameter xmi:id="_BGSA8GwGEdq7X4sGURiZYA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_-i0lsGwFEdq7X4sGURiZYA" name="isAbstract" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_Fqo88GwGEdq7X4sGURiZYA" name="createOwnedEnumeration">
        <ownedComment xmi:id="_aE54oOwhEdqYHf-imTcTdw" annotatedElement="_Fqo88GwGEdq7X4sGURiZYA">
          <body>Creates a enumeration with the specified name as an owned type of this package.</body>
        </ownedComment>
        <ownedParameter xmi:id="_MMBmUGwGEdq7X4sGURiZYA" type="_I6N3UGwGEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:id="_Mz9wEGwGEdq7X4sGURiZYA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_SSSZ8GwGEdq7X4sGURiZYA" name="createOwnedPrimitiveType">
        <ownedComment xmi:id="_bT4NMOwhEdqYHf-imTcTdw" annotatedElement="_SSSZ8GwGEdq7X4sGURiZYA">
          <body>Creates a primitive type with the specified name as an owned type of this package.</body>
        </ownedComment>
        <ownedParameter xmi:id="_Y8BHAGwGEdq7X4sGURiZYA" type="_V6vuYGwGEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:id="_ZY7FcGwGEdq7X4sGURiZYA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_SwrbIHFhEdqziYxiZo0YtA" name="createOwnedInterface">
        <ownedComment xmi:id="_ecTWsOwhEdqYHf-imTcTdw" annotatedElement="_SwrbIHFhEdqziYxiZo0YtA">
          <body>Creates an interface with the specified name as an owned type of this package.</body>
        </ownedComment>
        <ownedParameter xmi:id="_SwrbIXFhEdqziYxiZo0YtA" type="_8Ugn8GvtEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_SwrbInFhEdqziYxiZo0YtA" name="name" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_z4Q98Gv5Edq7X4sGURiZYA" name="isProfileApplied" isQuery="true">
        <ownedComment xmi:id="_h951MOwhEdqYHf-imTcTdw" annotatedElement="_z4Q98Gv5Edq7X4sGURiZYA">
          <body>Determines whether the specified profile is applied to this package.</body>
        </ownedComment>
        <ownedParameter xmi:id="_19CSEGv5Edq7X4sGURiZYA" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_2TitkGv5Edq7X4sGURiZYA" name="profile" type="__pew8GvzEdq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_r--GcGv5Edq7X4sGURiZYA" name="applyProfile">
        <ownedComment xmi:id="_pfXbgOwhEdqYHf-imTcTdw" annotatedElement="_r--GcGv5Edq7X4sGURiZYA">
          <body>Applies the current definition of the specified profile to this package and automatically applies required stereotypes in the profile to elements within this package's namespace hieararchy. If a different definition is already applied, automatically migrates any associated stereotype values on a &quot;best effort&quot; basis (matching classifiers and structural features by name).</body>
        </ownedComment>
        <ownedParameter xmi:id="_w2ZvcGv5Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53C4F1C860123"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ObBOMXF8EdqziYxiZo0YtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ObBOMHF8EdqziYxiZo0YtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_xMwZ8Gv5Edq7X4sGURiZYA" name="profile" type="__pew8GvzEdq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_448CgGv5Edq7X4sGURiZYA" name="unapplyProfile">
        <ownedComment xmi:id="_4cT78OwhEdqYHf-imTcTdw" annotatedElement="_448CgGv5Edq7X4sGURiZYA">
          <body>Unapplies the specified profile from this package and automatically unapplies stereotypes in the profile from elements within this package's namespace hieararchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="_6yryYGv5Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:Class" href="Ecore.uml#_439EC3AE03B53C4F1C860123"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZvqLMXF8EdqziYxiZo0YtA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZvqLMHF8EdqziYxiZo0YtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_7KhqoGv5Edq7X4sGURiZYA" name="profile" type="__pew8GvzEdq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_ZCKeMGv5Edq7X4sGURiZYA" name="getAppliedProfiles" isQuery="true">
        <ownedComment xmi:id="_G2jX8OwiEdqYHf-imTcTdw" annotatedElement="_ZCKeMGv5Edq7X4sGURiZYA">
          <body>Retrieves the profiles that are applied to this package.</body>
        </ownedComment>
        <ownedParameter xmi:id="_cExTkGv5Edq7X4sGURiZYA" type="__pew8GvzEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_eExccWv5Edq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eExccGv5Edq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kCeTgGwFEdq7X4sGURiZYA" name="getAllAppliedProfiles" isQuery="true">
        <ownedComment xmi:id="_KHdvEOwiEdqYHf-imTcTdw" annotatedElement="_kCeTgGwFEdq7X4sGURiZYA">
          <body>Retrieves all the profiles that are applied to this package, including profiles applied to its nesting package(s).</body>
        </ownedComment>
        <ownedParameter xmi:id="_kCeTgWwFEdq7X4sGURiZYA" type="__pew8GvzEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kCeTgmwFEdq7X4sGURiZYA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kCeTg2wFEdq7X4sGURiZYA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tasT4G11EdqniMBnIUw7ig" name="getAppliedProfile" isQuery="true">
        <ownedComment xmi:id="_SSMU0OwiEdqYHf-imTcTdw" annotatedElement="_tasT4G11EdqniMBnIUw7ig">
          <body>Retrieves the profile with the specified qualified name that is applied to this package, or null if no such profile is applied.</body>
        </ownedComment>
        <ownedParameter xmi:id="_wSH0AG11EdqniMBnIUw7ig" type="__pew8GvzEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yo7TUW11EdqniMBnIUw7ig" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yo7TUG11EdqniMBnIUw7ig"/>
        </ownedParameter>
        <ownedParameter xmi:id="_2bXqMG11EdqniMBnIUw7ig" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_7MPYMG11EdqniMBnIUw7ig" name="getAppliedProfile" isQuery="true">
        <ownedComment xmi:id="_fm_LsOwiEdqYHf-imTcTdw" annotatedElement="_7MPYMG11EdqniMBnIUw7ig">
          <body>Retrieves the profile with the specified qualified name that is applied to this package or any of its nesting packages (if indicated), or null if no such profile is applied.</body>
        </ownedComment>
        <ownedParameter xmi:id="_7MPYMW11EdqniMBnIUw7ig" type="__pew8GvzEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7MPYMm11EdqniMBnIUw7ig" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7MPYM211EdqniMBnIUw7ig"/>
        </ownedParameter>
        <ownedParameter xmi:id="_7MPYNG11EdqniMBnIUw7ig" name="qualifiedName" type="_aAyVgGvsEdqG6fBIPwe-mw" effect="read"/>
        <ownedParameter xmi:id="_8HGd8G11EdqniMBnIUw7ig" name="recurse" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_kxh7IG10EdqniMBnIUw7ig" name="getAllProfileApplications" isQuery="true">
        <ownedComment xmi:id="_pMBMQOwiEdqYHf-imTcTdw" annotatedElement="_kxh7IG10EdqniMBnIUw7ig">
          <body>Retrieves all the profile applications for this package, including profile applications for its nesting package(s).</body>
        </ownedComment>
        <ownedParameter xmi:id="_pW8AAG10EdqniMBnIUw7ig" type="_uY5yQGv5Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rvqx8W10EdqniMBnIUw7ig" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rvqx8G10EdqniMBnIUw7ig"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_FOcTIKO_Edqi_5gqUMOQtA" name="getProfileApplication" isQuery="true">
        <ownedComment xmi:id="_vvVvUOwiEdqYHf-imTcTdw" annotatedElement="_FOcTIKO_Edqi_5gqUMOQtA">
          <body>Retrieves the application of the specified profile to this package, or null if no such profile is applied.</body>
        </ownedComment>
        <ownedParameter xmi:id="_FOcTIaO_Edqi_5gqUMOQtA" type="_uY5yQGv5Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FOcTIqO_Edqi_5gqUMOQtA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FOcTI6O_Edqi_5gqUMOQtA"/>
        </ownedParameter>
        <ownedParameter xmi:id="_FOcTJKO_Edqi_5gqUMOQtA" name="profile" type="__pew8GvzEdq7X4sGURiZYA" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_QaTt4G11EdqniMBnIUw7ig" name="getProfileApplication" isQuery="true">
        <ownedComment xmi:id="_wmn8oOwiEdqYHf-imTcTdw" annotatedElement="_QaTt4G11EdqniMBnIUw7ig">
          <body>Retrieves the application of the specified profile to this package or any of its nesting packages (if indicated), or null if no such profile is applied.</body>
        </ownedComment>
        <ownedParameter xmi:id="_QaTt4W11EdqniMBnIUw7ig" type="_uY5yQGv5Edq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QaTt4m11EdqniMBnIUw7ig" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_QaTt4211EdqniMBnIUw7ig"/>
        </ownedParameter>
        <ownedParameter xmi:id="_rYVqgG2JEdq0sOo3CGeQEg" name="profile" type="__pew8GvzEdq7X4sGURiZYA" effect="read"/>
        <ownedParameter xmi:id="_RiuHcG11EdqniMBnIUw7ig" name="recurse" type="_UdivYGvsEdqG6fBIPwe-mw" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="_NrOGAIbSEdqhgMOAOWpjfQ" name="isModelLibrary" isQuery="true">
        <ownedComment xmi:id="_4KKmkOwiEdqYHf-imTcTdw" annotatedElement="_NrOGAIbSEdqhgMOAOWpjfQ">
          <body>Determines whether this package is a model library.</body>
        </ownedComment>
        <ownedParameter xmi:id="_NrOGAYbSEdqhgMOAOWpjfQ" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oCIKoPWnEdqea89UKW2qFQ" name="mustBeOwned" visibility="public" isQuery="true" redefinedOperation="_oAfMBPWnEdqea89UKW2qFQ" bodyCondition="_oCIKovWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCIKofWnEdqea89UKW2qFQ" annotatedElement="_oCIKoPWnEdqea89UKW2qFQ">
          <body>The query mustBeOwned() indicates whether elements of this type must have an owner.</body>
        </ownedComment>
        <ownedRule xmi:id="_oCIKovWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oCIKoPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFjSG_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = false</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCIKpPWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_oCIKpfWnEdqea89UKW2qFQ" name="visibleMembers" visibility="public" isQuery="true" bodyCondition="_oCIKp_WnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCIKpvWnEdqea89UKW2qFQ" annotatedElement="_oCIKpfWnEdqea89UKW2qFQ">
          <body>The query visibleMembers() defines which members of a Package can be accessed outside it.</body>
        </ownedComment>
        <ownedRule xmi:id="_oCIKp_WnEdqea89UKW2qFQ" name="spec" constrainedElement="_oCIKpfWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFtDEPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = member->select( m | self.makesVisible(m))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCIKqfWnEdqea89UKW2qFQ" visibility="public" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFtDEfWnEdqea89UKW2qFQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oFtDEvWnEdqea89UKW2qFQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oCIKrPWnEdqea89UKW2qFQ" name="makesVisible" visibility="public" isQuery="true" precondition="_oCIKrvWnEdqea89UKW2qFQ" bodyCondition="_oCIKsPWnEdqea89UKW2qFQ">
        <ownedComment xmi:id="_oCIKrfWnEdqea89UKW2qFQ" annotatedElement="_oCIKrPWnEdqea89UKW2qFQ">
          <body>The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible.</body>
        </ownedComment>
        <ownedRule xmi:id="_oCIKrvWnEdqea89UKW2qFQ" constrainedElement="_oCIKrPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFtDE_WnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>self.member->includes(el)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_oCIKsPWnEdqea89UKW2qFQ" name="spec" constrainedElement="_oCIKrPWnEdqea89UKW2qFQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFtDFPWnEdqea89UKW2qFQ">
            <language>OCL</language>
            <body>result = (ownedMember->includes(el)) or&#xA;(elementImport->select(ei|ei.importedElement = #public)->collect(ei|ei.importedElement)->includes(el)) or&#xA;(packageImport->select(pi|pi.visibility = #public)->collect(pi|pi.importedPackage.member->includes(el))->notEmpty())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCIKsvWnEdqea89UKW2qFQ" visibility="public" type="_UdivYGvsEdqG6fBIPwe-mw" direction="return"/>
        <ownedParameter xmi:id="_oCIKs_WnEdqea89UKW2qFQ" name="el" visibility="public" type="_csVgUGvtEdqG6fBIPwe-mw"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obnBoPWnEdqea89UKW2qFQ" name="A_parameter_templateSignature" memberEnd="_oaau2PWnEdqea89UKW2qFQ _obnBofWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_obnBofWnEdqea89UKW2qFQ" type="_oaau0vWnEdqea89UKW2qFQ" association="_obnBoPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obnBovWnEdqea89UKW2qFQ" name="A_ownedParameter_signature" memberEnd="_oaau3PWnEdqea89UKW2qFQ _oaj4xfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_obnBo_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_obnBpPWnEdqea89UKW2qFQ" general="_obnBoPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obnBpfWnEdqea89UKW2qFQ" name="A_boundElement_templateBinding" memberEnd="_oa2zyfWnEdqea89UKW2qFQ _oatpyfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_obnBpvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_obnBp_WnEdqea89UKW2qFQ" general="_oCuAuPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obnBqPWnEdqea89UKW2qFQ" name="A_formal_templateParameterSubstitution" memberEnd="_oa2ztvWnEdqea89UKW2qFQ _obnBqfWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_obnBqfWnEdqea89UKW2qFQ" type="_oa2zsPWnEdqea89UKW2qFQ" association="_obnBqPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obnBqvWnEdqea89UKW2qFQ" name="A_signature_templateBinding" memberEnd="_oatpzfWnEdqea89UKW2qFQ _obnBrPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_obnBq_WnEdqea89UKW2qFQ" general="_oC3xgPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_obnBrPWnEdqea89UKW2qFQ" type="_oatpwPWnEdqea89UKW2qFQ" redefinedProperty="_oC3xgvWnEdqea89UKW2qFQ" association="_obnBqvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obnBrfWnEdqea89UKW2qFQ" name="A_parameterSubstitution_templateBinding" memberEnd="_oatp0fWnEdqea89UKW2qFQ _oa2zuvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_obnBrvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obnBr_WnEdqea89UKW2qFQ" name="A_actual_templateParameterSubstitution" memberEnd="_oa2zvvWnEdqea89UKW2qFQ _obnBsPWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_obnBsPWnEdqea89UKW2qFQ" type="_oa2zsPWnEdqea89UKW2qFQ" association="_obnBr_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obnBsfWnEdqea89UKW2qFQ" name="A_parameteredElement_templateParameter" memberEnd="_oaj4yfWnEdqea89UKW2qFQ _obAks_WnEdqea89UKW2qFQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_obnBsvWnEdqea89UKW2qFQ" name="A_subExpression_owningExpression" memberEnd="_oaj44_WnEdqea89UKW2qFQ _oaj45_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_obnBs_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obwLkPWnEdqea89UKW2qFQ" name="A_ownedTemplateSignature_template" memberEnd="_oa2zzfWnEdqea89UKW2qFQ _oaau4PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_obwLkfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obwLkvWnEdqea89UKW2qFQ" name="A_ownedParameteredElement_owningTemplateParameter" memberEnd="_obAkt_WnEdqea89UKW2qFQ _oaj4zfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_obwLk_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_obwLlPWnEdqea89UKW2qFQ" general="_obnBsfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obwLlfWnEdqea89UKW2qFQ" name="A_default_templateParameter" memberEnd="_oaj40fWnEdqea89UKW2qFQ _obwLlvWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_obwLlvWnEdqea89UKW2qFQ" type="_KxRzgGvuEdqG6fBIPwe-mw" association="_obwLlfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obwLl_WnEdqea89UKW2qFQ" name="A_ownedDefault_templateParameter" memberEnd="_oaj41fWnEdqea89UKW2qFQ _obwLmvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_obwLmPWnEdqea89UKW2qFQ" general="_obwLlfWnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_obwLmfWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_obwLmvWnEdqea89UKW2qFQ" type="_KxRzgGvuEdqG6fBIPwe-mw" association="_obwLl_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obwLm_WnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obwLnPWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obwLnfWnEdqea89UKW2qFQ" name="A_ownedActual_templateParameterSubstitution" memberEnd="_oa2zwvWnEdqea89UKW2qFQ _obwLoPWnEdqea89UKW2qFQ">
      <generalization xmi:id="_obwLnvWnEdqea89UKW2qFQ" general="_obnBr_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_obwLn_WnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_obwLoPWnEdqea89UKW2qFQ" type="_oa2zsPWnEdqea89UKW2qFQ" association="_obwLnfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obwLofWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obwLovWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obwLo_WnEdqea89UKW2qFQ" name="A_ownedTemplateSignature_classifier" memberEnd="_obdQu_WnEdqea89UKW2qFQ _obTfovWnEdqea89UKW2qFQ">
      <generalization xmi:id="_obwLpfWnEdqea89UKW2qFQ" general="_oC3xg_WnEdqea89UKW2qFQ"/>
      <generalization xmi:id="_obwLpvWnEdqea89UKW2qFQ" general="_obwLkPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_obwLp_WnEdqea89UKW2qFQ" name="A_extendedSignature_redefinableTemplateSignature" memberEnd="_obdQv_WnEdqea89UKW2qFQ _obwLqfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_obwLqPWnEdqea89UKW2qFQ" general="_oC3xhfWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_obwLqfWnEdqea89UKW2qFQ" type="_9keOQGvdEdq4DLWZOhbdEA" association="_obwLp_WnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obwLqvWnEdqea89UKW2qFQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_obwLq_WnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_ob58kPWnEdqea89UKW2qFQ" name="A_inheritedParameter_redefinableTemplateSignature" memberEnd="_obdQw_WnEdqea89UKW2qFQ _ob58kvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_ob58kfWnEdqea89UKW2qFQ" general="_obnBoPWnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_ob58kvWnEdqea89UKW2qFQ" type="_9keOQGvdEdq4DLWZOhbdEA" redefinedProperty="_obnBofWnEdqea89UKW2qFQ" association="_ob58kPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_ob58k_WnEdqea89UKW2qFQ" name="A_templateParameter_parameteredElement" memberEnd="_obTfpvWnEdqea89UKW2qFQ _obdQqfWnEdqea89UKW2qFQ">
      <generalization xmi:id="_ob58lPWnEdqea89UKW2qFQ" general="_obnBsfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_ob58lfWnEdqea89UKW2qFQ" name="A_nameExpression_namedElement" memberEnd="_oaau5fWnEdqea89UKW2qFQ _ob58l_WnEdqea89UKW2qFQ">
      <generalization xmi:id="_ob58lvWnEdqea89UKW2qFQ" general="_oCuAs_WnEdqea89UKW2qFQ"/>
      <ownedEnd xmi:id="_ob58l_WnEdqea89UKW2qFQ" type="_csVgUGvtEdqG6fBIPwe-mw" association="_ob58lfWnEdqea89UKW2qFQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ob58mPWnEdqea89UKW2qFQ" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ob58mfWnEdqea89UKW2qFQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_ob58mvWnEdqea89UKW2qFQ" name="A_templateParameter_parameteredElement" memberEnd="_obKVu_WnEdqea89UKW2qFQ _obKVwvWnEdqea89UKW2qFQ">
      <generalization xmi:id="_ob58m_WnEdqea89UKW2qFQ" general="_obnBsfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_ob58nPWnEdqea89UKW2qFQ" name="A_templateParameter_parameteredElement" memberEnd="_obdQ0fWnEdqea89UKW2qFQ _obdQ2PWnEdqea89UKW2qFQ">
      <generalization xmi:id="_ob58nfWnEdqea89UKW2qFQ" general="_obnBsfWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_ob58nvWnEdqea89UKW2qFQ" name="A_defaultClassifier_classifierTemplateParameter" memberEnd="_obdQrfWnEdqea89UKW2qFQ _ob58n_WnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_ob58n_WnEdqea89UKW2qFQ" type="_obdQoPWnEdqea89UKW2qFQ" association="_ob58nvWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_ob58oPWnEdqea89UKW2qFQ" name="A_constrainingClassifier_classifierTemplateParameter" memberEnd="_obdQsfWnEdqea89UKW2qFQ _ob58ofWnEdqea89UKW2qFQ">
      <ownedEnd xmi:id="_ob58ofWnEdqea89UKW2qFQ" type="_obdQoPWnEdqea89UKW2qFQ" association="_ob58oPWnEdqea89UKW2qFQ"/>
    </packagedElement>
    <profileApplication xmi:id="_0TBYYGvaEdq4DLWZOhbdEA">
      <eAnnotations xmi:id="_0TBYYWvaEdq4DLWZOhbdEA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_vy-HUYinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <Ecore:EPackage xmi:id="_esvIkPWnEdqea89UKW2qFQ" base_Package="_o8I_sGvaEdq4DLWZOhbdEA" packageName="uml" nsPrefix="uml" nsURI="http://www.eclipse.org/uml2/2.0.0/UML" basePackage="org.eclipse.uml2" prefix="UML"/>
  <Ecore:EDataType xmi:id="_etCDgPWnEdqea89UKW2qFQ" instanceClassName="boolean" base_PrimitiveType="_UdivYGvsEdqG6fBIPwe-mw"/>
  <Ecore:EDataType xmi:id="_etCDgfWnEdqea89UKW2qFQ" instanceClassName="int" base_PrimitiveType="_XqvEIGvsEdqG6fBIPwe-mw"/>
  <Ecore:EDataType xmi:id="_etCDgvWnEdqea89UKW2qFQ" instanceClassName="java.lang.String" base_PrimitiveType="_aAyVgGvsEdqG6fBIPwe-mw"/>
  <Ecore:EDataType xmi:id="_etCDg_WnEdqea89UKW2qFQ" instanceClassName="int" base_PrimitiveType="_dRZxsGvsEdqG6fBIPwe-mw"/>
  <Ecore:EReference xmi:id="_oDA7cPWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oACf8vWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7cfWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAMQ8PWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7cvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAMQ-PWnEdqea89UKW2qFQ"/>
  <Ecore:EOperation xmi:id="_oDA7c_WnEdqea89UKW2qFQ" base_Operation="_oAVa5_WnEdqea89UKW2qFQ" operationName="getGenerals"/>
  <Ecore:EOperation xmi:id="_oDA7dPWnEdqea89UKW2qFQ" base_Operation="_oAVa9fWnEdqea89UKW2qFQ" operationName="getInheritedMembers"/>
  <Ecore:EReference xmi:id="_oDA7dfWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAfL4vWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7dvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAfL5vWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7d_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAfL8fWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7ePWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAfL9fWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7efWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAoV0_WnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7evWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAyG1fWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7e_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAyG4fWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7fPWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAyG5fWnEdqea89UKW2qFQ"/>
  <Ecore:EOperation xmi:id="_oDA7ffWnEdqea89UKW2qFQ" base_Operation="_oAyG7PWnEdqea89UKW2qFQ" operationName="getImportedMembers"/>
  <Ecore:EReference xmi:id="_oDA7fvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oA733_WnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7f_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oA734_WnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7gPWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oA739fWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7gfWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oBFB7_WnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oDA7gvWnEdqea89UKW2qFQ" isTransient="true" isUnsettable="true" base_Property="_oBOy9fWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDA7g_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oBYjzPWnEdqea89UKW2qFQ"/>
  <Ecore:EOperation xmi:id="_oDA7hPWnEdqea89UKW2qFQ" base_Operation="_oBYj2PWnEdqea89UKW2qFQ" operationName="getOpposite"/>
  <Ecore:EAttribute xmi:id="_oDKscPWnEdqea89UKW2qFQ" isUnsettable="true" xmlFeatureKind="Element" base_Property="_oBht6fWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oDKscfWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oBht7fWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oDKscvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oBreu_WnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oDKsc_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oBrevvWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oDKsdPWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oBrewfWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oDKsdfWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oBrexvWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDKsdvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oBre2_WnEdqea89UKW2qFQ"/>
  <Ecore:EOperation xmi:id="_oDKsd_WnEdqea89UKW2qFQ" base_Operation="_oBre9vWnEdqea89UKW2qFQ" operationName="lowerBound"/>
  <Ecore:EOperation xmi:id="_oDKsePWnEdqea89UKW2qFQ" base_Operation="_oBre-_WnEdqea89UKW2qFQ" operationName="upperBound"/>
  <Ecore:EOperation xmi:id="_oDKsefWnEdqea89UKW2qFQ" base_Operation="_oBrfAPWnEdqea89UKW2qFQ" operationName="getType"/>
  <Ecore:EAttribute xmi:id="_oDKsevWnEdqea89UKW2qFQ" isTransient="true" isUnsettable="true" base_Property="_oB0osfWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oDKse_WnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oB-Zq_WnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDKsfPWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oB-ZxvWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDKsffWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oB-ZyvWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDKsfvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oB-ZzvWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDKsf_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oCIK0vWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oDKsgPWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oCRUm_WnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oDKsgfWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oCRUn_WnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oDKsgvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oCRUo_WnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oDKsg_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oCRUp_WnEdqea89UKW2qFQ"/>
  <Ecore:EOperation xmi:id="_oDKshPWnEdqea89UKW2qFQ" base_Operation="_oCRUvvWnEdqea89UKW2qFQ" operationName="getQualifiedName"/>
  <Ecore:EAttribute xmi:id="_oDKshfWnEdqea89UKW2qFQ" isUnsettable="true" xmlFeatureKind="Element" base_Property="_oCRUzfWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oHyGsvWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oEEEU_WnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oHyGs_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAoV7fWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oHyGtPWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAoV6PWnEdqea89UKW2qFQ"/>
  <Ecore:EOperation xmi:id="_oHyGtfWnEdqea89UKW2qFQ" base_Operation="_oEW_XPWnEdqea89UKW2qFQ" operationName="getLower"/>
  <Ecore:EOperation xmi:id="_oHyGtvWnEdqea89UKW2qFQ" base_Operation="_oEW_YfWnEdqea89UKW2qFQ" operationName="getUpper"/>
  <Ecore:EReference xmi:id="_oHyGt_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oAMQ9PWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oH73sPWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oFGmIvWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oH73sfWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oBOyzfWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oH73svWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oBOy-fWnEdqea89UKW2qFQ"/>
  <Ecore:EOperation xmi:id="_oH73s_WnEdqea89UKW2qFQ" base_Operation="_oGlz9_WnEdqea89UKW2qFQ" operationName="getEndTypes"/>
  <Ecore:EAttribute xmi:id="_oH73tPWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oHCf5fWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oIYj1fWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oIFozfWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oIYj1vWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oIFo6_WnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oIYj1_WnEdqea89UKW2qFQ" isUnsettable="true" xmlFeatureKind="Element" base_Property="_oIOyq_WnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oIiUoPWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oIOyr_WnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oI1PvvWnEdqea89UKW2qFQ" isUnsettable="true" xmlFeatureKind="Element" base_Property="_oIiUpPWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oI1Pv_WnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oIiUqPWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oI1PwPWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oIrey_WnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oI1PwfWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oIrez_WnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oI1PwvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oIre0_WnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oJIKgPWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oI-ZkfWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oJIKgfWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oI-ZmfWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oJIKgvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oI-ZnfWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oJIKg_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oI-ZqvWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oJuncPWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oJR7sPWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oKeOePWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oKKsaPWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oKeOefWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oKUdWfWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oKeOevWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oKUdXfWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oLN1NfWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oKxJevWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oLN1NvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oK66Z_WnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oMHNLvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oLW_RvWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oMHNL_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oLW_YPWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oN5Vz_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oNvk1PWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oN5V0PWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oNvk3PWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oN5V0fWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oNvk4_WnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oOMQvvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oN5V2vWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oOMQv_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oN5V3vWnEdqea89UKW2qFQ"/>
  <Ecore:EOperation xmi:id="_oOMQwPWnEdqea89UKW2qFQ" base_Operation="_oODGwPWnEdqea89UKW2qFQ" operationName="getRequireds"/>
  <Ecore:EOperation xmi:id="_oOMQwfWnEdqea89UKW2qFQ" base_Operation="_oODGxvWnEdqea89UKW2qFQ" operationName="getProvideds"/>
  <Ecore:EAttribute xmi:id="_oOMQwvWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oODG5_WnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oOWBy_WnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oOMQxvWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oOo8s_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oOfyvfWnEdqea89UKW2qFQ"/>
  <Ecore:EOperation xmi:id="_oOo8tPWnEdqea89UKW2qFQ" base_Operation="_oOfywfWnEdqea89UKW2qFQ" operationName="getDeployedElements"/>
  <Ecore:EAttribute xmi:id="_oUAk2PWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oSqhFPWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oUAk2fWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oSqhF_WnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oUAk2vWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oSqhGvWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oUAk2_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oSqhHfWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oUAk3PWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oSqhMPWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oUAk3fWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oS9cIPWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oUAk3vWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oTaIBPWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oUmaufWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oUJuyPWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oUmauvWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oUJu2vWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oUmau_WnEdqea89UKW2qFQ" isTransient="true" base_Property="_oUTfw_WnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oUmavPWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oUTfxvWnEdqea89UKW2qFQ"/>
  <Ecore:EOperation xmi:id="_oUmavfWnEdqea89UKW2qFQ" base_Operation="_oUTf0_WnEdqea89UKW2qFQ" operationName="getMetaclass"/>
  <Ecore:EAttribute xmi:id="_oUmavvWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oUTf9fWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oUmav_WnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oUTf-fWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oUmawPWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oUTf_fWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oUmaxfWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oUTf6fWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oVytkvWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oVytjvWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oYn_HfWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oYCJWvWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oZqg9_WnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oZqg6fWnEdqea89UKW2qFQ"/>
  <Ecore:EAttribute xmi:id="_oZqg-PWnEdqea89UKW2qFQ" isUnsettable="true" base_Property="_oZqg7fWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_oaQ92fWnEdqea89UKW2qFQ" isTransient="true" base_Property="_oZ0R8PWnEdqea89UKW2qFQ"/>
  <Ecore:EReference xmi:id="_ocDGgPWnEdqea89UKW2qFQ" isTransient="true" base_Property="_obdQw_WnEdqea89UKW2qFQ"/>
</xmi:XMI>
