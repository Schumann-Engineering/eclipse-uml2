<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Profile xmi:id="_ihtF8L5MEeCUg9_01zj7Og" name="L2" metamodelReference="_qfxPYAsREeGTNJLAYqz1mw">
    <packageImport xmi:id="_qfxPYAsREeGTNJLAYqz1mw">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_METAMODELS/UML.metamodel.uml#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qfx2cAsREeGTNJLAYqz1mw" name="Abstraction_Derive" memberEnd="_qfx2cQsREeGTNJLAYqz1mw _qgdy8gsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qfx2cQsREeGTNJLAYqz1mw" name="extension_Derive" visibility="public" type="_qgdy8AsREeGTNJLAYqz1mw" aggregation="composite" association="_qfx2cAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qfx2cgsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qfydgAsREeGTNJLAYqz1mw" name="Abstraction_Refine" memberEnd="_qfydgQsREeGTNJLAYqz1mw _qgircgsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qfydgQsREeGTNJLAYqz1mw" name="extension_Refine" visibility="public" type="_qgircAsREeGTNJLAYqz1mw" aggregation="composite" association="_qfydgAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qfydggsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qfydgwsREeGTNJLAYqz1mw" name="Abstraction_Trace" memberEnd="_qfydhAsREeGTNJLAYqz1mw _qglHtQsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qfydhAsREeGTNJLAYqz1mw" name="extension_Trace" visibility="public" type="_qglHswsREeGTNJLAYqz1mw" aggregation="composite" association="_qfydgwsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qfydhQsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qfzEkAsREeGTNJLAYqz1mw" name="Artifact_Document" memberEnd="_qfzEkQsREeGTNJLAYqz1mw _qgeaAwsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qfzEkQsREeGTNJLAYqz1mw" name="extension_Document" visibility="public" type="_qgeaAAsREeGTNJLAYqz1mw" aggregation="composite" association="_qfzEkAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qfzEkgsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qfzEkwsREeGTNJLAYqz1mw" name="Artifact_Executable" memberEnd="_qfzElAsREeGTNJLAYqz1mw _qgfBFgsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qfzElAsREeGTNJLAYqz1mw" name="extension_Executable" visibility="public" type="_qgfBEwsREeGTNJLAYqz1mw" aggregation="composite" association="_qfzEkwsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qfzElQsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qfzroAsREeGTNJLAYqz1mw" name="Artifact_File" memberEnd="_qfzroQsREeGTNJLAYqz1mw _qgfoIgsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qfzroQsREeGTNJLAYqz1mw" name="extension_File" visibility="public" type="_qgfoIAsREeGTNJLAYqz1mw" aggregation="composite" association="_qfzroAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qfzrogsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qfzrowsREeGTNJLAYqz1mw" name="Artifact_Library" memberEnd="_qfzrpAsREeGTNJLAYqz1mw _qghdUwsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qfzrpAsREeGTNJLAYqz1mw" name="extension_Library" visibility="public" type="_qghdUAsREeGTNJLAYqz1mw" aggregation="composite" association="_qfzrowsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qfzrpQsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgBuEAsREeGTNJLAYqz1mw" name="Artifact_Script" memberEnd="_qgBuEQsREeGTNJLAYqz1mw _qgireQsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgBuEQsREeGTNJLAYqz1mw" name="extension_Script" visibility="public" type="_qgirdgsREeGTNJLAYqz1mw" aggregation="composite" association="_qgBuEAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgBuEgsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgBuEwsREeGTNJLAYqz1mw" name="Artifact_Source" memberEnd="_qgBuFAsREeGTNJLAYqz1mw _qgkgowsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgBuFAsREeGTNJLAYqz1mw" name="extension_Source" visibility="public" type="_qgkgoAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgBuEwsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgBuFQsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgBuFgsREeGTNJLAYqz1mw" name="BehavioralFeature_Create" memberEnd="_qgBuFwsREeGTNJLAYqz1mw _qgdL5AsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgBuFwsREeGTNJLAYqz1mw" name="extension_Create" visibility="public" type="_qgdL4AsREeGTNJLAYqz1mw" aggregation="composite" association="_qgBuFgsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgBuGAsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgCVIAsREeGTNJLAYqz1mw" name="BehavioralFeature_Destroy" memberEnd="_qgCVIQsREeGTNJLAYqz1mw _qgdy-QsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgCVIQsREeGTNJLAYqz1mw" name="extension_Destroy" visibility="public" type="_qgdy9wsREeGTNJLAYqz1mw" aggregation="composite" association="_qgCVIAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgCVIgsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgCVIwsREeGTNJLAYqz1mw" name="Class_Auxiliary" memberEnd="_qgCVJAsREeGTNJLAYqz1mw _qgaIkgsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgCVJAsREeGTNJLAYqz1mw" name="extension_Auxiliary" visibility="public" type="_qgaIkAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgCVIwsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgCVJQsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgC8MAsREeGTNJLAYqz1mw" name="Class_Focus" memberEnd="_qgC8MQsREeGTNJLAYqz1mw _qgfoJQsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgC8MQsREeGTNJLAYqz1mw" name="extension_Focus" visibility="public" type="_qgfoIwsREeGTNJLAYqz1mw" aggregation="composite" association="_qgC8MAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgC8MgsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgJp4AsREeGTNJLAYqz1mw" name="Class_ImplementationClass" memberEnd="_qgRlsAsREeGTNJLAYqz1mw _qgg2RAsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgRlsAsREeGTNJLAYqz1mw" name="extension_ImplementationClass" visibility="public" type="_qgg2QAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgJp4AsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgRlsQsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgSMwAsREeGTNJLAYqz1mw" name="Class_Metaclass" memberEnd="_qgSMwQsREeGTNJLAYqz1mw _qghdVgsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgSMwQsREeGTNJLAYqz1mw" name="extension_Metaclass" visibility="public" type="_qghdVAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgSMwAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgSMwgsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgSz0AsREeGTNJLAYqz1mw" name="Class_Type" memberEnd="_qgSz0QsREeGTNJLAYqz1mw _qglHugsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgSz0QsREeGTNJLAYqz1mw" name="extension_Type" visibility="public" type="_qglHtgsREeGTNJLAYqz1mw" aggregation="composite" association="_qgSz0AsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgSz0gsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgSz0wsREeGTNJLAYqz1mw" name="Class_Utility" memberEnd="_qgSz1AsREeGTNJLAYqz1mw _qgluxAsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgSz1AsREeGTNJLAYqz1mw" name="extension_Utility" visibility="public" type="_qgluwAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgSz0wsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgSz1QsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgSz1gsREeGTNJLAYqz1mw" name="Classifier_Realization" memberEnd="_qgSz1wsREeGTNJLAYqz1mw _qgiEZwsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgSz1wsREeGTNJLAYqz1mw" name="extension_Realization" visibility="public" type="_qgiEYwsREeGTNJLAYqz1mw" aggregation="composite" association="_qgSz1gsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgSz2AsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgTa4AsREeGTNJLAYqz1mw" name="Classifier_Specification" memberEnd="_qgTa4QsREeGTNJLAYqz1mw _qgkgqAsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgTa4QsREeGTNJLAYqz1mw" name="extension_Specification" visibility="public" type="_qgkgpAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgTa4AsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgTa4gsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgTa4wsREeGTNJLAYqz1mw" name="Component_Entity" memberEnd="_qgTa5AsREeGTNJLAYqz1mw _qgfBEgsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgTa5AsREeGTNJLAYqz1mw" name="extension_Entity" visibility="public" type="_qgfBEAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgTa4wsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgTa5QsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgVQEAsREeGTNJLAYqz1mw" name="Component_Implement" memberEnd="_qgVQEQsREeGTNJLAYqz1mw _qggPNwsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgVQEQsREeGTNJLAYqz1mw" name="extension_Implement" visibility="public" type="_qggPMwsREeGTNJLAYqz1mw" aggregation="composite" association="_qgVQEAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgVQEgsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgV3IAsREeGTNJLAYqz1mw" name="Component_Process" memberEnd="_qgV3IQsREeGTNJLAYqz1mw _qgiEYgsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgV3IQsREeGTNJLAYqz1mw" name="extension_Process" visibility="public" type="_qgiEYAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgV3IAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgV3IgsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgV3IwsREeGTNJLAYqz1mw" name="Component_Service" memberEnd="_qgV3JAsREeGTNJLAYqz1mw _qgj5lwsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgV3JAsREeGTNJLAYqz1mw" name="extension_Service" visibility="public" type="_qgj5lQsREeGTNJLAYqz1mw" aggregation="composite" association="_qgV3IwsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgV3JQsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgWeMAsREeGTNJLAYqz1mw" name="Component_Subsystem" memberEnd="_qgWeMQsREeGTNJLAYqz1mw _qglHsgsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgWeMQsREeGTNJLAYqz1mw" name="extension_Subsystem" visibility="public" type="_qglHsAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgWeMAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgWeMgsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgWeMwsREeGTNJLAYqz1mw" name="Package_Framework" memberEnd="_qgWeNAsREeGTNJLAYqz1mw _qggPMgsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgWeNAsREeGTNJLAYqz1mw" name="extension_Framework" visibility="public" type="_qggPMAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgWeMwsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgWeNQsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgWeNgsREeGTNJLAYqz1mw" name="Package_ModelLibrary" memberEnd="_qgWeNwsREeGTNJLAYqz1mw _qghdWQsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgWeNwsREeGTNJLAYqz1mw" name="extension_ModelLibrary" visibility="public" type="_qghdVwsREeGTNJLAYqz1mw" aggregation="composite" association="_qgWeNgsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgWeOAsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgXFQAsREeGTNJLAYqz1mw" name="Usage_Call" memberEnd="_qgXFQQsREeGTNJLAYqz1mw _qgbWtAsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgXFQQsREeGTNJLAYqz1mw" name="extension_Call" visibility="public" type="_qgbWsAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgXFQAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgXFQgsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgXFQwsREeGTNJLAYqz1mw" name="Usage_Create" memberEnd="_qgXFRAsREeGTNJLAYqz1mw _qgdL5QsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgXFRAsREeGTNJLAYqz1mw" name="extension_Create" visibility="public" type="_qgdL4AsREeGTNJLAYqz1mw" aggregation="composite" association="_qgXFQwsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgXFRQsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgXsUAsREeGTNJLAYqz1mw" name="Usage_Instantiate" memberEnd="_qgXsUQsREeGTNJLAYqz1mw _qgg2SQsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgXsUQsREeGTNJLAYqz1mw" name="extension_Instantiate" visibility="public" type="_qgg2RQsREeGTNJLAYqz1mw" aggregation="composite" association="_qgXsUAsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgXsUgsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgXsUwsREeGTNJLAYqz1mw" name="Usage_Responsibility" memberEnd="_qgXsVAsREeGTNJLAYqz1mw _qgirdQsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgXsVAsREeGTNJLAYqz1mw" name="extension_Responsibility" visibility="public" type="_qgircwsREeGTNJLAYqz1mw" aggregation="composite" association="_qgXsUwsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgXsVQsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_qgXsVgsREeGTNJLAYqz1mw" name="Usage_Send" memberEnd="_qgXsVwsREeGTNJLAYqz1mw _qgj5lAsREeGTNJLAYqz1mw">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qgXsVwsREeGTNJLAYqz1mw" name="extension_Send" visibility="public" type="_qgj5kAsREeGTNJLAYqz1mw" aggregation="composite" association="_qgXsVgsREeGTNJLAYqz1mw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgXsWAsREeGTNJLAYqz1mw"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgaIkAsREeGTNJLAYqz1mw" name="Auxiliary">
      <ownedComment xmi:id="_qgaIkQsREeGTNJLAYqz1mw" annotatedElement="_qgaIkAsREeGTNJLAYqz1mw">
        <body>A class that supports another more central or fundamental class, typically by implementing secondary logic or control flow. The class that the auxiliary supports may be defined explicitly using a Focus class or implicitly as the supplier of dependency relationship whose client is an auxiliary class. Auxiliary classes are typically used together with Focus classes, and are particularly useful for specifying the secondary business logic or control flow of components during design. See also: «Focus».</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qgaIkgsREeGTNJLAYqz1mw" name="base_Class" visibility="public" association="_qgCVIwsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgbWsAsREeGTNJLAYqz1mw" name="Call">
      <ownedComment xmi:id="_qgbWsQsREeGTNJLAYqz1mw" annotatedElement="_qgbWsAsREeGTNJLAYqz1mw">
        <body>A usage dependency whose source is an operation and whose target is an operation. The relationship may also be subsumed to the class containing an operation, with the meaning that there exists an operation in the class to which the dependency applies. A call dependency specifies that the source operation or an operation in the source class invokes the target operation or an operation in the target class. A call dependency may connect a source operation to any target operation that is within scope including, but not limited to, operations of the enclosing classifier and operations of other visible classifiers.</body>
      </ownedComment>
      <ownedRule xmi:id="_qgbWsgsREeGTNJLAYqz1mw" name="client_and_supplier_are_operations" constrainedElement="_qgbWsAsREeGTNJLAYqz1mw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qgbWswsREeGTNJLAYqz1mw">
          <language>OCL</language>
          <body>self.base_Usage.client->forAll(oclIsKindOf(Operation)) and self.base_Usage.supplier->forAll(oclIsKindOf(Operation))</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_qgbWtAsREeGTNJLAYqz1mw" name="base_Usage" visibility="public" association="_qgXFQAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgdL4AsREeGTNJLAYqz1mw" name="Create">
      <ownedComment xmi:id="_qgdL4QsREeGTNJLAYqz1mw" annotatedElement="_qgdL4AsREeGTNJLAYqz1mw">
        <body>When applied to a usage dependency, it specifies that the client classifier creates instances of the supplier classifier. When applied to a BehavioralFeature, it specifies that the designated feature creates an instance of the classifier to which the feature is attached.</body>
      </ownedComment>
      <ownedRule xmi:id="_qgdL4gsREeGTNJLAYqz1mw" name="client_and_supplier_are_classifiers" constrainedElement="_qgdL4AsREeGTNJLAYqz1mw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qgdL4wsREeGTNJLAYqz1mw">
          <language>OCL</language>
          <body>self.base_Usage->notEmpty() implies (self.base_Usage.client->forAll(oclIsKindOf(Classifier)) and self.base_Usage.supplier->forAll(oclIsKindOf(Classifier)))</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_qgdL5AsREeGTNJLAYqz1mw" name="base_BehavioralFeature" visibility="public" association="_qgBuFgsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#BehavioralFeature"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qgdL5QsREeGTNJLAYqz1mw" name="base_Usage" visibility="public" association="_qgXFQwsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgdy8AsREeGTNJLAYqz1mw" name="Derive">
      <ownedComment xmi:id="_qgdy8QsREeGTNJLAYqz1mw" annotatedElement="_qgdy8AsREeGTNJLAYqz1mw">
        <body>Specifies a derivation relationship among model elements that are usually, but not necessarily, of the same type. A derived dependency specifies that the client may be computed from the supplier. The mapping specifies the computation. The client may be implemented for design reasons, such as efficiency, even though it is logically redundant.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qgdy8gsREeGTNJLAYqz1mw" name="base_Abstraction" visibility="public" association="_qfx2cAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Abstraction"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_qgdy8wsREeGTNJLAYqz1mw" name="computation" visibility="public" aggregation="composite">
        <ownedComment xmi:id="_qgdy9AsREeGTNJLAYqz1mw" annotatedElement="_qgdy8wsREeGTNJLAYqz1mw">
          <body>The specification for computing the derived client element from the derivation supplier element.</body>
        </ownedComment>
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#ValueSpecification"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qgdy9QsREeGTNJLAYqz1mw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qgdy9gsREeGTNJLAYqz1mw" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgdy9wsREeGTNJLAYqz1mw" name="Destroy">
      <ownedComment xmi:id="_qgdy-AsREeGTNJLAYqz1mw" annotatedElement="_qgdy9wsREeGTNJLAYqz1mw">
        <body>Specifies that the designated feature destroys an instance of the classifier to which the feature is attached.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qgdy-QsREeGTNJLAYqz1mw" name="base_BehavioralFeature" visibility="public" association="_qgCVIAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#BehavioralFeature"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgeaAAsREeGTNJLAYqz1mw" name="Document">
      <ownedComment xmi:id="_qgeaAQsREeGTNJLAYqz1mw" annotatedElement="_qgeaAAsREeGTNJLAYqz1mw">
        <body>A specific kind of file that is not an «Executable», «Library», «Script» or «Source». Subclass of «File».</body>
      </ownedComment>
      <generalization xmi:id="_qgeaAgsREeGTNJLAYqz1mw" general="_qgfoIAsREeGTNJLAYqz1mw"/>
      <ownedAttribute xmi:id="_qgeaAwsREeGTNJLAYqz1mw" name="base_Artifact" visibility="public" redefinedProperty="_qgfoIgsREeGTNJLAYqz1mw" association="_qfzEkAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgfBEAsREeGTNJLAYqz1mw" name="Entity">
      <ownedComment xmi:id="_qgfBEQsREeGTNJLAYqz1mw" annotatedElement="_qgfBEAsREeGTNJLAYqz1mw">
        <body>A persistent information component representing a business concept.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qgfBEgsREeGTNJLAYqz1mw" name="base_Component" visibility="public" association="_qgTa4wsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgfBEwsREeGTNJLAYqz1mw" name="Executable">
      <ownedComment xmi:id="_qgfBFAsREeGTNJLAYqz1mw" annotatedElement="_qgfBEwsREeGTNJLAYqz1mw">
        <body>A program file that can be executed on a computer system. Subclass of «File».</body>
      </ownedComment>
      <generalization xmi:id="_qgfBFQsREeGTNJLAYqz1mw" general="_qgfoIAsREeGTNJLAYqz1mw"/>
      <ownedAttribute xmi:id="_qgfBFgsREeGTNJLAYqz1mw" name="base_Artifact" visibility="public" redefinedProperty="_qgfoIgsREeGTNJLAYqz1mw" association="_qfzEkwsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgfoIAsREeGTNJLAYqz1mw" name="File" isAbstract="true">
      <ownedComment xmi:id="_qgfoIQsREeGTNJLAYqz1mw" annotatedElement="_qgfoIAsREeGTNJLAYqz1mw">
        <body>A physical file in the context of the system developed.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qgfoIgsREeGTNJLAYqz1mw" name="base_Artifact" visibility="public" association="_qfzroAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgfoIwsREeGTNJLAYqz1mw" name="Focus">
      <ownedComment xmi:id="_qgfoJAsREeGTNJLAYqz1mw" annotatedElement="_qgfoIwsREeGTNJLAYqz1mw">
        <body>A class that defines the core logic or control flow for one or more auxiliary classes that support it. Support classes may be defined explicitly using Auxiliary classes or implicitly as clients of dependency relationships whose supplier is a focus class. Focus classes are typically used together with one or more Auxiliary classes, and are particularly useful for specifying the core business logic or control flow of components during design. See also: «Auxiliary».</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qgfoJQsREeGTNJLAYqz1mw" name="base_Class" visibility="public" association="_qgC8MAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qggPMAsREeGTNJLAYqz1mw" name="Framework">
      <ownedComment xmi:id="_qggPMQsREeGTNJLAYqz1mw" annotatedElement="_qggPMAsREeGTNJLAYqz1mw">
        <body>A package that contains model elements that specify a reusable architecture for all or part of a system. Frameworks typically include classes, patterns, or templates. When frameworks are specialized for an application domain they are sometimes referred to as application frameworks.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qggPMgsREeGTNJLAYqz1mw" name="base_Package" visibility="public" association="_qgWeMwsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Package"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qggPMwsREeGTNJLAYqz1mw" name="Implement">
      <ownedComment xmi:id="_qggPNAsREeGTNJLAYqz1mw" annotatedElement="_qggPMwsREeGTNJLAYqz1mw">
        <body>A component definition that is not intended to have a specification itself. Rather, it is an implementation for a separate «Specification» to which it has a Dependency.</body>
      </ownedComment>
      <ownedRule xmi:id="_qggPNQsREeGTNJLAYqz1mw" name="implements_specification" constrainedElement="_qggPMwsREeGTNJLAYqz1mw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qggPNgsREeGTNJLAYqz1mw">
          <language>OCL</language>
          <body>self.base_Component.clientDependency.supplier->select(oclIsKindOf(Classifier)).oclAsType(Classifier).extension_Specificaiton->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_qggPNwsREeGTNJLAYqz1mw" name="base_Component" visibility="public" association="_qgVQEAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgg2QAsREeGTNJLAYqz1mw" name="ImplementationClass">
      <ownedComment xmi:id="_qgg2QQsREeGTNJLAYqz1mw" annotatedElement="_qgg2QAsREeGTNJLAYqz1mw">
        <body>The implementation of a class in some programming language (e.g., C++, Smalltalk, Java) in which an instance may not have more than one class. This is in contrast to Class, for which an instance may have multiple classes at one time and may gain or lose classes over time, and an object (a child of instance) may dynamically have multiple classes. An Implementation class is said to realize a Classifier if it provides all of the operations defined for the Classifier with the same behavior as specified for the Classifier's operations. An Implementation Class may realize a number of different Types. Note that the physical attributes and associations of the Implementation class do not have to be the same as those of any Classifier it realizes and that the Implementation Class may provide methods for its operations in terms of its physical attributes and associations. See also: «Type».</body>
      </ownedComment>
      <ownedRule xmi:id="_qgg2QgsREeGTNJLAYqz1mw" name="cannot_be_realization" constrainedElement="_qgg2QAsREeGTNJLAYqz1mw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qgg2QwsREeGTNJLAYqz1mw">
          <language>OCL</language>
          <body>self.base_Class.extension_Realization->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_qgg2RAsREeGTNJLAYqz1mw" name="base_Class" visibility="public" association="_qgJp4AsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgg2RQsREeGTNJLAYqz1mw" name="Instantiate">
      <ownedComment xmi:id="_qgg2RgsREeGTNJLAYqz1mw" annotatedElement="_qgg2RQsREeGTNJLAYqz1mw">
        <body>A usage dependency among classifiers indicating that operations on the client create instances of the supplier.</body>
      </ownedComment>
      <ownedRule xmi:id="_qgg2RwsREeGTNJLAYqz1mw" name="client_and_supplier_are_classifiers" constrainedElement="_qgg2RQsREeGTNJLAYqz1mw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qgg2SAsREeGTNJLAYqz1mw">
          <language>OCL</language>
          <body>self.base_Usage.client->forAll(oclIsKindOf(Classifier)) and self.base_Usage.supplier->forAll(oclIsKindOf(Classifier))</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_qgg2SQsREeGTNJLAYqz1mw" name="base_Usage" visibility="public" association="_qgXsUAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qghdUAsREeGTNJLAYqz1mw" name="Library">
      <ownedComment xmi:id="_qghdUQsREeGTNJLAYqz1mw" annotatedElement="_qghdUAsREeGTNJLAYqz1mw">
        <body>A static or dynamic library file. Subclass of «File».</body>
      </ownedComment>
      <generalization xmi:id="_qghdUgsREeGTNJLAYqz1mw" general="_qgfoIAsREeGTNJLAYqz1mw"/>
      <ownedAttribute xmi:id="_qghdUwsREeGTNJLAYqz1mw" name="base_Artifact" visibility="public" redefinedProperty="_qgfoIgsREeGTNJLAYqz1mw" association="_qfzrowsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qghdVAsREeGTNJLAYqz1mw" name="Metaclass">
      <ownedComment xmi:id="_qghdVQsREeGTNJLAYqz1mw" annotatedElement="_qghdVAsREeGTNJLAYqz1mw">
        <body>A class whose instances are also classes.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qghdVgsREeGTNJLAYqz1mw" name="base_Class" visibility="public" association="_qgSMwAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qghdVwsREeGTNJLAYqz1mw" name="ModelLibrary">
      <ownedComment xmi:id="_qghdWAsREeGTNJLAYqz1mw" annotatedElement="_qghdVwsREeGTNJLAYqz1mw">
        <body>A package that contains model elements that are intended to be reused by other packages. Model libraries are frequently used in conjunction with applied profiles. This is expressed by defining a dependency between a profile and a model library package, or by defining a model library as contained in a profile package. The classes in a model library are not stereotypes and tagged definitions extending the metamodel. A model library is analogous to a class library in some programming languages. When a model library is defined as a part of a profile, it is imported or deleted with the application or removal of the profile. The profile is implicitly applied to its model library. In the other case, when the model library is defined as an external package imported by a profile, the profile requires that the model library be there in the model at the stage of the profile application. The application or the removal of the profile does not affect the presence of the model library elements.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qghdWQsREeGTNJLAYqz1mw" name="base_Package" visibility="public" association="_qgWeNgsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Package"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgiEYAsREeGTNJLAYqz1mw" name="Process">
      <ownedComment xmi:id="_qgiEYQsREeGTNJLAYqz1mw" annotatedElement="_qgiEYAsREeGTNJLAYqz1mw">
        <body>A transaction based component.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qgiEYgsREeGTNJLAYqz1mw" name="base_Component" visibility="public" association="_qgV3IAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgiEYwsREeGTNJLAYqz1mw" name="Realization">
      <ownedComment xmi:id="_qgiEZAsREeGTNJLAYqz1mw" annotatedElement="_qgiEYwsREeGTNJLAYqz1mw">
        <body>A classifier that specifies a domain of objects and that also defines the physical implementation of those objects. For example, a Component stereotyped by «realization» will only have realizing Classifiers that implement behavior specified by a separate «Specification» Component. See «specification». This differs from «ImplementationClass» because an «ImplementationClass» is a realization of a Class that can have features such as attributes and methods that are useful to system designers.</body>
      </ownedComment>
      <ownedRule xmi:id="_qgiEZQsREeGTNJLAYqz1mw" name="cannot_be_implementationClass" constrainedElement="_qgiEYwsREeGTNJLAYqz1mw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qgiEZgsREeGTNJLAYqz1mw">
          <language>OCL</language>
          <body>self.base_Classifier.extension_ImplementationClass->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_qgiEZwsREeGTNJLAYqz1mw" name="base_Classifier" visibility="public" association="_qgSz1gsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Classifier"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgircAsREeGTNJLAYqz1mw" name="Refine">
      <ownedComment xmi:id="_qgircQsREeGTNJLAYqz1mw" annotatedElement="_qgircAsREeGTNJLAYqz1mw">
        <body>Specifies a refinement relationship between model elements at different semantic levels, such as analysis and design. The mapping specifies the relationship between the two elements or sets of elements. The mapping may or may not be computable, and it may be unidirectional or bidirectional. Refinement can be used to model transformations from analysis to design and other such changes.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qgircgsREeGTNJLAYqz1mw" name="base_Abstraction" visibility="public" association="_qfydgAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Abstraction"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgircwsREeGTNJLAYqz1mw" name="Responsibility">
      <ownedComment xmi:id="_qgirdAsREeGTNJLAYqz1mw" annotatedElement="_qgircwsREeGTNJLAYqz1mw">
        <body>A contract or an obligation of an element in its relationship to other elements.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qgirdQsREeGTNJLAYqz1mw" name="base_Usage" visibility="public" association="_qgXsUwsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgirdgsREeGTNJLAYqz1mw" name="Script">
      <ownedComment xmi:id="_qgirdwsREeGTNJLAYqz1mw" annotatedElement="_qgirdgsREeGTNJLAYqz1mw">
        <body>A script file that can be interpreted by a computer system. Subclass of «File».</body>
      </ownedComment>
      <generalization xmi:id="_qgireAsREeGTNJLAYqz1mw" general="_qgfoIAsREeGTNJLAYqz1mw"/>
      <ownedAttribute xmi:id="_qgireQsREeGTNJLAYqz1mw" name="base_Artifact" visibility="public" redefinedProperty="_qgfoIgsREeGTNJLAYqz1mw" association="_qgBuEAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgj5kAsREeGTNJLAYqz1mw" name="Send">
      <ownedComment xmi:id="_qgj5kQsREeGTNJLAYqz1mw" annotatedElement="_qgj5kAsREeGTNJLAYqz1mw">
        <body>A usage dependency whose client is an operation and whose supplier is a signal, specifying that the client sends the supplier signal.</body>
      </ownedComment>
      <ownedRule xmi:id="_qgj5kgsREeGTNJLAYqz1mw" name="client_operation_sends_supplier_signal" constrainedElement="_qgj5kAsREeGTNJLAYqz1mw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qgj5kwsREeGTNJLAYqz1mw">
          <language>OCL</language>
          <body>self.base_Usage.client->forAll(oclIsKindOf(Operation)) and self.base_Usage.supplier->forAll(oclIsKindOf(Signal))</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_qgj5lAsREeGTNJLAYqz1mw" name="base_Usage" visibility="public" association="_qgXsVgsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgj5lQsREeGTNJLAYqz1mw" name="Service">
      <ownedComment xmi:id="_qgj5lgsREeGTNJLAYqz1mw" annotatedElement="_qgj5lQsREeGTNJLAYqz1mw">
        <body>A stateless, functional component (computes a value).</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qgj5lwsREeGTNJLAYqz1mw" name="base_Component" visibility="public" association="_qgV3IwsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgkgoAsREeGTNJLAYqz1mw" name="Source">
      <ownedComment xmi:id="_qgkgoQsREeGTNJLAYqz1mw" annotatedElement="_qgkgoAsREeGTNJLAYqz1mw">
        <body>A source file that can be compiled into an executable file. Subclass of «File».</body>
      </ownedComment>
      <generalization xmi:id="_qgkgogsREeGTNJLAYqz1mw" general="_qgfoIAsREeGTNJLAYqz1mw"/>
      <ownedAttribute xmi:id="_qgkgowsREeGTNJLAYqz1mw" name="base_Artifact" visibility="public" redefinedProperty="_qgfoIgsREeGTNJLAYqz1mw" association="_qgBuEwsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgkgpAsREeGTNJLAYqz1mw" name="Specification">
      <ownedComment xmi:id="_qgkgpQsREeGTNJLAYqz1mw" annotatedElement="_qgkgpAsREeGTNJLAYqz1mw">
        <body>A class that specifies a domain of objects together with the operations applicable to the objects, without defining the physical implementation of those objects. However, it may have attributes and associations. Behavioral specifications for type operations may be expressed using, for example, activity diagrams. An object may have at most one implementation class, however it may conform to multiple different types. See also: «ImplementationClass».</body>
      </ownedComment>
      <ownedRule xmi:id="_qgkgpgsREeGTNJLAYqz1mw" name="cannot_be_type" constrainedElement="_qgkgpAsREeGTNJLAYqz1mw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qgkgpwsREeGTNJLAYqz1mw">
          <language>OCL</language>
          <body>self.base_Classifier.extension_Type->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_qgkgqAsREeGTNJLAYqz1mw" name="base_Classifier" visibility="public" association="_qgTa4AsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Classifier"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qglHsAsREeGTNJLAYqz1mw" name="Subsystem">
      <ownedComment xmi:id="_qglHsQsREeGTNJLAYqz1mw" annotatedElement="_qglHsAsREeGTNJLAYqz1mw">
        <body>A unit of hierarchical decomposition for large systems. A subsystem is commonly instantiated indirectly. Definitions of subsystems vary widely among domains and methods, and it is expected that domain and method profiles will specialize this construct. A subsystem may be defined to have specification and realization elements. See also: «Specification» and «Realization».</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qglHsgsREeGTNJLAYqz1mw" name="base_Component" visibility="public" association="_qgWeMAsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qglHswsREeGTNJLAYqz1mw" name="Trace">
      <ownedComment xmi:id="_qglHtAsREeGTNJLAYqz1mw" annotatedElement="_qglHswsREeGTNJLAYqz1mw">
        <body>Specifies a trace relationship between model elements or sets of model elements that represent the same concept in different models. Traces are mainly used for tracking requirements and changes across models. Since model changes can occur in both directions, the directionality of the dependency can often be ignored. The mapping specifies the relationship between the two, but it is rarely computable and is usually informal.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_qglHtQsREeGTNJLAYqz1mw" name="base_Abstraction" visibility="public" association="_qfydgwsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Abstraction"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qglHtgsREeGTNJLAYqz1mw" name="Type">
      <ownedComment xmi:id="_qglHtwsREeGTNJLAYqz1mw" annotatedElement="_qglHtgsREeGTNJLAYqz1mw">
        <body>A class that specifies a domain of objects together with the operations applicable to the objects, without defining the physical implementation of those objects. However, it may have attributes and associations. Behavioral specifications for type operations may be expressed using, for example, activity diagrams. An object may have at most one implementation class, however it may conform to multiple different types. See also: «ImplementationClass».</body>
      </ownedComment>
      <ownedRule xmi:id="_qglHuAsREeGTNJLAYqz1mw" name="cannot_be_specification" constrainedElement="_qglHtgsREeGTNJLAYqz1mw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qglHuQsREeGTNJLAYqz1mw">
          <language>OCL</language>
          <body>self.base_Class.extension_Specification->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_qglHugsREeGTNJLAYqz1mw" name="base_Class" visibility="public" association="_qgSz0AsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_qgluwAsREeGTNJLAYqz1mw" name="Utility">
      <ownedComment xmi:id="_qgluwQsREeGTNJLAYqz1mw" annotatedElement="_qgluwAsREeGTNJLAYqz1mw">
        <body>A class that has no instances, but rather denotes a named collection of static attributes and static operations, all of which are class-scoped.</body>
      </ownedComment>
      <ownedRule xmi:id="_qgluwgsREeGTNJLAYqz1mw" name="is_utility" constrainedElement="_qgluwAsREeGTNJLAYqz1mw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qgluwwsREeGTNJLAYqz1mw">
          <language>OCL</language>
          <body>self.base_Class.feature->forAll(isStatic)</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_qgluxAsREeGTNJLAYqz1mw" name="base_Class" visibility="public" association="_qgSz0wsREeGTNJLAYqz1mw">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <profileApplication xmi:id="_6ryEUL5MEeCUg9_01zj7Og">
      <eAnnotations xmi:id="_6ryrYL5MEeCUg9_01zj7Og" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Profile>
  <Ecore:EPackage xmi:id="_7-6gIL5MEeCUg9_01zj7Og" base_Package="_ihtF8L5MEeCUg9_01zj7Og" packageName="l2" nsPrefix="l2" nsURI="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" basePackage="org.eclipse.uml2.uml.profile" prefix="L2"/>
</xmi:XMI>
