<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Profile xmi:id="_ihtF8L5MEeCUg9_01zj7Og" name="L2" metamodelReference="_LCgGcHVFEeKiPqYCgcAI6g">
    <packageImport xmi:id="_LCgGcHVFEeKiPqYCgcAI6g">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_METAMODELS/UML.metamodel.uml#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LCth0HVFEeKiPqYCgcAI6g" name="Abstraction_Derive" memberEnd="_LCth0XVFEeKiPqYCgcAI6g _LJll4nVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LCth0XVFEeKiPqYCgcAI6g" name="extension_Derive" visibility="public" type="_LJll4HVFEeKiPqYCgcAI6g" aggregation="composite" association="_LCth0HVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LCth0nVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LC5vEHVFEeKiPqYCgcAI6g" name="Abstraction_Refine" memberEnd="_LC5vEXVFEeKiPqYCgcAI6g _LNvtInVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LC5vEXVFEeKiPqYCgcAI6g" name="extension_Refine" visibility="public" type="_LNvtIHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LC5vEHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LC5vEnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LDHKcHVFEeKiPqYCgcAI6g" name="Abstraction_Trace" memberEnd="_LDHKcXVFEeKiPqYCgcAI6g _LP7ecnVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LDHKcXVFEeKiPqYCgcAI6g" name="extension_Trace" visibility="public" type="_LP7ecHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LDHKcHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LDHKcnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LDSJkHVFEeKiPqYCgcAI6g" name="Artifact_Document" memberEnd="_LDSJkXVFEeKiPqYCgcAI6g _LKFVI3VFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LDSJkXVFEeKiPqYCgcAI6g" name="extension_Document" visibility="public" type="_LKFVIHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LDSJkHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LDSJknVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LDe94HVFEeKiPqYCgcAI6g" name="Artifact_Executable" memberEnd="_LDe94XVFEeKiPqYCgcAI6g _LKqj83VFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LDe94XVFEeKiPqYCgcAI6g" name="extension_Executable" visibility="public" type="_LKqj8HVFEeKiPqYCgcAI6g" aggregation="composite" association="_LDe94HVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LDe94nVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LDuOcHVFEeKiPqYCgcAI6g" name="Artifact_File" memberEnd="_LDuOcXVFEeKiPqYCgcAI6g _LK3YQnVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LDuOcXVFEeKiPqYCgcAI6g" name="extension_File" visibility="public" type="_LK3YQHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LDuOcHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LDuOcnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LD6bsHVFEeKiPqYCgcAI6g" name="Artifact_Library" memberEnd="_LD6bsXVFEeKiPqYCgcAI6g _LMnEs3VFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LD6bsXVFEeKiPqYCgcAI6g" name="extension_Library" visibility="public" type="_LMnEsHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LD6bsHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LD6bsnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LEGB4HVFEeKiPqYCgcAI6g" name="Artifact_Script" memberEnd="_LEGB4XVFEeKiPqYCgcAI6g _LOQDc3VFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LEGB4XVFEeKiPqYCgcAI6g" name="extension_Script" visibility="public" type="_LOQDcHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LEGB4HVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LEGB4nVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LERoEHVFEeKiPqYCgcAI6g" name="Artifact_Source" memberEnd="_LERoEXVFEeKiPqYCgcAI6g _LPKCY3VFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LERoEXVFEeKiPqYCgcAI6g" name="extension_Source" visibility="public" type="_LPKCYHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LERoEHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LERoEnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LEdOQHVFEeKiPqYCgcAI6g" name="BehavioralFeature_Create" memberEnd="_LEdOQXVFEeKiPqYCgcAI6g _r7_hcHVEEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LEdOQXVFEeKiPqYCgcAI6g" name="extension_Create" visibility="public" type="_nSCTwHVEEeKiPqYCgcAI6g" aggregation="composite" association="_LEdOQHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LEdOQnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LEoNYHVFEeKiPqYCgcAI6g" name="BehavioralFeature_Destroy" memberEnd="_LEoNYXVFEeKiPqYCgcAI6g _LJ0PYnVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LEoNYXVFEeKiPqYCgcAI6g" name="extension_Destroy" visibility="public" type="_LJ0PYHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LEoNYHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LEoNYnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LE0aoHVFEeKiPqYCgcAI6g" name="Class_Auxiliary" memberEnd="_LE0aoXVFEeKiPqYCgcAI6g _LIjrInVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LE0aoXVFEeKiPqYCgcAI6g" name="extension_Auxiliary" visibility="public" type="_LIjrIHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LE0aoHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LE0aonVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LFAA0HVFEeKiPqYCgcAI6g" name="Class_Focus" memberEnd="_LFAA0XVFEeKiPqYCgcAI6g _LLEMknVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LFAA0XVFEeKiPqYCgcAI6g" name="extension_Focus" visibility="public" type="_LLEMkHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LFAA0HVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LFAA0nVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LFKY4HVFEeKiPqYCgcAI6g" name="Class_ImplementationClass" memberEnd="_LFKY4XVFEeKiPqYCgcAI6g _LL7INHVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LFKY4XVFEeKiPqYCgcAI6g" name="extension_ImplementationClass" visibility="public" type="_LL7IMHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LFKY4HVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LFKY4nVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LFXNMHVFEeKiPqYCgcAI6g" name="Class_Metaclass" memberEnd="_LFXNMXVFEeKiPqYCgcAI6g _LMz5AnVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LFXNMXVFEeKiPqYCgcAI6g" name="extension_Metaclass" visibility="public" type="_LMz5AHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LFXNMHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LFXNMnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LFiMUHVFEeKiPqYCgcAI6g" name="Class_Type" memberEnd="_LFiMUXVFEeKiPqYCgcAI6g _LQOZZHVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LFiMUXVFEeKiPqYCgcAI6g" name="extension_Type" visibility="public" type="_LQOZYHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LFiMUHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LFiMUnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LFtygHVFEeKiPqYCgcAI6g" name="Class_Utility" memberEnd="_LFtygXVFEeKiPqYCgcAI6g _LQkXpHVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LFtygXVFEeKiPqYCgcAI6g" name="extension_Utility" visibility="public" type="_LQkXoHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LFtygHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LFtygnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LF9qIHVFEeKiPqYCgcAI6g" name="Classifier_Realization" memberEnd="_LF9qIXVFEeKiPqYCgcAI6g _LNiRxHVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LF9qIXVFEeKiPqYCgcAI6g" name="extension_Realization" visibility="public" type="_LNiRwHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LF9qIHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LF9qInVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LGIpQHVFEeKiPqYCgcAI6g" name="Classifier_Specification" memberEnd="_LGIpQXVFEeKiPqYCgcAI6g _LPeLdHVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LGIpQXVFEeKiPqYCgcAI6g" name="extension_Specification" visibility="public" type="_LPeLcHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LGIpQHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LGIpQnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LGUPcHVFEeKiPqYCgcAI6g" name="Component_Entity" memberEnd="_LGUPcXVFEeKiPqYCgcAI6g _LKXpAnVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LGUPcXVFEeKiPqYCgcAI6g" name="extension_Entity" visibility="public" type="_LKXpAHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LGUPcHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LGUPcnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LGfOkHVFEeKiPqYCgcAI6g" name="Component_Implement" memberEnd="_LGfOkXVFEeKiPqYCgcAI6g _LLm_JHVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LGfOkXVFEeKiPqYCgcAI6g" name="extension_Implement" visibility="public" type="_LLm_IHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LGfOkHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LGfOknVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LGrb0HVFEeKiPqYCgcAI6g" name="Component_Process" memberEnd="_LGrb0XVFEeKiPqYCgcAI6g _LNOvwnVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LGrb0XVFEeKiPqYCgcAI6g" name="extension_Process" visibility="public" type="_LNOvwHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LGrb0HVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LGrb0nVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LG3CAHVFEeKiPqYCgcAI6g" name="Component_Service" memberEnd="_LG3CAXVFEeKiPqYCgcAI6g _LO3HcnVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LG3CAXVFEeKiPqYCgcAI6g" name="extension_Service" visibility="public" type="_LO3HcHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LG3CAHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LG3CAnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LHCBIHVFEeKiPqYCgcAI6g" name="Component_Subsystem" memberEnd="_LHCBIXVFEeKiPqYCgcAI6g _LPs08nVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LHCBIXVFEeKiPqYCgcAI6g" name="extension_Subsystem" visibility="public" type="_LPs08HVFEeKiPqYCgcAI6g" aggregation="composite" association="_LHCBIHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LHCBInVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LHNnUHVFEeKiPqYCgcAI6g" name="Package_Framework" memberEnd="_LHNnUXVFEeKiPqYCgcAI6g _LLS2EnVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LHNnUXVFEeKiPqYCgcAI6g" name="extension_Framework" visibility="public" type="_LLS2EHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LHNnUHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LHNnUnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LHZ0kHVFEeKiPqYCgcAI6g" name="Package_ModelLibrary" memberEnd="_LHZ0kXVFEeKiPqYCgcAI6g _LNAtUnVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LHZ0kXVFEeKiPqYCgcAI6g" name="extension_ModelLibrary" visibility="public" type="_LNAtUHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LHZ0kHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LHZ0knVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LHkzsHVFEeKiPqYCgcAI6g" name="Usage_Call" memberEnd="_LHkzsXVFEeKiPqYCgcAI6g _LI4bRHVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LHkzsXVFEeKiPqYCgcAI6g" name="extension_Call" visibility="public" type="_LI4bQHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LHkzsHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LHkzsnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LHvy0HVFEeKiPqYCgcAI6g" name="Usage_Create" memberEnd="_LHvy0XVFEeKiPqYCgcAI6g _2BACkHVEEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LHvy0XVFEeKiPqYCgcAI6g" name="extension_Create" visibility="public" type="_nSCTwHVEEeKiPqYCgcAI6g" aggregation="composite" association="_LHvy0HVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LHvy0nVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LH8AEHVFEeKiPqYCgcAI6g" name="Usage_Instantiate" memberEnd="_LH8AEXVFEeKiPqYCgcAI6g _LMPRRHVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LH8AEXVFEeKiPqYCgcAI6g" name="extension_Instantiate" visibility="public" type="_LMPRQHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LH8AEHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LH8AEnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LIKCgHVFEeKiPqYCgcAI6g" name="Usage_Responsibility" memberEnd="_LIKCgXVFEeKiPqYCgcAI6g _LN-9snVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LIKCgXVFEeKiPqYCgcAI6g" name="extension_Responsibility" visibility="public" type="_LN-9sHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LIKCgHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LIKCgnVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_LIVBoHVFEeKiPqYCgcAI6g" name="Usage_Send" memberEnd="_LIVBoXVFEeKiPqYCgcAI6g _LOpFBHVFEeKiPqYCgcAI6g">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LIVBoXVFEeKiPqYCgcAI6g" name="extension_Send" visibility="public" type="_LOpFAHVFEeKiPqYCgcAI6g" aggregation="composite" association="_LIVBoHVFEeKiPqYCgcAI6g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LIVBonVFEeKiPqYCgcAI6g"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LIjrIHVFEeKiPqYCgcAI6g" name="Auxiliary">
      <ownedComment xmi:id="_LIjrIXVFEeKiPqYCgcAI6g" annotatedElement="_LIjrIHVFEeKiPqYCgcAI6g">
        <body>A class that supports another more central or fundamental class, typically by implementing secondary logic or control flow. The class that the auxiliary supports may be defined explicitly using a Focus class or implicitly as the supplier of dependency relationship whose client is an auxiliary class. Auxiliary classes are typically used together with Focus classes, and are particularly useful for specifying the secondary business logic or control flow of components during design. See also: «Focus».</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LIjrInVFEeKiPqYCgcAI6g" name="base_Class" visibility="public" association="_LE0aoHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LI4bQHVFEeKiPqYCgcAI6g" name="Call">
      <ownedComment xmi:id="_LI4bQXVFEeKiPqYCgcAI6g" annotatedElement="_LI4bQHVFEeKiPqYCgcAI6g">
        <body>A usage dependency whose source is an operation and whose target is an operation. The relationship may also be subsumed to the class containing an operation, with the meaning that there exists an operation in the class to which the dependency applies. A call dependency specifies that the source operation or an operation in the source class invokes the target operation or an operation in the target class. A call dependency may connect a source operation to any target operation that is within scope including, but not limited to, operations of the enclosing classifier and operations of other visible classifiers.</body>
      </ownedComment>
      <ownedRule xmi:id="_LI4bQnVFEeKiPqYCgcAI6g" name="client_and_supplier_are_operations" constrainedElement="_LI4bQHVFEeKiPqYCgcAI6g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LI4bQ3VFEeKiPqYCgcAI6g">
          <language>OCL</language>
          <body>self.base_Usage.client->forAll(oclIsKindOf(Operation)) and self.base_Usage.supplier->forAll(oclIsKindOf(Operation))</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_LI4bRHVFEeKiPqYCgcAI6g" name="base_Usage" visibility="public" association="_LHkzsHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_nSCTwHVEEeKiPqYCgcAI6g" name="Create">
      <ownedComment xmi:id="_LI_I8HVFEeKiPqYCgcAI6g" annotatedElement="_nSCTwHVEEeKiPqYCgcAI6g">
        <body>When applied to a usage dependency, it specifies that the client classifier creates instances of the supplier classifier. When applied to a BehavioralFeature, it specifies that the designated feature creates an instance of the classifier to which the feature is attached.</body>
      </ownedComment>
      <ownedRule xmi:id="_LJGdsHVFEeKiPqYCgcAI6g" name="client_and_supplier_are_classifiers" constrainedElement="_nSCTwHVEEeKiPqYCgcAI6g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LJGdsXVFEeKiPqYCgcAI6g">
          <language>OCL</language>
          <body>self.base_Usage->notEmpty() implies (self.base_Usage.client->forAll(oclIsKindOf(Classifier)) and self.base_Usage.supplier->forAll(oclIsKindOf(Classifier)))</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_r7_hcHVEEeKiPqYCgcAI6g" name="base_BehavioralFeature" visibility="public" association="_LEdOQHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#BehavioralFeature"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_tFtikHVEEeKiPqYCgcAI6g"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_2BACkHVEEeKiPqYCgcAI6g" name="base_Usage" visibility="public" association="_LHvy0HVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3lO1cHVEEeKiPqYCgcAI6g"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LJll4HVFEeKiPqYCgcAI6g" name="Derive">
      <ownedComment xmi:id="_LJll4XVFEeKiPqYCgcAI6g" annotatedElement="_LJll4HVFEeKiPqYCgcAI6g">
        <body>Specifies a derivation relationship among model elements that are usually, but not necessarily, of the same type. A derived dependency specifies that the client may be computed from the supplier. The mapping specifies the computation. The client may be implemented for design reasons, such as efficiency, even though it is logically redundant.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LJll4nVFEeKiPqYCgcAI6g" name="base_Abstraction" visibility="public" association="_LCth0HVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Abstraction"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_LJll43VFEeKiPqYCgcAI6g" name="computation" visibility="public" aggregation="composite">
        <ownedComment xmi:id="_LJll5HVFEeKiPqYCgcAI6g" annotatedElement="_LJll43VFEeKiPqYCgcAI6g">
          <body>The specification for computing the derived client element from the derivation supplier element.</body>
        </ownedComment>
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#ValueSpecification"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LJll5XVFEeKiPqYCgcAI6g" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LJll5nVFEeKiPqYCgcAI6g" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LJ0PYHVFEeKiPqYCgcAI6g" name="Destroy">
      <ownedComment xmi:id="_LJ0PYXVFEeKiPqYCgcAI6g" annotatedElement="_LJ0PYHVFEeKiPqYCgcAI6g">
        <body>Specifies that the designated feature destroys an instance of the classifier to which the feature is attached.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LJ0PYnVFEeKiPqYCgcAI6g" name="base_BehavioralFeature" visibility="public" association="_LEoNYHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#BehavioralFeature"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LKFVIHVFEeKiPqYCgcAI6g" name="Document">
      <ownedComment xmi:id="_LKFVIXVFEeKiPqYCgcAI6g" annotatedElement="_LKFVIHVFEeKiPqYCgcAI6g">
        <body>A specific kind of file that is not an «Executable», «Library», «Script» or «Source». Subclass of «File».</body>
      </ownedComment>
      <generalization xmi:id="_LKFVInVFEeKiPqYCgcAI6g" general="_LK3YQHVFEeKiPqYCgcAI6g"/>
      <ownedAttribute xmi:id="_LKFVI3VFEeKiPqYCgcAI6g" name="base_Artifact" visibility="public" redefinedProperty="_LK3YQnVFEeKiPqYCgcAI6g" association="_LDSJkHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LKXpAHVFEeKiPqYCgcAI6g" name="Entity">
      <ownedComment xmi:id="_LKXpAXVFEeKiPqYCgcAI6g" annotatedElement="_LKXpAHVFEeKiPqYCgcAI6g">
        <body>A persistent information component representing a business concept.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LKXpAnVFEeKiPqYCgcAI6g" name="base_Component" visibility="public" association="_LGUPcHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LKqj8HVFEeKiPqYCgcAI6g" name="Executable">
      <ownedComment xmi:id="_LKqj8XVFEeKiPqYCgcAI6g" annotatedElement="_LKqj8HVFEeKiPqYCgcAI6g">
        <body>A program file that can be executed on a computer system. Subclass of «File».</body>
      </ownedComment>
      <generalization xmi:id="_LKqj8nVFEeKiPqYCgcAI6g" general="_LK3YQHVFEeKiPqYCgcAI6g"/>
      <ownedAttribute xmi:id="_LKqj83VFEeKiPqYCgcAI6g" name="base_Artifact" visibility="public" redefinedProperty="_LK3YQnVFEeKiPqYCgcAI6g" association="_LDe94HVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LK3YQHVFEeKiPqYCgcAI6g" name="File" isAbstract="true">
      <ownedComment xmi:id="_LK3YQXVFEeKiPqYCgcAI6g" annotatedElement="_LK3YQHVFEeKiPqYCgcAI6g">
        <body>A physical file in the context of the system developed.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LK3YQnVFEeKiPqYCgcAI6g" name="base_Artifact" visibility="public" association="_LDuOcHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LLEMkHVFEeKiPqYCgcAI6g" name="Focus">
      <ownedComment xmi:id="_LLEMkXVFEeKiPqYCgcAI6g" annotatedElement="_LLEMkHVFEeKiPqYCgcAI6g">
        <body>A class that defines the core logic or control flow for one or more auxiliary classes that support it. Support classes may be defined explicitly using Auxiliary classes or implicitly as clients of dependency relationships whose supplier is a focus class. Focus classes are typically used together with one or more Auxiliary classes, and are particularly useful for specifying the core business logic or control flow of components during design. See also: «Auxiliary».</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LLEMknVFEeKiPqYCgcAI6g" name="base_Class" visibility="public" association="_LFAA0HVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LLS2EHVFEeKiPqYCgcAI6g" name="Framework">
      <ownedComment xmi:id="_LLS2EXVFEeKiPqYCgcAI6g" annotatedElement="_LLS2EHVFEeKiPqYCgcAI6g">
        <body>A package that contains model elements that specify a reusable architecture for all or part of a system. Frameworks typically include classes, patterns, or templates. When frameworks are specialized for an application domain they are sometimes referred to as application frameworks.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LLS2EnVFEeKiPqYCgcAI6g" name="base_Package" visibility="public" association="_LHNnUHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Package"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LLm_IHVFEeKiPqYCgcAI6g" name="Implement">
      <ownedComment xmi:id="_LLm_IXVFEeKiPqYCgcAI6g" annotatedElement="_LLm_IHVFEeKiPqYCgcAI6g">
        <body>A component definition that is not intended to have a specification itself. Rather, it is an implementation for a separate «Specification» to which it has a Dependency.</body>
      </ownedComment>
      <ownedRule xmi:id="_LLm_InVFEeKiPqYCgcAI6g" name="implements_specification" constrainedElement="_LLm_IHVFEeKiPqYCgcAI6g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LLm_I3VFEeKiPqYCgcAI6g">
          <language>OCL</language>
          <body>self.base_Component.clientDependency.supplier->select(oclIsKindOf(Classifier)).oclAsType(Classifier).extension_Specificaiton->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_LLm_JHVFEeKiPqYCgcAI6g" name="base_Component" visibility="public" association="_LGfOkHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LL7IMHVFEeKiPqYCgcAI6g" name="ImplementationClass">
      <ownedComment xmi:id="_LL7IMXVFEeKiPqYCgcAI6g" annotatedElement="_LL7IMHVFEeKiPqYCgcAI6g">
        <body>The implementation of a class in some programming language (e.g., C++, Smalltalk, Java) in which an instance may not have more than one class. This is in contrast to Class, for which an instance may have multiple classes at one time and may gain or lose classes over time, and an object (a child of instance) may dynamically have multiple classes. An Implementation class is said to realize a Classifier if it provides all of the operations defined for the Classifier with the same behavior as specified for the Classifier's operations. An Implementation Class may realize a number of different Types. Note that the physical attributes and associations of the Implementation class do not have to be the same as those of any Classifier it realizes and that the Implementation Class may provide methods for its operations in terms of its physical attributes and associations. See also: «Type».</body>
      </ownedComment>
      <ownedRule xmi:id="_LL7IMnVFEeKiPqYCgcAI6g" name="cannot_be_realization" constrainedElement="_LL7IMHVFEeKiPqYCgcAI6g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LL7IM3VFEeKiPqYCgcAI6g">
          <language>OCL</language>
          <body>self.base_Class.extension_Realization->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_LL7INHVFEeKiPqYCgcAI6g" name="base_Class" visibility="public" association="_LFKY4HVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LMPRQHVFEeKiPqYCgcAI6g" name="Instantiate">
      <ownedComment xmi:id="_LMPRQXVFEeKiPqYCgcAI6g" annotatedElement="_LMPRQHVFEeKiPqYCgcAI6g">
        <body>A usage dependency among classifiers indicating that operations on the client create instances of the supplier.</body>
      </ownedComment>
      <ownedRule xmi:id="_LMPRQnVFEeKiPqYCgcAI6g" name="client_and_supplier_are_classifiers" constrainedElement="_LMPRQHVFEeKiPqYCgcAI6g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LMPRQ3VFEeKiPqYCgcAI6g">
          <language>OCL</language>
          <body>self.base_Usage.client->forAll(oclIsKindOf(Classifier)) and self.base_Usage.supplier->forAll(oclIsKindOf(Classifier))</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_LMPRRHVFEeKiPqYCgcAI6g" name="base_Usage" visibility="public" association="_LH8AEHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LMnEsHVFEeKiPqYCgcAI6g" name="Library">
      <ownedComment xmi:id="_LMnEsXVFEeKiPqYCgcAI6g" annotatedElement="_LMnEsHVFEeKiPqYCgcAI6g">
        <body>A static or dynamic library file. Subclass of «File».</body>
      </ownedComment>
      <generalization xmi:id="_LMnEsnVFEeKiPqYCgcAI6g" general="_LK3YQHVFEeKiPqYCgcAI6g"/>
      <ownedAttribute xmi:id="_LMnEs3VFEeKiPqYCgcAI6g" name="base_Artifact" visibility="public" redefinedProperty="_LK3YQnVFEeKiPqYCgcAI6g" association="_LD6bsHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LMz5AHVFEeKiPqYCgcAI6g" name="Metaclass">
      <ownedComment xmi:id="_LMz5AXVFEeKiPqYCgcAI6g" annotatedElement="_LMz5AHVFEeKiPqYCgcAI6g">
        <body>A class whose instances are also classes.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LMz5AnVFEeKiPqYCgcAI6g" name="base_Class" visibility="public" association="_LFXNMHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LNAtUHVFEeKiPqYCgcAI6g" name="ModelLibrary">
      <ownedComment xmi:id="_LNAtUXVFEeKiPqYCgcAI6g" annotatedElement="_LNAtUHVFEeKiPqYCgcAI6g">
        <body>A package that contains model elements that are intended to be reused by other packages. Model libraries are frequently used in conjunction with applied profiles. This is expressed by defining a dependency between a profile and a model library package, or by defining a model library as contained in a profile package. The classes in a model library are not stereotypes and tagged definitions extending the metamodel. A model library is analogous to a class library in some programming languages. When a model library is defined as a part of a profile, it is imported or deleted with the application or removal of the profile. The profile is implicitly applied to its model library. In the other case, when the model library is defined as an external package imported by a profile, the profile requires that the model library be there in the model at the stage of the profile application. The application or the removal of the profile does not affect the presence of the model library elements.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LNAtUnVFEeKiPqYCgcAI6g" name="base_Package" visibility="public" association="_LHZ0kHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Package"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LNOvwHVFEeKiPqYCgcAI6g" name="Process">
      <ownedComment xmi:id="_LNOvwXVFEeKiPqYCgcAI6g" annotatedElement="_LNOvwHVFEeKiPqYCgcAI6g">
        <body>A transaction based component.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LNOvwnVFEeKiPqYCgcAI6g" name="base_Component" visibility="public" association="_LGrb0HVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LNiRwHVFEeKiPqYCgcAI6g" name="Realization">
      <ownedComment xmi:id="_LNiRwXVFEeKiPqYCgcAI6g" annotatedElement="_LNiRwHVFEeKiPqYCgcAI6g">
        <body>A classifier that specifies a domain of objects and that also defines the physical implementation of those objects. For example, a Component stereotyped by «realization» will only have realizing Classifiers that implement behavior specified by a separate «Specification» Component. See «specification». This differs from «ImplementationClass» because an «ImplementationClass» is a realization of a Class that can have features such as attributes and methods that are useful to system designers.</body>
      </ownedComment>
      <ownedRule xmi:id="_LNiRwnVFEeKiPqYCgcAI6g" name="cannot_be_implementationClass" constrainedElement="_LNiRwHVFEeKiPqYCgcAI6g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LNiRw3VFEeKiPqYCgcAI6g">
          <language>OCL</language>
          <body>self.base_Classifier.extension_ImplementationClass->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_LNiRxHVFEeKiPqYCgcAI6g" name="base_Classifier" visibility="public" association="_LF9qIHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Classifier"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LNvtIHVFEeKiPqYCgcAI6g" name="Refine">
      <ownedComment xmi:id="_LNvtIXVFEeKiPqYCgcAI6g" annotatedElement="_LNvtIHVFEeKiPqYCgcAI6g">
        <body>Specifies a refinement relationship between model elements at different semantic levels, such as analysis and design. The mapping specifies the relationship between the two elements or sets of elements. The mapping may or may not be computable, and it may be unidirectional or bidirectional. Refinement can be used to model transformations from analysis to design and other such changes.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LNvtInVFEeKiPqYCgcAI6g" name="base_Abstraction" visibility="public" association="_LC5vEHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Abstraction"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LN-9sHVFEeKiPqYCgcAI6g" name="Responsibility">
      <ownedComment xmi:id="_LN-9sXVFEeKiPqYCgcAI6g" annotatedElement="_LN-9sHVFEeKiPqYCgcAI6g">
        <body>A contract or an obligation of an element in its relationship to other elements.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LN-9snVFEeKiPqYCgcAI6g" name="base_Usage" visibility="public" association="_LIKCgHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LOQDcHVFEeKiPqYCgcAI6g" name="Script">
      <ownedComment xmi:id="_LOQDcXVFEeKiPqYCgcAI6g" annotatedElement="_LOQDcHVFEeKiPqYCgcAI6g">
        <body>A script file that can be interpreted by a computer system. Subclass of «File».</body>
      </ownedComment>
      <generalization xmi:id="_LOQDcnVFEeKiPqYCgcAI6g" general="_LK3YQHVFEeKiPqYCgcAI6g"/>
      <ownedAttribute xmi:id="_LOQDc3VFEeKiPqYCgcAI6g" name="base_Artifact" visibility="public" redefinedProperty="_LK3YQnVFEeKiPqYCgcAI6g" association="_LEGB4HVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LOpFAHVFEeKiPqYCgcAI6g" name="Send">
      <ownedComment xmi:id="_LOpFAXVFEeKiPqYCgcAI6g" annotatedElement="_LOpFAHVFEeKiPqYCgcAI6g">
        <body>A usage dependency whose client is an operation and whose supplier is a signal, specifying that the client sends the supplier signal.</body>
      </ownedComment>
      <ownedRule xmi:id="_LOpFAnVFEeKiPqYCgcAI6g" name="client_operation_sends_supplier_signal" constrainedElement="_LOpFAHVFEeKiPqYCgcAI6g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LOpFA3VFEeKiPqYCgcAI6g">
          <language>OCL</language>
          <body>self.base_Usage.client->forAll(oclIsKindOf(Operation)) and self.base_Usage.supplier->forAll(oclIsKindOf(Signal))</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_LOpFBHVFEeKiPqYCgcAI6g" name="base_Usage" visibility="public" association="_LIVBoHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LO3HcHVFEeKiPqYCgcAI6g" name="Service">
      <ownedComment xmi:id="_LO3HcXVFEeKiPqYCgcAI6g" annotatedElement="_LO3HcHVFEeKiPqYCgcAI6g">
        <body>A stateless, functional component (computes a value).</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LO3HcnVFEeKiPqYCgcAI6g" name="base_Component" visibility="public" association="_LG3CAHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LPKCYHVFEeKiPqYCgcAI6g" name="Source">
      <ownedComment xmi:id="_LPKCYXVFEeKiPqYCgcAI6g" annotatedElement="_LPKCYHVFEeKiPqYCgcAI6g">
        <body>A source file that can be compiled into an executable file. Subclass of «File».</body>
      </ownedComment>
      <generalization xmi:id="_LPKCYnVFEeKiPqYCgcAI6g" general="_LK3YQHVFEeKiPqYCgcAI6g"/>
      <ownedAttribute xmi:id="_LPKCY3VFEeKiPqYCgcAI6g" name="base_Artifact" visibility="public" redefinedProperty="_LK3YQnVFEeKiPqYCgcAI6g" association="_LERoEHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LPeLcHVFEeKiPqYCgcAI6g" name="Specification">
      <ownedComment xmi:id="_LPeLcXVFEeKiPqYCgcAI6g" annotatedElement="_LPeLcHVFEeKiPqYCgcAI6g">
        <body>A class that specifies a domain of objects together with the operations applicable to the objects, without defining the physical implementation of those objects. However, it may have attributes and associations. Behavioral specifications for type operations may be expressed using, for example, activity diagrams. An object may have at most one implementation class, however it may conform to multiple different types. See also: «ImplementationClass».</body>
      </ownedComment>
      <ownedRule xmi:id="_LPeLcnVFEeKiPqYCgcAI6g" name="cannot_be_type" constrainedElement="_LPeLcHVFEeKiPqYCgcAI6g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LPeLc3VFEeKiPqYCgcAI6g">
          <language>OCL</language>
          <body>self.base_Classifier.extension_Type->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_LPeLdHVFEeKiPqYCgcAI6g" name="base_Classifier" visibility="public" association="_LGIpQHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Classifier"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LPs08HVFEeKiPqYCgcAI6g" name="Subsystem">
      <ownedComment xmi:id="_LPs08XVFEeKiPqYCgcAI6g" annotatedElement="_LPs08HVFEeKiPqYCgcAI6g">
        <body>A unit of hierarchical decomposition for large systems. A subsystem is commonly instantiated indirectly. Definitions of subsystems vary widely among domains and methods, and it is expected that domain and method profiles will specialize this construct. A subsystem may be defined to have specification and realization elements. See also: «Specification» and «Realization».</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LPs08nVFEeKiPqYCgcAI6g" name="base_Component" visibility="public" association="_LHCBIHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LP7ecHVFEeKiPqYCgcAI6g" name="Trace">
      <ownedComment xmi:id="_LP7ecXVFEeKiPqYCgcAI6g" annotatedElement="_LP7ecHVFEeKiPqYCgcAI6g">
        <body>Specifies a trace relationship between model elements or sets of model elements that represent the same concept in different models. Traces are mainly used for tracking requirements and changes across models. Since model changes can occur in both directions, the directionality of the dependency can often be ignored. The mapping specifies the relationship between the two, but it is rarely computable and is usually informal.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_LP7ecnVFEeKiPqYCgcAI6g" name="base_Abstraction" visibility="public" association="_LDHKcHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Abstraction"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LQOZYHVFEeKiPqYCgcAI6g" name="Type">
      <ownedComment xmi:id="_LQOZYXVFEeKiPqYCgcAI6g" annotatedElement="_LQOZYHVFEeKiPqYCgcAI6g">
        <body>A class that specifies a domain of objects together with the operations applicable to the objects, without defining the physical implementation of those objects. However, it may have attributes and associations. Behavioral specifications for type operations may be expressed using, for example, activity diagrams. An object may have at most one implementation class, however it may conform to multiple different types. See also: «ImplementationClass».</body>
      </ownedComment>
      <ownedRule xmi:id="_LQOZYnVFEeKiPqYCgcAI6g" name="cannot_be_specification" constrainedElement="_LQOZYHVFEeKiPqYCgcAI6g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LQOZY3VFEeKiPqYCgcAI6g">
          <language>OCL</language>
          <body>self.base_Class.extension_Specification->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_LQOZZHVFEeKiPqYCgcAI6g" name="base_Class" visibility="public" association="_LFiMUHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_LQkXoHVFEeKiPqYCgcAI6g" name="Utility">
      <ownedComment xmi:id="_LQkXoXVFEeKiPqYCgcAI6g" annotatedElement="_LQkXoHVFEeKiPqYCgcAI6g">
        <body>A class that has no instances, but rather denotes a named collection of static attributes and static operations, all of which are class-scoped.</body>
      </ownedComment>
      <ownedRule xmi:id="_LQkXonVFEeKiPqYCgcAI6g" name="is_utility" constrainedElement="_LQkXoHVFEeKiPqYCgcAI6g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_LQkXo3VFEeKiPqYCgcAI6g">
          <language>OCL</language>
          <body>self.base_Class.feature->forAll(isStatic)</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:id="_LQkXpHVFEeKiPqYCgcAI6g" name="base_Class" visibility="public" association="_LFtygHVFEeKiPqYCgcAI6g">
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <profileApplication xmi:id="_6ryEUL5MEeCUg9_01zj7Og">
      <eAnnotations xmi:id="_6ryrYL5MEeCUg9_01zj7Og" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Profile>
  <Ecore:EPackage xmi:id="_7-6gIL5MEeCUg9_01zj7Og" base_Package="_ihtF8L5MEeCUg9_01zj7Og" packageName="l2" nsPrefix="l2" nsURI="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2" basePackage="org.eclipse.uml2.uml.profile" prefix="L2"/>
</xmi:XMI>
