#/*
# * Copyright (c) 2003, 2004 IBM Corporation and others.
# * All rights reserved.   This program and the accompanying materials
# * are made available under the terms of the Common Public License v1.0
# * which accompanies this distribution, and is available at
# * http://www.eclipse.org/legal/cpl-v10.html
# * 
# * Contributors: 
# *   IBM - Initial API and implementation
# *
# * $Id: plugin.properties,v 1.3 2004/04/27 13:56:10 khussey Exp $
# */

# ====================================================================
#   Do NOT change the properties between this line and the
#   "%%% END OF TRANSLATED PROPERTIES %%%" line.
#   Make a new property name, append to the end of the file and change
#   the code to use the new property.
# ====================================================================

# ====================================================================
# %%% END OF TRANSLATED PROPERTIES %%%
# ====================================================================

pluginName = UML2
providerName = Eclipse.org

_UI_RedefinableElement_RedefinitionConsistent_message = A redefining element must be consistent with each redefined element.
_UI_RedefinableElement_RedefinitionContextValid_message = At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element.
_UI_Classifier_NoCyclesInGeneralization_message = A classifier can not be both a transitively general and transitively specific classifier of the same classifier.
_UI_Classifier_SpecializeType_message = A classifier may only specialize classifiers of a valid type.
_UI_Classifier_InheritedMember_message = The inherited members must be derived by inheriting the inheritable members of the parents.
_UI_Classifier_GeneralEqualsParents_message = The general classifiers must be the classifiers referenced by the generalization relationships.
_UI_Constraint_NotApplyToSelf_message = A constraint cannot be applied to itself.
_UI_Element_NotOwnSelf_message = An element may not directly or indirectly own itself.
_UI_Element_HasOwner_message = Elements that must be owned must have an owner.
_UI_ElementImport_VisibilityPublicOrPrivate_message = The visibility of an element import must be either public or private.
_UI_ElementImport_ImportedElementIsPublic_message = An imported element has either public visibility or no visibility at all.
_UI_InstanceSpecification_SlotsAreDefined_message = The defining feature of each slot must be a structural feature (directly or inherited) of a classifier of the instance specification.
_UI_InstanceSpecification_NoDuplicateSlots_message = One structural feature (including the same feature inherited from multiple classifiers) must be the defining feature of at most one slot in an instance specification.
_UI_MultiplicityElement_UpperGT0_message = A multiplicity must define at least one valid cardinality that is greater than zero.
_UI_MultiplicityElement_LowerGE0_message = The lower bound must be a non-negative integer literal.
_UI_MultiplicityElement_UpperGELower_message = The upper bound must be greater than or equal to the lower bound.
_UI_MultiplicityElement_LowerEQLowerBound_message = The derived lower attribute must equal the lower bound.
_UI_MultiplicityElement_UpperEQUpperBound_message = The derived upper attribute must equal the upper bound.
_UI_NamedElement_NoName_message = If there is no name, or one of the containing namespaces has no name, there must be no qualified name.
_UI_NamedElement_QualifiedName_message = When there is a name, and all of the containing namespaces have a name, the qualified name must be constructed from the names of the containing namespaces.
_UI_NamedElement_VisibilityNeedsOwnership_message = If a named element is not owned by a namespace, it must not have a visibility.
_UI_Namespace_MembersAreDistinguishable_message = All the members of a namespace must be distinguishable within it.
_UI_Namespace_ImportedMemberDerived_message = The imported members must be derived from the element imports and the package imports.
_UI_Namespace_TypeOfResult_message = If an operation has a single return result, its type must be the value of the type for that parameter; otherwise the type must be undefined.
_UI_Operation_OnlyBodyForQuery_message = A body condition can only be specified for a query operation.
_UI_Package_ElementsPublicOrPrivate_message = If an element that is owned by a package has visibility, it must be public or private.
_UI_PackageImport_PublicOrPrivate_message = The visibility of a package import must be either public or private.
_UI_Property_OppositeIsOtherEnd_message = If a property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then its opposite must be the other end.
_UI_Property_MultiplicityOfComposite_message = A multiplicity of a composite aggregation must have an upper bound greater than 1.
_UI_Property_SubsettingContext_message = Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property.
_UI_Property_NavigablePropertyRedefinition_message = A navigable property (one that is owned by a class) can only be redefined or subsetted by a navigable property.
_UI_Property_SubsettingRules_message = A subsetting property may not weaken the type of the subsetted property, and its upper bound may not be greater.
_UI_Property_NavigableReadOnly_message = Only a navigable property can be marked as read-only.
_UI_Property_DerivedUnionIsDerived_message = A derived union must be derived.
